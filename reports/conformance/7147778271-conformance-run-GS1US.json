{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "809b97d9-a3e3-40aa-b106-8862dc1c9c8a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e29b9b29-21c4-4081-bade-059222b019fb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7c05e9d1-5871-49a5-85dc-2d74e7a41527",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9f346dc-b79f-4e22-a5a1-724d780ee9e0"
                }
              }
            ]
          },
          {
            "id": "767a0dd1-9d17-44a5-b687-6f6e7dd6c208",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e7b8e72-ab69-4492-aee7-fe7c5c62a375",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d5afbd8-1e18-4a91-bce7-50abff019984"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ed3e14ab-25a0-4183-857a-03d160b2f333",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d54b7ecd-5d5e-445a-8483-45c24bba7a01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11c995dc-117e-4418-85b1-15f0b3a7c7b9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76f4c448-5e04-4228-befc-3e67b15c3c04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43ff036c-0c69-4ec7-b4c1-03db6f56c115"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6eb6be88-8baa-476a-8c52-f7cd9708e55f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a96dbdce-41b2-44b0-b612-38720b72616d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a182ebe4-340c-4f7d-b6c3-694b9b89a0b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e8e7f52-e712-46b2-978b-d93defcf0ae5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ae71f5c-0d29-4a0f-84d0-d4a89f8941f1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "77f470af-2a00-48e8-af03-2c96fc9f6b57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e3b2fe8-f46f-4464-bff0-c03b4c2d6ffc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ad7f285-248a-4b72-a8b1-c2e168091dae"
            }
          }
        ]
      },
      {
        "id": "f7cfcfac-7454-4e13-9db7-d7de9bae37bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e3ce0af9-903f-4369-8250-401672406463",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b91a857d-c7ad-4b23-8d82-2fac2e6a559f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cb89b236-c83b-40f0-b582-89e5ea6c8fd8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884b7923-a1c5-461c-92c1-ab5bad7c3c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8862dc1b-2f2d-430d-bb8d-21132e88c987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc90325e-9e5d-4f22-a886-b0d12c47aaed",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57d9534-8ecc-4db4-aa3e-e1fe429a5547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e4c526f-10d0-48d5-a5d3-5328d10e0e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378fbe1c-0ba0-40f5-a48a-fbd8928eeae1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b33a26e-b1ee-4830-b798-6a9a6638eca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa92e4ae-2771-46bd-936d-12acdaa08ed5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96a0edd7-90e0-463e-95f7-9eba87bc5411",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5bcd74f-4415-4e72-9db6-c1d6c49fef9b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7324d2e-68ab-43c7-b336-5bd47fb638be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6a66e96-1dbd-4e16-9582-4f6c367eaa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925dbb5b-1832-42b8-853f-8ca963f4de08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a08ec60-f115-4088-a7c4-24abaeece889"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b9da6089-001e-4082-bce9-a37a0696a01a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f9eefbf-0667-4338-b81c-0863bf8d20b8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a1ab296-a30b-43e1-9ca1-80ff8863aa6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5e3eaaf7-6a5d-4e39-9bdb-a4b941b1cac5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf34624e-a12f-4a7f-8bad-826181c7eee9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "62175cc3-ad71-4f9f-a996-fd265c9b5e6e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56772186-8355-407e-afc1-d97842f04e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94f6c0e8-9ff0-48b3-807b-f8cc619704ce"
            }
          }
        ]
      },
      {
        "id": "aac5c54d-79e3-4410-8bc1-49c440d768b3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1413d0f2-dc4a-4cbc-966a-6309566733b0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b95d77e2-8ff9-491d-adb8-f52d37eb2c42",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4cbc6d57-e10c-4b2a-a9c8-adcbeb65688e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b2df9-4ab9-4496-a67d-61409076d08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a604acb-7ba0-4dbc-b2f3-081a80f07302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b55b60-22e7-49d9-9928-bf513c3cfda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dd8a43c-b3ff-4790-9846-6f48de4c8d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dfdbde-1b74-47e3-970d-b3f03ba800dd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8c918-07ca-4cd9-8449-2d45ad30e124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dbaba7-a520-49d4-858e-af896ad966c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5857b649-bec9-4e19-977c-483de35d06e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "791082a5-f941-4daa-ac5e-688a3612fbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3a39c7-8289-456b-b440-f1347c116d7f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35bb4d8-84e8-438e-aa49-809140733b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1275d0b3-1810-41bc-828e-ce9b2bde16ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40da65d0-2ecc-435b-a770-1fd880f7426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd935935-c1a5-4a86-9f94-ec43fc2a7d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b372fd0b-007f-41bc-bfd8-eb29482877e7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f2ebdf-9d53-4d85-9d10-3527b23b193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab4d8f3-235a-4b03-946c-5432e74d0f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde2f44c-74bb-4839-894a-61e4d4300cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cc92d45-b4eb-4385-83cd-a263a2e7339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daacb84f-be17-4d7d-aa55-e0077041591d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b80741-3b98-4ad7-8448-e2be61ad3e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2227f8e-0d5d-4d77-aa91-4c82631a20e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452efa39-a156-4ecc-8720-cc9f337b106c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5dfc13c-313c-4db0-9aa0-31f664bb21d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d632824f-ce1d-425a-870b-faf008d12fa9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfded367-4146-4df5-92fc-cabcd68dda60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856df8fb-3041-48b8-b285-b1f3b73f2dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53eb9605-fa26-4106-8d1b-510077bb07b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cfbe98f-3081-4271-8360-482e1f1eecd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6e8ddf-3cf7-4a73-8142-bc3cd7a786dd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b452b02c-4240-4970-b42f-7638cb790f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06a6cde-40bf-4241-9ace-ad182f8b97ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad9527c-cc19-4b51-b3f8-1ed8994f6072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "636af1eb-7722-46db-8d0f-4e79ba26d340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daac0f54-ec05-4cfd-a133-71c971372a67",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00f02f3-3ba5-4930-aa42-79f03b987a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2615c4f-07ba-4f0f-9bec-cce9cae2969c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6215a54d-fb88-4c99-bce2-ffef5d866986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b386ec3-5094-4628-83dc-020f504b5047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f803c6e2-e645-4df2-b2e4-083947be9a14",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e23439-dde3-4a83-acaa-a41e8e9634c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de0c698-e4a7-4abf-8e82-e5b13786c420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fa66f5-2b54-4d95-8c46-43a6532ca022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ac4073-a7f1-4d09-b643-12b6dd112b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5704ebaa-9bad-4dca-9aac-14c73b854355",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7633bae7-d615-4740-8c40-2fe22d0aa09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4ca91d-f902-4fc5-a2e5-77ec68ec3a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d9568f-a346-4fa8-a310-dfd16a25ba9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e51058fe-1ab8-4f68-b85b-a7255be87eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61918e7-67c8-4056-b6c5-24a76e20be6e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ea9397-91e9-4a20-a96b-264358f14997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e2ed5a-e12f-4905-9ab9-115e7ad34839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c969cb52-68f8-40f1-b678-780c46c5a651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be615a61-4bc0-48a8-a0d6-e441a72a4116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1e1d9f-e3fe-4655-a665-a790ef91a27e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1835e96-cd6a-4ab2-83e6-eab0fafa85fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e163d65c-7031-40dc-8922-123a03c2156f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d22369-0fd0-42ca-b367-e3bc447c217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76787342-8267-466c-bc81-0a2c1df09863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea7c1c4-61e4-405f-a98d-a2f04b449291",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecd41ad-04bb-4551-ade5-514bb4900274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196c46f4-f400-44be-a5a8-c8ee0316815d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6f077c-bf86-4cbf-a7e0-5a504c738ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb6cf7ec-c17c-4e4d-8cdb-1a29eb489659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcc0eb5-89d5-4591-98bf-4106193b7088",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643e95d5-db99-4833-bb9f-d7e7310b2776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace689c6-47d3-4354-a9a9-958e0bb242e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e6886a-e28a-4cbb-9d4b-ebf6f8abece0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e69fb231-bdb6-480e-ab2d-a419e7988323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9a37c7-d450-4c5d-8289-8b81f2d50b8e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b29f9d-f761-4195-9998-e9e0419d3566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b91881-3b03-4945-ab35-4cca7bf7613c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da13ab7b-fb82-4661-a937-ff249534313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb777c4f-d2dc-4161-b9bc-649f11727856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5793e7d6-3570-4292-8e3a-09d39fbceda2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56968f01-5015-4257-9bdb-499f35416183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cbd03e-624b-45dd-b089-1059596831c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4287005-6bc0-4da3-9291-6432edf16efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19fae395-5b7d-4153-a74f-4b7f25e94314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea946d00-bbe8-4e81-acfb-330d6aeb61f8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f14a6a-530e-4eba-9070-b3e351f0ee75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9747d929-19aa-43e0-8bfa-623bd1dc3763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ae792e-8a8c-4f03-9008-abf7bdcd8cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcaf97b4-be94-4f95-b265-5b897d841846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5246b6-c305-4562-a314-c4ce1e42c3af",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98219385-2bda-4e42-8cb3-03f5465fcb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b784451-05a6-4769-9f63-327eeac901c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f6444c-cc7e-4600-8ae9-e3652bd2beae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0153a8db-9225-4db1-9694-5cdd2959358f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301f693f-b817-499b-8aef-c55f5a04348f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3112de85-7754-4fa9-b97c-c6fa5203f064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c19a27c-e466-44e0-844c-82e4c43906f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafcccb5-44e4-4564-8a35-c933e9a8e878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0f225e-2067-4df0-b65e-eb1a1de4986d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f221b3-9026-48c3-8d15-b49ff3d5c562",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6fca71-b987-476f-bbdd-593bc2693465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4916b89a-b78a-46d6-ba94-0d28682a2575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c785ab8e-3988-4e9c-ae32-d9b816ba46c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15fca630-7c11-4416-8497-1ce9952153e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db1d1e8-7a18-47e3-862c-0a309096d96d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4b64ff-37df-4ca2-adc2-5bf347c4d020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed4004b-b868-4204-901c-45db3e5b5be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a51fd6-1d07-49de-9cd9-9a0057857955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb7628b-2cf2-4813-b4ae-4d71528965d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d13be9-3f90-4b3d-92c5-57b727822361",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b703b38-4246-48e4-bc15-f1ae3b8779ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f7faed-5291-4f86-93ab-672779a7e63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ce7304-b8cd-4af6-9186-956878ca50bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "171e9b2c-0ced-4531-a01e-31b463c20620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d4d0dc-4a47-4a25-b843-77fa1fa0b3d0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100b20d8-a771-4f44-b0d6-1c0d1497e930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47175029-5e4c-4712-aad8-8f657736a7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dc749b-8631-470e-a933-ca752de615a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7a6c4b-c490-48bb-b294-b5aa488b00f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252e6799-7965-4bd1-a661-37c0214bff48",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e5159a-22f1-46ab-a2bb-2abc6e80865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed85b74-e476-4ced-bfb2-b8515230ecd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81ff981-9d03-4518-9df3-db2b3908b295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe4cb06-455f-416e-96cb-8395ae75a72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324f2020-1753-4d0e-8cab-7e1eb8b1995e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5b1cc2-fb04-4e8b-8381-268d6bbea34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0016c0e9-acb9-4e96-8353-c89dadf21881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0774d6-7eba-4220-b9f1-1b59c026e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38022295-be0a-4f7c-a3f9-eae4152c74ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7b3ebd-83c1-4bb5-bde7-53e43fbf9e06",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e2331d-e29d-40a8-873c-15f40551fe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3783b86-b6d4-4cd9-8949-ccc17a57fe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4043eb-21d4-4e84-b92b-0dfdd980055d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bce2cb22-bb88-422b-859e-e2f36c517d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0351ea8f-8dce-459e-9073-6a8360a93107",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bbc8f6-a358-4a2f-b659-ea485a5d839d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50be162-491e-4263-8ded-176c01ed7f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275a6b11-ecda-4c83-ab6c-b7ca25d9eb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8dbf55-b638-46e9-b7c6-3d6483832774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ecf6d6-2b2d-4cff-ab18-76aeda876ab9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1ced22-e665-4170-a065-465f1d39d467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5640d6-0ab3-452c-9f40-47477bf8e284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7162e97-d5f6-483a-be3b-552e64a89439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c75a73-0a04-499b-b488-c93c16eb0370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2e71c4-f7af-458a-9186-28f938904a1a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d93c33-521f-464d-9793-42cfe2e81d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a6113b-32f2-4a27-a708-b597b61f29a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094c4b08-869c-42d5-9d4b-35d0cfa27cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84993f32-3467-4173-86f9-c4803742cae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1709dc23-1c6c-45d0-9f28-455d9fabd40b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcdff2e-3eca-40c1-937d-72755a902987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac97f96-72c6-43db-a298-4cdc4ef2219c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56696510-7b2e-472e-b8ae-1f8b0c8f336c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69bf057-0ccd-474c-8fed-fbd52fdcb7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79fc056-f3ed-4135-9d53-146166e0e9af",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc0b06e-c632-4f74-8684-d2733a068b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c331cf-8678-4663-9d56-325754c0fd02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d93b4ab-43ea-4b59-b262-9044c9d82dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9edd4421-bd72-4070-84d6-3532f1de05b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c639798b-db51-4364-9b89-772ff69d3d16",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45aed0f-bacf-4b56-b146-10c7403b39db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d33e02b-e751-47dd-b447-2b600b81c0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce1aca2-85ed-4377-88f6-17d77529b1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "829806eb-a346-4f9b-a7ac-6c4c4f83161c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0b8491-4890-49d3-b477-d9ac28744ebe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614a4446-3ded-41b1-b3c5-7b972eb76972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48225505-b5f9-4c26-b760-48576da20baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daab73ab-2af5-4f58-a9ce-de18dfc9439c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb08813b-a113-469a-a45c-ed4c6af32bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f18581-2a94-4f21-b8cd-cc4ba019ffc7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03915b3c-07a7-4246-b771-3190033ae283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9951eb8d-fb13-4f3b-9998-eae9e6d46ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1975cd74-d5d8-40d9-a704-073a1961a68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e99489a5-660a-4ad7-956d-b78b6fbf0e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889422e7-29c9-4281-97dd-c23578cfd3df",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d08a42-8b9f-4d40-bed2-3c061cea7740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e93896b-f6b5-416f-b05c-93f28126f5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fe4c40-03c9-415a-8bd0-d5c2db660c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "49b3296f-1b0b-45f8-8f0f-652c8e49c2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6427704b-4d4f-4db7-9f09-377e8f69948e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabf3683-dede-4b19-b1af-b68ee16e7965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0dd4f5e-87d6-498c-a741-4110971f4c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c88d36c-fc4d-4d21-bd9a-58a761bad6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79e01303-ef99-49dd-bfc7-1a94165d40f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18cbe59-2e8d-4ed6-add8-a8ccfa1b1716",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faed071-68da-4580-87b7-d5e453524fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554f0422-afc2-470d-bf69-85733a672178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1a3391-eae2-4520-8816-d2ec9634925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a68251fc-c5e8-44b1-bfa8-9217e59cf1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3173f8c2-8664-449c-9b84-645faffbe705",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3c8419-c983-4441-96d2-39b4b96bd7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014345d6-c57f-4edc-87a1-c8e809ae7f79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23424f80-c011-46b8-8810-05a7b6538f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1367a4e-6f1a-40cd-8ae2-3e5cff4dd7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654d291b-65d7-4f3a-80ad-194b6bc32985",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb0fc68-c6b6-4067-8e20-98623058f989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e44026-ff44-4b06-9576-bbcf314a030b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345c92d4-21c8-469b-ade0-f2496a85e2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a98eda11-490b-4c01-aa1e-2f6367f61e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6d391b-030c-4bbe-b52b-605319c52c33",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32734cc3-b75a-4728-ae5c-b96ba841887f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e21200-504e-4847-9733-88aa45c953d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1b2684-6969-4286-9dc5-7ec0a63fc625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "57efd4ab-44c7-466f-9daa-3c652c6bede5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfeb132-b0e2-4975-9dc1-3b4b3ad41014",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e09595-26aa-4a4a-b57c-e8dcc81b26f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53301930-15c9-4ddb-8239-771fa401b9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e608fa0e-61f5-4ae2-ad59-142ccc6d2874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4115c103-e2ea-4c4b-b610-c3839f2b8f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8548d875-7427-4942-9148-a0a81a3726d7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f23643-e62d-4c39-aa1e-0aaca0e74851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8cc2e1-51dc-4f42-8f30-b0dddd7c03d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c88cbb-52ba-4b95-a578-020aeae28791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "49250d54-4a89-4526-8a07-49b1bfebf66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8171d504-2210-46f7-9f5c-acc1e44c59c8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157d074d-387b-4e20-9545-475a8f10daba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af9ca4c-3c68-4f95-85bd-55c2c14b5ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52da6f82-b8ee-41bb-b18d-d7ff88371efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa88ad38-19c7-446b-a6c1-f0498fe9bf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba949799-7554-4dbb-b469-7e2a6c77e3ce",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df9ac7d-ea9f-4db1-a971-fcfad0bd2495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c412548b-ee0d-4810-b0e6-1af14ca89465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2de272-a529-43f0-8eb8-2e1765484982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfbe3df-9248-4e4f-bfa8-8eba3aaf908d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1ae1ba-30c0-4be4-8336-d663b3918573",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e80afb-8811-4282-94e3-c57ad1eef497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bb514e-255d-4c2c-9351-f3c8f5cbda05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d77ab9-d5a2-4cde-a97c-64fdda90e970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd36e42-ec6d-46fb-9a60-61c6ea63250e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58774dee-03e7-41af-a61e-3a7b06705de3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e445af-cf00-41e0-b57d-eb026e376d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a826cc4-aafc-4485-a9d9-f43bacc9c9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d2f3d8-200b-4e9b-8077-ade2e57eb720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9daafe3-392e-44e3-b26a-e703fc88f7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbceb7d1-9bb5-4bb1-9558-98bc23059caf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd0724a-02b2-40a2-ac43-b25b01e7cc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14e2686-71bb-4b21-9a34-cd196ba5293e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a6d74d-955e-4e9c-93df-5bd3e42614d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7310aea8-bcf3-4005-8672-0b3f2a0e49e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606d97e4-dce8-49fc-96b9-daf918a48384",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5770c9ea-8d1c-40cf-9aa8-e4fe6e7acd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4176a24-04d6-4d72-a065-6bca835d4f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b18059-54ec-4d02-93d7-aa50cabc07f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f485857-b7e0-4c62-86df-0a072be00df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3d6840-ed6f-4317-b530-647f0c869d66",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f7d05a-4513-4e49-b958-da0a267202c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea938218-3cb5-453d-b200-7d978c5128d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774c378c-e84e-441d-8144-f2f5f797ee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5538e0-e826-4900-9be9-b5a54d8d53e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e73f79-e30c-4b18-b4d2-5c86d072c973",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c0403d-0e03-4149-8d94-b1fd4ee4205b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434d5763-d931-479d-b38d-c822f175b327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff3ebb3-ed4a-43c3-accd-2188ec18b803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67046ebc-9db1-4375-aafb-61597b259c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4938edce-e856-4bb4-bc0a-2b73f54c0460",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4183256b-e15e-40cc-ad1d-b2c59819032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7ba242-c57d-4472-97ca-0b04592497a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8808491d-d1ba-43f7-bf2e-1fc61240ca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb1bc19-79ef-4e9c-ad33-e76abbd41bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c792b56b-6e39-41a4-b620-f6ecd362fc70",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5925bdb-42be-4444-beae-a5691e3493dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf07c8ce-712b-4519-96ea-9b0b783e2c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c5ada7-38b7-4bba-ac53-bd8b916b9a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5887f753-be16-4d35-92a2-1bda8ecb5f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0e36ec-24ac-4c4e-9ee5-9ab83c04f9d8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd4c0d-d102-4998-be97-ec5c1072bf48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267a21bf-5cd7-46e5-a0e4-26b876de63b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77421836-0aae-4161-86aa-a79d8503c128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c13777-bca1-4e27-b6fa-81284f868db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a5b537-9fdd-4789-a9df-23ffb4b22e58",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9d6c8f-b64f-4b1c-8a70-59984e03d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192189c3-9e15-43d5-926a-0414621e4101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a252c8-db8c-4393-916f-06be834a732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc146342-f923-4f70-becb-4265131d5018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c47648-d996-4e02-8f25-8fba12e16c6b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7d984f-7fd1-4a88-b4e7-8af2989015d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac5cdc0-ce4f-4c60-a473-139f4b67b3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca4bda3-6c63-4490-8f78-3ca33d2bdfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77fa5e24-cf82-429f-b06e-1601fe176cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559c03d9-59ce-4efe-858f-c0513d4e9314",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d8bba6-cf0a-452d-adf0-f71ab36b0d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d31513-21e1-49de-b317-5b083a95c687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742a0b46-2c41-4494-846a-c0e48205ff15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ba51d0ac-eeb1-4326-a943-67fcfce7a46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fd3eb0-b3d1-4451-8229-01fe5183f5af",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd346b9-c3bf-4b45-a43d-26b799a33bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d67f88-aabd-458c-b3a4-7b600bc2de80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52393d46-3dbd-4ae2-94fa-41336e1d3169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "516b0d74-888c-4f2c-8f3e-b178e7a9010c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914accca-9921-4a70-8669-e2943472c1a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff881fd-2dc7-45f3-ab82-460a1861e518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490e78d0-31c8-4f21-9baa-b7b56d61f9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9972e9-3b63-4f76-ac43-8f7444565892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "318b4de8-f4b7-4f51-830c-6c4cbbfae6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5486283-47f6-42a6-97f0-0a152295c2d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3071f17-4fa0-43ec-822e-2f1239b53032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161205d3-bc3d-4f19-b486-43029f9945b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2d754f-8211-41fc-a169-fef3b5e02a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8616756-ac3f-48e9-ab19-dc8e44dca079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a07f08-272b-4427-a687-9f0aaed88de5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f5b782-af6c-4dc4-a4f3-f6afb02b4707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0aa69d1-5ea2-49c8-835b-f2a1d2d41d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996d0b4d-ba9e-48ab-ae65-ebd0bd02734a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64b7e37a-7206-46d3-b009-03c77adc4813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278ae46d-50a6-491f-a632-8931cdb00eca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15e23c1-0491-4147-a12d-514f888fd91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4441fefc-85d7-4f4b-9892-2946558a3bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f6f35d-73fb-449c-99ef-b53c0744ec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a5c0e6-655b-4924-a9fb-af90acd67c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c0cdab-7db7-4dd2-a42f-27ecf3d67818",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63729070-eb48-4e2c-b2e9-79ea158dcb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc3a667-291a-4ff4-b1f0-63541ef95335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d51218-6258-4d6d-bc63-829c5a111eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "86188206-d251-4483-8b76-67f011828cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fa5e95-d2f2-4583-8141-0b0c91751b61",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a739326-eaff-49d3-90f1-1c3ab6858708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e59d28-c13c-4d1e-bb1b-efacf83af023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91831190-b2b4-4e25-9b60-f14f0804c7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab56a93-b4b7-432c-88fd-c930b27c74ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a2df92-c9ff-4716-aa7b-c2fdedafcc40",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6054a3f-4ea3-4a66-bc8d-9c6fc84fc595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25dfe25-cb71-4510-94b0-dc9a9157abf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7056fe-ef70-4fdd-a6cd-05b09d1203cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78fde1ad-4174-4087-81c4-2cfe081fe1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48e36df-5009-4a4d-bd56-cce484036dfb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0442af2a-4f92-43ac-869d-7b2ef6a56659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a373ff-2208-47cd-a201-b0290ca6b231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdca1af0-d9cf-490b-a4fb-ceeb0f2e2f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c255682-ae83-4b78-8732-1710d4525145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f0006a-1ad7-41f3-99f4-79b9895439e0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bdff6c-1650-4f04-bee5-9a07e3915d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866b0ab7-a0d2-4dad-aabe-c0f37f005b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb15b3b-4845-48e4-a158-39d28ba85f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72e6da41-c51a-4cab-ba0e-2eed0a1a4aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b76b7a-9296-4175-adf4-475a47282e22",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc4b3cb-06be-4bf3-a30d-51a733230302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6495f57f-a500-430d-b30c-79dddb91aae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b479d2d0-d02d-436c-858b-0d28db8f54fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1314113a-a0fc-4db5-8f66-050a99cc2d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b435ed-aed0-41f9-86c3-d881e5d409ce",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24310010-da0d-42ea-8524-7271b327b01d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71cd9db-00f2-464e-8c19-3b3892edc0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025c7c07-e7f4-483f-a445-3e86dbde0a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb1d9e7-da85-4f2b-8379-eec762419012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170f38ad-91b3-4e74-9d3f-765def454794",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6469f58-6a9d-45d2-9bce-c122c45eb620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d1cb99-e1d6-4f2d-bfd6-e9e51019628b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037e024f-308f-477e-b850-704304a23ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9e65d6-9797-436a-ab80-4cb6e762f837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3fc8c8-396d-4ccc-96a0-44a0aceeb024",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d19707e-d3d1-4d0f-b967-23a234926d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1260d5e-79e0-4347-a01f-b7a5a73eee48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1724a832-5bdd-4307-b9aa-9a9c03948826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f906982c-be3f-4544-a433-6ea95ebed0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6524b7f-6fd9-4f61-b3d5-69a69a77422a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2943bd-7524-4055-97a7-b5d9b73f5f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a0e549-7742-400b-893a-14cc750b1af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453b6350-c129-4ba9-b4d8-7f867fb1529a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "432d23d7-6e61-4946-a30d-50225ae6cc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6643a5ff-9cd5-4354-a7ca-f34dbb882feb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26af8dd-74c8-4408-93f1-f2e44122b9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6635f3-1fcb-4815-89c4-394b740ec356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce6af90-5387-4959-adc4-f3060034729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07cb02cc-b93b-4bce-bd0a-0ba02aaa276c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efce0f87-6aec-417e-84e8-f861c77ae82f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1805825a-d5b2-4863-b886-3d439f26c7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95623186-dee6-463b-9025-b46f090011ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60950a45-1f87-411a-9c73-9b19a9c48cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8803a0a0-c19a-4d8e-87e2-adfa33ff56c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d337dc6-03cf-4a24-a11b-caf6bf44a306",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d878d58-4172-4342-8cea-91032c10bbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4994deb8-84c1-4cf2-b5bf-49fedde4e603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c5f1b9-6594-406e-9fe9-c9c49a7ed31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dad56487-ee52-4eee-a252-2edca5c6699d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcb3b7d-5f0b-478e-bdfc-caba7d3ab242",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c4c5de-54f3-4f6d-b9ca-92e4124585bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51535eb0-907f-4b21-b262-a5052518fb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b620ded-fdf3-4d34-af8f-e0302cdbc495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "249f4a69-1145-4d57-9970-37179d3be1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9a2ef7-25ea-498b-badf-ccc3e7acd24b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3c622b-24a7-46af-8056-4ed9cec2338d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab99272-8552-4e99-bb8f-3b0e3309e4e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eac4fb-65df-4c8b-9beb-be610b820e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d91b8b9-cec3-4071-bd65-63adf74c0ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6d1bb6-f0de-4570-a77e-15369c11b653",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958ed441-932e-48af-b4b4-86f8d4c9d191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a204c758-a82b-4735-93c2-8cc765d59765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec464a0-7535-4435-b718-03eff92e1ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e379e684-ab08-40c2-b85d-432f542f2e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de761380-8db7-4975-97d6-341935a9cc66",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbf4e3c-1ec5-41ca-89dd-7b08a0202c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0333d723-9017-42f9-abd9-edbdb7d72e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b88879-5b14-4671-b838-275647944617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f844ee-56fa-46d6-9c1d-a6b5149eb95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfd0f84-e114-449a-91fc-7230c1ff9194",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5c6b6c-7b18-4b29-9c65-591d6d384cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4e883c-35d8-4e2a-a00c-00876da920ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ff8e94-70d4-45a1-9e1b-56ccfe9cd3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4df4ab-6bb0-41c7-b876-d0f73aab641c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7029ad-837f-48b1-98cc-c40278316841",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc57b3a-c553-43b3-9c41-2ae0fb82b60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2302218c-6eb2-4a55-a244-f8564e8a0b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03066623-f87e-4c0b-8bf0-acb6d6db1814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5067aab7-a493-48c7-ae71-f1179dd1bed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547569f7-39e5-4bc1-b4d1-5ccf19e42cd2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfdded3-6d08-49a2-ba89-f23e68306d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a17480-79e8-46d8-b257-3fad78af675b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60818bf7-0f99-40f4-8023-eded6fe47fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04725b8-862b-47f2-bb55-d5182b05435c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb47212e-6df5-4c85-9085-4b7c591f6d64",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad2f7b9-cf8f-4290-aae8-c13ce43b1fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd50334-41a5-4b68-9582-2f8e17bc6d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247cb309-3272-4a59-817a-6cd1d6a3c5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a37dc28-aaea-4693-bce5-ce04ad6f289b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917d37db-89b3-4f91-9fab-5dc57eae0bb2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b484c65d-bc16-412a-b009-ccf0b4021fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88469747-cb40-4644-8c10-67bab58a40e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9763241a-7e9c-4a50-9e4b-9d46288848a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d5e7ae-5bcc-492d-a689-4116b94fa407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf371ed-ce6c-476b-8763-400494a8fd0e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90bb23b-9dd7-4161-bd49-4ec8eb5c637c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63e7e14-031b-4150-8aaa-4aad13902cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51243558-bb77-48cd-bd31-f814a644b774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca142be3-eb3b-4a2c-8041-d8868368c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca6fcaf-2f5b-4163-8afa-6e3f41eaeea3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cd6baa-8020-444d-91c3-13a4bdbdefaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b5c0b2-ef5b-4a31-ae1a-203dcb0acae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c57fad-ccf8-4060-90c2-31c92a9cc158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f58cf042-517f-42a2-b7b9-a397123412e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037d1924-e3eb-4bbe-a489-141766d127af",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf535a53-94ed-4b50-9b87-fcec0ab2ba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9feaf982-2775-46c3-ab3c-31e4c965f08c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4ad436-adbc-41db-90a2-b1bade15c4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87497255-4a68-4798-a113-61524546ea01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f187947c-392d-4de1-aae3-02acb89ad363",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897464b0-9f63-41a8-aeb0-17aee1cd160b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2f3f21-f5be-488c-9747-359f0b747805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798d663d-4193-4c3e-80b7-c9847f73f17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "237e0982-4e89-4c8d-ae91-5b5291595886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b78453-9329-45a3-a439-5547a4c764da",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4301040d-2b3e-4cc8-b049-8037312a4894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8ea1b9-de95-4f84-8c9c-a099a43b0ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f921b12-b754-40e7-89fc-291729726a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad05b7d-2c10-470f-8d94-ae6add9acf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "583584f8-bf58-4077-b60e-2f7d41501440",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc70fae-c65a-4c4b-88e4-560a42949e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfe538d-c27f-4ddd-b6e7-ff0a69aaf5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a7601a-442f-4801-8d21-4b0f73c64ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75c3aa15-8ac9-42c6-86a6-071ed9514c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe31851-d2c4-4297-9a5b-2b392b82439f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbcd136-dacb-41d5-875f-dc57b5cc4876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132c0292-bbaa-475e-bb08-7f6920a67b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771d25d1-f024-4ffa-8cef-0eaa6fd5dc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4107da9-3704-47a1-bb3c-ec935a651923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2b4cae-8017-474b-b38e-44f45d4487d0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab4a0d3-0e92-49c0-8b46-b3c5a0c6b71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de71909-7b6d-4aef-ab9c-e669cd3a3c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164a00f5-cda9-460b-81d6-5379b8ed0b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b609ac6c-2997-4337-b255-349f3e96e276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61f21fe-8c08-43f5-b979-9a04dea0c855",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0468c08-3a83-422c-9d32-a00ee2d118eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "52819c84-aae3-4c7b-aee9-b643f3bacea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc2c41d-36ba-4eca-9ba7-a6d7acb0ee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8adfa9e6-0af4-4bc5-ae21-60b6b5d89a39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be452615-af89-4cf7-b030-0b0f955aff9d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57fd38a8-981e-4609-9181-b836415d9074",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a0cc2a-f5d9-4500-9a5f-9c35d2b95c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2cc580e-e08b-4de4-a449-949bea19a181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3811fe23-58dc-40e1-b6d8-a4d0ac622b31",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56851c93-a4c8-4d15-9c72-1a7560eb64e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ff245cb-5726-46fc-ba01-7beee1b53a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae3c01a5-d5a7-4c54-81c5-3e7c38a5dff2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "093fa119-ef60-4bc1-874a-c7bbd3af6d96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cf45f4a-13a6-45a9-aef9-9d79d34bf963"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3177f29-7ad9-47b9-b474-185243fab48c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da2ae050-cbf6-4105-8818-77dba1f60a47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df90fe6d-18b9-4324-854e-a5452315dc71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5fdc5d27-c144-4056-baea-ea4fc92156c9"
                }
              }
            ]
          },
          {
            "id": "a62fbf64-0153-4614-8f56-e3026d8756cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cb962cb-3dec-4bb3-81f2-d68b7cf73e87",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "80841f75-926c-4c87-8cbb-42b429216ec5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bb9087-096a-4068-b1fb-94f5ccff3de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4bb3a618-985c-45d9-b717-35bfb62d90b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30e1555-0913-4f66-9bde-824f2fd14244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b07e981-cd9f-48ba-a959-343a0aed9a38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb7e16c3-9f05-4986-8d3d-b4cc42878fe6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1166e6f7-d593-4ea0-9355-d5531dfc80a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e3a8ebd-f7c6-445a-8be8-cd0579e4841e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7197260-4d4a-4496-8abe-a164e29c89ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "895ee5f9-3236-4e2d-8e81-661212f071cc"
                    }
                  }
                ]
              },
              {
                "id": "848fa1a8-67ea-440e-982a-a798c8d8360c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc8d96fa-897b-418f-babe-61361b85dc87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9743f218-e3a4-40ec-adef-70ac854c997c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8e02bb4-a6d8-4bb8-a7d6-9102e3aa1ac2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97606f7e-34a1-4df2-bbc5-e3da0d0b27a4"
                    }
                  }
                ]
              },
              {
                "id": "6e96df3c-247f-4e9a-9ffa-f9792d40d0da",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ad054f5-99ce-4b12-aca1-ad28d494c0de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "10675e47-c639-437d-ba12-108b78cc93bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd61501e-1de5-44a6-9388-73cbf8107170",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00711455-08b7-401c-9f26-46cd7c147dab"
                    }
                  }
                ]
              },
              {
                "id": "8332c45f-0b17-4856-8a37-ba9a57957aff",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c145185-6fba-47e3-bee6-2cd93451d887",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6975cf70-39f8-47fd-92eb-6c41ad170c47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6981b8b8-772c-4c3f-8a04-4dd209de4362",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f25e7676-3a14-4407-b688-41d1d821ed0f"
                    }
                  }
                ]
              },
              {
                "id": "29a59c1c-f836-4450-a0e2-19e7bab19b03",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "477f61a0-99f1-408a-90ae-c1aa00184ae8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d3d9348b-b27b-4195-a664-96659533dbfc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c97ac70-2e45-4d2a-bc57-372145e595d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8fda00b1-ff57-43c1-b128-d6fc2e339c3b"
                    }
                  }
                ]
              },
              {
                "id": "be5c5d2b-2865-4476-8138-c6970e1b9078",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7fab857-6c77-4212-835a-31d4e549ee75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7880d27-ee44-43b9-9d39-90f300b34211"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96a3a4ef-fb59-4292-b908-e35f77da786a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f6246b5-778f-4a48-9261-ba843a4aaf6b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15d389b8-6229-4519-9e99-41304a2437ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c78a8d7-9ec5-4bac-8c46-0e66d540538e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4301b1f-5e0f-4370-9cae-5ca9fee6f176",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7cb11dc-707c-48aa-8717-904354cc353b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c4b2f3c-a14d-4025-93ec-c1b1a30f498e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9beb886e-30e6-4722-8422-5e52e45b01b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c4d01c6-2ecd-40cb-a1db-762879e79947",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f7e205a-99a3-4262-97dc-985875c0edb3"
            }
          }
        ]
      },
      {
        "id": "f662e0e7-f295-474f-b73c-6dcde3002289",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a648b3bb-aaec-43c1-a7f9-5fe2f3db28a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "946f7454-2b42-4f0b-8f8a-6c8805a14d5c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae704b38-27ee-48e2-96c7-d726d1c7dc70",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd6a1aa-27d4-4832-a910-01deb88035be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b91aad0-7644-405e-bf56-e0b62bc3e1c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ef42e8-8097-4ed3-a1fc-e0a0a074d08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "98003c5a-c0ee-40b1-b771-2a390646c4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1219b3-256b-4d79-b11c-d102977379c7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac723bc3-5b0f-4ff1-a4f3-82958973ab95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a99009-eed6-4aeb-8528-802ff64b5075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7211202e-251e-4348-bfb9-7cef341c3183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8194d87c-fb3b-4783-965c-24d8df1f2df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04e545e-fd9a-47df-b065-3757ffd7d38d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48eef7f2-7e40-4788-a7a3-a7977f0442aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1803c3a0-9b42-4914-b4f0-92e46ad9144a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765c011c-6ad5-4ac0-9ddd-f99c176ea774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6341ac78-f186-47db-8c28-7a96ed9952b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c74524-922e-415c-ae93-f75822c7fcf2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aa752e-9365-44aa-9404-61c2c398c3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff8c5ac-3db5-453c-a2fe-0c90c72ea7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22f1b4a-2a49-44e8-a5d9-35d9257ee2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bd1f40-6c31-4582-bb84-cac34b1b6a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf42631-c472-43a6-8b9e-d25b004174cc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aed24b-8534-4e82-8564-baeab9f25500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4723a189-d7fe-4172-bec5-2a7754cf5b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ba26b5-3f04-42b2-8cde-47e157225689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a2bc06-285b-4bb5-b2a3-8ae8511eda53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4123eb6-8604-4d4d-8285-b81e48b245c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e7e289-80df-47f5-9719-92c5ff0db812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6079bf-371b-4623-9791-39a369b42471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c38132-653f-421e-b5c5-0781c473bc58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea355cff-003a-48f7-8a60-cf2277248bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99356d68-e9d6-49e8-b58f-871f851a5406",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6ac7a6-036a-46e8-bcd4-ab4ba5453416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9cf31f-b095-4a82-b617-dfb3d12ce665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee91d41-b41f-4c8d-ad20-8c9b78b5b26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "18c4e4d5-16ee-464e-8af6-830458398ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5f464b-277c-4284-b11e-d2d485dbfbb4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4808c031-f235-449d-add7-bd0127105331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58d00b9-7371-4ce3-b5fb-d8cd4f4d14a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a0c324-08c1-4afe-986a-3baba628e058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "416188e7-cc29-4241-abfe-6ff4bef49aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dc5631-e173-4aa9-a946-d2b396bb8fdc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e831100-d385-43aa-9981-17cdad576ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707a6eb8-1681-4e5a-8955-66556e489916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca61346-6b41-443e-8b6c-262c5fd4e071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca27b523-d009-448d-a0bd-9dda53fa17ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd65aa0c-c0fb-40c1-9fa6-ef123f48ca0d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90c224a-a2b1-431f-984b-2516dcb47112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dab29b4-2b62-49c0-9cee-243b07ab361e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e274d63-727e-4b8a-9def-2ceac35c93b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1857bb-2051-42ae-a5fc-4dcd222de73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b704ab4e-b9d1-46a1-a939-eb155d8cff3c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb8fd2f-b3bd-4430-b7e8-b0c425fe599a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac2ab70-2b9e-490a-bdd0-301671f755cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97415f1a-6d3e-4523-a8ef-420fd2644e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b52ada9d-7f39-4d2e-b7dc-138c122823d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f260ea6-6921-4466-8d66-eac8374b383b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b796fd9-7614-4f9d-b5e5-139f5bffa341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4092ec2-0371-46ee-89fb-30ef0a9c5f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d998c2-4918-44a3-880c-2cb20f1cbf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9a1211-3a41-4a4a-9423-4dd5fa4c8cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb5ce68-f857-4213-b6e7-4e5e7de62848",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317c958a-c32a-4ac0-bdd2-c1662a00b706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c650a4-4ecf-4661-ad56-503299be81dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9954aa-4d04-4d67-a1ef-c7389f349a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cdedd2-54a4-4ac6-93a4-270ee9eb442a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4ac66e-fc58-4dd2-b5ee-469d0d631d50",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fae9da9-501c-4abb-b265-8e4db4c98d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2849345c-64db-4add-8f06-cb60245843fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6989fa0-4e8f-476e-a563-4b84c01054b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "002e35d9-cb82-41ac-82c5-47b4ac05be35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f49f5c-fa65-4ff3-8213-3f5c251595af",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adef3a15-53e6-4317-9bab-2c9a17b88a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7b3f40-452d-49ef-9da4-5ad119cd4376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b7beed-9939-491b-b407-ba65701b8a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd511cda-e6e2-46fb-9759-92f226835d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a906d5-5540-4a47-9fbf-64450719c08d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daa5f09-045a-4915-9696-a8dcb639a20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf44d49c-d047-4814-9835-5ba37d93d51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caea9846-1529-4804-8780-573616ecc964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c752077c-0a57-4960-9533-1ba98424043f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709ee3e9-be15-45e1-81a5-577ebe31bce6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00aa47a0-305d-49ca-a038-673883b1f840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd36e5c6-7fa1-4502-a2af-72fda13d7cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d6446c-7692-434c-9585-67e22f69a2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "797b55a0-a556-4b4f-971f-1553afb1559d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e7d17c-5a21-477c-9b14-11b5c817f552",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ba3d72-4c78-4b28-b624-3c03b3d5d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b63d380-0a67-4849-9d15-ac392126fb21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e432df02-4417-4f94-bc9b-2cb71c311ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c90632cf-ea10-4f00-bc7b-f74517032c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb433a6-371c-4dbf-a30f-a5dc0acbc1b3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdb7dfa-2670-4e37-acd2-ef954e8228bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c627f3c-8c8d-44ec-9246-d7cf4c0060cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30834d4-7dba-4902-9f83-d3d7075670a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "425e3b15-0c98-447c-bed6-637ab5a269f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c199130-b256-4790-a920-00fc0e215503",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c506212-2625-47c4-b187-1a2013ab0afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d5863d-a8c5-40aa-b828-fa76c5aadb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc98d95-df71-49f1-8d36-2b0d60f9280a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd60df70-f93a-4ed9-a814-dd6307b080e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac99989e-881c-4972-8b38-db11fce783ba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67bb363-e5a8-428e-bdd3-70e52e73330b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7980725a-5fc8-4066-9c52-8ced04a2c723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc23b607-4323-473d-9051-199ee338dd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a81994f4-26c9-4aa1-8f6e-5d79bb57d65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb62e156-3312-4403-b0bf-61a143d811c0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d12565-963b-4e6f-b7cd-0de3496c0987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f181e7f6-e589-42d8-a24a-f9a5ec0104be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6669617f-6756-4de0-b0a4-ee242fa30419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e05cde51-c3b0-43f6-b549-571ef3c06f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85beda39-3670-4423-9d30-b0158117f155",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59facd62-a050-48ba-bf5c-3da0ee0f95a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a3878f-a66d-4be7-8101-11c20319433f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968fb409-3c50-4122-b41b-431b7fa19ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ec7a0c-e13a-4438-9635-a28c4b1038b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29318bfb-a0a9-439e-bffc-2796fa1560c8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b835a3b1-b647-4647-9527-12e1d301538c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb56673c-3605-45f4-b398-9540b11cb606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c11992-1856-435c-a418-059c85ac76b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b828a352-9af8-498e-a760-e76e54424f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814e5c71-551c-443e-ae24-0e2141b6e666",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb989aa0-661b-4840-abaf-d8e12caf3451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb291c8-8f1b-4744-a016-d7ea70fbd6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979899d1-8b66-47bc-bc25-12217ece5cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef4ef9c0-0aab-402c-aefb-20aff1243df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102b9d4b-5c48-46a3-8403-69030300681c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ac3752-a327-4ffb-a588-ac0a07bd77f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdff0c4-9731-4e6a-a1fe-1f4abf2e43e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493d9090-d590-451e-bb1a-8a5bc6e38134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b08c39-890a-4737-9800-1c6091b0e5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cf60ee-d0fb-4b5a-a257-755585b497d3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaccfde-45d9-4bf9-912e-a14b3db62f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5aa7579-e42f-46a1-903c-6700e60ea0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7d80b1-a419-421c-b733-867b24d77197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f135bc2a-5627-4b87-97cb-06a9a543a99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879d7ef2-d6dd-4732-9036-49bade78af1a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8dfc72-4057-498c-9286-284caf50aa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e1a091-2c0a-4b9b-9fc3-44c032ef5dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dfb34f7-9f10-432c-b9b4-9651f0b45140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c5045b-4690-46fc-8544-c1feb73c74a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc2a2a7-d2c1-4015-af0e-9bce80ffec6f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0b0756-2214-454f-8882-6574b6069d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9315e2-f2d1-4b98-b57e-6405b765cdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcab345-009c-45c6-b146-8fda0fd5c3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c997c092-de71-4806-8409-4d3fd9b7e7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3d1af3-0736-4722-81ef-aae346b62f05",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a9de11-a509-40f8-a1ab-885e31da07d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6682fe-d6aa-4087-8ea0-97e1feeaafc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb0c8e4-7b5a-4691-b09d-f4b85a0daa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5c83cf-81ed-4993-a72f-4b2af947edf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e409456-985e-4899-a7ba-ae66e31a020f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b42882-a9e3-4a61-987f-8be76bd30a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96aa6de9-3c8d-40e8-ab83-7c1489dda1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fd4852-a8e0-4280-8d42-f6a5e6fa5713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6dea50-a188-49cf-a6eb-08b9caec40df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376a3954-1d48-4587-917c-35b75eb324df",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c09ec7e-ea6e-4786-a92e-35afe4a2a776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fdf00a-f8e7-4cf1-a69f-90c1133327ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19299ab-a80e-4f99-8fcf-b320dc1801c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f714111-91e2-4b62-b9ef-a597715bcc8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c89f4688-6a54-4647-8f23-a11f93267c88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8051ea7-cbcf-4349-898e-9088eadb32e6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc8e4e9-067b-4384-b589-41d8a2a2f136",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "24ed4155-d706-4a3d-938c-f87ecff49be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d8d775-3681-4282-bec3-95f6306a84a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8be7fcd-bffd-4a4d-8058-33ef88bbb0cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31e8539d-3485-4477-93e8-a10e25d910dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84f0cabc-f75b-409b-8b3d-639807e79790"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41162ba3-a1c2-48ec-8d95-b3f3df8c1f6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76040c45-de87-4932-8b98-bd7e3fe6aff9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21bc25bd-90f3-4788-90d5-3124c82b57bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc94acfa-40b1-4208-b245-3e9d7f3f374e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46b04ef9-ea98-4ea0-9082-b99fef3cc80c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fa5bccf-b32f-4177-8e10-89a0fe15e5a4"
            }
          }
        ]
      },
      {
        "id": "6b256d84-ebd4-4ae3-ab81-cb365b236e6b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "eff60eaa-de4f-425a-bd72-4f2befbfa4aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d4a1a4d-5f89-4000-a3ac-db50f73cb0c1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "00906d2d-7ceb-4531-a3be-d5e39c6431da",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc1c2a8-43fb-418c-848e-9df222ca7c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b307d8-978d-417a-9553-c2dd62d8ed3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d02d51-b84a-4e27-9fd9-84ab0605eca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e144e51-8adf-4c4b-bf2b-6dcba31c780e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4c82bb-18d0-4e9f-bf61-04a2b2eb69dc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4091f97-5802-474d-b399-386e49783429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec43b26-58b5-4971-8f0a-4ca28f474b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bf4c58-9a2a-4ca1-8bed-776f511b66f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c774b064-fb09-4ad1-a7a4-eae6434ab690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e252fa-bafc-4761-8f79-755deae315f9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b454bd6-73f0-4600-b91f-4e758acf74f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc98bca1-c1a2-46a4-a4a2-e043b605276d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c77102-df35-4605-aa6b-261081617b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71f5ee6c-d7b9-42a6-9cf7-db9334ecf8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4cc23f-5ba2-4103-88ac-1d16855f2bf8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed08dd17-2339-4030-826b-48cd5d7efb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68da35f2-4bc8-4f6c-9efe-58996aadaac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd2f232-c021-4d90-8e02-3598fd04f09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "914a3d9b-f68c-4583-ac65-f7941ad8c44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d175fa17-951a-46f3-a2af-1efac0794690",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847c1d1d-b22f-472d-a15a-b9f8cd958df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfd5e23-99ee-4d9f-8e25-a25063ba99ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98859ca-ed5e-49b8-b6bc-dc9df1979af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8a1a5c-9656-4768-8a29-94e51089d3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c858b3e3-e459-4df5-9eff-30f139f27bfe",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfb8c6c-94f1-4632-b2ce-68a7a6ccaae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22f0ffc-6ad7-4ecb-abb5-ba55705d1a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eef3861-2430-42b3-813e-8524a1e91d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdd764e-2171-4322-a4e1-8ad4146290f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5228896a-66f3-4c0f-a09e-66ddd8bd675b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0197de66-046f-4dbf-b0e0-e326a2df41a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f80371a-ea22-4128-a188-8c052f79c670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c23a04-31ac-436f-b385-de1c1838aced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6fe3ad-2c46-4adc-9f14-88d708ecbf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aeb6cc7-f932-4455-a254-6e7c97587555",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7ddbba-1a75-4fcd-b194-1987be4f88c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0822892f-d14c-4635-b269-e2a49066771a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59606117-6ca2-443a-92fc-f74a85aef7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a031895a-3e04-4548-a703-ff08b418bf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe50d47-588f-4474-bfe4-cf8f0d199db0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dea50c2-7fe5-4fee-b26e-0455c4a8917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c59de8c4-3218-43b4-8950-2b2abada705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5347b96d-01a3-4f6a-8e6b-05f56c13fb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f8fdbf-837c-4b48-ad7b-46a784fe02d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be04c97-ac1f-4cf5-be3b-195d1e2af6ca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742f5919-1ef9-4d90-8b05-68e6038d3214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3805ed39-9f20-4f75-a0ec-401583854a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572a69c1-2131-45ef-ac13-0a76682bb0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fb8fe7-0e5e-4e36-86eb-82a691e53b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b233c09-a6b7-4cc0-bcad-9ba929e3be67",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9369b828-0f22-432c-8708-9145a06d4ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454e1472-ff16-45d6-a47d-a39fdddd5474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a27359-e518-49b6-8aef-3ea803fce87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b679a114-6f4f-498a-9ece-61a0b9d46188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1a424e-354a-4793-ab7b-0ea5135d48fe",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd9cf2b-e4bd-499a-ba0b-652163a81c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b814d430-b4b9-4d18-b636-b0080f63b39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3c7701-169d-44b8-a812-0a6750130ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c32dc8f5-da9d-4880-bb2b-63636c4c0e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57108424-5a5b-43ef-b803-a2ff58d7bcdc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea46873-a962-430e-b1ea-0bc66e1f3ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e9f7e5-cd21-419a-b7e2-0b8867bd0056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771797e1-2cf7-4b9d-be5d-b5da28e9c175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "621b537e-15bc-42fa-9c04-4aba4b9b5a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c766c14-3edb-4f67-a36a-6bdb641afec3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56806618-d9c6-4b77-8000-a37fd2b52735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b29d242-99d3-4af8-a7d1-a4a6dce093b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb84438-31e4-4956-a7f0-6cbf80fa2fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e36a325d-921b-4832-8bce-2e82e6f0211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbbfbd2e-31ac-4814-a9af-dbe08474af1d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20615251-a16a-4fd6-92e3-bc1a34b632ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e82021d-8967-415d-a66e-006ee71f6a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157a0d7a-be0d-4576-98e7-973a4b92c063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ac587a-5daa-464f-99f4-4697d4f58e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77983b4-4639-42b3-9d39-be1571799d46",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebf5c56-0946-4d74-a946-0accd6b2393d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d250a5b-d731-4c63-aafc-45ffeed35bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cf8ba9-2176-4831-a208-2a9ae3d213d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c30ce13c-fbb6-4b0c-a181-13f5d377bda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4122c0-b32c-4817-b83d-5608ed0bb87b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2be54d-7693-41b9-b290-ecda95bf888a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8dc9ad0-a2c5-4142-9238-fe40165a8882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29df651-0c9d-4049-9ae5-ebd84fd83db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8237054-2a78-46d1-bdeb-68629bebfa47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a71365-4447-43a4-b84d-766182c12ba1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d22e6a-49fd-4b9a-90de-5aa329badec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260f68bb-cfd0-4be3-b502-e7c7227deca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70985c4-5f7c-40f2-817e-84931ebde203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be30cecc-e70a-4804-b9e7-9b5b399b62a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a4328c-1881-4223-9c2d-efc608c5a663",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72dd282-178e-40ec-83ac-af5e25059cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de4cf0a-fbdc-482f-b333-81bffee15119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66c49da-5e37-4bbd-ae8e-df6b0b720c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "986dc19a-2659-4202-acba-e9cda45c9ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565312d6-1507-48f8-955e-f7ee2658989c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c42fdae-9c1a-4ab6-92db-6cb8e89593fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798a0074-c099-43a4-b1c7-50003e318814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efa32f0-2465-4327-85e8-1e0b3afa378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8e185f-4993-498d-9f69-191af7ff322c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d91a4c6-006f-41ed-948b-48a7e1588714",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3820b7c-1c85-40ea-9834-9539e5e14152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c506ebef-b44f-4119-890e-dede44300273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473b4350-f77e-4019-9ee0-673fed15a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c771f685-dea1-4f02-95b2-6de3f9656eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188f7ff7-4892-4d43-a52a-8045a130618b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8433cec3-4517-4584-951b-81f714826fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2ddb71-2f54-4e53-9898-3074a23e47c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e683c690-e861-4fd5-be9e-1a140c8554a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbd6d92-c0b3-41af-ae3f-3688418f0974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376bddda-2e30-437a-8071-76a07479a8c4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e4475b-31e9-4807-96fe-47972da1b476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8fb530-3957-4a8f-a029-ad7166782875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f316de-88dc-4149-84f1-c0dd6001d209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3834fe92-2ee5-4fbc-aefe-da509a75d75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3cf45d-cb66-44b4-8363-e8253ac7de3f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d0a96a-94d8-4f04-946d-be9abcf3fec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01296273-b89a-4193-8054-13744bc18f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca2e848-7748-4c82-8a07-99665bd5b8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94aa4c9a-9635-45d8-b95a-4e8c8f13e906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f5860a-9088-40c2-923e-68006a43999b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc804873-dd45-40a1-a34d-d1f7cb116cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a291ab34-bb99-4093-9bfa-1410d45360cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e5088a-e04c-48aa-9732-86441de6f7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09a6e0d8-af93-4b88-9c4c-a4be72816819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922d7c67-6944-43cf-a745-ffa26eb0d25a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc86d402-435b-40e1-9bcd-34b30ee4d183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d61ad1-ecac-46f4-b992-dc87c839f136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33986330-1625-470a-b0ea-354995c7ae3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff0a2c3-e620-4688-92e2-11b267e373ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee350eb1-7d81-4136-bf3e-5bf92d1e836a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d4a4e6-e731-4b82-b627-8e68482a5450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99cce502-3861-4501-a299-a5d19475849a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b388514-62fc-403c-99ca-0ead3fe69e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdb20bf-bbfe-4f30-b4ef-4761bd9f34a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1276443d-6abb-4638-ad33-6b1466ec5348",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54ce552-1048-49d2-a50f-47680f59e0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ddbe96c-dd49-4185-a050-d8c2cdb7d069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed53e3e-f74e-467e-9a4e-6a808248db32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df746fd4-20e4-441d-a672-98295d728028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b66b88-0de4-4394-874d-441e28d445a4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6ec246-7df7-4e37-8593-cd4291d20d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc69aca-8407-4058-a21f-5b869b677f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ce5c4c-a17e-4a61-bf71-3fe3f8652615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52075646-ff0e-40f5-b342-33efe40d2a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130f725b-06e5-4b18-9be8-74cb4687ca8d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37c889f-2c78-4d81-93d6-3b4975b42581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5722072-bc02-40cb-a444-578a020f8b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af01a093-322f-48a8-9067-37121a5a614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0b1c3ad-477e-4f9e-bf08-5a914f7939e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfbd9b8-7db6-4884-b321-e497d208663b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3983f417-3b66-438d-b5ba-0b01189f201a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f9afd0-7c79-4604-8f32-0eca037f7efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee448d0-76e0-4914-954b-181ca11d2e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f99790c-07c3-4192-b2b4-4fec2f5df019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895d2970-843f-4521-8d6d-01681f7dd334",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc3f1b7-cd99-457a-a721-fa62e046bb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ebcf58-61c8-4465-8d29-c894c555ec9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1192086f-1823-456e-8e8d-ddb2db980298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61598ce-a719-494e-a1a2-d604b56522cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868d0379-b664-49ed-8bc7-fff21209146b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88ae319-1ff9-46db-8228-e369876cf4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822c88bc-0b2d-4492-9a03-32db58689475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1088ed10-039d-4889-ab98-a42cc0571699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7890d5f6-3fac-4589-99f7-3979d9f3c52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4314ecf9-0e3e-43b2-a68d-3769b5289fa4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57578935-80b9-44f6-9fc8-599d16ebdaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e550199c-33dc-489f-846d-330487c96dbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5395203-31f3-4981-bc27-7f888b69f335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b9a242-3ad3-4b06-a135-f67c5df687a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7401c180-1eb2-40ef-8e59-280a0b97063a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72f183a-959e-4e1a-8e5f-ccdc106910bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47f440eb-e230-4f03-ba69-642a52839e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd9e43a-acb8-4d03-9ac0-72c0915f4dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91920794-4ad5-471f-80ce-09ed42a0c895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7ee4c9-ff17-4bee-8747-299ae9d24f5c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc5bfaf-0fe5-490d-bd03-7ee0ed11110d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df7f12d-599a-4660-8c73-e9db7d54c198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f962ae6c-f72a-4d70-bd43-a30a7c624440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74a4686f-53af-45aa-b426-796c49998f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db038de1-95cb-4e46-8fcb-cd8ca7b4e7f1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa714d32-2b56-449f-9cb2-36c0ebfaa950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0a4baf-5bbb-409c-9406-87e0dbfac94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312d18c2-c204-491b-91d3-acb99c5c07c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23d17492-8402-47a2-b9a1-ea6b6d526ab6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6321464e-9c73-4a1a-a20b-15c38361cd4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e201edf-afc0-4afa-8b57-c253cb8c9950",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ceb1b8-74a1-4287-9029-bf58308d82d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "89aaaf3f-cfd0-49e6-9252-5fe9be0f0766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4169ac8-c6f2-4e8b-8f1d-e4b54cde46c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f50876c-9ccf-445b-ac62-fea2ccae49cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3a5853e-68a9-435b-870e-7012e3da4509",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9d5dd0b-5098-4068-ab39-6153843162c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ece4aa5-2250-4a83-b7ca-3d6784534a5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27971f52-ec41-4fb7-be42-07f5a3243db2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33c794ed-2a48-4098-abcd-d1b24e06a4d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "627c94f6-9ae5-4331-afec-fe3f50c6d4c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6565736-421a-47c0-8fc5-55953baada04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d6efb06-4bbb-4335-8e99-7fcffcd1d045"
            }
          }
        ]
      },
      {
        "id": "57adcd6f-ae1a-4ee8-a498-8ec0879ec2d9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e5db283b-333e-4146-bdbe-9691f25d57b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f84cf868-d13e-488f-ac78-ff9bfa1d35d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2b5c0f2c-f4d3-4ffc-b855-c4a29d92f56f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa4163a-a5db-480e-8eb4-46f077f158d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef74be29-3be7-4850-a3db-519eec0ffb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cd4c52-a3b7-43c8-80df-f5736cc616cc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53223ac-20aa-4513-9e17-d8ab4dec6f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96c4400-927d-417f-9d27-7bc645c872b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e629d6-0345-4388-b541-9939c1d263e6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93186d95-a494-4a93-8f12-08d9beb11220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ed3616-9e7f-4e73-8ac5-7fc1afb99a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0171d66-1557-41f6-b808-7b19dcba464e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9aa7852-fe49-4e33-b7bb-f6bf2e7460d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f2065e-8f76-4e8a-9a2b-a9ec9b288af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452cb160-b8bf-4b8d-80e9-ecf68f7a1dc8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5824f4cf-8474-41f8-90f2-16d0cf6b163a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc8e97e-c885-48ed-9880-7bdb43501f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18aeabc8-c97a-4350-88a7-6fc167107a14",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658e3690-ec6b-4263-8a38-278e40c74f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "123162f3-aa67-4753-9f3d-9165945fca36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2645dd-24f6-45ea-959a-7094339acf81",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce84fff0-77fb-408e-b02d-a23aa8b7755b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc4c11b-f8cd-4691-b1e6-586518c56088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767c66cc-dcb6-4f22-8697-9680d2ba43fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5e9158-c238-4cf3-8af3-ff27e14fe179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106b7bea-6b16-4767-9ecc-f9d279ca38fb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f166e08-fc49-4f92-a982-ad1e0a16ac36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ddf3f61-2a46-4cc9-9d76-747447b73f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20e0ff0-44b0-4ee8-abed-fba849231c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c07a81-8162-4d12-a309-53713a533482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e0595-9bbd-4332-95d3-336444203ec9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7820bc82-4fc6-4807-9899-f688e092a732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ad6c8e-339e-4417-b3ce-89c157ba139c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7167e2-f551-4b7a-b295-1f79b2ced050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9539c186-e74e-4675-8f91-b0390de329f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6269b079-5c09-4da9-be55-aa3be0135ab2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e3464a-8f66-487d-b324-293b542a690b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8ebf3b-7fe6-4613-914e-c2ecf25a09df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3901a3-0c1a-4063-944d-3b1a61e23186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44996891-a888-4401-903e-ca9e1e8c3643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9dff94-9402-4c19-8bc0-7b4ece19d3d8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1626efdb-0278-4c9f-ab48-bb5e6237be9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234ae26b-1ee1-457d-a881-f659b3cfeee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b27866-9b8f-4d71-950c-d17571005698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e16ad8a-bb82-4e15-afbb-4b70fb0d371a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4db8f87-0221-4869-8244-12e82026f271",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6213471-79c2-4ee4-befb-54613b84bd7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d365f791-3d00-4190-aaec-adaaf57d331f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4898aa6d-68a4-4ab3-bd9a-4491f647c92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72140c7-e8e5-41fc-acf7-dd192e2a6d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b8752d-88ab-4264-a4ba-d5afca57c9d7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e41edf-1cdb-4ff7-840b-bbeb58fdfe7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad9ba2a8-aad7-4b5f-be7d-5a27f63bddc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f3adb8-55e1-431f-8d95-48e02c589d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9480199-5c95-4633-aebe-b90dbbf10746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448beced-5fd6-4233-bf05-accd38cef823",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85a0c46-938f-4cca-9bfd-de0b105b1340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4a0cd31-ce37-43e8-8557-7dc4e075d927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ccba61-b189-4e3b-a0b5-039b17adacb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c19ea8-5f9b-4b82-ad3e-354c0fcd0507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f5afcf-9263-4f8c-b779-b31763210c26",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25a851a-6be4-4662-bc0a-8ce8c54899ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a67cd6-d204-4d42-9ab4-eec7ac6ea2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef87c5b-8a96-4fee-b914-8ab763fee560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e5006c-6a7d-4982-8d87-85c62ef5d0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05535822-70e2-46a5-9876-eb37f9c6be01",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4835e2dd-c85e-458b-8820-06cb891bd9f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21163acf-095a-4762-8863-3a5678dbe4bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c59676d-38c0-4826-be4d-8528aa8de88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21d9b5d-ccd2-46db-91dd-28c51b9cb24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f73c3eb-054b-4ee5-8a41-a66cd975ae88",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe4967c-d2c7-4742-8d75-ffc7a81ea7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545429de-32b9-4cce-acdb-ae3f7cf098bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37002fa9-3c5a-4599-be85-ee234f0b8d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7413d8a4-ddcd-45cd-b65d-c55b16564c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63fa8e88-ccec-4b41-a0d6-2fb10abccf04",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd395d1-4f33-4cc1-a5e0-4eaf02ae9525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043c421e-23ac-4c10-a34d-f2b0b0de04dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf78749a-6050-470a-9729-9570fc46529c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bf9f69-d79c-46c4-a5fa-38bf3209fa1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e883194-2f3a-4410-b111-0925c7d2a4c3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77efbde4-2209-4ff8-ad35-556a4ac5b3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c6ddec-95a7-4695-9ca8-5518a775c8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce3ef69-1a72-4521-bd46-a0b28af4f936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db78044b-b23c-47b5-848a-8ffd8d7db22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed3d76c-d0e4-4fb7-b39b-bcaa50e223b4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13228d40-45f1-49d4-9f83-e52c30a4106c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0c682f-fbd9-4768-a37f-fe698696d6e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b40323d-29d0-4d86-8345-c557bde5a19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a4817c-019c-4452-a0a9-ebf5eaa83ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95e22bd-b791-498d-ac91-4f24241e3970",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80268abe-8a1c-4009-8c9e-1eb33d3bc368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f4d345-834f-4649-ba52-9595c020c362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782bbab6-d3ef-4169-8e5e-cb74b71e3254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed8f9b4-6402-4111-a95a-86dd6fd6bd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ea282b-58a6-41f5-b5d8-a95612292966",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e79b927-bc96-4c2d-97cc-7474d77e2da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86263780-106f-4831-86a6-45b86772d8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8deaac6-f99d-4815-ba1c-2324914c0e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7326c62a-ecd9-4857-a940-763252e8825f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020233ad-7f8b-4582-aadf-af22c9077d02",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297aeec9-9013-4cff-9482-c3760deddf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d59900-a6f8-4919-9ea5-6fa3840b97d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406a7cfc-c26c-477b-8396-c7e1c2ae17ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e45921-a276-4c83-88d2-4341ef7a87ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9032756-cf1a-44f3-b97e-40ad2b47b65d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a02c276-7adb-44be-8031-e1c87295865f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c19191-51de-4178-98ce-16d7c3604754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62119ea0-56e0-4839-b1eb-f73b1fe0a4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff74f1be-9b07-4cfe-b6f9-724e09fe197b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd669ce0-e6e1-4792-9d69-cf9efb3bdc5e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a5b2ea-e62e-4310-9f48-4a0e1748ef43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911160a3-b132-4273-a0ee-9be73ea6e6c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754db8dd-071a-43fa-9cc6-4707f114bb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0091027-fa64-4669-a2fc-1c93ccd5ee22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eb45a5-eceb-4ade-bd78-e2a3c06fffbb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74db2698-1071-4451-a204-56638f7065b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e47d4aca-b590-4dbd-ba25-442bc732ddca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b79d29-7aa9-4dff-a802-4f563ea187d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9d7464-db2c-4c71-8ff9-642afcb5cd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82667fb7-80ce-4e8e-8ad5-b6ec87da9b56",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf9848f-cc3c-4e5f-989d-894eb1b7c619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5dacdf3-1793-423d-b17b-46c17ba70226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ad6091-25cc-4ea4-b4d1-1bac946514a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f8ab49-1b71-4188-8aaa-3b117b746b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1971cf-f5cb-4e9a-b7e5-f10610d55cb2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb9d626-f602-4987-b651-f9d684861035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a23e7ee-f998-4dac-902a-a216e0e96473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84375af5-0483-41c6-aca5-56e6f522cb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aee6c5-a366-4fb4-a1bc-0bc6e3d15501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e746f82-529b-484c-a92f-759d59bab76e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc15350-4da5-4c6b-a751-a5522680cdc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "663b3ddd-f86a-4829-a19b-5dce6cb55ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1286cf-3f5e-4a99-b978-626f811afb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6149a976-26f0-44fe-86f4-6adce669bcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd94eb51-b464-4afe-a609-4bdb80778cb5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed5d1c3-cba7-44a1-b098-102c77877b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ba9409-4d76-4816-817e-6467297e8eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea77556-dd6e-4468-a763-a8663f841fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb0ce08-bee7-4b58-b7c0-ee9bbd1597cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000bdf0f-a6df-47d8-93b0-d8a08b912975",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24857a56-e8df-40a9-b264-527224b220d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b64662-9aac-42dd-b455-0150b17a5229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc0dc93-63e5-4b18-b284-1b79a7a18e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7a6abe-c9c4-4d30-ba82-0b883f966e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b099ad7-605c-4cff-b05a-d2094698edf8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1ec31f-cee6-408d-a26e-a75a1b047a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e26aecb-5a6a-45fd-9c32-3f4cb24628e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fcbd23-ae0e-4be6-8598-53567a5660fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8e0619-2fc6-48b7-a8e9-f15cccf51b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bcc962-76a6-47bf-a5ce-80d71dc8f0cb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da5086-b002-4c38-b4c2-db4860d07acf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb710372-9274-4291-b9c4-679c05a1a93a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ada3a7-e5df-475f-8105-399fe157b747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2350640-f61e-4662-aa7f-fe738812f11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c2ce9e-89b9-4c1e-9197-71835af920b1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25be5ac5-3bda-410f-be35-15761a1b8f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f546954-f45e-472c-b7df-44576032b465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74ef990-5051-4dd7-b5ec-66a79eac0f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0add56-ab94-4985-a97f-39073709380d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2d770b-3d87-4eb7-9f3b-248637a0614d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f81d1ab-320a-4d67-b1a7-86d16397ddb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6024d6-8558-478b-8889-22e9427759ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e26960-ee11-4340-8523-d758a568a2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb5983b-8bdd-493b-8880-1e4a0f2ed7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e00e6b-bd88-414b-886e-e5dfabbe2a68",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c4c30f-90f2-428c-8de9-094ea289025c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7decba2f-141c-4f45-9494-7aaadcd4c47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4725a135-38e8-4d13-9d83-2607b85046e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b78a75b-fe98-4215-9ccf-228ae30bcc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bb94e2-c97c-4232-a60e-b9fbc4da529a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c8330e-1dbc-434d-a1cb-67eabf75bb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1f478f-cccd-4af7-92de-8cb065d94d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b94c3d1-6e8e-4eb5-abe4-a6b68c21bf94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e757ed54-ed6b-4251-a7f5-150d4d1ea46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc94e5b5-f979-4581-8d8a-ef13f9bfb72e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab170470-4179-401d-ba0e-c6cd995c6900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc542372-6e93-4b6f-8a76-1937508b24ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477b1399-98a1-4aca-9eef-9407dde7d48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bdbe82-65b7-48af-a5be-821d795c4241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bb9237-9022-4acf-8d6f-1996628414b7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ea2467-3aad-4e8c-ae39-6462cad90f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5962ef86-d246-4a98-accc-d578565f50e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fdcac1-c76e-4b7e-aeab-8e5d15386143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42763814-77f4-4e7d-945b-34c189490f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b91296-520c-43ac-b96d-9d3565cd10aa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2adc154-e6c2-46e8-8171-483756b96ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7eb6612-8313-47de-9f47-b016cf5bfd07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db54f96-9a3e-4dc9-b51d-808eab9c0b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62deaaae-c1e5-44df-9926-c15cfa9ab251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819a522d-6021-46be-bb96-01774a397259",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c935a1f3-6716-429d-bfa5-0606d623e898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e635acf1-c241-4d86-ae34-a7de847c0fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8cc557-08a4-486d-80dd-237b2027a9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232598ec-be12-41e4-90c3-74709f98d466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560f79a5-b2e4-4d4b-a32e-20707df00c26",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fc9053-f4ed-4618-97a7-a9f328af914c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa3a728-35dd-4d7d-a00e-33df91286c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5012e2c3-7552-4ee0-8c74-7bff4c8fa6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77faddb2-faad-427a-90c4-e870b188dd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d05adee-c8fa-429d-90a7-a7b6c28aa4e8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ba9239-d69e-4ca2-bc3b-e6d23a010ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928f0a72-45ab-4067-b086-132806f62cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c100d3-06d2-46d9-8225-7bc0516a20be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc45890-9ece-456a-a64d-2f092a78ecf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0ea48c-428d-42ae-aa35-8234a6bb0369",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd52590c-d895-4799-ad5c-c28f3457fa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bce8fa2-c5a4-4543-b18d-91caa35d789a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d375cd-5af5-4216-be06-bb5523cf909d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7a6315-0615-4a2d-99aa-04c5b6fc514d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065d93aa-3b35-40eb-b8d1-364a675dc949",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03dba2f-320d-447e-9e3f-2f58d52dc35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac23a3f1-c7e9-48a3-9a45-06e3b58ca2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0df9b9-92e6-4f74-8095-77d32eff15fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43103095-2f4d-4c03-9d15-942a77456414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3678fceb-0e19-4ebb-ae06-dd127f9137c7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094cf0ce-830c-4729-a92f-9c26230b816c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec97b60-6b7c-4a84-84e3-b49ca28141e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65913df-f22e-4a1b-9105-950b8dcd75cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23df105f-e469-479c-8842-7e3d4f30dc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2362333-0a70-403b-8bc1-fc8211cf63c7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91ce8d0-e221-42e9-9db8-09de50aeb1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746320bd-1b9f-47e3-ae92-2c7cb9e40662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc58f4b6-3fcb-44a5-a3ab-6ed0caa0fafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383d25f4-bc48-47a2-ab9b-4ad1e5aa56b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943e8a58-2f55-4648-8aa7-89bb47857b0c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeed6ca7-3676-404d-9f3a-702d70dfa0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f6a7ba-4692-4c07-be6e-35dc913f9aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8455b764-3001-4907-9b18-708a27493a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1278e14f-ce5c-47a4-835d-1b3c0d835497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff20ce1-f5e2-44ac-8e18-ae5e2c7a38bd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa794b2-7733-43b8-907c-4424f8508c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d4ae60-7f3e-45f5-8ecf-a54bbc309e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f76357-5fad-45a8-9ab3-2e075a7d2446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7738d088-0009-4eff-a12a-4cd1c9f933c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d967bce4-cf9c-45b6-affc-41bad5c19fa2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0d05a9-8ddb-4c16-bed9-11cd89e544c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d95159d-9533-4945-8987-ab04678381fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe83410-e77f-49aa-b9dd-d0919df814f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0510d91a-c5ac-4fa9-abe7-76f500b47f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2de61f-cfdb-4846-833a-4153e23faf07",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29629d65-103b-448e-9c97-9335af94e1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba1329f-b082-47f1-91b2-9e3dda02adaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "595da421-e833-4475-9da3-ce785062ae3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f8abf8-9e23-4f95-87f9-55932d2c5ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ac294f-4925-4a61-b2ff-47881f62e8e4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdb6a4a-b162-40ee-9675-0857eae5840f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16db7522-2a62-42cf-bdb4-5e2a445a8216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65460a2-74a7-4bba-bddb-71a64f6586dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59adcfa-3584-4838-9b50-9cc6c5c85e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b72fbe9-fbe3-40ae-ab39-e8124b29b01f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfc4121-59f7-45f9-965c-aa152f62c947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e05fd8e-cd12-46ac-956d-6c82a5cc6c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b26b6c-f068-4058-9f1e-f5f31caf8c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3673de61-a616-4858-9b93-953d10a6bf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995da419-9fc3-4725-a1dd-a306927e844a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2746d12-0357-4e05-8b7b-7f0eba7c9654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c493a02d-bc97-4bc7-8350-f97a4c60b7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57fb590-d428-4feb-91d6-a431a06cb0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bb9268-b977-44e1-946e-59b03ca05417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a782a3c-8b1e-43f2-ae79-abbf784873d7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023a6a8c-46d3-4047-a9b1-9f9ad5f093d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c5c209-4079-4527-93b3-316b1a572be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5599706c-b0a3-4d37-88c4-e5b226dad2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfa21cb-7ef3-4954-930a-edcf7368c5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986985fe-e5b4-4553-9989-311e48e378e1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f5e7ad-d407-43a3-b808-2b4a50c842d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4f35bb-c949-416d-afe3-9222dfc14abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b997d6f5-310d-4d8b-b37e-00057ac5a07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f13c7d-cfa6-4dee-852c-7322f7660e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f07ee8-1d5d-4ae1-8a1d-2437e052ce96",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c33bcee-8fb6-4ffc-aa92-f6676bd75dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c686c68f-ad1b-48ae-895e-38bee3593db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b22452-b748-4e1e-ad38-8f5e6ba90b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee9b436-ec42-4694-9f37-41c13d36a570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89438fa4-092f-4ef1-a1f9-e7cdb0a31686",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8e2949-23bf-4396-a7e6-be0e630bc260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eac6e2d-bba2-4e25-8bda-052961e65b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9890e3c8-b2f2-4c25-a4a4-da8faf8b28df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2a4dd5-d621-4c78-a891-febf0177c8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cade02b1-0528-4d09-8a96-0598df29d836",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3644a17e-3059-4543-8eb1-56b44f656c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239caf38-bae2-4c91-88dd-ac7ba4bceb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd3a800-ec36-45e6-b72f-8ef02e30bfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250340e7-f2a1-4447-b2e1-6e0e14ac8192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90948f2e-d32b-4c9d-ae23-9e52d897d959",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7647519-a4bb-41cb-b9f8-17f334ffd105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafd5768-d73d-4fca-8951-0e8e72c35ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3585feb-84b6-45ed-8679-007f2662a365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0eba5e-7bae-46db-a581-7840260662a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdf66eb-3272-47b8-b1e5-25da8aa44fd8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cf0bb3-354f-41a7-923f-2ae48d7fe549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d141c5a-2fcc-4a44-8b90-9707a9074f71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179fee5f-a61e-488e-873c-532f7558e475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73924f4d-b738-456b-aff5-293a3bfc5094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafdfb75-190e-4062-a518-4ea8e1b0453e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af62b4b1-b35f-4a55-8002-ee896f6e3cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab6f9bc-bf3f-4bb3-915d-9771c2f1c488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3e3709-6e7e-4038-baff-7daa876221de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fcd7a6-04ae-4238-be39-df40a2f2ec46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2326b90f-947b-41d0-ac07-1e84e45d7595",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec689552-0266-47d6-bf3e-55bcb6792721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f0303a-721e-490f-965b-9d607b075388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8717a6fd-6fd9-4748-a2d7-1d7cfdc97f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702a51cf-bc5a-4cb1-97be-5889e86352a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f2dd0d-10d1-411f-adb3-60ccbaa0ce1a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c362da58-84e2-4899-b6a3-dc02da541533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6237acea-ef41-4c07-a0d2-221bf64e122a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24c4013-0785-47aa-9090-1d05b0e13a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293f4874-11a3-493c-9a40-b13a2c36def5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c8a798-6efc-4855-8c4d-f9638cf3e421",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224d2b8e-656a-47e9-9867-0a21ef7e5a27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "818a1a39-65fd-425e-9246-01842afd4aa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260aca33-56a3-430f-a958-ac302e61a675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90589b82-6de2-450b-bca7-7e9adc6741a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc3179c-a178-4a70-8aed-0cf483286fb3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d84f01c-b0a3-4e75-acd3-8a7672728681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c09f815c-91fc-4c04-b643-0e2fb1c23220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea384c6-651b-46ba-bef1-57e5375524cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824de340-4604-47d8-8755-2fcdb96ef0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb6694c-e943-41e7-9436-7a7e45ffbd99",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5d7d4c-5ab8-44c1-89cd-51a3dd6105c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49bb87b3-f121-4d41-9672-07123ce7e524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434c53f3-e5b8-42ff-86c1-0df9bd89e6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9162976e-a107-405c-9daf-12c7dbe84206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60423d0c-b929-45ea-a8b7-2c91bc825b7b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143c9601-3508-48c2-9a0f-88cdf7a63b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62ffbba-2c94-450c-869f-495d77293656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7093368-a5e0-4eec-8f5a-08ec340cbb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7ac5e6-c6d7-40b7-88dc-85506744aadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fde2f3-e093-4fce-966f-a69f12c6f84d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232f65f0-0e77-4f19-9858-929108ef2529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f6d6812-b018-499f-b5d4-d9e8281a8464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814fc93c-4267-42a6-9f3e-acee8ce1e3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3f08a4-ce22-4fc5-b7a0-c530bf8b031d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16bbdf5-482a-44f8-bb51-2c02eb6d4e95",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139ab27d-36e8-43ca-ae0a-625bb569f9a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0932b15a-d774-4b3f-821c-67733b252240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfb5cc6-e3f7-4de9-a777-1bb9b4bb842b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19793c4-57aa-4496-aa6a-044d1d1eb168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7ea07d-d90f-4431-afd7-b0fba1b0ddc0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a370627-7633-496c-af19-f7adf70e504f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daafd3f7-32bc-407d-ba57-273acb4e0dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e0f4f2-8034-4394-99e0-0310b81eedb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792b768b-8300-4e17-a93e-bc170808779c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f5d107-e0ec-48f6-86c6-854b94348c27",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec441e59-2204-4d75-bc60-7052b0f92187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a26282-1881-44b3-9500-cfb6caea68d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63181eb7-d12e-4845-88b8-0206a73b4595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd43fc98-4b3b-46d3-be49-12504a1a8483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfe3488-637e-4732-8421-2b6d0def713d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b179146-cd06-42e4-8899-bf9e7408b68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2a9e193-6bb8-410b-9bd1-2b64a44bfaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fc8402-0a0e-4099-951e-b354923cd415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bef8ae5-688f-431a-8028-9d102f746a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0a0e15-e7f1-4b60-9f5f-09f1792793cc",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffdd82e-682a-409f-95e4-9471be4f8837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca0ab98-e603-4589-91ec-e1fe62fef8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbc9623-b465-49d3-bae4-1e555cbed59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec32457f-384e-4c0c-b84f-15c23010a973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbadcda-f1e8-4e34-b8af-6eec97931ddc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae16521-3ed4-4acb-a1fd-a5b2c088e274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa7c111b-306b-435f-b19c-106141a1d801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5425ca6e-7bc0-4b14-b596-8cff089f62d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82c0fd4-e42f-45fe-9a87-5d3686459cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed11d98-98e4-4ec9-8aae-8df744a31a95",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6c6b49-3499-44aa-8497-19fa5a9bff90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7ffda99-f2d9-4a7a-8edc-876437c5bd4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d3fccb-5914-40d7-b58a-b1b6edecf937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599bd08e-0470-4b19-acdf-683d4635ee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7df1b1-c48f-4970-8f02-8517816307bc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d527c876-b7d2-464c-94fd-a3ad7acecb48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e5ecb9c-6b12-4410-b7df-0bf4b9b86087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4760483c-6af3-4c88-bd09-ca07ebe59de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cacba66-c4ba-4a73-be00-67743e614dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e9feac-8546-4383-9ef4-16f1584ed88a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f03f1d4-36c5-40a5-8f94-25948ef8fabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e73340-ca9e-41eb-9277-f4c70a40d406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1d7e66-e7f0-4ded-9710-28e105b5d086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f9d3aa-7fe8-43ba-a9f1-c2e52f5c9c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a1badb-b139-4ec4-b09d-92539d2892e5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8b1e6a-75ad-45d2-809e-b3fb563c546a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c750621e-461e-4497-891a-b516115c4458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "329e7a42-233a-4a2e-91f2-f4a071f63e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3479e134-13e2-4492-9dec-e12f00efee02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa974919-0996-4ac4-b638-ce6214feda64",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5e2f4d-31d6-4da5-b20b-0d4cc91ecca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb2ab6d-0d3c-4222-a5c2-7efaad90e76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ded896-7e39-415f-bb53-e3bcf51e05f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83bcdc7f-40dd-4727-ba52-142d220f4419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be43806b-f71b-4224-b37d-8d7599a6d40f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dd0ab4-457f-4250-a82d-ed5e1a53b2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44039d12-46a5-4096-9b12-d06e569578c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88daafb5-a9dd-4a62-8425-990fcee09910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba45ce25-7dba-4819-bcf5-7f39317f0662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea659c7b-249c-4548-a5a1-322716f86d37",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37252b49-2977-4838-ab13-07e8769e9311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57c993a5-02da-46c0-9508-f8fb6dea6404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22600f29-31c2-4ee0-b6b2-01ecaf0e0268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f53f86-b0ed-4f1c-a52d-4dc96775908f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb7099-7596-4ce1-9547-e2fd9948dea7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee3a425-059c-47b3-bf4f-11deb99de8f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0238066b-b145-4da6-adff-79a6087a2fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4881d59e-c5af-474c-8955-5eaf8746ba7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403cdc8d-92cc-415f-a2ec-94ea6736f662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a8592a-a634-4a46-8f6c-b7358748ccf6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9447f842-f72c-4b52-a739-a442b0216287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00089c53-ee2c-41d1-935f-d220c5a7c1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57db4ec6-28c7-43fc-9072-9f8d085cc13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07376c87-809c-4c50-988f-95ea537a46e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad31c76-6484-459d-9505-dd6d9bff37b9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8530529a-06de-4ecf-8392-9b48569e3ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95da5b2e-f413-4968-ac85-a96d7b66335a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2729bb1-8435-44c7-8f09-ca3aa70b6fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7f8ab7-7c7d-4670-92cb-86be6604586a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df407516-194f-4627-a5d2-91aea5f23a74",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee2a88c-679f-405e-9687-0edea28f6304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d8700f-dca7-4eed-be93-514459650dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9eccc3-08cc-4386-ad33-50e3eb9f4323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c326766c-aa08-4afb-9421-7117b99963b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68357ea8-b60b-4814-9477-732d4a4bcc4a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f00078-504f-4ce4-8f0f-1f8d067e169b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27518c91-2040-4ab4-9e6e-bc61dac3e6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed69c3c-4c7e-47ff-a238-c847c26e2658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a978f1e-56ea-45c7-b788-cab3ab93100c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e377e91e-ad11-41c6-9a08-d49d7ea1f9cb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fce13c2-4506-4e2b-a8af-0a8c56cd32a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b320eb-fce1-482a-91ae-95fea65413db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc9d318-5290-47e9-8100-fc82d2d7ba3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae33240-687b-4bad-bb09-1a5bc7f8402b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8edd7b-e976-47e7-9275-cc47fc230e6b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7e904a-f98e-487a-895b-0b909303cf13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a540ae63-562e-4d54-ba2b-cdad04e3fb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff0a4d5-1dbe-4abf-8e51-84958b859ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61b2122-8fd9-4889-9756-2b6c4aa6f295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b76ee5-40b8-48ab-9ef2-c762129906d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c727ef47-1bae-4e58-b275-aa38fea67bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4003dfdb-b930-437d-840e-86b62a537f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfa248b-7801-4ad1-92cd-5a173a2e3b27",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d634658-77c1-4af8-9f0a-5c49a0886f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fae266f-2fb4-4f44-a790-f7c07d338101",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94f368e-3551-46e9-ad0d-8702d62916cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603b215a-4705-4d7c-a286-119e4d67f56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caf8fdf-db69-45d5-b1bc-47603ff75345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7adede4f-f7d1-46a6-9361-367e4a8e373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f6192d-6f27-4f8e-9123-d254a10eca7a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de20ac28-429c-491c-83b1-89664a4bc4f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99597c30-03b3-40de-8940-a8efb65bd74e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beee421f-df4c-45eb-8120-9030d2fdd173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bddb3e6-48b9-4795-82d6-fc9c3c71c032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb39805e-5eb2-4134-8948-3d72989f2b02",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4801080a-f257-45d4-90ad-ad0231bfe0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85513b5-f636-40c7-9c6a-c5d0ca65745b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae45b8-d825-4b0b-b744-0c3a91478181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f80d004-347c-4f09-959c-731071150328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e35d15b-0485-4970-8d7d-f09559ecface",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81c869a-c9fb-41e6-9c4d-751ae99807c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518c2497-7007-405a-8d37-19f07aec3303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4d9044-7739-4248-ba84-b8f6c4ec768f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfccb0db-7258-4318-b3d6-7c162b45330f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf67c249-03da-40f8-a979-8443ccce7ae1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592c62db-f3a2-46cd-866d-1485b6ca07ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8139c7e-9416-4b13-bccc-1890f7026b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb698072-8d6c-4f8b-914d-077b8bd92e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31aa338-aaf5-40c3-a8ab-632173800f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87c885e-93a1-4c21-92f5-1d5201ecabd1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9d22c9-dab9-4099-ad15-fde9ab1cec85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540c5ff8-eb82-47d7-9fec-6c9a51999738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2939fd99-7824-4825-8aed-b33e228ef527",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2dcb469-57f1-492d-997c-f1c06b179926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7cf386-1462-4bc9-ab5e-9826f33fba55",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65831385-3759-4a93-b011-cdca604b142d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a8df2a-201a-4a1f-baeb-77cb23c251c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb012c8f-c937-4c41-9f73-a02e4af42d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a336656b-b304-44f3-a827-87f350aaa8a8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1540e51-4f8b-4dc3-adb0-eebccb2e918e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1841a444-f5f0-487f-831b-564ce882588a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a4d8f43-eee2-42e9-ae35-47c8c77759c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ed60018-bcf0-4604-9dd1-5440ae94b518"
                    }
                  }
                ]
              },
              {
                "id": "4c0a1f37-f0c8-42e1-8de5-d28b7a325e7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b25a3c2-ce90-4e04-9bd7-c7818d162388",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4d5820-020c-415e-8243-1eae932a5dcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a28b6b3e-1b72-47a4-b851-e7aabd79dac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d17179-dd24-4667-91d7-eb8be2c357f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "861f2cc4-af66-443a-a675-aaa880e1ba07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3827b54f-998d-4c46-849e-befc45a70167",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7b9b9cc-40a9-4fbe-a74e-ac2c4647327e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21f45e7a-71f7-47f5-b1ea-1608eed31986",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f92cb47d-9d3e-43e9-a37b-3c935fda07fc"
                    }
                  }
                ]
              },
              {
                "id": "c096eeee-5022-47ef-8ce6-cf83a599fa0a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5609bc16-b6e7-44e5-9a52-b426b0d5d1cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fabc747-dbd3-4a7b-a7df-c4ab1fc99202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "419873ac-0ead-4d2e-8ff0-f3b2c523594b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399a12e2-5acb-4d0a-bcc8-5ec51a6f376b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ff8227-1f97-45f1-8c5c-740522fbbe10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dbf0b5f1-3c82-4910-8858-13899fa34a2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f5d93e9-e481-48af-b0d1-8d139e484fa0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b44af36-3a46-4042-810d-f863b36488ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0a0f2b12-7356-4102-983e-8c3a45cb2b13"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebbd0385-5ee8-43db-989c-82944752c944",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c6fb42f-123d-4a6d-8f1a-a2baec95b852"
                    }
                  }
                ]
              },
              {
                "id": "f755b929-2cdd-424d-99e7-ffa10d61ba8d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "963e7144-6a5d-4158-9f05-879a23fdcbbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3768a34a-e226-467c-9241-6914053c332f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e528443-6b36-49b1-80aa-4c4ed864b09d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "938a38f8-647c-4091-996d-b98867e71f52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6d5d1bc-b6c3-4f1f-a1d0-db689a9162bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c558b796-e12d-4fe8-9f88-3587a8c39288"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bb623fe-69e9-4c44-abf4-db19954dc78e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4bc91a5-83c4-43dd-87c7-d709395d500e"
            }
          }
        ]
      },
      {
        "id": "5949e061-d12e-4339-bc11-b55a24019c8e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3a39fc1b-b917-4eaf-999d-94873fe92c1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3b0f74e-36e4-482a-bf41-c88bb94d807c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49ef2b3f-d925-403e-8bdd-4b2ba03c1a75",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e8b99-55fc-4442-8b02-409dbe550ad4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "520a4259-0f3a-4e14-9630-7ba360df9742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1524cd94-20a3-4449-ab69-9c426b591624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "591efb22-0f53-431a-9288-783e6948f8e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7704a110-079b-4810-a856-d76a4e803415",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3927fee2-5b52-49f2-8ea6-a985a60cd2a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "515c0d75-6e45-4372-9123-6518cbd9e544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fda257d6-bf35-4cb3-8754-8a99051a7c2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41915c1c-68ea-4054-9015-ba7b9ea6d572",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "81bf6fe0-f1ef-4de9-867d-334ed426455e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8acfa4c0-f6d2-4102-a7b3-369f98f28b45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98f5cb38-2e11-48ad-a703-3c0f75878485"
            }
          }
        ]
      },
      {
        "id": "81b7eac5-4f7f-46c4-8510-df5e5a7a665e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bf6d1bfb-bcf7-452a-a660-00829c1eb41e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5674930d-10d3-4c0b-a1df-2fb1b0c7c25b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a71da8d-3dfd-4968-af6a-13d9ae0334b7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab92ae35-0cd9-4654-9ae6-f1d124398321",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fc09b37-aab3-42eb-8c52-95a45a063788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ba54d8-d417-458f-a8dd-302b620d8c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c5deef-657c-4e4b-a225-0fd605651a87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8686c04-c367-4e49-9228-d494ef914ac7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f96f268e-bec2-43f3-9cf8-415921dbde2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2299334e-413e-4bf7-985a-111ae6fa69fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3e46295-45a5-4914-8f27-4a384a16adf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6bfc3788-a155-49b1-b41a-2a5e93a76a82",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ed523c7-e80d-4cb1-87db-00eb5a83c23a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "020a0849-e443-4b2a-9b86-962da1473029",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a50598f6-f14e-4627-8856-92c9a275625f"
            }
          }
        ]
      },
      {
        "id": "05ddccd3-8631-42fb-af28-7d27fdb70237",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "caf022b8-3d59-4080-9508-8d4c7165ffa2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b4cb96a-33aa-4a83-bcf2-fbd62211cb6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25d4faee-7d6a-43e7-bbe2-c9a21bcecc2c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbe2a96-e7b0-485b-9bcd-e07f5a024968",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be5dbc88-009c-4a84-9091-6be53de31481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a712ceb-8b56-4259-bc13-ac274bc06889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "306b47c2-48dd-47fe-9d9e-b106f5905eca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bfd02c8-f663-4acc-93d7-be56d97d06d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96395ab7-0f11-470e-a789-4d4303f11def"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c98a515-e672-4804-b764-b64747e200af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bfe6f05-3bc3-4694-a18e-dca299150df3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "140f319a-ae11-425c-874d-377bd64b375e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a55cb368-c6ab-486b-b9bd-84dd5ee0cebd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d9789e3-f525-43b5-8f8b-dc22822cf7f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33a96978-8d26-4088-9919-ec2c48eccec9"
            }
          }
        ]
      },
      {
        "id": "9e7579b8-42cd-4c10-aec6-f42ec28cb11b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7390924-d1cb-47b5-9a21-f84117674400",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f7f4d94-7e04-4532-bc22-ef04eca7d917",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "02ccc91a-9e5d-4631-84e0-c24a53901223",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ed53651-7460-4db9-a47a-c7b5ab1178fb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30c3803a-52c3-4fdb-b561-0c14daf02917",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.90526315789475,
      "responseMin": 12,
      "responseMax": 8387,
      "responseSd": 546.5163564496819,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702082101333,
      "completed": 1702082139144
    },
    "executions": [
      {
        "id": "e29b9b29-21c4-4081-bade-059222b019fb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9594b7df-b325-4502-9eac-a49c11c170b8",
          "httpRequestId": "2fad2728-b6f6-4eab-bd1a-326eddba0282"
        },
        "item": {
          "id": "e29b9b29-21c4-4081-bade-059222b019fb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7a4013ae-beaa-4173-b3a4-579b2ad77023",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "767a0dd1-9d17-44a5-b687-6f6e7dd6c208",
        "cursor": {
          "ref": "e10eee34-236c-449b-b8b4-745e27642587",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "336648af-e0fd-4caf-b9d3-8e984cd5b7d1"
        },
        "item": {
          "id": "767a0dd1-9d17-44a5-b687-6f6e7dd6c208",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c2dacafe-5a3f-4b5a-baa5-1d784c7ca6c2",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "11c995dc-117e-4418-85b1-15f0b3a7c7b9",
        "cursor": {
          "ref": "41d7a804-5c31-4a69-84dc-23eda5c9a3e9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "abf0a0df-b61f-45c0-aa1d-65a9bd675524"
        },
        "item": {
          "id": "11c995dc-117e-4418-85b1-15f0b3a7c7b9",
          "name": "did_json"
        },
        "response": {
          "id": "3b7895c3-7443-4365-b5c0-02597befda76",
          "status": "OK",
          "code": 200,
          "responseTime": 336,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb89b236-c83b-40f0-b582-89e5ea6c8fd8",
        "cursor": {
          "ref": "29076e1a-b06c-4694-8706-a106084117c4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e89b6155-6a49-4331-b697-58d0a64788c4"
        },
        "item": {
          "id": "cb89b236-c83b-40f0-b582-89e5ea6c8fd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c66c3a2-c442-4f34-9492-d1cfbf9022f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 581,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb89b236-c83b-40f0-b582-89e5ea6c8fd8",
        "cursor": {
          "ref": "29076e1a-b06c-4694-8706-a106084117c4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e89b6155-6a49-4331-b697-58d0a64788c4"
        },
        "item": {
          "id": "cb89b236-c83b-40f0-b582-89e5ea6c8fd8",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c66c3a2-c442-4f34-9492-d1cfbf9022f0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 581,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc90325e-9e5d-4f22-a886-b0d12c47aaed",
        "cursor": {
          "ref": "d33299ee-9a69-4090-86ff-bc6a13d84fa0",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6dd26533-fd50-4162-a6e9-38b833f8bfd0"
        },
        "item": {
          "id": "dc90325e-9e5d-4f22-a886-b0d12c47aaed",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5fef7762-cd57-4750-bec5-9cc3a613d56c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378fbe1c-0ba0-40f5-a48a-fbd8928eeae1",
        "cursor": {
          "ref": "0c792b6d-8409-44e0-8f69-844c21b6a669",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a0d58b31-da84-482b-8652-6d9ff56635d7"
        },
        "item": {
          "id": "378fbe1c-0ba0-40f5-a48a-fbd8928eeae1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "02b90e1c-9b87-40bc-a948-2a1f108e218a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5bcd74f-4415-4e72-9db6-c1d6c49fef9b",
        "cursor": {
          "ref": "771f0ae5-54b9-4122-bd85-e6643f602930",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2b7aa7c9-a4e8-46be-be21-f2965e10f2a1"
        },
        "item": {
          "id": "f5bcd74f-4415-4e72-9db6-c1d6c49fef9b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3155d659-4f68-4175-bfcc-deddc54f0bd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9eefbf-0667-4338-b81c-0863bf8d20b8",
        "cursor": {
          "ref": "e539b607-c636-4a01-b244-dee9f8508049",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6693846f-373b-480c-962d-69de4048cdb7"
        },
        "item": {
          "id": "9f9eefbf-0667-4338-b81c-0863bf8d20b8",
          "name": "identifiers"
        },
        "response": {
          "id": "8ac536b5-06d3-4359-b516-31b45eb0056e",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbc6d57-e10c-4b2a-a9c8-adcbeb65688e",
        "cursor": {
          "ref": "7d7121c6-06a5-487e-873c-80091e878462",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3909119d-2837-4405-9210-7574876571ee"
        },
        "item": {
          "id": "4cbc6d57-e10c-4b2a-a9c8-adcbeb65688e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d3b3aec8-f437-4a04-bb5d-a19a134e217e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dfdbde-1b74-47e3-970d-b3f03ba800dd",
        "cursor": {
          "ref": "c17d8ac0-6342-4e57-b9e7-c34a78f54317",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba0c13f7-a409-4242-b7f2-3e2e0e2dbc9f"
        },
        "item": {
          "id": "a6dfdbde-1b74-47e3-970d-b3f03ba800dd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bcb8ac40-485b-4bec-9acf-bbe07e51a55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3a39c7-8289-456b-b440-f1347c116d7f",
        "cursor": {
          "ref": "013388e2-fc14-4c2e-9b48-aa435cc022ba",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "13269d82-c591-4387-b84c-eb44d38f46d2"
        },
        "item": {
          "id": "aa3a39c7-8289-456b-b440-f1347c116d7f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d7967453-db79-49a6-af33-84d6d32b09b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b372fd0b-007f-41bc-bfd8-eb29482877e7",
        "cursor": {
          "ref": "5305de75-6fe5-463e-bc74-e890a4d29a57",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0b89ea19-5729-4f6e-851c-bcc278cc720b"
        },
        "item": {
          "id": "b372fd0b-007f-41bc-bfd8-eb29482877e7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ab49c7c1-de59-400d-b665-01e74fa8ed11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daacb84f-be17-4d7d-aa55-e0077041591d",
        "cursor": {
          "ref": "7cbb2686-1aa9-4b5b-893f-600a70178ff1",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6ce1f614-1087-404b-a148-8cc486c8cda9"
        },
        "item": {
          "id": "daacb84f-be17-4d7d-aa55-e0077041591d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0543b39c-4fef-4b1d-83b9-4403c9e7f3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d632824f-ce1d-425a-870b-faf008d12fa9",
        "cursor": {
          "ref": "19920f94-ffa0-46ac-802b-75409eb63826",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2c122fd9-b130-4360-91d2-9c355d95b5d0"
        },
        "item": {
          "id": "d632824f-ce1d-425a-870b-faf008d12fa9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2e9cb5e4-1a8b-48af-b718-3ad788fe8a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6e8ddf-3cf7-4a73-8142-bc3cd7a786dd",
        "cursor": {
          "ref": "f1d4e290-4379-4962-a73e-cc7e2b811be8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0aea574f-6571-422e-b992-a68556c48abd"
        },
        "item": {
          "id": "0d6e8ddf-3cf7-4a73-8142-bc3cd7a786dd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "81c244f9-47bc-43eb-8ca9-481ec27cd3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daac0f54-ec05-4cfd-a133-71c971372a67",
        "cursor": {
          "ref": "f1b67831-cd5b-496a-957b-7b3d8d326237",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "043d1a54-9b67-4892-b005-d871125fa0d7"
        },
        "item": {
          "id": "daac0f54-ec05-4cfd-a133-71c971372a67",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c85e7a02-933b-43ca-aa7e-eecab5de9b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f803c6e2-e645-4df2-b2e4-083947be9a14",
        "cursor": {
          "ref": "8c2653ef-4253-49e8-802a-88496deb4c0d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d4abaa1e-1877-4b9b-b1ed-178bc1bccd86"
        },
        "item": {
          "id": "f803c6e2-e645-4df2-b2e4-083947be9a14",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e24f39f3-f9f3-4b48-8bad-cdb371afb148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5704ebaa-9bad-4dca-9aac-14c73b854355",
        "cursor": {
          "ref": "3638dc03-2a77-4c8e-8943-6ef7bc246b2b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "238d5f38-c8ec-4eeb-9d8d-75fde68da5cb"
        },
        "item": {
          "id": "5704ebaa-9bad-4dca-9aac-14c73b854355",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f2722d22-5200-44f4-933a-66647dce09be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61918e7-67c8-4056-b6c5-24a76e20be6e",
        "cursor": {
          "ref": "9d35789c-26b4-4fbe-808d-f7f7c7946de2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "cd50b585-c393-4254-80a7-ed5889bcc1f3"
        },
        "item": {
          "id": "e61918e7-67c8-4056-b6c5-24a76e20be6e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7007dc20-f6b7-467c-bc7f-ba5d21dccc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1e1d9f-e3fe-4655-a665-a790ef91a27e",
        "cursor": {
          "ref": "3145c17d-00ea-4a33-8702-f6eba2ab891d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6b9da220-a0b0-496d-b678-1240f74d1eb5"
        },
        "item": {
          "id": "1a1e1d9f-e3fe-4655-a665-a790ef91a27e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "943c2d9b-a5ce-418e-91d6-264fc33b13ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea7c1c4-61e4-405f-a98d-a2f04b449291",
        "cursor": {
          "ref": "0cd031ec-45dd-44ff-a12d-ae07e487a4ee",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f7b9676d-59e0-4430-bae6-d6eea537f7bd"
        },
        "item": {
          "id": "5ea7c1c4-61e4-405f-a98d-a2f04b449291",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ebe284d1-7b72-443f-80c4-46ed5fe87663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcc0eb5-89d5-4591-98bf-4106193b7088",
        "cursor": {
          "ref": "3d3beed3-b975-45df-b091-6f1814466756",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2ca834c8-cfd9-43ea-a1e0-fb2cdfcd3e24"
        },
        "item": {
          "id": "efcc0eb5-89d5-4591-98bf-4106193b7088",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "234648d3-3f0f-4723-9217-577fd56b89c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9a37c7-d450-4c5d-8289-8b81f2d50b8e",
        "cursor": {
          "ref": "70affa8a-7fd3-4d04-8f7e-1f3344232184",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9b4e893a-e32b-435a-b4c2-6a4025e72b77"
        },
        "item": {
          "id": "3d9a37c7-d450-4c5d-8289-8b81f2d50b8e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6ddbb825-9ad1-4079-8b49-9b572231706f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5793e7d6-3570-4292-8e3a-09d39fbceda2",
        "cursor": {
          "ref": "10962f27-f8e5-4e96-81d8-6f8958c493b5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e342b22f-e6b0-429e-9b2b-3417c5a3b19b"
        },
        "item": {
          "id": "5793e7d6-3570-4292-8e3a-09d39fbceda2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9a332767-2d9e-4bcb-bf67-bb058360be75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea946d00-bbe8-4e81-acfb-330d6aeb61f8",
        "cursor": {
          "ref": "997dc330-114c-4e96-abe9-f3d70eeb1038",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dbc4a13f-dd19-46f7-8310-061c969be04b"
        },
        "item": {
          "id": "ea946d00-bbe8-4e81-acfb-330d6aeb61f8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e98d8c40-45a4-4d13-8012-750476f0977b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5246b6-c305-4562-a314-c4ce1e42c3af",
        "cursor": {
          "ref": "8fea0e20-11df-45d3-b27c-dcba6b3bdf2e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "235f4763-2ac7-4f74-8ae4-275d1356925e"
        },
        "item": {
          "id": "6d5246b6-c305-4562-a314-c4ce1e42c3af",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9d6d6f26-f1f3-47fc-9916-f4d272abb083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301f693f-b817-499b-8aef-c55f5a04348f",
        "cursor": {
          "ref": "ca346333-3085-4908-b6a1-e21f762c8367",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "78e1fc08-62f4-4910-86e2-e6f033ee591e"
        },
        "item": {
          "id": "301f693f-b817-499b-8aef-c55f5a04348f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "90dc1204-8ee4-4793-9105-eae0870d53bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f221b3-9026-48c3-8d15-b49ff3d5c562",
        "cursor": {
          "ref": "c49d261b-0ef2-491e-8a80-55ac6e361ea3",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "95af6f5b-7082-4bc6-b10c-98cdff00def2"
        },
        "item": {
          "id": "43f221b3-9026-48c3-8d15-b49ff3d5c562",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8605a50b-b684-4cb9-b6b6-2b465ae437d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db1d1e8-7a18-47e3-862c-0a309096d96d",
        "cursor": {
          "ref": "3125acf3-db4a-4423-8e71-4e835ab26108",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8727cfbf-f119-4e76-a8b7-5670aa443b0b"
        },
        "item": {
          "id": "0db1d1e8-7a18-47e3-862c-0a309096d96d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1b4995f8-537a-49c2-8675-fd1f3ef6ed33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d13be9-3f90-4b3d-92c5-57b727822361",
        "cursor": {
          "ref": "0f160243-baaa-4f93-ac7b-25f9a92052af",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fb73052a-dbaf-43df-8460-709ba7501dbb"
        },
        "item": {
          "id": "27d13be9-3f90-4b3d-92c5-57b727822361",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1b79e6bb-d2d0-43e8-9991-08a1770333a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d4d0dc-4a47-4a25-b843-77fa1fa0b3d0",
        "cursor": {
          "ref": "9935782e-77e3-4894-9d46-b8f265d2b51d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "48b6ae43-3d49-4c51-82fb-9bb35babe627"
        },
        "item": {
          "id": "67d4d0dc-4a47-4a25-b843-77fa1fa0b3d0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "554ea68b-bad8-42e2-b9c9-d00110cd196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252e6799-7965-4bd1-a661-37c0214bff48",
        "cursor": {
          "ref": "34816723-b295-432b-994e-ece6a26bb46d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e89d148-e5bc-4c5e-99bc-d9ffe240a61d"
        },
        "item": {
          "id": "252e6799-7965-4bd1-a661-37c0214bff48",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e818da4a-d89f-438a-bf33-06790809c664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324f2020-1753-4d0e-8cab-7e1eb8b1995e",
        "cursor": {
          "ref": "d8635e4a-ebfb-4008-8f24-330f9ff65772",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a86ae366-4639-4443-a3d7-cd0996c8969a"
        },
        "item": {
          "id": "324f2020-1753-4d0e-8cab-7e1eb8b1995e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "67e37003-91bd-4ea0-ab35-53f8ae656747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7b3ebd-83c1-4bb5-bde7-53e43fbf9e06",
        "cursor": {
          "ref": "274b845a-7fe8-4055-bc34-a9f90e0b478c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f9b38481-d983-4bc0-9730-2d9455e1ea44"
        },
        "item": {
          "id": "6f7b3ebd-83c1-4bb5-bde7-53e43fbf9e06",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "864fab75-cc9c-45c8-ba02-983416ce4659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0351ea8f-8dce-459e-9073-6a8360a93107",
        "cursor": {
          "ref": "c6626954-d01c-47af-8b40-2af2b3610921",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b9192e6b-b229-4467-bb80-346f1a9ade35"
        },
        "item": {
          "id": "0351ea8f-8dce-459e-9073-6a8360a93107",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b3da5294-4e51-40fd-8136-6b79b1f57a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ecf6d6-2b2d-4cff-ab18-76aeda876ab9",
        "cursor": {
          "ref": "fceff77b-dd07-4070-a17b-61513f36fa73",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5b8d3db3-0a8c-4ab5-a82c-2610f6476693"
        },
        "item": {
          "id": "99ecf6d6-2b2d-4cff-ab18-76aeda876ab9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7f6a62c9-88cd-42bd-9064-8897299b9225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2e71c4-f7af-458a-9186-28f938904a1a",
        "cursor": {
          "ref": "46a8686b-4a2d-4776-b4b0-19bf554129fa",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "80fa5579-35a0-447b-b1ef-7cd50374f7fc"
        },
        "item": {
          "id": "df2e71c4-f7af-458a-9186-28f938904a1a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "98cd1d1d-9dca-4f18-8dbd-fcec4ac24a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1709dc23-1c6c-45d0-9f28-455d9fabd40b",
        "cursor": {
          "ref": "79110adc-11a9-4843-b5ca-c92279a47e27",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f3521ae5-de5d-4733-925a-8cddc1678e3e"
        },
        "item": {
          "id": "1709dc23-1c6c-45d0-9f28-455d9fabd40b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "51b942cc-0b18-45e3-bd47-45e7258ae5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79fc056-f3ed-4135-9d53-146166e0e9af",
        "cursor": {
          "ref": "2b1abb10-bda1-45f5-bbee-d5d0e6d716d3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f334d124-d643-4849-a720-bdc9cf07775d"
        },
        "item": {
          "id": "f79fc056-f3ed-4135-9d53-146166e0e9af",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1dc4c833-c437-4d7a-925f-43c43ba0108e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c639798b-db51-4364-9b89-772ff69d3d16",
        "cursor": {
          "ref": "3687a9fe-868c-4868-b11b-b6cfa33e0649",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b5ce88e0-661b-4a6c-8f6b-d2c2e919eca1"
        },
        "item": {
          "id": "c639798b-db51-4364-9b89-772ff69d3d16",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "11bbd25b-9855-4946-a280-ef8f3168f977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0b8491-4890-49d3-b477-d9ac28744ebe",
        "cursor": {
          "ref": "8fb32372-b5d9-4ecb-8171-4b7d528c7617",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d1fe4e63-e1bd-4961-88c8-ffd22e149203"
        },
        "item": {
          "id": "3d0b8491-4890-49d3-b477-d9ac28744ebe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fb00825e-ddbb-4434-9b5e-c8aa4e452540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f18581-2a94-4f21-b8cd-cc4ba019ffc7",
        "cursor": {
          "ref": "d791f627-fea6-43f8-afe7-6a3393d599c6",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8791bea5-1aaa-4fe6-86dd-fec2b7d83c1f"
        },
        "item": {
          "id": "f8f18581-2a94-4f21-b8cd-cc4ba019ffc7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47a6efc4-fcaa-4ff0-8bc5-d7522394a0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889422e7-29c9-4281-97dd-c23578cfd3df",
        "cursor": {
          "ref": "1964618a-133e-42bc-9378-38ff77efce11",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3b729f86-5db7-4e39-9241-c38ba5d144e9"
        },
        "item": {
          "id": "889422e7-29c9-4281-97dd-c23578cfd3df",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "348f7cdc-e013-4a97-871c-5ed519dcb27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6427704b-4d4f-4db7-9f09-377e8f69948e",
        "cursor": {
          "ref": "7ed62cfd-54e1-42f0-ac69-2a05817b9dfa",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9e08403e-a4d7-406a-b066-36671bc8e58d"
        },
        "item": {
          "id": "6427704b-4d4f-4db7-9f09-377e8f69948e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "db42642b-83f3-4704-806d-50c9ca24a966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18cbe59-2e8d-4ed6-add8-a8ccfa1b1716",
        "cursor": {
          "ref": "7d64323b-6770-4d0c-84bd-3536b5a5d722",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0b8a8d3d-5f6b-49c0-b2de-4829432ccd36"
        },
        "item": {
          "id": "b18cbe59-2e8d-4ed6-add8-a8ccfa1b1716",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e122b440-c7fa-44f6-a1f6-468cff547b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3173f8c2-8664-449c-9b84-645faffbe705",
        "cursor": {
          "ref": "4d68fbe4-0f34-40e0-a435-ec614487ab57",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b1ce5f68-68fd-4cb0-91cb-be7ba3b4d45f"
        },
        "item": {
          "id": "3173f8c2-8664-449c-9b84-645faffbe705",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "24d71e8b-597d-4a7e-a27a-42e5b1190189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1008,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654d291b-65d7-4f3a-80ad-194b6bc32985",
        "cursor": {
          "ref": "328407dc-0842-48a2-af7d-d7c345ece3e5",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f3c020d-50d8-4f9c-9f03-461e354e4325"
        },
        "item": {
          "id": "654d291b-65d7-4f3a-80ad-194b6bc32985",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bf635600-92da-490c-843f-e2d0702e0ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6d391b-030c-4bbe-b52b-605319c52c33",
        "cursor": {
          "ref": "2cc4a5a9-aa9e-4a6b-92f0-3c986660a431",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a6db24d9-6c37-475c-a606-5dce579ac734"
        },
        "item": {
          "id": "9a6d391b-030c-4bbe-b52b-605319c52c33",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6228bb26-935b-4eee-bd2a-4937edcacdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfeb132-b0e2-4975-9dc1-3b4b3ad41014",
        "cursor": {
          "ref": "a7b4c681-ae41-433a-9f06-d2f53f5eb916",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "987fbbdc-f039-4253-ad9e-85e1633c8dbf"
        },
        "item": {
          "id": "2bfeb132-b0e2-4975-9dc1-3b4b3ad41014",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5dde2034-d3d9-4304-a224-3c512939af0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8548d875-7427-4942-9148-a0a81a3726d7",
        "cursor": {
          "ref": "ec0dd50e-5fbf-402e-a60a-ff9d7166af62",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eaf50afa-d3ae-4d18-82a4-6f18bbdab850"
        },
        "item": {
          "id": "8548d875-7427-4942-9148-a0a81a3726d7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ccb7e0c8-056c-495b-a4e5-aaf136d4236b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8171d504-2210-46f7-9f5c-acc1e44c59c8",
        "cursor": {
          "ref": "c4f3c441-6155-4ccb-b70d-c840061ed405",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7fd6c1b9-f72d-43d9-ad8b-1879cad356c9"
        },
        "item": {
          "id": "8171d504-2210-46f7-9f5c-acc1e44c59c8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2b6bd3f3-d938-4899-ab0e-6fb0dbe0e3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba949799-7554-4dbb-b469-7e2a6c77e3ce",
        "cursor": {
          "ref": "243f64be-697f-4330-b1e0-47d9de1f15b8",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e83e1fd5-82bb-4290-a305-bde6c151686d"
        },
        "item": {
          "id": "ba949799-7554-4dbb-b469-7e2a6c77e3ce",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8f812e4b-09de-4b27-a5c9-96607563a496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1ae1ba-30c0-4be4-8336-d663b3918573",
        "cursor": {
          "ref": "5d9f4554-397c-4ab5-be28-41fab29a50e8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "66716c43-a392-462f-8f13-dcdd8fe5d3db"
        },
        "item": {
          "id": "bf1ae1ba-30c0-4be4-8336-d663b3918573",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b33c6206-a400-4660-8ddd-ca50c6068cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58774dee-03e7-41af-a61e-3a7b06705de3",
        "cursor": {
          "ref": "0b603096-bb1d-4b9b-b5cb-4d4783b8905b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1291ce43-60b0-4f95-86ec-328dbf413d4b"
        },
        "item": {
          "id": "58774dee-03e7-41af-a61e-3a7b06705de3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "06b3d5c1-dd4f-4d22-a008-838d90b961a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbceb7d1-9bb5-4bb1-9558-98bc23059caf",
        "cursor": {
          "ref": "a9bfe14d-4566-4829-8918-bf2711602c8d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "61795ebf-8612-4ce4-be3a-c7eeec7f98c4"
        },
        "item": {
          "id": "cbceb7d1-9bb5-4bb1-9558-98bc23059caf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dcda49ec-2284-459f-95f6-a69884d8e8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606d97e4-dce8-49fc-96b9-daf918a48384",
        "cursor": {
          "ref": "f631f8a5-2145-4bce-bbb4-888c11ba0cc5",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9e3b542b-a73f-4d20-9aae-77e12145635a"
        },
        "item": {
          "id": "606d97e4-dce8-49fc-96b9-daf918a48384",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "df4cb62a-21c0-4f01-bd5e-471daef00939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3d6840-ed6f-4317-b530-647f0c869d66",
        "cursor": {
          "ref": "19ffc346-f72f-40af-84a5-5ffdec0ee4fb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e659fc88-e47a-4776-948e-f0f4f2b8aa7c"
        },
        "item": {
          "id": "3e3d6840-ed6f-4317-b530-647f0c869d66",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7ae72514-425a-40b5-b576-e65a5373748e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e73f79-e30c-4b18-b4d2-5c86d072c973",
        "cursor": {
          "ref": "eb03e47d-99d4-4d6d-86c6-9340ed10de6d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "25823016-fb38-43ab-88ea-5ab4f0e41a5f"
        },
        "item": {
          "id": "98e73f79-e30c-4b18-b4d2-5c86d072c973",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "211b3378-4718-4c33-a9c4-2f40efa06ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4938edce-e856-4bb4-bc0a-2b73f54c0460",
        "cursor": {
          "ref": "7083a974-b87e-4c02-9bfb-b96c7178e8fe",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "406097d4-a3e8-4aa0-9640-6997042209fe"
        },
        "item": {
          "id": "4938edce-e856-4bb4-bc0a-2b73f54c0460",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ef0ff8fd-33be-4432-bf5e-68387dd4c4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c792b56b-6e39-41a4-b620-f6ecd362fc70",
        "cursor": {
          "ref": "801bc327-40db-4c9a-ad3f-9d6a8b61de94",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8e6fae10-73e6-4bf3-aa24-a728dfe9a5ff"
        },
        "item": {
          "id": "c792b56b-6e39-41a4-b620-f6ecd362fc70",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fffa06f8-5784-4df3-9b27-d2d5f503bcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0e36ec-24ac-4c4e-9ee5-9ab83c04f9d8",
        "cursor": {
          "ref": "0fd2900a-3dd5-4387-88c0-93023ac37004",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aeab8287-757e-4945-9410-50334e77cd37"
        },
        "item": {
          "id": "db0e36ec-24ac-4c4e-9ee5-9ab83c04f9d8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d87a7d3c-404c-41f2-8b15-7a49d0a0f8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a5b537-9fdd-4789-a9df-23ffb4b22e58",
        "cursor": {
          "ref": "19647bc6-26ab-47ca-b579-d94f620ed911",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "73181e5f-ee16-490e-9452-18b8ad3c81de"
        },
        "item": {
          "id": "06a5b537-9fdd-4789-a9df-23ffb4b22e58",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "16fa10c5-0d25-426a-a86c-0b7177569a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c47648-d996-4e02-8f25-8fba12e16c6b",
        "cursor": {
          "ref": "db983c3e-b598-4cd5-ab8a-02f5d357feba",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9c72c5ba-ba31-4159-bc0f-5a2a5ac4033f"
        },
        "item": {
          "id": "92c47648-d996-4e02-8f25-8fba12e16c6b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "02295c64-52e2-4961-a0cc-c71ed759e71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559c03d9-59ce-4efe-858f-c0513d4e9314",
        "cursor": {
          "ref": "6ac8dd76-1f3f-4a87-93c6-7093bc876c75",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2c9f369f-7457-4343-86f4-854fac55a590"
        },
        "item": {
          "id": "559c03d9-59ce-4efe-858f-c0513d4e9314",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "eba8c28e-7946-4b06-a80d-2ec722e8842a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fd3eb0-b3d1-4451-8229-01fe5183f5af",
        "cursor": {
          "ref": "2025003a-31a3-44fc-ab2e-e7d8015acafc",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a880aa4e-f2a3-4933-9f97-4c73f93b3a5e"
        },
        "item": {
          "id": "04fd3eb0-b3d1-4451-8229-01fe5183f5af",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "454a04a4-fc85-41be-9e69-c93985da3c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914accca-9921-4a70-8669-e2943472c1a6",
        "cursor": {
          "ref": "f95763e7-4aea-4fba-9773-c9a6feb40489",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b2f9d05f-3f0a-4218-81a3-9563c6a2b139"
        },
        "item": {
          "id": "914accca-9921-4a70-8669-e2943472c1a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1fbd30df-3471-4e81-8801-49bdd9002408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5486283-47f6-42a6-97f0-0a152295c2d4",
        "cursor": {
          "ref": "50a6269b-c5b4-455c-8284-a544ede887c9",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e11481da-edf1-41d1-a9d8-d85eab00261c"
        },
        "item": {
          "id": "a5486283-47f6-42a6-97f0-0a152295c2d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1ff0b08e-1f13-447d-a5ae-5fe46b21ac39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a07f08-272b-4427-a687-9f0aaed88de5",
        "cursor": {
          "ref": "f30b73ed-cfc2-45f7-a50c-4ba0702016ba",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "30f87935-530e-4e0b-9bd7-dd227e725158"
        },
        "item": {
          "id": "89a07f08-272b-4427-a687-9f0aaed88de5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5297adae-1418-42c2-9a86-a13ba76c156d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278ae46d-50a6-491f-a632-8931cdb00eca",
        "cursor": {
          "ref": "1565f617-4378-4b4d-bd15-c1bd2b4afa75",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "071c0cf4-f8be-4189-a403-bb77cb4b4ef4"
        },
        "item": {
          "id": "278ae46d-50a6-491f-a632-8931cdb00eca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8459b15e-3d11-4dd7-8f60-9c3c20f40126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c0cdab-7db7-4dd2-a42f-27ecf3d67818",
        "cursor": {
          "ref": "c10845d8-c0dc-46f7-9c92-c72c7c32044a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "795f8413-6486-47c9-b37e-b1c43dc65a6d"
        },
        "item": {
          "id": "55c0cdab-7db7-4dd2-a42f-27ecf3d67818",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ffb9e1e9-e2f3-48c5-ab0c-fb5e26e4f0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fa5e95-d2f2-4583-8141-0b0c91751b61",
        "cursor": {
          "ref": "bad8557a-6c25-469e-92f4-ab06d0a881e8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d3bf7c59-455e-4f24-a587-78259b7a304a"
        },
        "item": {
          "id": "c0fa5e95-d2f2-4583-8141-0b0c91751b61",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4441b686-23cc-4fe6-9bb4-63a0e24f0f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a2df92-c9ff-4716-aa7b-c2fdedafcc40",
        "cursor": {
          "ref": "85e8598b-71f3-40ba-a2cf-082c339b1362",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "baad005a-9295-46cd-a08d-fefbb28a9016"
        },
        "item": {
          "id": "a7a2df92-c9ff-4716-aa7b-c2fdedafcc40",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fecfe1b6-b209-477d-bced-ae2b9d4ed2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48e36df-5009-4a4d-bd56-cce484036dfb",
        "cursor": {
          "ref": "8808ca61-4847-425f-93ab-22e388c4ee59",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d3fa7356-4baa-42d0-9fc2-45c3dc745b1a"
        },
        "item": {
          "id": "d48e36df-5009-4a4d-bd56-cce484036dfb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "caca993b-b418-48eb-ac9a-9f4e3bd227c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f0006a-1ad7-41f3-99f4-79b9895439e0",
        "cursor": {
          "ref": "8a117faf-447d-469a-ad45-722c844ab06e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6330c7cb-6816-438f-8780-bbe8a0b73337"
        },
        "item": {
          "id": "d0f0006a-1ad7-41f3-99f4-79b9895439e0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cf84582f-6d6c-4c3d-ada0-2518eff24387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b76b7a-9296-4175-adf4-475a47282e22",
        "cursor": {
          "ref": "46a5cdc0-1e76-4048-93bc-b8d1994b93ab",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b58f8910-5f80-4e6c-8cbf-ff7f1b99923c"
        },
        "item": {
          "id": "04b76b7a-9296-4175-adf4-475a47282e22",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8fab428b-dc5c-41f6-a2e9-0515e2772f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b435ed-aed0-41f9-86c3-d881e5d409ce",
        "cursor": {
          "ref": "fe1eb66c-b770-43a7-b6a6-f2a8a8fcef08",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "59a2645b-e235-4c44-a654-65cd74f6bf58"
        },
        "item": {
          "id": "14b435ed-aed0-41f9-86c3-d881e5d409ce",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9b409ea7-d6e0-4f43-926b-10b36cb3aa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170f38ad-91b3-4e74-9d3f-765def454794",
        "cursor": {
          "ref": "a3e192f5-a895-44a0-97e2-3eae11c8c45b",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7473aea9-bc3e-461e-902e-c59b7ff58d36"
        },
        "item": {
          "id": "170f38ad-91b3-4e74-9d3f-765def454794",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c8b1e1de-0b4e-4bba-a0ab-a8d45d455f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3fc8c8-396d-4ccc-96a0-44a0aceeb024",
        "cursor": {
          "ref": "e7aca0cc-7017-446e-bd1b-fb56a10e222b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a2beb604-a9c2-4b4b-8c74-3975abed0d09"
        },
        "item": {
          "id": "1e3fc8c8-396d-4ccc-96a0-44a0aceeb024",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7a011b0f-bb5a-4b4e-b3ca-a1a8908f0d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6524b7f-6fd9-4f61-b3d5-69a69a77422a",
        "cursor": {
          "ref": "198a26bc-c5a0-497f-9004-1e4ddebe7bf9",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ce41674e-62de-4ccf-b5f1-2524b25c2e4c"
        },
        "item": {
          "id": "b6524b7f-6fd9-4f61-b3d5-69a69a77422a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dbee879e-754a-431c-8e81-df40465ba3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6643a5ff-9cd5-4354-a7ca-f34dbb882feb",
        "cursor": {
          "ref": "e928c430-ea0a-4e49-ad85-c5055f992155",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c59ea0c0-199a-4ceb-a4de-b4430603d5e0"
        },
        "item": {
          "id": "6643a5ff-9cd5-4354-a7ca-f34dbb882feb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c86fcf27-8609-4531-b743-0c5167d9d724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efce0f87-6aec-417e-84e8-f861c77ae82f",
        "cursor": {
          "ref": "2b9b866e-6617-4168-a7f4-ef94d92fc7ab",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e4760a9d-e436-4f03-a53a-a24ac66e82ca"
        },
        "item": {
          "id": "efce0f87-6aec-417e-84e8-f861c77ae82f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "419f3baa-faa9-4fbf-9c62-f366ad488bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d337dc6-03cf-4a24-a11b-caf6bf44a306",
        "cursor": {
          "ref": "b5b64fd1-48f9-4894-b474-ffaf03802cfd",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "58f1e243-0f26-4c86-b347-e98abd44063c"
        },
        "item": {
          "id": "8d337dc6-03cf-4a24-a11b-caf6bf44a306",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ff5dddbc-c045-47f7-a1a9-06f9fca75202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcb3b7d-5f0b-478e-bdfc-caba7d3ab242",
        "cursor": {
          "ref": "4f35a1e9-43fb-4c12-a6ea-c07ae33a75d7",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ef858f41-7158-4f1c-8faa-d87424e9de16"
        },
        "item": {
          "id": "2dcb3b7d-5f0b-478e-bdfc-caba7d3ab242",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "52832863-69d3-45be-ae13-0debd1e1e2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9a2ef7-25ea-498b-badf-ccc3e7acd24b",
        "cursor": {
          "ref": "3610eb8c-235f-4f9c-ba5c-17a6247e0fab",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2df19b4e-59eb-40cd-b6a7-812ea1ed112c"
        },
        "item": {
          "id": "dd9a2ef7-25ea-498b-badf-ccc3e7acd24b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "233737c5-6508-40f6-b3a5-42f464d6c5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6d1bb6-f0de-4570-a77e-15369c11b653",
        "cursor": {
          "ref": "6dd5aa6d-5e5b-413b-9f6f-d7f81bcb7d49",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e3ef1ae2-6c11-4470-b4ec-d5a6faee1bf8"
        },
        "item": {
          "id": "4c6d1bb6-f0de-4570-a77e-15369c11b653",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2bec07b6-5be5-4fa7-a2c9-5f53e4560ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de761380-8db7-4975-97d6-341935a9cc66",
        "cursor": {
          "ref": "2b4e1b95-089f-4926-a7b1-2be0d1d61ae8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fae291ef-7a27-426d-a2ff-403c87c70d50"
        },
        "item": {
          "id": "de761380-8db7-4975-97d6-341935a9cc66",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3f4d04de-e710-415f-a15f-713b6d200d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfd0f84-e114-449a-91fc-7230c1ff9194",
        "cursor": {
          "ref": "dae8fd74-b506-42ef-a4fc-ce6f7cd288fd",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bd5a47af-ed0a-4613-ba59-16daf16983bb"
        },
        "item": {
          "id": "6dfd0f84-e114-449a-91fc-7230c1ff9194",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "97473ef8-ab60-49d8-b4af-41aefc213b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7029ad-837f-48b1-98cc-c40278316841",
        "cursor": {
          "ref": "c77074b4-1299-4dda-b131-01e79c068294",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "95fb7a9d-4a3c-4b03-be5f-ff566939ca81"
        },
        "item": {
          "id": "dc7029ad-837f-48b1-98cc-c40278316841",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "16194511-601e-42d6-8a34-e90840e81640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547569f7-39e5-4bc1-b4d1-5ccf19e42cd2",
        "cursor": {
          "ref": "c8019d77-e5b5-46a2-b50c-5d128dcec2ee",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9905a23d-df1b-4bb2-8080-6998789ebc17"
        },
        "item": {
          "id": "547569f7-39e5-4bc1-b4d1-5ccf19e42cd2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "be725f9d-8b1d-406a-b9c0-67949666b2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb47212e-6df5-4c85-9085-4b7c591f6d64",
        "cursor": {
          "ref": "86e7fd49-8e09-4249-8026-9b222d90566f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "dd47a2bc-0824-409f-a67e-8f4b4705cb09"
        },
        "item": {
          "id": "eb47212e-6df5-4c85-9085-4b7c591f6d64",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "afe916b0-168c-468a-93cb-d1ce638e08b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917d37db-89b3-4f91-9fab-5dc57eae0bb2",
        "cursor": {
          "ref": "eacbec33-c484-45c3-bd14-9e86cc0bf58f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d9bf5c4b-bbc5-459f-a26b-df61d007cd15"
        },
        "item": {
          "id": "917d37db-89b3-4f91-9fab-5dc57eae0bb2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e0b9439d-4ab1-4912-93f0-06343b5111d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf371ed-ce6c-476b-8763-400494a8fd0e",
        "cursor": {
          "ref": "70e934d3-2bbf-47f4-a2d6-c0de2cbe75ce",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ef814238-9673-4629-9fd7-39e1ec646e9c"
        },
        "item": {
          "id": "8cf371ed-ce6c-476b-8763-400494a8fd0e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a56a27f2-0e16-45ed-9044-40611c646ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca6fcaf-2f5b-4163-8afa-6e3f41eaeea3",
        "cursor": {
          "ref": "b4e0e78f-3ba6-4cca-9a68-2bf6077addca",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bde8d9fe-ba55-4fe5-b231-bdd7f8c21e3b"
        },
        "item": {
          "id": "aca6fcaf-2f5b-4163-8afa-6e3f41eaeea3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4985b95a-206f-4d48-a3f3-8f7742245590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037d1924-e3eb-4bbe-a489-141766d127af",
        "cursor": {
          "ref": "e3bdc69e-e0ea-427a-a9ff-3d00e5a4fb96",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bbf811d0-cf17-490f-93f3-4fb9ba6ac9bc"
        },
        "item": {
          "id": "037d1924-e3eb-4bbe-a489-141766d127af",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f1590507-1952-4261-ad02-6123a5b4c0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f187947c-392d-4de1-aae3-02acb89ad363",
        "cursor": {
          "ref": "599a053a-ca0e-420f-a639-a10d2fc4302a",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "54df98fa-f9ca-4d75-9264-ee4b4227a71c"
        },
        "item": {
          "id": "f187947c-392d-4de1-aae3-02acb89ad363",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "375dff2f-3c8a-4477-9131-643a93c12423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b78453-9329-45a3-a439-5547a4c764da",
        "cursor": {
          "ref": "3484aa64-c13f-41cf-bcea-35b86597e9e2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "79747af2-b81b-45f1-ba31-c8e9b224f417"
        },
        "item": {
          "id": "71b78453-9329-45a3-a439-5547a4c764da",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4f8404b1-c531-4b0d-9ffb-9e38eb3c4e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583584f8-bf58-4077-b60e-2f7d41501440",
        "cursor": {
          "ref": "5f07a218-a317-419a-bae7-f4e50fd90e63",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9349ce2c-9cd2-413b-a37c-37bb4bd52d10"
        },
        "item": {
          "id": "583584f8-bf58-4077-b60e-2f7d41501440",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "146de57c-e581-4db3-ae61-58814b28021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe31851-d2c4-4297-9a5b-2b392b82439f",
        "cursor": {
          "ref": "a09842d8-dc94-4cd7-a4dd-befc415d427f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ef318fa4-7fe3-4127-b9d9-ce7695ba3525"
        },
        "item": {
          "id": "6fe31851-d2c4-4297-9a5b-2b392b82439f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0a59e719-e15b-4612-af86-a3304956fa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2b4cae-8017-474b-b38e-44f45d4487d0",
        "cursor": {
          "ref": "565a057f-8eef-4389-8ac2-fb6e6bf2baef",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4e89b64b-8bee-4cf3-9ff2-5fc294a83343"
        },
        "item": {
          "id": "3f2b4cae-8017-474b-b38e-44f45d4487d0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5f84bea6-ff42-44bb-8795-dcba6889fcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61f21fe-8c08-43f5-b979-9a04dea0c855",
        "cursor": {
          "ref": "578b1fc9-85b4-480d-8641-ce0d8ca43a83",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a0072792-6836-4a8d-b9d4-6be6f7374b95"
        },
        "item": {
          "id": "f61f21fe-8c08-43f5-b979-9a04dea0c855",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "45a1c8d3-84a6-439f-8ccd-d8db948244fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fd38a8-981e-4609-9181-b836415d9074",
        "cursor": {
          "ref": "51972348-726a-4bb2-ba1d-f76e701edfea",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7de41578-23ea-43ad-948b-857a63fea7e6"
        },
        "item": {
          "id": "57fd38a8-981e-4609-9181-b836415d9074",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "094c1c32-01df-4500-b180-f5923b2841dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80841f75-926c-4c87-8cbb-42b429216ec5",
        "cursor": {
          "ref": "95edbcfa-a8e1-4ed3-a716-3ec1239ef676",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cf443dac-5931-4994-8b93-e6d24f93125e"
        },
        "item": {
          "id": "80841f75-926c-4c87-8cbb-42b429216ec5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5cba0deb-ef89-4c37-891e-5efe1552c9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bb7e16c3-9f05-4986-8d3d-b4cc42878fe6",
        "cursor": {
          "ref": "dd483044-63c3-4a45-9642-c9f0eadd296a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a6ae4137-5936-490e-83ae-8f3030f2a4e0"
        },
        "item": {
          "id": "bb7e16c3-9f05-4986-8d3d-b4cc42878fe6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9f09ba6f-16e7-4613-be1f-794144ea4461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "848fa1a8-67ea-440e-982a-a798c8d8360c",
        "cursor": {
          "ref": "e9ed36c7-8852-457a-9a06-37ac8ff48e7f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "507bd1dd-b17a-4813-aed5-cde878d01406"
        },
        "item": {
          "id": "848fa1a8-67ea-440e-982a-a798c8d8360c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bbdfa47d-5deb-4b69-beac-14d9430db69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6e96df3c-247f-4e9a-9ffa-f9792d40d0da",
        "cursor": {
          "ref": "8d38890b-9dc7-4d63-8e4d-ae1b591490d6",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "09ee5b47-4776-47ca-a58e-7c2c504153e3"
        },
        "item": {
          "id": "6e96df3c-247f-4e9a-9ffa-f9792d40d0da",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d5dba05-092d-4dd3-b0d6-f7cfc4fdcc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8332c45f-0b17-4856-8a37-ba9a57957aff",
        "cursor": {
          "ref": "8698f662-b611-4e7e-924b-887414cf954e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b7cceb85-21cc-40a4-b5a9-d20bb7223e86"
        },
        "item": {
          "id": "8332c45f-0b17-4856-8a37-ba9a57957aff",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8374c528-2359-4181-afb2-57913e05e95a",
          "status": "Created",
          "code": 201,
          "responseTime": 8387,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a59c1c-f836-4450-a0e2-19e7bab19b03",
        "cursor": {
          "ref": "da649c10-6732-4d5c-823f-e6775bd69692",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8bfbd0bd-4630-4d8e-a3d7-16b97ec80959"
        },
        "item": {
          "id": "29a59c1c-f836-4450-a0e2-19e7bab19b03",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7f756549-275e-4b02-a70b-95d4340569af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "be5c5d2b-2865-4476-8138-c6970e1b9078",
        "cursor": {
          "ref": "3ecea163-bb7d-4847-a7c3-80cdb55b4770",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "82c56f2c-b09d-4c29-8170-90879a33b6f3"
        },
        "item": {
          "id": "be5c5d2b-2865-4476-8138-c6970e1b9078",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3f5b45f9-2c1e-48eb-8488-455e61c5c3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ae704b38-27ee-48e2-96c7-d726d1c7dc70",
        "cursor": {
          "ref": "2dde0bee-47f3-46bc-ab22-d2db3a81aac9",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "85968b1b-047a-4e83-b9f3-7c8e5dc5a622"
        },
        "item": {
          "id": "ae704b38-27ee-48e2-96c7-d726d1c7dc70",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "836cfae3-3fec-4d78-9f4d-d62ce69aed7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1219b3-256b-4d79-b11c-d102977379c7",
        "cursor": {
          "ref": "b4049c56-8e96-4656-bde8-dddadc463838",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8ef2ebd0-488c-4974-b551-e06669b15c06"
        },
        "item": {
          "id": "cf1219b3-256b-4d79-b11c-d102977379c7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6790be61-0499-4845-8133-79ff4081f1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04e545e-fd9a-47df-b065-3757ffd7d38d",
        "cursor": {
          "ref": "961bc496-5780-48e6-9bc1-bfb0f7b27fc3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "539ef210-c9fa-4036-87db-ec309b0dd122"
        },
        "item": {
          "id": "c04e545e-fd9a-47df-b065-3757ffd7d38d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a048cc3c-9799-48a1-a98b-79e01442ce0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c74524-922e-415c-ae93-f75822c7fcf2",
        "cursor": {
          "ref": "2f0ac8b0-e741-48a6-8812-05c9d738ad28",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5d2d443f-eac7-4011-9e6b-2f02060acf95"
        },
        "item": {
          "id": "22c74524-922e-415c-ae93-f75822c7fcf2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d1512ac3-e278-4fd0-8e2c-b319c9a7a269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf42631-c472-43a6-8b9e-d25b004174cc",
        "cursor": {
          "ref": "ddfa451d-1e39-4cf2-a1d4-4bad2126d70a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e17d5241-de2c-4c5b-853a-8038cf892cf3"
        },
        "item": {
          "id": "9cf42631-c472-43a6-8b9e-d25b004174cc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b3875d07-73d2-4396-a065-75a97f62a38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4123eb6-8604-4d4d-8285-b81e48b245c7",
        "cursor": {
          "ref": "29a9075e-e028-4f0e-9542-fee67416b32b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ea6140ed-0a45-4218-a0fb-06549018f6ec"
        },
        "item": {
          "id": "e4123eb6-8604-4d4d-8285-b81e48b245c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7074cfa6-8d5f-4a3c-bc3d-75cd32543e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99356d68-e9d6-49e8-b58f-871f851a5406",
        "cursor": {
          "ref": "bb701043-1c09-4900-9d64-5a30c2cffe02",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ca88b750-4378-4283-bfaa-080aee6777e6"
        },
        "item": {
          "id": "99356d68-e9d6-49e8-b58f-871f851a5406",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d20e71bf-8ddb-4761-b184-29fef878a650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5f464b-277c-4284-b11e-d2d485dbfbb4",
        "cursor": {
          "ref": "fe94d80e-3102-4a3e-a01c-122d95bb3090",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "df8f6c2f-db13-4c60-9129-6b6ba42f0e90"
        },
        "item": {
          "id": "3f5f464b-277c-4284-b11e-d2d485dbfbb4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e4b65b20-954c-4664-ab47-f160ff0db159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dc5631-e173-4aa9-a946-d2b396bb8fdc",
        "cursor": {
          "ref": "49e3cade-4d13-4097-ade8-7f4c1ee76838",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "675f3cd5-cc37-47fe-9fc7-56e2dfb02f8d"
        },
        "item": {
          "id": "43dc5631-e173-4aa9-a946-d2b396bb8fdc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "50437975-ee7d-40bc-b97c-9ca11d8acd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd65aa0c-c0fb-40c1-9fa6-ef123f48ca0d",
        "cursor": {
          "ref": "1dea836c-1e6f-4151-984d-19c1834d0787",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a152e42b-6ab6-43ce-98f5-d47cb00e78d3"
        },
        "item": {
          "id": "fd65aa0c-c0fb-40c1-9fa6-ef123f48ca0d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "24a0df12-ba9d-4c02-b613-62a2c9ff646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b704ab4e-b9d1-46a1-a939-eb155d8cff3c",
        "cursor": {
          "ref": "858f8a0f-ed31-4054-8a92-d55f08b2012b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1a7eb56c-30c9-4a75-9d7d-7ecd21d4023e"
        },
        "item": {
          "id": "b704ab4e-b9d1-46a1-a939-eb155d8cff3c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9c65ba4c-ed1c-4363-beb5-82c1a06d5b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f260ea6-6921-4466-8d66-eac8374b383b",
        "cursor": {
          "ref": "c2997dbe-940a-4213-bbb8-0f0f70f7a5ef",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "10d51b37-94be-4acc-a073-925362105279"
        },
        "item": {
          "id": "5f260ea6-6921-4466-8d66-eac8374b383b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "719edd37-293c-4bc0-9b84-643df04924f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb5ce68-f857-4213-b6e7-4e5e7de62848",
        "cursor": {
          "ref": "430b2aa5-98de-4867-94b5-80896c009adb",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ef384d54-c2f3-4033-ab03-bc1a5f810c33"
        },
        "item": {
          "id": "5fb5ce68-f857-4213-b6e7-4e5e7de62848",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a8db0690-904c-4b7b-bf09-a93798698069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4ac66e-fc58-4dd2-b5ee-469d0d631d50",
        "cursor": {
          "ref": "d90943a8-df51-47a2-ac66-f570fd483470",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "82ce1411-f597-4065-992f-c73b07272be9"
        },
        "item": {
          "id": "da4ac66e-fc58-4dd2-b5ee-469d0d631d50",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "488ac0f0-8e11-47c1-9598-91ecacb3d053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f49f5c-fa65-4ff3-8213-3f5c251595af",
        "cursor": {
          "ref": "4ebe7a3d-be42-441b-8620-9bb9c57e28af",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "367b9028-c371-443f-8377-7139f530dcda"
        },
        "item": {
          "id": "42f49f5c-fa65-4ff3-8213-3f5c251595af",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e74f37ef-4565-4dfe-ae14-17b66dcb605f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a906d5-5540-4a47-9fbf-64450719c08d",
        "cursor": {
          "ref": "e220097f-07a1-4a31-84a5-39c40b61b45c",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5b78b06c-ab7a-4e33-a531-01b088af2c75"
        },
        "item": {
          "id": "04a906d5-5540-4a47-9fbf-64450719c08d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "96d8b7a5-45be-492f-8951-ae3103aabc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709ee3e9-be15-45e1-81a5-577ebe31bce6",
        "cursor": {
          "ref": "ee64e2b1-b53e-42a0-ac4d-95b29416c380",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "994f0841-a3dd-4917-b76e-c0861a0311b7"
        },
        "item": {
          "id": "709ee3e9-be15-45e1-81a5-577ebe31bce6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "53f1c39f-74cc-4b9e-be41-836d259441cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e7d17c-5a21-477c-9b14-11b5c817f552",
        "cursor": {
          "ref": "663115d0-572e-4f22-8fd9-40c74e910419",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b604116b-801b-4882-8abd-b6bc77341873"
        },
        "item": {
          "id": "31e7d17c-5a21-477c-9b14-11b5c817f552",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7778d18e-4682-484e-99c7-6364bbe64aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb433a6-371c-4dbf-a30f-a5dc0acbc1b3",
        "cursor": {
          "ref": "b3a194b9-e234-419e-97b5-e0f3bb9a7f63",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9d12f3f4-2803-43a2-b972-d9ff2e7eac6f"
        },
        "item": {
          "id": "8fb433a6-371c-4dbf-a30f-a5dc0acbc1b3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5e1e9fbd-09a8-4d5c-a8fc-d0c3f0236669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c199130-b256-4790-a920-00fc0e215503",
        "cursor": {
          "ref": "f3f12eb2-80a2-4b5d-9db7-2c34b83c4aa9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1a19046a-f600-4866-8ac6-499e223e654d"
        },
        "item": {
          "id": "9c199130-b256-4790-a920-00fc0e215503",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8344e3b7-57a6-4098-87fe-316d90ea8567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac99989e-881c-4972-8b38-db11fce783ba",
        "cursor": {
          "ref": "b6b69a93-75a0-43d5-ad3d-ffcfa892f774",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2456f5b8-5d91-4b1e-9af3-17e854379798"
        },
        "item": {
          "id": "ac99989e-881c-4972-8b38-db11fce783ba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf9e2146-7906-4d29-86b0-4b9e764f2ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb62e156-3312-4403-b0bf-61a143d811c0",
        "cursor": {
          "ref": "d205de1b-98a5-4f5a-ab40-70d4d15f813b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d27a0c0e-2fde-4ec6-9e20-25789b796696"
        },
        "item": {
          "id": "eb62e156-3312-4403-b0bf-61a143d811c0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bf176925-b235-42ed-aaab-5e7e0563ac9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85beda39-3670-4423-9d30-b0158117f155",
        "cursor": {
          "ref": "bc6fc8ec-d333-476e-9cb8-050a1b06ecbe",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "12940720-0ca6-4db8-bf7f-c9aa64f2f049"
        },
        "item": {
          "id": "85beda39-3670-4423-9d30-b0158117f155",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "87c3e2e6-2882-4a51-9f2a-78d3151c83bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29318bfb-a0a9-439e-bffc-2796fa1560c8",
        "cursor": {
          "ref": "0119e064-a000-42fd-ac4d-858b6e5f7af4",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a217fcc8-49ef-43b3-8bf5-07e2cdc1ba5d"
        },
        "item": {
          "id": "29318bfb-a0a9-439e-bffc-2796fa1560c8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f240a4f5-132d-4051-8650-3376754b2905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814e5c71-551c-443e-ae24-0e2141b6e666",
        "cursor": {
          "ref": "4e3cc74d-2e98-4c2a-81d6-b64454676746",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cea432e3-8c9c-4c1d-bcf3-fdd087c3c0db"
        },
        "item": {
          "id": "814e5c71-551c-443e-ae24-0e2141b6e666",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "61a29ebb-6559-47c2-9a22-e8f7191c0275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102b9d4b-5c48-46a3-8403-69030300681c",
        "cursor": {
          "ref": "d9948804-3b9e-4cdc-b261-cf0055774188",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "097b8098-cb03-4942-b488-9dbd1e3d7766"
        },
        "item": {
          "id": "102b9d4b-5c48-46a3-8403-69030300681c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3f288683-5710-432e-b7c4-800b6b9f5171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cf60ee-d0fb-4b5a-a257-755585b497d3",
        "cursor": {
          "ref": "a18f5cd3-2c2f-411f-b337-c2fb3fadd705",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3e88e28f-b914-4839-93ae-598d5ea86dbc"
        },
        "item": {
          "id": "10cf60ee-d0fb-4b5a-a257-755585b497d3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "49180949-dd94-4eb9-9f7d-495ae2020cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879d7ef2-d6dd-4732-9036-49bade78af1a",
        "cursor": {
          "ref": "a8c5cb86-4a32-4565-a70b-cc7d2cf4b2c3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8b665b65-d28d-4ba3-bb5e-2f3afa647fd7"
        },
        "item": {
          "id": "879d7ef2-d6dd-4732-9036-49bade78af1a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e2f3ecf7-7d37-4c1e-82a8-2cb52610d40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc2a2a7-d2c1-4015-af0e-9bce80ffec6f",
        "cursor": {
          "ref": "e64445ec-94bd-4c69-ba32-30410576cb53",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9d71fee2-81d7-433a-aca6-1031ad2fae3e"
        },
        "item": {
          "id": "7bc2a2a7-d2c1-4015-af0e-9bce80ffec6f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e67c6cd9-1971-4937-9b5c-9c84412afb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3d1af3-0736-4722-81ef-aae346b62f05",
        "cursor": {
          "ref": "b39cd146-4e8c-4bfb-ae8e-b3242a2e6729",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0ab2ecc8-60b0-47cf-86b3-707e1e9d9201"
        },
        "item": {
          "id": "5c3d1af3-0736-4722-81ef-aae346b62f05",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6b25f560-fff1-436c-ad87-5c4c4806e4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e409456-985e-4899-a7ba-ae66e31a020f",
        "cursor": {
          "ref": "ec280ba6-711d-4d15-a3d4-61d9f5b7b88f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a04a98be-e388-4f7b-a4a4-7b43daab919a"
        },
        "item": {
          "id": "0e409456-985e-4899-a7ba-ae66e31a020f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cbb6cb70-63cc-4c85-b212-9aeb32ce4496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376a3954-1d48-4587-917c-35b75eb324df",
        "cursor": {
          "ref": "0bf0066b-67a8-4cc2-871a-b356639d0c99",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aacf7483-d546-4eb7-b9a9-a6bf03f298e2"
        },
        "item": {
          "id": "376a3954-1d48-4587-917c-35b75eb324df",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "59d67646-afb5-4d8f-b8da-e79d0827d0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8051ea7-cbcf-4349-898e-9088eadb32e6",
        "cursor": {
          "ref": "008f07e7-74ce-463b-b913-8dd4c104f32f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "35d48476-e0c1-439e-8ccd-c311ce2d2665"
        },
        "item": {
          "id": "a8051ea7-cbcf-4349-898e-9088eadb32e6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ce9c3f79-727d-40de-99dc-5bdd417812e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00906d2d-7ceb-4531-a3be-d5e39c6431da",
        "cursor": {
          "ref": "bd0be10b-7737-49c6-a5a4-61b18654c43c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bf232ec1-891f-4633-8cc1-e741d48cbc07"
        },
        "item": {
          "id": "00906d2d-7ceb-4531-a3be-d5e39c6431da",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ee9dd4fe-4305-4113-94d7-11658142469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4c82bb-18d0-4e9f-bf61-04a2b2eb69dc",
        "cursor": {
          "ref": "63491141-f8b4-4900-903e-6125ceaaed4f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9bee9c90-7ee2-41ab-98bb-0b281dc4397a"
        },
        "item": {
          "id": "dc4c82bb-18d0-4e9f-bf61-04a2b2eb69dc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f38ea18c-ef9a-404c-8685-e934355a3d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e252fa-bafc-4761-8f79-755deae315f9",
        "cursor": {
          "ref": "534916d3-f042-4fdf-a09a-d7fc433b0bf4",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c3ecb39a-cb44-416d-a369-821a53155e33"
        },
        "item": {
          "id": "b6e252fa-bafc-4761-8f79-755deae315f9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9f70375f-af50-48c6-9b49-78ddceb373c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4cc23f-5ba2-4103-88ac-1d16855f2bf8",
        "cursor": {
          "ref": "339dbfd8-4ad0-40b9-b124-d294b3151b4e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0567ba27-9045-407c-a043-1b21f38b245e"
        },
        "item": {
          "id": "2f4cc23f-5ba2-4103-88ac-1d16855f2bf8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9cc7beac-e4b9-48a9-a86c-b09b02640a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d175fa17-951a-46f3-a2af-1efac0794690",
        "cursor": {
          "ref": "8a592cef-7707-4c9e-af6e-7ecc988683f8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1bb1910a-2c5c-432e-a624-a0240ca76b24"
        },
        "item": {
          "id": "d175fa17-951a-46f3-a2af-1efac0794690",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b3d2f9c4-2f17-4f9b-a976-d49f3045c5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c858b3e3-e459-4df5-9eff-30f139f27bfe",
        "cursor": {
          "ref": "e4e1f4f4-e927-44db-b545-486983f4e843",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "267f1488-fe02-4363-9dbf-ce4bf44186e7"
        },
        "item": {
          "id": "c858b3e3-e459-4df5-9eff-30f139f27bfe",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b50f604a-a9c3-41e7-8857-50ee2a17ee1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5228896a-66f3-4c0f-a09e-66ddd8bd675b",
        "cursor": {
          "ref": "0d61ba7c-f28d-45cc-b2de-b580de2fbcaf",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b49d26b2-2526-494e-84f8-9fe98af5b902"
        },
        "item": {
          "id": "5228896a-66f3-4c0f-a09e-66ddd8bd675b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7271cef6-44e7-4fab-9308-5fe95365654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeb6cc7-f932-4455-a254-6e7c97587555",
        "cursor": {
          "ref": "b7fb4f6e-818e-4dff-9b8d-ddd69ebda1ca",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "df5a61e8-b79e-4400-a156-abed6e27dc3d"
        },
        "item": {
          "id": "3aeb6cc7-f932-4455-a254-6e7c97587555",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cbe9ec95-22d1-4909-b6d9-0b653c882b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe50d47-588f-4474-bfe4-cf8f0d199db0",
        "cursor": {
          "ref": "b1d926d9-3ac4-43da-94b6-262ce0f037cd",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "06ab38c1-e655-43b3-81a5-2e21d8ad7f25"
        },
        "item": {
          "id": "ebe50d47-588f-4474-bfe4-cf8f0d199db0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e4b95f3c-06c7-44a6-b5ed-aa8a64ac0124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be04c97-ac1f-4cf5-be3b-195d1e2af6ca",
        "cursor": {
          "ref": "28d311fa-0209-416d-8dec-8b2da71e56c4",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "38f8ea70-bef4-4508-a030-a0f29a346a87"
        },
        "item": {
          "id": "6be04c97-ac1f-4cf5-be3b-195d1e2af6ca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "860aebf0-036a-4618-89d0-10490c104375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b233c09-a6b7-4cc0-bcad-9ba929e3be67",
        "cursor": {
          "ref": "53bd2668-6b7e-4590-a1c4-ffffa33858de",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d8205193-aa89-4dcc-8391-a8fd963710ad"
        },
        "item": {
          "id": "0b233c09-a6b7-4cc0-bcad-9ba929e3be67",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "57e83113-0187-4613-bdff-4b54427ac68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1a424e-354a-4793-ab7b-0ea5135d48fe",
        "cursor": {
          "ref": "b9b9b093-697f-4d73-a132-ae9b2aa1646c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "66f2f9bc-31a1-419e-a9d0-3d6747f46707"
        },
        "item": {
          "id": "8a1a424e-354a-4793-ab7b-0ea5135d48fe",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "221388f6-bebc-4f55-a606-1feeabb620c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57108424-5a5b-43ef-b803-a2ff58d7bcdc",
        "cursor": {
          "ref": "3b2eceff-74bb-45c8-b392-bce4fff288fd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6fbcf75a-d3c2-4476-9990-134cc2858fb9"
        },
        "item": {
          "id": "57108424-5a5b-43ef-b803-a2ff58d7bcdc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0f162339-c108-4040-82c2-2148bf65a20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c766c14-3edb-4f67-a36a-6bdb641afec3",
        "cursor": {
          "ref": "08ab8714-5a1b-4845-ba26-d804ddb31040",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "99738d75-a3e1-48f3-8907-77def4a7be70"
        },
        "item": {
          "id": "2c766c14-3edb-4f67-a36a-6bdb641afec3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8bb952d6-c251-45f1-9a5b-5e2fba39d658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbbfbd2e-31ac-4814-a9af-dbe08474af1d",
        "cursor": {
          "ref": "c2c70b9b-0bb9-43fa-ab6c-f80b4575b0ec",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6a921dc9-329a-493f-9615-8e5600be5557"
        },
        "item": {
          "id": "fbbfbd2e-31ac-4814-a9af-dbe08474af1d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ff5c82b3-8ce1-4eca-97cb-b67cfbad7d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77983b4-4639-42b3-9d39-be1571799d46",
        "cursor": {
          "ref": "277900e2-f034-4f79-a815-a966022a3a9b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fa76dd2c-35d4-4ab9-bbd5-f4ffac1cc5c5"
        },
        "item": {
          "id": "c77983b4-4639-42b3-9d39-be1571799d46",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8a7ebc3a-1299-4541-97d2-d81cfba46529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4122c0-b32c-4817-b83d-5608ed0bb87b",
        "cursor": {
          "ref": "2d1d5637-f284-4dad-9df2-d626dec0e22f",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "06f4fc52-1130-491b-a47c-5c780a73de6e"
        },
        "item": {
          "id": "4b4122c0-b32c-4817-b83d-5608ed0bb87b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "be998dde-4c44-4b47-a22b-8b2db5a828f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a71365-4447-43a4-b84d-766182c12ba1",
        "cursor": {
          "ref": "3cb3be53-fb4a-4f85-bb70-276f3f4a291f",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7faf8ba0-66c5-4bcc-a9a3-caeadd2ead06"
        },
        "item": {
          "id": "84a71365-4447-43a4-b84d-766182c12ba1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "03254642-8478-43b6-83a2-83d828a8d220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a4328c-1881-4223-9c2d-efc608c5a663",
        "cursor": {
          "ref": "793090ab-e0e7-460d-bb93-eebe7169c02b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "18ae7701-c3a4-456e-a0b0-0a31f3d63e7a"
        },
        "item": {
          "id": "85a4328c-1881-4223-9c2d-efc608c5a663",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e65c9534-7617-4f8c-9e0c-dbed16a9ae41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565312d6-1507-48f8-955e-f7ee2658989c",
        "cursor": {
          "ref": "761543bb-bfd4-4f47-991d-8a7768bfcf1b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dfdf7bae-b8ca-4c39-a485-4a97a2b9255c"
        },
        "item": {
          "id": "565312d6-1507-48f8-955e-f7ee2658989c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e1d3aa77-bcef-4525-bf58-b5fd63ad5cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d91a4c6-006f-41ed-948b-48a7e1588714",
        "cursor": {
          "ref": "168320fd-579a-4b53-9088-2ff6d41e1b87",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e687904f-c0e3-470d-ab0b-94901ef1294f"
        },
        "item": {
          "id": "0d91a4c6-006f-41ed-948b-48a7e1588714",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "25cf4ce0-c501-41b3-be6b-d4fb6f4ab75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188f7ff7-4892-4d43-a52a-8045a130618b",
        "cursor": {
          "ref": "ab5932fd-7994-4db2-aa65-c43331980a81",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f4d8633f-810d-456d-8f5b-3ec1f088ba44"
        },
        "item": {
          "id": "188f7ff7-4892-4d43-a52a-8045a130618b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4541f38b-231b-4bfb-94f2-81230804e6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376bddda-2e30-437a-8071-76a07479a8c4",
        "cursor": {
          "ref": "65547f57-2895-4b5a-a44e-131ba50b28ab",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "45464587-44a6-4ce6-8173-fb25e01f364c"
        },
        "item": {
          "id": "376bddda-2e30-437a-8071-76a07479a8c4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0532436d-c952-47ba-86b5-8b077e91d834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3cf45d-cb66-44b4-8363-e8253ac7de3f",
        "cursor": {
          "ref": "ccf047fc-8bb8-4bde-84b6-5760f81e1cd8",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bccc9382-20e2-4e16-9178-d81eb0fc9741"
        },
        "item": {
          "id": "6c3cf45d-cb66-44b4-8363-e8253ac7de3f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8acaea56-fd80-47ac-8917-2fbd716e5e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f5860a-9088-40c2-923e-68006a43999b",
        "cursor": {
          "ref": "369dd896-66eb-4826-95bc-08a70eae5ca4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5c574843-3ea1-495f-a726-1dc9ba75f026"
        },
        "item": {
          "id": "71f5860a-9088-40c2-923e-68006a43999b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "97576580-cde1-48f3-84a3-0ceaa1f1880e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922d7c67-6944-43cf-a745-ffa26eb0d25a",
        "cursor": {
          "ref": "191e3fe0-96d8-4ed2-88b2-ffc971e4d848",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f964caa1-99df-4710-87bb-baab209566a4"
        },
        "item": {
          "id": "922d7c67-6944-43cf-a745-ffa26eb0d25a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "86609898-f30e-463c-906f-378df3f11584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee350eb1-7d81-4136-bf3e-5bf92d1e836a",
        "cursor": {
          "ref": "d957deaa-c797-478d-9555-a922c3e9fa47",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "48d84412-8b45-48d9-b178-5820d938d1a3"
        },
        "item": {
          "id": "ee350eb1-7d81-4136-bf3e-5bf92d1e836a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "43b3f12b-54fc-4c19-ad77-780af6308cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1276443d-6abb-4638-ad33-6b1466ec5348",
        "cursor": {
          "ref": "0faff910-974c-42ec-9118-0b0534849060",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a55b6a9b-e07f-4add-acde-5aa4e3a44808"
        },
        "item": {
          "id": "1276443d-6abb-4638-ad33-6b1466ec5348",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "43d72e50-bc76-4d74-8812-d6323a8f830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b66b88-0de4-4394-874d-441e28d445a4",
        "cursor": {
          "ref": "1e10b0a0-3d33-4892-9615-8132482b8e18",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ede81068-0cca-450a-bf6c-e7fcacffcd0a"
        },
        "item": {
          "id": "27b66b88-0de4-4394-874d-441e28d445a4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d7e04394-f4d4-443a-a529-c918ca7c752b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130f725b-06e5-4b18-9be8-74cb4687ca8d",
        "cursor": {
          "ref": "72b64c4a-c0b8-4194-997b-1aa3024df21f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bf0fbffb-4fec-402c-97ae-addd29a2ddfc"
        },
        "item": {
          "id": "130f725b-06e5-4b18-9be8-74cb4687ca8d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f3bd3e01-f95d-453c-929a-f5b4b9f9f001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfbd9b8-7db6-4884-b321-e497d208663b",
        "cursor": {
          "ref": "6db338f6-ded8-4399-9c7f-ea55b691cba7",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6e6ce2b2-a12e-4636-826f-9bfe5525491f"
        },
        "item": {
          "id": "0dfbd9b8-7db6-4884-b321-e497d208663b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "312da2c0-b48c-4d35-a43b-ec82716d34a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895d2970-843f-4521-8d6d-01681f7dd334",
        "cursor": {
          "ref": "2dfb2961-92f4-4d82-b3c9-33f1500c42c2",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "aa890187-69df-4469-b7b2-7c349419f2fb"
        },
        "item": {
          "id": "895d2970-843f-4521-8d6d-01681f7dd334",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0480dbfc-452c-4732-8550-a8e02967f7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868d0379-b664-49ed-8bc7-fff21209146b",
        "cursor": {
          "ref": "b2e6cc9e-af27-4d67-b7b3-4437ecb56f75",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4e4039fb-53fc-486d-a478-a0826f32f560"
        },
        "item": {
          "id": "868d0379-b664-49ed-8bc7-fff21209146b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0809f28b-1d37-4974-ba43-7ad2db480ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4314ecf9-0e3e-43b2-a68d-3769b5289fa4",
        "cursor": {
          "ref": "2e8d1d2f-2e3b-4eff-ba37-d354faa957db",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e7e59ee2-191d-446a-a66a-c051fffc88ab"
        },
        "item": {
          "id": "4314ecf9-0e3e-43b2-a68d-3769b5289fa4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6a97fcbf-4110-414f-b379-6bb16a48c82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7401c180-1eb2-40ef-8e59-280a0b97063a",
        "cursor": {
          "ref": "a94a4f33-e01c-447c-a09d-f8456ef2721d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3a29da5d-658b-46df-80eb-3906a6df8b78"
        },
        "item": {
          "id": "7401c180-1eb2-40ef-8e59-280a0b97063a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ac7a9bf7-cc50-47f3-8da0-6435fd23c124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7ee4c9-ff17-4bee-8747-299ae9d24f5c",
        "cursor": {
          "ref": "7a7113df-7ddc-4bbb-bbbd-746b460fe3e8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "010547dc-616e-45e9-a0b5-d4cfdca6f03c"
        },
        "item": {
          "id": "3b7ee4c9-ff17-4bee-8747-299ae9d24f5c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e0e943af-914c-469e-a4a3-e33dd0ace9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db038de1-95cb-4e46-8fcb-cd8ca7b4e7f1",
        "cursor": {
          "ref": "2988455c-0402-43e5-9f03-c4fe34be1dab",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "822685bc-9ba6-4a8c-9c7c-9413259547fa"
        },
        "item": {
          "id": "db038de1-95cb-4e46-8fcb-cd8ca7b4e7f1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c917ff6e-ae4f-4944-bf96-2349ee1ebc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e201edf-afc0-4afa-8b57-c253cb8c9950",
        "cursor": {
          "ref": "ee85c4c5-efca-45e3-b85e-5dbfbace587f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "64a45446-3fe8-4a18-828e-3c125c4545bb"
        },
        "item": {
          "id": "5e201edf-afc0-4afa-8b57-c253cb8c9950",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8e19dd80-e4e8-477c-8040-4a2bfc99e989",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5c0f2c-f4d3-4ffc-b855-c4a29d92f56f",
        "cursor": {
          "ref": "0c72faeb-179e-4137-97a7-d766a0bdb1ec",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "99c550e8-a4df-4690-8a28-e832c4d71eff"
        },
        "item": {
          "id": "2b5c0f2c-f4d3-4ffc-b855-c4a29d92f56f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a8de6a30-29d9-4176-96a4-070ecde05733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cd4c52-a3b7-43c8-80df-f5736cc616cc",
        "cursor": {
          "ref": "6dae5b61-462f-45ef-9992-2b6698ac678a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "344715b9-1865-4eaf-9151-19033c07b07e"
        },
        "item": {
          "id": "c1cd4c52-a3b7-43c8-80df-f5736cc616cc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "233ae6c5-5331-458b-b7fb-7976334db5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e629d6-0345-4388-b541-9939c1d263e6",
        "cursor": {
          "ref": "f7863520-0eca-425a-b76a-3a1a8058f19a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4b0f9fe9-e463-4d53-85fa-909fa1fa5789"
        },
        "item": {
          "id": "05e629d6-0345-4388-b541-9939c1d263e6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2e78deca-7367-439e-bd01-6114c0752c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0171d66-1557-41f6-b808-7b19dcba464e",
        "cursor": {
          "ref": "789a4222-487d-4f31-8906-f2a04005cb6d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "20a8281d-62b7-4a1f-b977-709403875580"
        },
        "item": {
          "id": "b0171d66-1557-41f6-b808-7b19dcba464e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "46408874-2258-41c4-8a38-18a5a83ca54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452cb160-b8bf-4b8d-80e9-ecf68f7a1dc8",
        "cursor": {
          "ref": "9465c667-5d07-4efc-9c1a-3c69cca65d9b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e6b74c31-2943-4c9a-9d1d-5df8ae82260b"
        },
        "item": {
          "id": "452cb160-b8bf-4b8d-80e9-ecf68f7a1dc8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "18355718-11d7-4a12-9a08-b0700fa68f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18aeabc8-c97a-4350-88a7-6fc167107a14",
        "cursor": {
          "ref": "2d3a0464-979b-4c62-aae6-0ef0cedb7059",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c7203adb-46f6-4453-b231-5c4864d1227f"
        },
        "item": {
          "id": "18aeabc8-c97a-4350-88a7-6fc167107a14",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3c1bfef7-93e4-4a3a-b3f2-8be006eee3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2645dd-24f6-45ea-959a-7094339acf81",
        "cursor": {
          "ref": "c944f326-d361-4ca7-9616-fd94948bdf1a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c5034237-e0c7-4200-9874-fbb274200278"
        },
        "item": {
          "id": "dd2645dd-24f6-45ea-959a-7094339acf81",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3d7084b8-43ff-4a4f-851e-d52e4c9b26d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106b7bea-6b16-4767-9ecc-f9d279ca38fb",
        "cursor": {
          "ref": "0e09926d-0d06-4e46-8101-49a8c1214221",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a6dea893-a632-460e-a665-6210591fba7a"
        },
        "item": {
          "id": "106b7bea-6b16-4767-9ecc-f9d279ca38fb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "80a92b9f-cc8c-480c-b4ca-10daa9c571e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e0595-9bbd-4332-95d3-336444203ec9",
        "cursor": {
          "ref": "1f44f6c4-2ac1-4cc3-ba85-49682920b5df",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a34c1178-4311-4551-8e30-0112ec64b12a"
        },
        "item": {
          "id": "d85e0595-9bbd-4332-95d3-336444203ec9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "97d38cbb-c4b6-4707-bd12-d874825522ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6269b079-5c09-4da9-be55-aa3be0135ab2",
        "cursor": {
          "ref": "f7fd33e2-d8a6-4dc1-891b-08ca1c6c3176",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "eb9d6dbd-477f-46b6-974c-71cebe378f2a"
        },
        "item": {
          "id": "6269b079-5c09-4da9-be55-aa3be0135ab2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2e8cc881-6685-4fe8-9dfe-08008877dc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9dff94-9402-4c19-8bc0-7b4ece19d3d8",
        "cursor": {
          "ref": "f2c1e4b9-82fe-44ea-b0bf-7f5297b8d978",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ad4b1d06-7e35-4f4d-8eac-cc6b057a15d1"
        },
        "item": {
          "id": "2b9dff94-9402-4c19-8bc0-7b4ece19d3d8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "afb4ca89-9a5b-4008-82ab-2bff7ac24d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4db8f87-0221-4869-8244-12e82026f271",
        "cursor": {
          "ref": "08ae1956-c8b1-4bed-9ba6-a7cadb5b3084",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c51f2138-754a-49cd-a4c6-ec334500bdf6"
        },
        "item": {
          "id": "d4db8f87-0221-4869-8244-12e82026f271",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bd0934fa-0a3a-45a2-bd6d-38244a510b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b8752d-88ab-4264-a4ba-d5afca57c9d7",
        "cursor": {
          "ref": "c90261ca-5470-47f7-845f-5b1f6d79b2de",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4da617bb-fe3a-4f8a-9c1e-76604c032cb7"
        },
        "item": {
          "id": "28b8752d-88ab-4264-a4ba-d5afca57c9d7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "719afeb5-23d1-4c8e-9885-e0393bb69dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448beced-5fd6-4233-bf05-accd38cef823",
        "cursor": {
          "ref": "48e9ef71-6ae7-4698-a09d-1dd6fc808d8a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c509617e-afc9-46e3-9601-95f8338de592"
        },
        "item": {
          "id": "448beced-5fd6-4233-bf05-accd38cef823",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fbeed3f9-10fa-44f8-95ce-d4621251b725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f5afcf-9263-4f8c-b779-b31763210c26",
        "cursor": {
          "ref": "63be1991-3e03-4be9-8d05-cdaa1d1ef768",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a209aa5f-3269-4cf5-bc7c-c23d9e2eb1de"
        },
        "item": {
          "id": "74f5afcf-9263-4f8c-b779-b31763210c26",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "338b6618-647c-4287-aefa-e71150c39a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05535822-70e2-46a5-9876-eb37f9c6be01",
        "cursor": {
          "ref": "adec3281-dfc8-4211-83a0-9f457e9d7763",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aa8670e3-1008-4056-97d6-201dfa2a161b"
        },
        "item": {
          "id": "05535822-70e2-46a5-9876-eb37f9c6be01",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f34751b4-6bfa-46f0-ba59-99bfb1814770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f73c3eb-054b-4ee5-8a41-a66cd975ae88",
        "cursor": {
          "ref": "12680648-0350-45c5-a52a-24b49ae8dee7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9047f88a-c3f0-4280-91f5-c9d61c058261"
        },
        "item": {
          "id": "5f73c3eb-054b-4ee5-8a41-a66cd975ae88",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f364dc77-635f-4f8f-9169-54ea5974cef7",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "63fa8e88-ccec-4b41-a0d6-2fb10abccf04",
        "cursor": {
          "ref": "35f70ce9-82ea-4dc8-8208-9701edc1d7d7",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "05bdf5b8-9cee-4ce2-abf5-f4c76688dae7"
        },
        "item": {
          "id": "63fa8e88-ccec-4b41-a0d6-2fb10abccf04",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "df9e8e06-b606-4384-90e6-659e2595de7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e883194-2f3a-4410-b111-0925c7d2a4c3",
        "cursor": {
          "ref": "8c3d09f3-413c-415e-83de-7777671bc2e9",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f34179c9-98e6-42db-8598-7d94f475db6c"
        },
        "item": {
          "id": "0e883194-2f3a-4410-b111-0925c7d2a4c3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "95c09ec3-630a-4d99-839c-0b56f38f1058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed3d76c-d0e4-4fb7-b39b-bcaa50e223b4",
        "cursor": {
          "ref": "b2a028ca-3d8c-4f23-ab92-8f86391a8110",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "86a6ff90-1a50-4ae7-bf5e-96b1d91d796e"
        },
        "item": {
          "id": "5ed3d76c-d0e4-4fb7-b39b-bcaa50e223b4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c4756ee8-f4b1-4ed4-8df5-f91cd432b839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95e22bd-b791-498d-ac91-4f24241e3970",
        "cursor": {
          "ref": "61c60c40-b10f-4c0e-a192-8b09b7a36ba4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a63622b5-3b8e-4437-916a-daede5fd1555"
        },
        "item": {
          "id": "d95e22bd-b791-498d-ac91-4f24241e3970",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f93b7739-208f-4fe0-baff-970a8dab0c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ea282b-58a6-41f5-b5d8-a95612292966",
        "cursor": {
          "ref": "8126365f-dbe5-4ebd-90d8-688b81900088",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c8902001-06e2-4d32-b8ad-7a4d39105df3"
        },
        "item": {
          "id": "e7ea282b-58a6-41f5-b5d8-a95612292966",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5e8b638d-8e73-4bb6-b94e-9858a650a80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020233ad-7f8b-4582-aadf-af22c9077d02",
        "cursor": {
          "ref": "e26a21eb-579a-4d0d-810b-6ebea94f893c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "38b92de0-f63d-4c3b-9db9-a2a599d84901"
        },
        "item": {
          "id": "020233ad-7f8b-4582-aadf-af22c9077d02",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "140c4a02-50f3-489c-a5f4-095b92186a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9032756-cf1a-44f3-b97e-40ad2b47b65d",
        "cursor": {
          "ref": "21d0c58d-13f4-4156-b61c-1a7d291882af",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "27602937-fa03-4275-a423-105ebbe1da75"
        },
        "item": {
          "id": "f9032756-cf1a-44f3-b97e-40ad2b47b65d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5d6215fd-09a4-4eeb-b9b1-560d371ec96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd669ce0-e6e1-4792-9d69-cf9efb3bdc5e",
        "cursor": {
          "ref": "3092f5a1-45db-4d3d-aba6-29a37eac8397",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5c6670de-0e1d-4e61-968d-f527f643bba9"
        },
        "item": {
          "id": "bd669ce0-e6e1-4792-9d69-cf9efb3bdc5e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "21db84ca-912d-4a80-a0ba-3d580f55b11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eb45a5-eceb-4ade-bd78-e2a3c06fffbb",
        "cursor": {
          "ref": "712c8187-c18d-4f2b-a5b4-48a705036a65",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "409489e6-184a-4716-a30d-96a085bbeba7"
        },
        "item": {
          "id": "c5eb45a5-eceb-4ade-bd78-e2a3c06fffbb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e9a94887-05ad-45f3-b932-bb6cfa0085f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82667fb7-80ce-4e8e-8ad5-b6ec87da9b56",
        "cursor": {
          "ref": "8d0762e6-f8a6-482c-87aa-249d7fe0577d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0dec9128-b4bc-4743-99d7-5ec17703f539"
        },
        "item": {
          "id": "82667fb7-80ce-4e8e-8ad5-b6ec87da9b56",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "40a944e2-6d91-43a7-938d-78773e213be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1971cf-f5cb-4e9a-b7e5-f10610d55cb2",
        "cursor": {
          "ref": "92a207bd-793a-4606-aee6-d87198496c40",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2d64d829-3e7e-499c-a373-396cb3df6b81"
        },
        "item": {
          "id": "3f1971cf-f5cb-4e9a-b7e5-f10610d55cb2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "074948f7-bca7-420a-8bec-1538787803ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e746f82-529b-484c-a92f-759d59bab76e",
        "cursor": {
          "ref": "df4cb1b8-6f7b-44f0-a4f1-7d0f2a3ae967",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b1f3dead-8b6a-4d63-88e8-374ae3d89969"
        },
        "item": {
          "id": "0e746f82-529b-484c-a92f-759d59bab76e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5b5626f7-394b-4efd-9c98-0f77ec4ee312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd94eb51-b464-4afe-a609-4bdb80778cb5",
        "cursor": {
          "ref": "5cd285df-fed5-483c-af40-076d69860a63",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "28ee8b83-2264-4bfb-a333-7f0f11397ef5"
        },
        "item": {
          "id": "cd94eb51-b464-4afe-a609-4bdb80778cb5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0c3c47e6-8510-4a4b-9937-efd0a2b26c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000bdf0f-a6df-47d8-93b0-d8a08b912975",
        "cursor": {
          "ref": "4211cc79-77db-4b98-9e78-f2492e2b8044",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "281ad803-7ae6-4747-8058-1d222f61dc63"
        },
        "item": {
          "id": "000bdf0f-a6df-47d8-93b0-d8a08b912975",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6da2ed2d-50d2-488d-8425-c9d19f2b96ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b099ad7-605c-4cff-b05a-d2094698edf8",
        "cursor": {
          "ref": "fde1a7ab-2602-4818-8a92-e67f8163a47e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "56ff4b68-4608-40f1-a6f8-b91094ac518c"
        },
        "item": {
          "id": "7b099ad7-605c-4cff-b05a-d2094698edf8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "067f7c1d-19ca-4b3a-b5b5-c9cce06d4386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bcc962-76a6-47bf-a5ce-80d71dc8f0cb",
        "cursor": {
          "ref": "e2888839-12a3-4a59-bb06-7ccded3cea7d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4fe5870d-a4d0-4fda-afec-762b9a27b19b"
        },
        "item": {
          "id": "58bcc962-76a6-47bf-a5ce-80d71dc8f0cb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "904bd999-ade5-4694-8ec1-dddc6688ad91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c2ce9e-89b9-4c1e-9197-71835af920b1",
        "cursor": {
          "ref": "1fbbf458-0a54-4d86-a5ac-14a674fc8f9e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "599ee6c1-9b15-4f6b-8819-1fbd6c3ce510"
        },
        "item": {
          "id": "f1c2ce9e-89b9-4c1e-9197-71835af920b1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "db561ee7-8111-4ae3-a0a1-1c68c11d33d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2d770b-3d87-4eb7-9f3b-248637a0614d",
        "cursor": {
          "ref": "c8f03bff-0621-4b97-ae89-98f843291657",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50f4f670-7f78-485c-8fc2-9240bcc91cb6"
        },
        "item": {
          "id": "df2d770b-3d87-4eb7-9f3b-248637a0614d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4d8c84e4-82b2-48c1-ac14-1ba2d87d3af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e00e6b-bd88-414b-886e-e5dfabbe2a68",
        "cursor": {
          "ref": "d7405b6b-60b1-402e-b340-5374fad28872",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "377a9d69-8917-4f5a-b6da-1cc6254a3970"
        },
        "item": {
          "id": "66e00e6b-bd88-414b-886e-e5dfabbe2a68",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "29d6dbad-1e95-43b9-87d2-d66a026716f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bb94e2-c97c-4232-a60e-b9fbc4da529a",
        "cursor": {
          "ref": "42152fbb-8378-4bd0-bbf7-f0c00b2d7b8f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b8d0643b-afba-4023-a998-90f7a82cda20"
        },
        "item": {
          "id": "03bb94e2-c97c-4232-a60e-b9fbc4da529a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "81a87a08-25b6-45d5-9de2-addf5d691fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc94e5b5-f979-4581-8d8a-ef13f9bfb72e",
        "cursor": {
          "ref": "8f33ae18-e562-413d-b1ea-206d1bca8c91",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "76b73b72-70b7-4499-bd34-7d8b73a15609"
        },
        "item": {
          "id": "dc94e5b5-f979-4581-8d8a-ef13f9bfb72e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d0e23e10-885c-4c2d-afaf-c32bf6ecc97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bb9237-9022-4acf-8d6f-1996628414b7",
        "cursor": {
          "ref": "cf2189c9-9c4d-45af-b31f-0195e1083c2c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b39126c4-c129-49f5-b06f-4cfae7f58f01"
        },
        "item": {
          "id": "48bb9237-9022-4acf-8d6f-1996628414b7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bc769495-cd65-40dc-b67b-0a3697829619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b91296-520c-43ac-b96d-9d3565cd10aa",
        "cursor": {
          "ref": "ca0fd344-6575-4f4f-a696-5a96ed8533d4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8f76e903-5368-4b23-b869-3976473cbd46"
        },
        "item": {
          "id": "e6b91296-520c-43ac-b96d-9d3565cd10aa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e8e8728c-f86a-4858-a45d-a78c2094a753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819a522d-6021-46be-bb96-01774a397259",
        "cursor": {
          "ref": "c14522c4-163a-48d1-b291-ba7aa48ae779",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "559c46b1-6fb9-449c-ab43-9161e6527fdf"
        },
        "item": {
          "id": "819a522d-6021-46be-bb96-01774a397259",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b72c04c9-17f0-4d1e-b2a4-a3ef149c6d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560f79a5-b2e4-4d4b-a32e-20707df00c26",
        "cursor": {
          "ref": "818bfaa2-048f-452f-8cd1-ae4f0ddeb2fb",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "aa811cec-47ab-45f5-b527-1ad3f13ab583"
        },
        "item": {
          "id": "560f79a5-b2e4-4d4b-a32e-20707df00c26",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "18a69cbf-4992-43bb-b629-470d5084b37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d05adee-c8fa-429d-90a7-a7b6c28aa4e8",
        "cursor": {
          "ref": "a600c84d-fa74-468e-a17c-cd1c2fcf5c27",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ec7c355d-b4b4-49fb-af61-e9260039c3d1"
        },
        "item": {
          "id": "7d05adee-c8fa-429d-90a7-a7b6c28aa4e8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ffc448df-d680-476f-80ff-5e6f8ef04141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0ea48c-428d-42ae-aa35-8234a6bb0369",
        "cursor": {
          "ref": "0cb91b3f-10a1-467a-9ca5-e7db310dcbc0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5724b997-3581-4340-948a-243a69da8683"
        },
        "item": {
          "id": "2e0ea48c-428d-42ae-aa35-8234a6bb0369",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7a669699-de20-48cf-b997-da7122d5d0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065d93aa-3b35-40eb-b8d1-364a675dc949",
        "cursor": {
          "ref": "f6550625-6483-449f-b494-f5ea52a05a59",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bad8f356-d5b9-47ed-bbd0-08576430e0c8"
        },
        "item": {
          "id": "065d93aa-3b35-40eb-b8d1-364a675dc949",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f4c63d02-beff-4469-8105-984b77cf257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3678fceb-0e19-4ebb-ae06-dd127f9137c7",
        "cursor": {
          "ref": "cfb9fa65-7cbb-4fd7-8d85-f0679a86fcfe",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3b730719-0ced-4f25-a246-a21bce540bc7"
        },
        "item": {
          "id": "3678fceb-0e19-4ebb-ae06-dd127f9137c7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ff52448f-5895-4fd2-b3a3-023d88bb49d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2362333-0a70-403b-8bc1-fc8211cf63c7",
        "cursor": {
          "ref": "04f101f0-0ecf-4ae1-91c8-20fe7c0df31d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fffaffc6-07a4-4d84-b2a1-3fd5d59ae9d1"
        },
        "item": {
          "id": "c2362333-0a70-403b-8bc1-fc8211cf63c7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b410deb7-6e47-4031-9993-9ba9aeb10204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943e8a58-2f55-4648-8aa7-89bb47857b0c",
        "cursor": {
          "ref": "07c06975-fe9d-4c8f-8ad9-0cc3d3a84d7a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "db1f2e40-e708-4c0c-aa43-66d8446809ca"
        },
        "item": {
          "id": "943e8a58-2f55-4648-8aa7-89bb47857b0c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a948b0eb-a695-4b47-8641-8cb4d87c6e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff20ce1-f5e2-44ac-8e18-ae5e2c7a38bd",
        "cursor": {
          "ref": "e502ea04-535d-4e5d-96ed-d9652cdfb186",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7e286288-209d-4438-bdf7-45fc04a40d23"
        },
        "item": {
          "id": "fff20ce1-f5e2-44ac-8e18-ae5e2c7a38bd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4ce181ce-5518-4c06-80d0-78d47df18ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d967bce4-cf9c-45b6-affc-41bad5c19fa2",
        "cursor": {
          "ref": "201b2dc4-67ef-4fc6-9c44-350294e4c714",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f57e52b-3b5d-4957-a2a6-8e2180fb227f"
        },
        "item": {
          "id": "d967bce4-cf9c-45b6-affc-41bad5c19fa2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3c529071-22f7-4a77-acca-915b55fed3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2de61f-cfdb-4846-833a-4153e23faf07",
        "cursor": {
          "ref": "1a5d1383-4da1-491c-8683-7e20e7dbb2b2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4e497b16-a39f-4433-886d-f3935c4517c4"
        },
        "item": {
          "id": "eb2de61f-cfdb-4846-833a-4153e23faf07",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9b7452be-4f72-4c29-930d-87510b72d5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ac294f-4925-4a61-b2ff-47881f62e8e4",
        "cursor": {
          "ref": "e158241c-2fea-4681-9d04-dd9e36237039",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "37459c8f-65e6-4d39-8c18-1f113cacf957"
        },
        "item": {
          "id": "84ac294f-4925-4a61-b2ff-47881f62e8e4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d72759e8-dfa2-4c71-b533-f2dd9d046fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b72fbe9-fbe3-40ae-ab39-e8124b29b01f",
        "cursor": {
          "ref": "aad8414e-c29e-4c9d-86d1-e92e7bd3328c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "62526ad6-6202-4471-9895-f208ff2ef208"
        },
        "item": {
          "id": "9b72fbe9-fbe3-40ae-ab39-e8124b29b01f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e4e1a817-fb5a-4366-b674-5ffaab2134fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995da419-9fc3-4725-a1dd-a306927e844a",
        "cursor": {
          "ref": "0fe936a9-249d-445e-a3d9-017c2737892b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "595b3266-eb9d-4f54-9d99-3c79f5282c2e"
        },
        "item": {
          "id": "995da419-9fc3-4725-a1dd-a306927e844a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ef8b7341-abff-46ad-85e7-0e928818bc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a782a3c-8b1e-43f2-ae79-abbf784873d7",
        "cursor": {
          "ref": "28e0562d-10f3-4d3d-a600-245dc7842a1b",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "48cae21c-c3ed-4c8f-b501-de0fb15cda40"
        },
        "item": {
          "id": "9a782a3c-8b1e-43f2-ae79-abbf784873d7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e22e2933-f76b-48ac-b0bf-019210d0242f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986985fe-e5b4-4553-9989-311e48e378e1",
        "cursor": {
          "ref": "825fbb91-fd62-409c-8927-88368ba2bb61",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "17dca551-96b0-475d-b9e1-7bb4a2afdd1d"
        },
        "item": {
          "id": "986985fe-e5b4-4553-9989-311e48e378e1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "03e42754-b60b-4b74-97da-14699ee24587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f07ee8-1d5d-4ae1-8a1d-2437e052ce96",
        "cursor": {
          "ref": "9ca32928-660c-4abe-95e4-95e5f71158b2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f3f6c4cb-2fc4-468c-85de-6a97469f893e"
        },
        "item": {
          "id": "65f07ee8-1d5d-4ae1-8a1d-2437e052ce96",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a15a8b55-d9aa-47b0-acfe-cb00d1cf2d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89438fa4-092f-4ef1-a1f9-e7cdb0a31686",
        "cursor": {
          "ref": "327a8413-7d31-493f-993a-7c4db1bdba4e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "34fed733-ca1a-49c0-8227-9bcf605dc1e1"
        },
        "item": {
          "id": "89438fa4-092f-4ef1-a1f9-e7cdb0a31686",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4e013055-09eb-409e-af84-c88fea4c2f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cade02b1-0528-4d09-8a96-0598df29d836",
        "cursor": {
          "ref": "e4402067-21b9-4748-8a0f-36a6558ede69",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9dbb0035-772f-406d-a882-213c59f0da1c"
        },
        "item": {
          "id": "cade02b1-0528-4d09-8a96-0598df29d836",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4b67fcbb-2bd4-4ddd-afa0-420f055ccd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90948f2e-d32b-4c9d-ae23-9e52d897d959",
        "cursor": {
          "ref": "57729154-6a5b-4866-82a5-8040a718ad8d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "73d5ee6c-f5ea-4ddf-9c07-d1187cae4cb5"
        },
        "item": {
          "id": "90948f2e-d32b-4c9d-ae23-9e52d897d959",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "edfb1b56-38cb-4165-95f7-d7b43466d588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdf66eb-3272-47b8-b1e5-25da8aa44fd8",
        "cursor": {
          "ref": "642b5ae7-6852-4046-a9b9-f6ec36cde295",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8e32add8-97d1-4c33-a2ce-e5b61ee43e41"
        },
        "item": {
          "id": "9bdf66eb-3272-47b8-b1e5-25da8aa44fd8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1054257e-601f-4c05-ad4a-b6fbbf6076dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafdfb75-190e-4062-a518-4ea8e1b0453e",
        "cursor": {
          "ref": "6d5eb976-f758-44b4-bfe1-8ee7513fcc3e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8c5fd140-dde8-4a2b-a525-cd66af186d0d"
        },
        "item": {
          "id": "eafdfb75-190e-4062-a518-4ea8e1b0453e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0654ca2f-2b84-416b-84df-1e998d308159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2326b90f-947b-41d0-ac07-1e84e45d7595",
        "cursor": {
          "ref": "bde55861-f2f1-4596-a480-eb564168fc1b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "14937a96-4e29-44b5-be2c-42ef2f9d13f0"
        },
        "item": {
          "id": "2326b90f-947b-41d0-ac07-1e84e45d7595",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e4dcec02-ae6d-4583-ae89-886fb3c6c01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f2dd0d-10d1-411f-adb3-60ccbaa0ce1a",
        "cursor": {
          "ref": "a88e88f9-86b0-47b3-8ffc-215a94e3646c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f434514b-2bf6-4b6b-a11d-4559435a5b25"
        },
        "item": {
          "id": "b2f2dd0d-10d1-411f-adb3-60ccbaa0ce1a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e0c5f5d1-76d8-4a9a-b07c-d43c57578c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c8a798-6efc-4855-8c4d-f9638cf3e421",
        "cursor": {
          "ref": "61c8d0c4-4b74-432c-92eb-e2d835bc478e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "34df11c2-9b94-4ed6-a327-7641461187b2"
        },
        "item": {
          "id": "53c8a798-6efc-4855-8c4d-f9638cf3e421",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8071a528-d3fd-4b8a-9310-5bf6d668453e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc3179c-a178-4a70-8aed-0cf483286fb3",
        "cursor": {
          "ref": "d96f55e1-9678-4413-ba01-e07bce8c006a",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "911116ff-ea33-4418-82f7-25e4b4785619"
        },
        "item": {
          "id": "0bc3179c-a178-4a70-8aed-0cf483286fb3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d8dafd9d-1360-4232-b6b7-21bf95e3fb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb6694c-e943-41e7-9436-7a7e45ffbd99",
        "cursor": {
          "ref": "947a41cf-ca6a-4f94-84de-ed844274d8c3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "002618c3-3232-4a15-84bc-c6660918a537"
        },
        "item": {
          "id": "6cb6694c-e943-41e7-9436-7a7e45ffbd99",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9827eea2-3943-4a35-906a-7f6096e43821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60423d0c-b929-45ea-a8b7-2c91bc825b7b",
        "cursor": {
          "ref": "f319a677-66d7-42c9-814d-40e64af177ed",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "48613363-2aad-4f23-bb25-4b79c8b9934a"
        },
        "item": {
          "id": "60423d0c-b929-45ea-a8b7-2c91bc825b7b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c2f5f700-48a5-4e67-a446-ef5a40eec138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fde2f3-e093-4fce-966f-a69f12c6f84d",
        "cursor": {
          "ref": "f611f165-91b5-4260-a8fd-758ed60847aa",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f294e727-7a34-4e01-9e1a-41daa8f3e3ad"
        },
        "item": {
          "id": "66fde2f3-e093-4fce-966f-a69f12c6f84d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d3d746c5-3a52-4547-8ed6-fde395cf15c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16bbdf5-482a-44f8-bb51-2c02eb6d4e95",
        "cursor": {
          "ref": "7ba403c8-8424-4355-acd4-717d4bad3162",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3ef6bf34-d433-4609-a920-1a1f0c36230a"
        },
        "item": {
          "id": "e16bbdf5-482a-44f8-bb51-2c02eb6d4e95",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3d1d1a4b-1e1b-41db-9f74-6d10096f92cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7ea07d-d90f-4431-afd7-b0fba1b0ddc0",
        "cursor": {
          "ref": "c14343c0-8cd4-49ff-89db-e3505d8210d9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1b587102-1485-426b-ad81-996428f4e0d8"
        },
        "item": {
          "id": "5b7ea07d-d90f-4431-afd7-b0fba1b0ddc0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "48857737-caec-43d5-879e-2922cc3c848b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f5d107-e0ec-48f6-86c6-854b94348c27",
        "cursor": {
          "ref": "1e5ac409-b5c0-47b2-a73a-39f7fb2f16ea",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "76d4b680-bb30-48f5-98c9-b1cc81f57ddc"
        },
        "item": {
          "id": "d9f5d107-e0ec-48f6-86c6-854b94348c27",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b4b0529f-fc9e-44f5-b7ea-e67c69ec6671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfe3488-637e-4732-8421-2b6d0def713d",
        "cursor": {
          "ref": "74d39201-4279-4189-83db-82acd2543909",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "476226e5-8ce5-4109-9b3a-4ab83ab9795f"
        },
        "item": {
          "id": "2dfe3488-637e-4732-8421-2b6d0def713d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "23879232-2648-4633-a518-cce4cadf2815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0a0e15-e7f1-4b60-9f5f-09f1792793cc",
        "cursor": {
          "ref": "fd8c6728-d4ef-4d80-afc1-8ba8e19a6a05",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ac9241d8-ebaa-49b9-af6f-a3df2a1c8d71"
        },
        "item": {
          "id": "de0a0e15-e7f1-4b60-9f5f-09f1792793cc",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ad2fed25-373c-4b45-b19e-17eed7236ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbadcda-f1e8-4e34-b8af-6eec97931ddc",
        "cursor": {
          "ref": "7b9c5859-b249-484e-9b76-633f1dfee966",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9fb2c7ee-e149-4379-9d38-5edf4b357856"
        },
        "item": {
          "id": "5cbadcda-f1e8-4e34-b8af-6eec97931ddc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8999ddab-4929-4b72-9e96-5f1dbb6d7fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed11d98-98e4-4ec9-8aae-8df744a31a95",
        "cursor": {
          "ref": "a535a0af-cc06-4d47-b67e-6bf7498dd059",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "db8ea541-014e-49c5-a95c-0fdbe39ba53e"
        },
        "item": {
          "id": "aed11d98-98e4-4ec9-8aae-8df744a31a95",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66097447-8f5a-49c1-823b-31c4b200fcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7df1b1-c48f-4970-8f02-8517816307bc",
        "cursor": {
          "ref": "9c87797b-927b-4d7b-bb17-602756b430de",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "87ee874d-2708-4867-baef-13e1f0b8edf8"
        },
        "item": {
          "id": "1b7df1b1-c48f-4970-8f02-8517816307bc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0e3cbafa-afae-4035-868f-c6fa7bd1444e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e9feac-8546-4383-9ef4-16f1584ed88a",
        "cursor": {
          "ref": "dea4738b-767c-4627-a44a-df0593e750cb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e4ad70f9-a8a3-4765-864d-5cc6b93f1054"
        },
        "item": {
          "id": "f4e9feac-8546-4383-9ef4-16f1584ed88a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f359fc15-4a80-4d55-b7e5-7ccc6f5adc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a1badb-b139-4ec4-b09d-92539d2892e5",
        "cursor": {
          "ref": "df9afdc8-e808-4fba-a031-b1c10a38fbe8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "35eaecfd-0f95-46e0-a59a-497a838ab6da"
        },
        "item": {
          "id": "b3a1badb-b139-4ec4-b09d-92539d2892e5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c48d9972-a4ca-4241-a7ff-93429cb44f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa974919-0996-4ac4-b638-ce6214feda64",
        "cursor": {
          "ref": "5021a50d-ae38-4fcb-af98-62c7569a911d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "0a6bfd63-c6bc-4924-bd1a-88476392a156"
        },
        "item": {
          "id": "aa974919-0996-4ac4-b638-ce6214feda64",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cdde57c6-29b0-4fd2-a410-fd32ce649f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be43806b-f71b-4224-b37d-8d7599a6d40f",
        "cursor": {
          "ref": "7220cf04-a378-4c88-8490-61623745c56d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8be2c8ae-a7be-4415-8e9b-0b041fbef521"
        },
        "item": {
          "id": "be43806b-f71b-4224-b37d-8d7599a6d40f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "61b4c624-c518-432a-9c9c-8131eeedf5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea659c7b-249c-4548-a5a1-322716f86d37",
        "cursor": {
          "ref": "e19c5bd6-a474-41b1-af82-6c9b324563d2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f118e156-db07-4ed1-89bb-a460eb493d00"
        },
        "item": {
          "id": "ea659c7b-249c-4548-a5a1-322716f86d37",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "963ae113-4f3e-47e7-b895-2d50915a0cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb7099-7596-4ce1-9547-e2fd9948dea7",
        "cursor": {
          "ref": "f7cd5e58-3155-4313-9cd3-a8a74a33237b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2a1fae21-badc-4147-af3f-c37def3957e5"
        },
        "item": {
          "id": "a5bb7099-7596-4ce1-9547-e2fd9948dea7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c25f97ef-1192-4ef4-8f5e-bb75cd311831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a8592a-a634-4a46-8f6c-b7358748ccf6",
        "cursor": {
          "ref": "029b6aed-4732-4977-987f-a1c4af7be431",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e53aa847-69f8-41b0-abaa-2a93de581451"
        },
        "item": {
          "id": "77a8592a-a634-4a46-8f6c-b7358748ccf6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "60f52dd1-73f0-4768-92fd-9a9ed911aa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad31c76-6484-459d-9505-dd6d9bff37b9",
        "cursor": {
          "ref": "08133ec8-7395-46a8-b6a9-ac80e6469fa3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "51b13c99-5db1-49df-8268-f0f900ac02b1"
        },
        "item": {
          "id": "6ad31c76-6484-459d-9505-dd6d9bff37b9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2c1a7e4b-de39-46d1-898c-07f9cbc57de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df407516-194f-4627-a5d2-91aea5f23a74",
        "cursor": {
          "ref": "b442aa33-f4a3-4be7-ace8-c6553d67e695",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "109e9f0e-9650-49ec-a16c-67dca1f5333d"
        },
        "item": {
          "id": "df407516-194f-4627-a5d2-91aea5f23a74",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4e576107-4a8e-42d6-8897-2f27fd30e736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68357ea8-b60b-4814-9477-732d4a4bcc4a",
        "cursor": {
          "ref": "6bda885d-9720-49db-babf-4cb0281cd6a7",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "329f562d-d0e2-453e-9b44-76610c216608"
        },
        "item": {
          "id": "68357ea8-b60b-4814-9477-732d4a4bcc4a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5503291b-59a5-4f6f-8c56-21bdae0c7ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e377e91e-ad11-41c6-9a08-d49d7ea1f9cb",
        "cursor": {
          "ref": "df4fe491-c14d-497d-a441-af0cced355c2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f679347b-664c-4040-942b-ae7e389943e0"
        },
        "item": {
          "id": "e377e91e-ad11-41c6-9a08-d49d7ea1f9cb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "022f6549-3c28-4f7a-b4bc-ab2712c76c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8edd7b-e976-47e7-9275-cc47fc230e6b",
        "cursor": {
          "ref": "ed45b496-36c4-4adc-adae-1a623402bbf6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "753ba938-42ce-41d4-a8b8-e708c940dafa"
        },
        "item": {
          "id": "1a8edd7b-e976-47e7-9275-cc47fc230e6b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "25ae7b50-c8e3-4df8-879c-697293583bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b76ee5-40b8-48ab-9ef2-c762129906d7",
        "cursor": {
          "ref": "97f332e6-a7b5-44ed-9c1c-593d5a570a62",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "00d4293c-cb76-4ae9-a8e0-86d609080592"
        },
        "item": {
          "id": "f3b76ee5-40b8-48ab-9ef2-c762129906d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "88bfce80-af8f-40c4-86db-afd05ee36d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fae266f-2fb4-4f44-a790-f7c07d338101",
        "cursor": {
          "ref": "2575b089-4658-436b-a466-e71a6186587c",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ab3ac073-b73c-4074-8962-76033d7af087"
        },
        "item": {
          "id": "8fae266f-2fb4-4f44-a790-f7c07d338101",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c2b2d525-8b67-4d3f-838c-bf710c9661d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f6192d-6f27-4f8e-9123-d254a10eca7a",
        "cursor": {
          "ref": "952d2649-a6e2-49d3-b98b-3f1a35e83bcb",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a77b8357-59e1-4a5c-8db0-6836b936988c"
        },
        "item": {
          "id": "27f6192d-6f27-4f8e-9123-d254a10eca7a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b729b8cb-1434-4592-81e9-413cb865f865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb39805e-5eb2-4134-8948-3d72989f2b02",
        "cursor": {
          "ref": "c78a7a5f-ddac-4983-8fc7-0cda1f5f3c0c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "88b4ab47-781b-4fc4-8e71-6bb7aaebb1a4"
        },
        "item": {
          "id": "cb39805e-5eb2-4134-8948-3d72989f2b02",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7c987694-da4f-4f84-9106-fc65dff1cfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e35d15b-0485-4970-8d7d-f09559ecface",
        "cursor": {
          "ref": "57095370-8d9c-4eee-96f5-f14619f6db79",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2478458d-4fe2-47d6-a7df-741ea824d643"
        },
        "item": {
          "id": "3e35d15b-0485-4970-8d7d-f09559ecface",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "17bf6a38-ed2a-457a-b2ca-621d165f79bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf67c249-03da-40f8-a979-8443ccce7ae1",
        "cursor": {
          "ref": "2f56fb0b-7710-4aff-a570-740d6b4ad819",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e3dd191d-936c-4a0e-bfc5-481c01e2d205"
        },
        "item": {
          "id": "bf67c249-03da-40f8-a979-8443ccce7ae1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7c60ffe1-9fc6-4a42-8bbc-84cd305ed451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87c885e-93a1-4c21-92f5-1d5201ecabd1",
        "cursor": {
          "ref": "6b3ec5c9-0d09-4f1e-b12e-68a379087365",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "176c9fda-2fa3-454e-a400-10617e7a7be5"
        },
        "item": {
          "id": "d87c885e-93a1-4c21-92f5-1d5201ecabd1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e82d070e-54e8-4b93-ab40-9a9f3dcb1a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7cf386-1462-4bc9-ab5e-9826f33fba55",
        "cursor": {
          "ref": "19b4b925-689a-4470-9ce5-6e1edb3616ae",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0a5550c8-9e8f-4dcf-b30a-7f89194122a6"
        },
        "item": {
          "id": "6c7cf386-1462-4bc9-ab5e-9826f33fba55",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e7151b98-a17f-40be-a1d7-eaf97455c487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b25a3c2-ce90-4e04-9bd7-c7818d162388",
        "cursor": {
          "ref": "b978044f-f7d7-49af-9a07-530f069a4597",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "db03889f-0aac-4780-9e26-7ad95d0315dd"
        },
        "item": {
          "id": "6b25a3c2-ce90-4e04-9bd7-c7818d162388",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b62e5350-89a3-46d2-b4f7-150682cc6ded",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5609bc16-b6e7-44e5-9a52-b426b0d5d1cb",
        "cursor": {
          "ref": "c01095fa-16e3-440f-8ba7-9b831ee9a449",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "507cc4ed-aa62-4f4b-a401-dc4287f3a99f"
        },
        "item": {
          "id": "5609bc16-b6e7-44e5-9a52-b426b0d5d1cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7c467018-b3cb-42d1-85da-8b584fd51141",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5d93e9-e481-48af-b0d1-8d139e484fa0",
        "cursor": {
          "ref": "8d539405-6a25-4eca-b445-10b0e5be7411",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "190fe8cd-3786-421c-aa74-6581ba67ab2e"
        },
        "item": {
          "id": "6f5d93e9-e481-48af-b0d1-8d139e484fa0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7adf73b8-f44a-41f5-a3ba-86a393a993d5",
          "status": "OK",
          "code": 200,
          "responseTime": 2730,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f755b929-2cdd-424d-99e7-ffa10d61ba8d",
        "cursor": {
          "ref": "756ddfdf-ce2f-49ad-82ec-9e49e3326d8f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8f3eec83-ab19-464d-8c7f-dfb8bdc4b378"
        },
        "item": {
          "id": "f755b929-2cdd-424d-99e7-ffa10d61ba8d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "901230a4-40b0-4ad3-b51a-95b29066d9d0",
          "status": "OK",
          "code": 200,
          "responseTime": 2402,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ef2b3f-d925-403e-8bdd-4b2ba03c1a75",
        "cursor": {
          "ref": "5ee755ae-2a33-4abe-85a1-acc3e63b3021",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1735628a-a9f8-4ba4-b657-23e7441422e0"
        },
        "item": {
          "id": "49ef2b3f-d925-403e-8bdd-4b2ba03c1a75",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28921d70-13e7-4d0b-8bb8-3c41b0948005",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ef2b3f-d925-403e-8bdd-4b2ba03c1a75",
        "cursor": {
          "ref": "5ee755ae-2a33-4abe-85a1-acc3e63b3021",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1735628a-a9f8-4ba4-b657-23e7441422e0"
        },
        "item": {
          "id": "49ef2b3f-d925-403e-8bdd-4b2ba03c1a75",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "28921d70-13e7-4d0b-8bb8-3c41b0948005",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a71da8d-3dfd-4968-af6a-13d9ae0334b7",
        "cursor": {
          "ref": "5ec5cdd3-81cc-4176-9ece-aa172276d1f6",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "2f709962-7964-4861-9580-4c6ace10fa56"
        },
        "item": {
          "id": "0a71da8d-3dfd-4968-af6a-13d9ae0334b7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e567d218-c8a7-41c4-b849-64f9eca24dde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d4faee-7d6a-43e7-bbe2-c9a21bcecc2c",
        "cursor": {
          "ref": "34f1bd36-cff1-4579-889e-076c25309980",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "721144bb-6304-47dd-807c-7715113f04a8"
        },
        "item": {
          "id": "25d4faee-7d6a-43e7-bbe2-c9a21bcecc2c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "967ec12d-40ec-43a2-ba9d-99735469b204",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}