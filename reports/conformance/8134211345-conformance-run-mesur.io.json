{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "649dc96f-cdf9-409d-bbc9-f54423d852f0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6077f04f-6e1b-4c4f-987f-532961742ad5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b87eacf7-817e-494c-84fc-ebd3a54e09dd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "74f47ab0-8a5e-4a24-a40d-21cda583d1be"
                }
              }
            ]
          },
          {
            "id": "0f0e3a9e-8985-4419-a14a-1733746779c2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "304039a3-0a13-4d08-b6bd-654f38b6be54",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a5b3d44-483a-4225-9050-efdb73294f0a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1eaef5ed-9872-41c3-9db6-a06657d684cb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "57d12d0b-1aed-4284-ad57-216fbd21ba81",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5b4da622-8bfc-451f-aaff-c55f8c2ddc89",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ca62520-e7e3-46c9-98cd-4061f8080735",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ee1abad-a384-4b6b-ae3b-2167085e6a91"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe156f4b-ff90-406d-b4d8-2cc328bcc903",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d04f696c-3c4b-4a5c-8081-b46d0ff7bb27"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d7a0035a-c0c9-4e1c-93ea-9b3b05cd1c6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f1d453c-9161-433b-a9ab-c53ef57a2067"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ba3691b-24b1-4782-a421-c942139e7dd4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ad591400-99e6-48f1-adaa-d0d2731a8d0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c8fa5fa-e225-4a32-bff7-a3546db9e357",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4aad1547-a37a-4042-8ca9-c1aa5bde4ca9"
            }
          }
        ]
      },
      {
        "id": "ca36b4c2-2ab9-4c47-9225-77415c4d8617",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "56bcfb5c-d049-4233-a765-390ff0d2ee89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cf7b597-0396-4cce-bfee-bc32a17bcdfc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3267409-dbc7-4cf8-b513-69a3a52bdb33",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb51fbe-9c0e-4dae-8e7a-887fc5fda571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "983b05df-bd3e-41f3-a23f-b465a3b907ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5301ded7-aee6-4796-826e-8e5e4ed46557",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6000e6c0-8d6e-4ad0-846b-7456263ad79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea1eb46b-c994-4104-bb24-5eca7ac62901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb790da-8cf5-4ea4-bf62-24653c9bad6b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d2ce11-a454-4fb2-b816-6c80e0fa8657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a82aa6bb-e4cd-4228-9d9f-219bac45e7d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "39140d87-6870-466a-aa18-796a27340f1c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dacf9d6c-a805-40d4-906d-603e7f7aa4d9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1520c9a1-b7de-49b8-95ec-d46b37173440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4abe3d0-a934-4813-894f-61fd5294c9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14470dd6-6132-49a1-b4ff-fe4ff7f6e554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf29299-58e9-4aa7-a953-1d9eead4e3cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0f51d39a-a8e1-4a9e-b8fa-4385de99aa8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "927da183-c13a-4fb0-98cb-c7ea78d238a6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c422ce59-c08a-4c46-b24c-7741b1e26c90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6cb4b7d9-b74f-42bc-8f03-1c404b6b2a17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c430395-addb-4f41-b96d-bd1b2eff70d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2ed09a33-2ba4-4276-94bc-9191ac0725c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a906c4ec-7fdc-4271-9fc8-14fa10f3f4da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd8b2f3b-f279-4102-8f5b-1aa2c3cf7564"
            }
          }
        ]
      },
      {
        "id": "6ae9618e-0403-4ddd-8c76-406ab4a290fd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9b97e91d-e517-4a44-ab62-26216eeac857",
            "name": "Negative Testing",
            "item": [
              {
                "id": "943bfcfd-981a-4ada-80b1-0e727011f969",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "87359e40-82f6-4361-b2e3-81bb682efcb0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e71debb-6ea3-4ed0-982c-8924a1e24d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60da3afe-ac66-46ea-b2c7-0c8f276d5794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0915f8-0bc4-4051-a940-a5e6ac66599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0551c021-3d77-4010-9283-d748825833da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e93e65-d34e-4454-9e2b-fa4881522a96",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb0394b-2d68-4029-aaf4-1be5fefb0e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b37d4f-4664-4c4a-87c8-361d9c769ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5eb59b-8f1a-4101-99c4-afb15454d286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f811646-3130-4609-8138-672b61b10a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb58ecb8-81d9-4bc8-8fc6-45aac0766959",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f704f39-585d-47f1-a88b-fb715e8f0be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd10e20-2705-430b-a4ad-ce7322ee7036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53982ac7-a6e0-480d-9eb4-27f634f71601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d377257-0675-49fe-bc09-f15bf0639e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e122685-47e1-4eb4-92ea-65bc3842f514",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b00d29f-e725-43b4-a5b3-b7deb053a387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09f33a6-a4e0-4024-ada2-0b8dde387511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15567ff0-e95b-448e-810a-b372ecb078c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef5cfa63-7c1f-46ce-af53-d421fb91754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48041489-6d01-4337-85cd-db7ba8d04165",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289dd39a-570a-49d0-8f84-bf1aea9a2827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6254b8a3-96c3-4832-a6a1-10d1dbfa79e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5ab26b-a6d3-495f-aa27-79fbbebf4455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "837e5f53-4b45-4011-b8bb-6fd0a0eec846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93930c18-049e-4e8f-9a93-ac2c3b9373bf",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f421f6-aee8-418c-90c9-69151eebc81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8761ab-a1fe-4318-a5a1-1b9089d20b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a8340a-2a31-4d0a-b7ae-b25a55c7f16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb50e139-4f19-4990-bf97-1b9ac3e1af35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36272807-39c1-4dd9-8c9b-c259b4e049bc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b34b57-69f2-4bca-b6fd-f6f08c6020c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee540ab-26a9-4054-8868-931857a4f90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95e4a1e-179f-4afd-ad35-4772f03fcb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9956eba-e357-493e-bbfc-ac4ebb20b63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c5880c-1f16-457b-9a2d-be4727daeff2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d9bc1d-7973-4e2d-9853-936b6b1eaeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd74bbf9-e2cf-4f3e-b962-a09aa51047a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091d2ae0-7907-4fcf-aadc-2cb4f6e29707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "499e84c2-2e5d-450e-8277-52092d0df2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aabaeb-37ac-403e-89e2-ac0840d3fada",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7262e0-6ea0-402c-ac74-47e79699e7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0850a5-6f6d-4285-ac91-7a540e86a5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea66a79d-d3c1-414f-96be-748bcd817dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff11459e-9be8-4904-bf48-2d807957f8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8800120c-79ec-4b7b-b42b-2f1e352a5778",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54738b7-6aac-49dd-a6e9-929a92cbd877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3567ccf-3a2b-4194-9267-b2928cddc5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1301a80-c963-43f6-be9f-ab555915e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c908a78d-1c9d-4008-8e8c-eb48477a1104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e84aa92-1e25-4c61-8bea-6b4225047cd7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d776c50a-09d2-49f4-85e4-608417c2d9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060d19c2-329f-4ab5-a758-40484865312b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8875e1a1-4066-461a-b836-7e528215d358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "198b3ce3-c7bd-4462-8496-7b72b2f54f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f838e0a-5927-4a33-8573-e479ff03cdcf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b685cea-2400-4eae-86a6-97f0354c070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12be152b-b62a-4720-995a-d74bd690e849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d2c548-aeca-4e99-bdf1-824145d0c814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe44d2b1-f4ef-4fe0-a758-cc3942646abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761c498e-6cb8-40f2-b00a-dbdcb97d0156",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1a415c-b52d-48d7-8a0e-0c56055b77b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22065cb-31b8-4a7e-a487-d5e5191a736e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36545a2d-b5e3-4ae5-bf35-168c3c7cb657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "203a2500-652a-4d47-ba4b-7e07e9e80d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df35e852-e638-485a-88f4-6c5a2d7fce72",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2427575-315f-4e0b-b0a3-a4294b1f0051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e70f0db-e9c7-401c-ac8f-aec4447c5756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3e3569-4560-4283-ba1d-6cae1b11b440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe262045-5630-43ff-b739-1102ef90e38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8557f1f-820a-4e57-8ca6-4a3699c6123b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5d423e-dd14-4794-a57a-e21c45f8c828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1504a45-7e86-4390-810f-0dd75a1590a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec167209-0fc4-47cb-afa0-45d1122a47ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "914706dc-5ab5-445c-990d-dd2f4f322339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4704a99b-e0dc-4637-862a-1f7dc1e95fa4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e9684a-e611-4d58-a396-af90e4bdf642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b507cb-d66a-435b-bdef-5dcbd3f61aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e99ff5-a950-47af-9b5b-c2b2cd94e069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96a17fa3-11ac-4137-a723-47559e0e84d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7319b605-a13c-4f4b-acb3-6591032ec887",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acedce7d-3f1c-4e9d-a4ab-ddfe8f63adde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6374f7a8-9ab5-4850-9071-0d17e05936c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e5f7e4-31f8-4aa0-ba14-7acf2f9c7c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fb6d473-eb22-41ad-9f35-92f0b7b8774f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b97863d-d986-4840-bd55-80f0b9222d43",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708cc560-0f4a-42ae-8dc9-9ca37d842c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc03c894-9ef6-4816-b713-c5fb5beba908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a803c8-7452-4643-b2cd-28309bf4e841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "65833240-1dd8-466f-bdf2-4de385d10d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea5fd29-97dd-4549-982e-c42f2f8edfdf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ecb3bf-9d4a-4024-904a-f98609a25302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fa6b53-cfaf-44c5-bbaf-6be06c66dc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc4057c-c772-4779-9182-603f552034ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "934d9d32-b668-4c5f-87b8-66c7f8cd39a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840b7a41-bd77-4f60-ae93-af26e1b5cc96",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecf8b30-7ed2-4fed-a8c6-c8118874ba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a5f75c-2cbe-4098-8a72-71d417460e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4041057c-4877-4f08-8cfb-9f4db64006ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b0c8fcd-1d40-4fd9-ab76-f3765906a9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9802f02f-1b47-480b-8f30-76e885015dbd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d41b10-4ea1-4f6f-900d-adb77f643f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86903e9f-9544-4a2a-b175-08f12169dbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b43e25b-3a7a-4099-83e0-52def62c25de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "269263d4-bb2d-4e2a-bf8c-97cee4afd2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23dea99-45ff-4bf7-bb0f-fb1326cd73fd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ad78f7-647f-405f-aaac-e465d0ef26f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e15f30-7b8c-414b-bacf-ba1e881d03a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884d5439-08c3-4871-854e-799d354b9e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28d3886b-b80f-428d-a5ae-1051dc87799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf1cdce-2702-4119-b99d-47fb8c06c365",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1a11bd-72f3-41e1-a337-76ebb7bae455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af8670c-db8e-4462-a501-4e95aa127fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25803ae7-ed04-426a-a27b-1310139a6f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3e60a0-34af-4a7f-8364-7d646aa295a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04c729f-8789-4be8-857a-87ebecce1e5c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebab5f3-aaed-483c-bed3-083d27b06008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784bd10a-0fa1-4dc7-ace2-ac93dac489b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c66385-7c90-48f8-aa2b-58513b23c610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db88128-042f-47d2-9b06-97babfa56c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cbaa20-61b5-4be2-9a4a-fd1ecef54e86",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2785509e-e163-4d4a-93a2-0b70da47acf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f06572-504b-4437-8c91-c08202f051df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab39c6a8-fb1a-4620-8a17-47dd6cdd711a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98c35bc-1a87-4fd8-be1f-ec7c14724531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9863134b-ac71-4d19-9e99-4a23386b4ed7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5af9d29-7e68-4d3b-bd83-95e6dc2191df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4869f120-3abd-466b-addc-a8aea43c2d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76af38e0-1d4a-4a42-b2fa-3097b48dbea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab240f8-2814-4ffc-a987-122ed365c919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18778828-c607-4bd9-b3b4-10ba65f4b9ee",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04bb6e5-cb96-4da1-a2b7-99ed3b465539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3cb9628-483a-42b9-b2c8-59ad49e7b3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628411a7-608b-4ce7-818f-c1fa193b534f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7839c205-e05a-4b5d-a0d1-a6c9c4e47bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f25412-f5cb-44ea-9598-7a3c3f3881df",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fce8094-bcd8-4afa-a2ad-e190e9a08f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc4d035-4fa1-4214-a90c-c3bc2222a612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab7402d-2c48-4900-b1fb-bff68a0a80fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8dd4c71-d0da-4923-a2c0-653bfe325b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f309c6-5a49-41ef-8a90-6d57fb6a1253",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db76bbaa-45e5-4995-a30f-aa3e73d4dc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855ef71e-c6c3-4c6e-9026-3151f0a45b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da4a03a-af99-4b5e-ac06-ee10a4aff153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "843102e3-5695-4003-a091-a567bc478db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dbc9c3-80d2-4a53-8788-500e6935cbf4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c29f81-04c7-4c67-b9b2-e086873cb457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249db36a-e30f-4c11-84f2-dd8a4c3f6e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3da748-f94f-4434-a90c-3590d9f1eca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4627136f-f796-4529-9ea2-f9856c7966c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c390f9-4500-4871-bd5e-7080cd6a0439",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a78297-df87-4d42-b96a-89462e6d90fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7742418-3efe-45bf-9e04-e1c5e1184614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbb7f19-546b-421c-93dd-a952f8ad942b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66dd3c8-50fb-4704-8cc5-dce2a9c21106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a019679-4aa1-499a-8b78-16e38e16a62d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5dce7a-a716-48e6-b05e-6dddab3e9462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05506113-d288-4d47-a3dd-63a7bebdb270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d948d10-86c2-4397-9b2b-3fb322df60b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "753020c1-b1c3-4129-bc53-6122c1969a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84435630-af81-4829-8cbe-67b220f0d373",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736b000f-7ede-4178-9152-2ccd25e7e59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b1b37c-29ac-4774-b92a-4b3c09680c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192f0aa6-3932-40bc-a059-3f746d966f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d2f7bd-1afa-42f5-b3dc-02721c0bed34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233263a9-ba04-41cc-b7f2-73b4c37e0a16",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3302a759-bd88-4002-9c4c-3a72b41290f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da964427-854f-436c-9ed2-2e5b382d1687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fc1267-bb7f-428c-9c07-9ab0f9d03f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b552fc2-2ff6-4ea1-b70e-9c47a52c0e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9841efd6-ee20-405d-987a-77772f1c216d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ec22c7-4c04-4c42-a623-1103147eeb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae28155b-254d-4a6d-8f21-ab7333ae594a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246c67a5-1df4-49b2-b37c-f4aec74118a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "87db5cdd-05a5-40f1-a1be-4a1c6284a8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60185ef8-be0f-482a-9e99-d11554f955c5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecccff8-d165-476e-813b-b59c04f1080e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ace526a-bfcb-4797-8438-b65e21fb6964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bc238a-4032-4f83-a2cd-618f1a7513c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd2fd93-8f33-4646-9c60-b363a7ad42ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0e8023-bbb0-4564-af3e-8e6ceb49abaf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138c2cfe-5d5e-44d6-9500-56db7cccd273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d4510f-e9c8-4487-9a2e-0961eafff0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280f9c23-1682-4916-9da0-27694207d9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc89d11-c216-4512-b009-7f390f322b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baed151-02c6-45ee-98e4-702086eeff07",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f16af7-8b24-4537-99ae-a7dd147df13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93850f2a-7258-466b-9628-3cdbaa95d2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c487de7c-f535-4701-96e0-797bac73541c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a81a23-9966-44c2-9037-32d4e33c12af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94611bd9-ea20-4a5a-a803-b3f603608869",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da7ecc5-39b4-42af-ba30-ffef9688ed42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40087f48-b746-4e92-8ac3-284142ada5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8723fc5-fb1e-4c83-96b0-cf7e250b6d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f37b4d48-df32-4177-9136-120616a1a553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f602c4f5-d673-45eb-968c-8d45bc98341a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8cc6c2-bb4c-48b4-82bf-a9f1639a291e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a436f74a-2bd3-4d60-a5ee-bd726ab711f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8ea63f-8099-4ece-baf7-a8102b0e4b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab35f472-48ef-4b5d-be63-daa8deaee602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c13c90-480d-4a48-a7d0-d999a8be6d4c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08774d9-3d48-4bde-9c50-7888fdc2a1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6f6df7-b6ed-4463-8f4a-3d0a8e6d54a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab5a1a-5994-4a98-bc73-e993e5c6b55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe80bca5-4975-4d39-a9b1-f1b851256531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab453d08-545c-4f87-9d0b-5dc7f408e3c7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb858db5-0834-4d21-b031-278bab37c398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a24ed2-1a09-417f-a497-fb3b47c23118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24004bbf-ced3-422f-b95b-744cdc540684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "304406c3-e9da-48b5-a109-18c8b0113689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc21e19-71f6-4045-86db-abb3d394e781",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4a6a26-30ab-4537-a475-41b72fdd3baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb732725-d13f-42f1-bec7-9494294fc6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea291c28-a66f-49ad-8708-c7581670acb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a71c88aa-e793-4d68-bf48-bbd8c9477a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c99cd65-d3c5-425e-990e-ce2f80f5d29a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb59046-5c64-47ab-b23c-deae9e8e2b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f58c343-bd0e-40d7-8ec6-bf7b360203c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19be7726-7565-46ee-ae7d-8087caa71e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc18b62c-ba6f-4384-af9b-933353ff3589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53893c1-d563-49f5-80fd-5296a4035930",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb55338-44d3-4b31-8ab2-5ed11a3ccb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f900322-ae9f-494d-a3a6-24d809b7c9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fdd08d-d5af-4980-adbc-1ba81ca3791f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0c0f0a-c79a-4031-a8dd-41e9bd2d3ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e3911b-bc42-4ef7-aae1-27a46de2832c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191af5c1-a300-4d59-b404-8f33eccc35ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ef54ef-6e7e-4aef-b146-1aa524923a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b5a993-1648-4923-b6f5-de4513f55baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f63215-2afc-475d-8559-e2219a09c79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e522fef-318d-4183-b5aa-8d0dcc879bcc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a88f55-476b-42b5-8f9f-28b57e34c900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2960b31-bb88-46d4-8377-a710b8412046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ca25b0-465b-4a9b-9a77-057d758f6ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33e12ed4-e8b2-4457-a05d-ed1198c6cddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ba76e9-0eac-4681-b913-811437f21b1d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a959280-ec86-490a-8cfd-f2c1b56124bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8dd60f-c141-449c-988a-904b2e1b3c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c486b7c8-a704-4be0-b806-b651064ae97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d895fce-f4bd-4151-946a-8d50fc68d479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46899065-ceac-4371-9112-a8d016d42ee4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9011078-fd71-4ea6-9c9e-e49ef464d0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47eaed0f-43a8-4634-8a33-194ad28ff2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2658ed47-13da-4b86-a466-2bdd6f924842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a34c349-66db-42b4-8d45-6b9ea6ff1b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f798915-1ffe-4c70-9b73-17bc0bd6aab4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c8547b-14ad-407a-ac34-58309ec14f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48812fef-d9fa-49df-bf55-24045b1edab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb748ef-6dcb-404e-9740-7d448d47e39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a88a8dbc-782d-4e03-9054-9f1af876a4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0987fa-4f98-49e4-bafe-3fdb3ef81a7d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234bf2ee-d66a-4ae7-8acb-da4b8bae200c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29e6191-00fa-4c06-a57b-32ac4dea1ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca772f85-ed37-42c9-a530-5629d826f3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb3ec99-230b-4e8e-97b7-a73277a8eb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9024df0c-607c-4280-9396-5e119f415ee9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180e10f6-b406-484d-84e0-4f012d369124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a5866c-c2e6-433e-8e9d-63d326c2c158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b378e8bf-46c9-465b-8b1f-f2936006d82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72bb1ef-3429-4a65-acc0-042e242b14dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a659b38d-fe92-46b7-b446-bb80deb2fbef",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaecc16-271a-45e4-be53-e395ad2d4449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01c2daa-cbc5-456d-8417-738bcc3b9bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad416b7f-7632-42a0-87ff-6011354f4aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2c3179-a85c-41b5-ad76-cd292e718bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c46306-67ee-461c-b755-97c83c325f16",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a406ca4e-11f5-45e0-8628-d8ca543bdd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971e351f-43b0-4349-99fb-8509165c64a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a7dcda-5385-4385-8dfe-cc99b15f6703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "664c6c70-bc42-4a7e-8e20-987e7f548413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973f903e-6e55-4103-9b72-cd9baf536e37",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f772bf6-5914-421f-9664-a2e6e943331d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4d5c88-af6d-4671-a759-b18d6617e20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fdda36-ebd1-4ae7-bca8-596d53e8e1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c971eb-b31c-4e61-ba47-0a4a2baba61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabaa5d4-0a07-4284-8327-c280aa37efe4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b9b1e0-2477-47d5-9988-fef21487a9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0ee3d5-2615-40a6-88ab-9e41965d05d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60bc829-21f3-40d7-9692-3ac180455c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "396ad369-9605-4d48-b830-64e68dadc565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1567159-9e42-48b9-81d3-1ed3fe4d8c8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d191bc-e150-440f-9dfc-2b44753c8ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf1b909e-3ac7-4c2f-bc01-e5ec7f5671b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41513f3-9c81-43a5-a104-6a41fb45a230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6913ec37-8651-4e3c-a4e5-62b3e2517f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ab9010-bbe8-4558-b769-365b3b9fdd55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7168a36b-28a1-41c4-aaa2-3357c321a81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf19d3b5-1028-448e-a5c7-63f35f571f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e59cfcf-b4c7-4cbd-a839-8a5ab4c7820d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c749624-b5e4-4871-90d6-19e3df24f8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649864d5-7157-4898-9fe5-501650c8b475",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311dc48e-ebfe-42bc-998f-b043ddf91460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd4f906-0160-456d-9e87-9a267c1ef043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb643cd-9a61-4014-97ee-d4f2905d2e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "47cbd246-b37a-42d5-af31-eb0defc8da31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da3855c-a152-4d0c-bb33-5662eebaf7ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc290cbb-6a25-4267-860c-a2b0ccef082d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3caaa574-8056-4155-a778-dab2df9e1fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bdfa1c-6a6b-4966-a65c-d9ad8e37a665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc9fe8a-a7de-4e84-a6cc-91176bbe7173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5b5c7b-bc7b-43ad-8795-a8780a455cad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17377eda-9288-47be-acf4-4eb4875888aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f82d4e-cf7f-49c1-bb73-0e0410e0c30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdad9013-f943-4dbe-9173-f6774d18fc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2624dd04-66eb-41d3-8ff7-a01d540ccf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234205b7-9d4b-45be-8fbb-a4945f68ee1e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554b05b6-80d7-4f57-a761-1ca960eaf2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d730c4af-0fa3-47bf-aede-fe98f0e0e704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1e3abc-c5f5-4dab-9b8f-903a928306ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8de885f2-e089-4d74-a9ce-5e952922ff69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2312d2a8-dd34-40b2-8a37-3c5a3deb78aa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b8628c-c936-4968-9f26-d755492e3a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1629eee0-5f29-48db-b79e-ec253b69c71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795297b7-7015-4c21-9012-705dd8d93913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c84063e-1917-4696-b0f8-b9b7b40e999c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8e5f81-8dac-4094-b093-b62ab222f61f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f65338-ae36-4a4d-9696-439292a340a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c52f1aa-8e56-4030-8300-c40346fd9f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341426ce-fba8-433e-896e-99a6bf7a0b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac0d8a9-5528-464d-9b1e-c5e6665f7314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0933394-32c9-44c9-b6b3-36fcc10f3c99",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cf9a7a-1da3-4b51-9fc7-af638bfb808d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718e0c13-4105-4e47-b36c-106d467b7e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a608e41f-98ba-4f42-9c84-e96378b54f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2d2d6d-04e6-448f-9c55-8a5da2002874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c532e0b3-4b21-4409-892c-b810b549416c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b1e46e-c09a-48fa-b9be-5006fd0690dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ef2a98-2040-4f4d-a045-6caa486ed5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99ed0f2-23c3-4698-9095-c32f10165020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b5995a-bb94-4175-b696-176827ed9aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a017a6e2-fbee-4b70-8ce8-c266f82e1d9d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf84241-9572-416d-9144-0ac24a6c1a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d3eeba-6a9f-4e83-ab02-03ef172235af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25c7540-cfec-4a20-a229-0ec49914ec50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0b4b2d-eeda-4c56-80db-c78d4bd84905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5e9378-69b5-4298-8f23-dc422660679e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e01716-f912-4743-ac47-7a49388188d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e47512d-1fd2-4759-a641-6f68c8474f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304fce48-4315-440b-9ecc-2a8b18425475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6f28d8-28cd-42e4-ad59-be8d937a18e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d744d4b-55c8-436c-b61f-954464b43489",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f571f2bb-cf5a-4e51-a60e-12baa6dfb1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fa47de-8fbf-4d38-87d5-dfc7509c7293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394e6883-67af-4452-ae1e-c5c2d545cfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4684eb6b-db0c-4c27-91cd-b74587dfab95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a7e542-cc02-492c-97df-329c3f96d445",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a307fc-e652-4ef9-be56-84d838da3cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ae363a-6226-4dbd-8dce-dc40cdae9e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bbcadc-dc46-4198-99f4-46c2b1579813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe3c219-2b3c-4742-a9c4-e6c52d7c36fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb06cf-ac4b-45c0-b2bd-adb7066e2293",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb9d92c-ed4c-40d2-83e8-02924fcb2a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16efba19-c0d5-4cd0-9d9f-dcd4e5f2f147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dc38dd-2a6a-4e6f-a98c-b85f7fcf6afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e21fbab-29ee-4f77-ab80-92d2befa69bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c9ab0b-525d-44f4-9bc7-b7d0ded68c89",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "769edb45-9529-44ab-bfce-118b7f87cfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c567b5-ff80-4517-bb2d-b6da4f11f6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fcd063-5460-4a8a-8d9f-0b70c8b422df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a93d2c-f003-48bb-b3cf-cec16e3c1a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38c6253-4ea4-404c-9294-b442cb5255ec",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bbf914-d347-4892-a1ef-f124bf221be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987db0de-d048-457a-928d-7803bb8636f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7016e56a-0540-4ea2-ba31-bf9016f1856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75f1a9ef-c47c-4480-b482-54ce089e9c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e444ce5f-0561-4fdb-81e9-3f7bf2325a64",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4babb01-cc29-4d3f-9237-1a737f12cf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186885d5-f90a-40be-81e7-719b837e50c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0f8df4-556b-411d-b049-9ad34f0ef777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "601c755c-191f-4c88-a7e5-8675b18f35e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871eb8a4-aeb2-4663-9e11-f8efc865fd3f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7797ff01-b730-40ca-86b5-4bd23bbf9140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67850288-9d65-4b16-96ba-fa1f7d43f178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da6af20-392a-4098-96fe-428424b80299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a69ac8f-8a61-43f9-a338-4dd526afa2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c906e8e6-fd7c-49d8-9283-1aaceed76743",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd9477b-2e90-48ee-b9e1-5b15dc3fab80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6562b3d4-f931-448f-b3d8-d7db17b53a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8acded-c27b-40b8-9fe5-743aba26c0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dffc2947-9248-4774-8b4a-86746c95b766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abb8279-d662-4c8e-b0fa-b5124fd7ea4b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eee1895-91ce-4077-990c-16a579922cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a1e82e-33f2-4a3b-ad5f-9d0aee799224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccac621-1765-43e1-864a-7307acf1ed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6db2f950-5a41-4c1b-808b-23f16844b1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bd5736-c358-4d34-a349-c585d3629b06",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753fdacd-d882-4e9b-beee-8558544852f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1839fa-dce7-457b-9759-38adf577dfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c955628b-b676-40b2-a903-ab6875bd5fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c256e5-e028-404e-b0ec-2b0ddb8f64c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d23d07-ea3f-43bd-a08b-15e2a68b9225",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec83b0b-8107-43cc-b41e-38107eaf03cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa85d08-4461-44e4-ba52-16f906ce8b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6386080c-f529-40e5-b1ce-8b1ba308cc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "366e1e4a-9ba8-427b-9652-66b25b618ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bfc7e0-12b1-41ae-84b2-f11e4607904e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c6c45d-538d-4984-8f13-04c3153a49e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05e286a-8f59-4ba5-969f-9e3a9301a750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b41d8b-390d-4207-b05d-46646e919fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96cdd0a2-50f7-4b4c-a3f0-5433d9651ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58be0f3b-4c23-45e3-94bf-f22e91ef8c84",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016578d6-f6ef-4464-83ab-ce834d5481dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8706ac-ea8a-4ebc-ae56-2595215ae840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf852f9-3873-4724-9463-fe8e1db9e058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ced44ac-58c9-42cf-bb62-ecd41021bd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b3b219-2904-47a2-9114-e5cb2b157086",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c2ba4b-84ee-462b-a7b0-e65ada5e1ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2218bae4-8203-4599-9576-5bb882a771f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc143390-248e-4b76-a102-43cca9103dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e118a2f1-1803-41af-aa2c-10134659858d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1f4ff3-394a-41ab-b1d3-452bc46a43d5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddafe2b9-5787-44e8-a5bc-56b7a1a83635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034b7f47-7b9c-4bc2-9557-307a880ebac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5179d82f-90be-4ec8-94a6-38c57aa978b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b046ecd2-4d16-452d-8ffb-a4a92806aed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c73329-7468-40d1-869e-08628041d97a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d664b2c4-50e2-438d-a00c-c0a0b2180437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f3a444-9667-4ba2-8e87-5521ca107f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32659aed-e61b-4612-a0ad-30629e4ce03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de913cff-e938-403c-b6f8-31b3e344f635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d38aba-7d49-4446-a1d9-ea1a5a2c9de8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf26c95-5782-4fdc-bced-0d8fc2af2df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e924baf5-7d40-4510-a276-38fa65ebfed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060c9084-9b89-457f-b463-eeb87fbb592a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "900fb0ab-435b-4169-b2aa-a74823bc59e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991845e1-fc74-462f-a649-c71af82d2513",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4180b72c-7809-4192-9827-60fe45ba213a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb810458-3fa8-4cad-8236-31e3b45f7afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01836b70-1118-41a7-b44b-09cc03f92a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7a0c49-4859-4aff-b110-6832ac40bbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0d8fc8-9a8e-40a9-8d8f-e336547892f8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f206738b-9095-4fff-adbc-db4181a4346a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826a1af6-b456-493d-b1fd-55ab5a71f428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc6b2c8-83c1-4ddc-94fe-329f46402d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3db67192-6d99-4b2a-9bf3-a21f5292fa74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924d04a0-89ab-4d22-9fc6-9ddcf8cbaaf9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e228a1e-a652-4520-b10b-9dd7b3bac51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3149f11e-dd57-4a0f-92eb-b66377fe4578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a72810-a536-41e9-9593-47aa051c8421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdf1952-b7f6-4c8d-8d36-f67e89aafb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bfe6d0-d819-489f-8009-562622ec4586",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9640b70d-cda4-4599-9c50-213d25aa1403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030ed86f-e08a-4251-80e8-cd1309ae674a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e0386f-779f-41f7-8800-245561027316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27e373af-efe9-48ac-abc3-9f9c8f3a1f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54505893-a70b-42c6-8064-6a12e34f245b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5b304b-ef63-4f4c-8d59-f4fdf0de3f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c72aa19-3ac3-47f9-b4f0-816c3a86a1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f83a5e-09a9-44d6-8885-4aabd560fdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ace5f139-1377-4fe5-98e7-bde8da6d5bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f78ce0-497d-4a22-a39d-306dcfd2cffe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f068e2c-5070-4b37-a2f9-62d018a305d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2afa0bd-9270-49ce-8fe2-624589fcb679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a356f1-71f8-4aab-ae68-7cd0325cff91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d22c299-6f17-479f-98f9-ec3307d40074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbc7c96-793d-44b2-aabc-1da846bcaa56",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e146ef0-0beb-4a19-a752-c0f71028f686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "506570ef-22cc-4821-be03-0a47a6000ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527754cc-59d7-441b-8f88-f053f7020ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "feb3efde-ea8e-4ae4-8d13-a0f2436bf92f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20c2008c-f166-4577-b935-341da8b55a45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "268d47d1-215d-4527-9563-d529c16c55ca",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e52c18-be05-41bc-aadc-a3f3ec528c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ed61daf-36d4-4ac2-bd2e-a02b551ec422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a793731-da16-4c67-83cc-55c90b78c9e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42fedc37-ee09-496a-9987-753f6df9683f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecc4a637-38a1-4ee4-b0a8-61cf1c56822d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89f25936-aa05-4a78-8d6a-8d08e5d9054c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7052e34-44ef-424e-85b3-c0af4b036ea4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39cfe03c-1fa8-4889-8595-251f0bf6ef81"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e09f332f-7080-4c50-89c8-3c1734a071ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81063d2e-9f77-422d-b2f5-ea6dad023c29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4d09270-9e12-4366-b31f-a4900555e8a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "860bae55-56b5-4d17-a58c-002dbbf70f0a"
                }
              }
            ]
          },
          {
            "id": "89a170a8-6e9f-474c-9cf5-40983cd25fa8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "259597c2-4c52-458c-9d4e-70917ad8cab7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5c6f9517-1ad1-43d7-988d-9da67f02f2d1",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dc0111-51ae-44ea-9afb-c9bf68d36883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "05d672a1-eca9-41f1-af1c-b80839ba8c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516c19db-05b5-48f5-92db-1d59848f64e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7c904b-8261-4ae2-a95d-d384a3b7c28d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35993dfa-3786-4feb-84f1-5de03750c171",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48834619-5091-47be-bb15-32c9d24cbb1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "041b2e24-9c34-430a-b35c-b1e5330b587e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e1fe410-e9be-4626-bc14-d96ff5612989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3e07ef4c-2db3-49d6-9315-e523e1548247"
                    }
                  }
                ]
              },
              {
                "id": "1d20fc51-420b-438e-9e10-c24c04fa7946",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c548d9fa-89aa-4f53-ae58-4c7f892c2b46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "081c28ff-e6e7-4cd0-8462-7fdc6966ba6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e39d2a33-45e3-4d45-bbee-b3ceead23f53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3bde63a3-398d-44bb-83ae-02a16e493e79"
                    }
                  }
                ]
              },
              {
                "id": "a088d97f-1f27-4de3-be42-3de530b51b06",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30200db2-412a-47e4-ad08-532290efbdab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ade886c-3b4b-4264-9f11-14e8d73c6cd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "033f0c5e-e5a8-4042-8e97-2b3e429b7e12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0456a81-b8fe-4830-bfb1-ab1bcf0dfccf"
                    }
                  }
                ]
              },
              {
                "id": "eef837f5-cc9d-4b27-985e-7969d1742af8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c745f552-0238-4598-8db9-bb75eb78c429",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5926e631-62cb-4064-a134-6c2d6810a012"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24fbd765-b6bc-4030-818a-da43921d8108",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "17734842-05e6-4271-8fbd-6480de1f9766"
                    }
                  }
                ]
              },
              {
                "id": "eafe61b4-985a-4f46-a9fe-131ec5be5ba9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "696d372c-f12a-491a-9c3f-bc4bf03763d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "805dec57-9c34-4e5c-8fe8-68f530fb2944"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "864359d8-a468-4637-9d21-37169d116a6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8f178a89-67a3-400b-8b0f-f97e48fd0796"
                    }
                  }
                ]
              },
              {
                "id": "0e8fa613-c9d1-4efc-a5c1-2ea1f659d924",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "864e3322-77a2-4037-bd65-57bb8c867e8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4da0cad2-0bba-4e69-8677-a6dacac7d9bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cd94324-7209-46e1-9963-77f25b8196e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c379b9af-5b8b-47a0-a4aa-9f3db137c124"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3c75ffd-d990-4202-9075-291b76258183",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03625a61-1ccf-4861-b8b1-b19f82e2a744"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "231f035a-4c61-487c-b7a4-b0014bd7e5fc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "292319e1-38d3-4484-9215-017aa7beecd2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "367c0f29-e259-40c3-9a7e-053085068522",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "50fbf5eb-65fc-415d-9a96-2bf1caf7e123"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "884ec04b-8a74-49c1-8c4c-6e8e97556e9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1843963-31d9-497f-a335-b4ecfb350490"
            }
          }
        ]
      },
      {
        "id": "6fbd2aa4-6c93-4e20-8739-18b8e090f124",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e144ceaf-d6f4-4ce7-90b7-4999664a2a6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f1c42a1-c7a6-4d82-91e3-91324f76ef98",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02545ed9-40d5-4ed7-ae1c-44ff2a6a9d4f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3979af00-f352-4abd-b3e3-364734564d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf87753a-f377-441a-805f-0f6024481cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff3c96c-e557-4f41-8e23-a0d06bffce90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ea7031-14d7-4f3d-bcb6-cf8dac59caf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ab06e5-452f-4e63-b432-ec1bffc1f896",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788f02f3-7737-458a-946b-e2b7ed552a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530b8c0d-b06f-40cd-a008-3b0c3034d793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf062f-4cce-4234-96df-8d1cfe59bb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddfb0d3-55cf-4398-871b-4a07c9d987d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d7d8ac-e92d-4509-bff3-e8b835332707",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa0f504-fb43-4713-bd9f-98f805fcefd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e7dd6d-2c05-4f45-80e7-74f05ab8296e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfdc4cc-3b7e-4791-a10e-843ef91127f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b37d2535-49b3-4d17-a490-66d81dc4e142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35a4b0d-08e1-4b45-9962-cbca4a1ed307",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee04a9a-8bac-43be-a6b8-c7aca3c06e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9011027f-b5ab-4fc9-82a8-9690dff68d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cbb055-d366-4cfd-af59-ceca934d9c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18cb5cef-ca41-4c36-a210-488ae651aa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f82d9b-38af-40c3-9477-8d7e236de9e2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f58cf5c-389d-445d-8b06-9d96ea015ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3928568c-4c41-4526-93eb-f3d23f6ed8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03738bda-3e9c-4690-a025-3b4ec1eb7e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc9dee2-eb82-4cb8-b850-a7ba81d55eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348227bc-3850-4653-92e5-a02b83d84869",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a70c8d9-9cdb-4b9e-be48-d222a781069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7b8c55-2854-415b-b2d0-88326784d6c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a982573e-bcb8-47ac-8373-bd4d1db76304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1d8d8a-5646-42ad-a416-bd4cfda74404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4003fff9-99c7-4708-ba9a-48cc06f8ed04",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a373e56-cc38-43ca-8830-bf9e3ab84532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86737feb-d4d1-4945-a9e6-c029d59f9562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc10a85-e745-4bff-85f4-7a1a4e634b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a54270-6295-4848-9f81-8bbef74d1636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c3267b-7650-4293-8b88-5888a487c001",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437adf58-3149-46ee-9b03-c99ddc336941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f9ac65-400c-49fc-b52a-1322899e8362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a379c8-9620-41c0-af0e-d7a601b8198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea3fd92-897d-4ede-ac6e-2a75dba34d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6001df-f91d-4310-b187-78bec924a493",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066661de-6a0f-4539-97a6-44abf14dc93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c245ffa8-4cb3-47d0-b26d-cfab9640012c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d02bd78-153c-48e5-a0df-f24e88224744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b554e7-ac48-4e2b-80a1-14a5c56507c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c5e852-4350-4aca-82ee-fdd5d957e533",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d2de22-8597-4064-9e2f-688c01c8be32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e6d9ab-eb4f-4ef3-8eac-558a293ccdaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572cc61a-3d98-486c-bf7e-5dddc5508ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d398cf-8c47-4ded-aa58-dde0a3e8d174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558ab64d-624f-4a38-81ea-b056023b9fe4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d920e07d-34b4-4d03-9f43-752772133c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd115bbb-b3db-4877-8e82-a2cc53e6ec7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba68d11a-7896-49f3-9c80-a6c1dde1f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "649cf1cd-4dec-40c6-a3be-e329bd98e183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451bddb8-f639-4fbd-8a7f-a76ce1cc2575",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6caa10-9a11-4524-94d4-d435d35cc771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea19f9d6-7017-415c-81a2-2f84b7554548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f7da7a-02f7-4d1c-acd7-75e9f7c8abec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb14cba4-3b43-4493-961d-f439f2d3010e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13a3d66-816f-4525-a68a-def9cb826843",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3543f3-515f-400f-9246-f55db437122c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1cda9c2-61ac-4e28-ad84-fcd5006a17fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1ca720-7430-4338-8a1f-cf4bc3e2206f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "843297f4-2039-4494-a2d8-13a1d0ccde28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a416140-e910-492b-9232-b102d34f5293",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e838b3f0-acdc-430e-aeb3-2df76f69ff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17926f3f-94d1-4248-a522-27205f0949b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a062c-9dc7-4a33-a4c2-0064cf203861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e94ab63-916c-4a86-a4df-47c9a9cfd3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbb73a4-fd4d-40d8-9542-8607f616c315",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d738fb-d2f6-45da-87ad-700961f5782b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd11f5b-9233-4848-b90d-5ff271e0df43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2228b1-ba77-4eb4-9fb7-a4e1f4f3c987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a4efcc-8057-4d90-b470-a94a88f7aae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b1dd8c-4377-4b01-928c-e6f1ec2b29d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8404a4-e462-43a8-9874-731e677fa482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f38837-2902-4250-85e3-2abe1832534a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d425303f-ce5a-4af0-87ad-3a0749fa46c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8f419c-dfe4-499b-97a7-1ee7d2d64034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342acd9a-47f1-4280-9e8e-4552aee8f286",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf19f96-d9bb-4e73-94e6-f2f800f9168f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c693f350-be5e-4e7b-9009-d3f85974897d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69c48a9-ff6c-467a-963a-60f645460abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55e545b-7a5b-4018-80b7-22589dfae3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fa587c-86a9-4af1-909b-62e234bbb3a4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e53e11d-023c-4195-ba4a-c733bf293a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1852e7ea-698a-4af7-9509-3c853a26d045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8462cdcc-b60c-481d-b8e2-d3121ccc4bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a87528-7517-440e-b1c9-c2bc6e2cb544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82bb5a5-3a4a-4dbe-b951-5f5b8ccd4839",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e76721-0cb3-4389-876c-513a9c4fcb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156e1ecf-7e39-442b-a3e1-d26213c15665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a579a46-8905-449b-9d4a-86a1a28f78a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "069e01db-0737-483a-8834-27d84d173522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085f64b9-8d48-4494-9116-43b29fe0d00d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81565da-4b06-4c06-86c1-996dc12731dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11550aa-ecb2-4782-a9bb-2b0b00493a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54e6421-7887-4720-b85d-f7f09f00f2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba76d34d-227b-482c-bad2-f27674404806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7373636c-2ad7-4446-b3d1-a83650f863c3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37442b53-5426-48ec-a861-89dc9966801b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251485a3-7456-42f4-855e-543ecb14eb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1813c418-10a1-4750-9257-144433bee66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "891d41be-8c13-445c-9ffb-8970e4fdf552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e79cd-5464-4482-b60b-6d4c53fa9c07",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0c5f12-ed1f-4480-9871-ded22f855295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aafaf56-bb60-4700-8aff-cbbe6755908a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a338269c-5dc9-476d-9ff3-c42c1b541374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "676ea9a0-330f-49ff-afa1-5f5682750cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2251d3f8-298f-4cff-b9a6-cbdfae45d906",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65af66ab-76c3-4875-a468-f6b690466c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9ae3b4-ecb7-4268-8374-60c5c652c574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb16dd2e-4065-4012-810c-f6313f512cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63289d9-0701-4688-8866-fa7e0a5a9395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de8f73e-ed81-42ba-af03-14335d418136",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f1e15c-a063-46a4-bd4a-fe579a0b9032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b57638-b349-4935-b340-d4a6b5213eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d35041-4139-498d-8885-e47a2436efc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c72ae213-e6d8-400e-84f0-b47061fc5f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e06307a-d8a2-454f-bca0-749eb1ad17e6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a53617-5d8e-4c83-8e01-a77ca199fffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6541595d-f913-4822-a836-84dd89732ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfe7019-573c-44fc-af75-82d030852af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea721ca5-6b72-4bc1-b2aa-4121ee2fe2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a2a885-ee11-45aa-b007-d2e5479ff6cd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68540c0-c26d-4feb-9391-42d2daf18933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5138874a-ab3b-4814-a31d-a10a5a465f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8806bce-ed9f-4117-90c3-093fea435b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62dabde8-b8d8-4b6d-8b2d-b28233ffed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51377d80-478c-4ff9-a6a1-f80701ff907c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c36bf7-64c1-49ac-87b9-580407bc7e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632e0526-ecf4-45c5-949e-35a3646ffef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39afdf24-6978-47df-812d-51fd5ed079d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea7989f-821e-4015-bfce-b5903cefaf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea41750-26fc-4655-867d-9edbc89956d0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b3b1b0-edea-4293-a0fd-689034a1bbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c92ffe-2a67-49ad-b997-47692dbfc2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e0927d-c85f-4680-820a-5a17549cc527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eacfae69-3a39-49cb-8dfa-f6cff3bb05a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac52c539-94d2-4cb3-9eb2-5739eeed4183",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d575230f-a00e-4f94-a1eb-502f12b67ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4a843a-a9d3-4185-9faf-89307f509630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b544a0c1-95d1-4871-a4b3-683c7612bfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "003e89e3-9f0e-4b47-a48e-65b7b91bf744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aea851c-2763-434a-b87c-7bc860f6d2b3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda4e57a-63e5-4e6e-a060-588b1b89fa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe8e9e5-6580-4ea0-844d-9c1f95ae93d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32491d93-374e-4f57-994b-d1c111067192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7d3502-7687-4891-9804-2ab0eed73022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9513cd-f615-47f0-9ce6-b605d53ed892",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fcfff6-125c-42c8-9ea7-836219669418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d4f662-b563-4216-add0-d182dda80d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e754c0-56ad-43fa-9651-d7abf51645da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfafa55-804e-440a-a785-a5406e5c32d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a216059-8e21-49b8-a3b7-1968c121097d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba5fde-a348-4b8a-9930-49b05609c045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9d6c85-4cab-49a0-86d9-5f9992256bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2171cea5-c9d2-43bb-b8cb-906ffcb7a606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1755f897-de76-415a-8f6d-8dcaba7a036f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f55b478-abeb-49ec-ab10-04f351ea5ab1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a90c66c-f961-4e30-8923-6f5cdb207ea8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9f176f-b29e-42d9-a157-aa74c60ff67b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d429a657-72dc-4245-9674-81663d060837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c22055-c0ea-4df9-8d58-c2c88c059ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3debf5f-a064-402e-868c-a847ba3a27c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dae224e2-4420-48eb-be86-d7425fc9273b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d14f043b-2f40-440c-b038-ed40c6b07229"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fbac0c1-92de-4aad-9e41-dc1e0fb0f705",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b86a5bcb-8a00-4731-81c6-4e4ccc4d1204"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8795b930-3fc6-4501-9538-b05c2106f382",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de1e43ac-9145-4521-a619-c0cc9eb36dc8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9693d2cc-c2a8-4b04-b099-094cac5eaa77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b0075b4-57b4-4c12-9497-be53f03a9e44"
            }
          }
        ]
      },
      {
        "id": "3801c005-2f78-4a30-8ea4-5abb31250811",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1343250e-897f-4700-a719-efb3d05723cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30ea510b-719f-42a6-8f4f-79408a6f4680",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "284ede2d-50a9-4c97-a626-e430a7782b64",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f857008-c22f-4543-bf93-b9fa771d5115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb5bf90-27ef-4dec-9a64-22d7100d7cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70308db3-9169-45e2-927b-dcd6d13fa758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7f4cbb-1f8a-4517-87bb-da080dcb6c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011abb59-f4a7-451a-93d2-7fe5de214494",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6989daad-62ba-40f3-b063-bdb2bf6d9ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194884cf-df69-41b6-b720-64f0d2179162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39271be2-0dde-4178-a74e-1df1b876c6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f42540-4497-4862-aef5-a08eb678c3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105a4f9a-3e99-4a70-86b7-3b7e0af1b4aa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb80cda-bf95-4bd0-bbba-e36017759181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2265b71b-0c6f-4822-bde0-70309e3dc6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29d39de-e7fa-4e1c-80ee-637d55f03747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c67bb6e-c475-4dad-9647-7018e0f7fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffc44e3-985a-44b7-91c7-17c71b7eed8a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb71457-e242-4d7c-9526-e8531798ea80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93e98d4-7f1a-4eed-8ae1-f763a0313243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc9cdf7-deee-4a0a-9713-036e1478991c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb708bdc-a613-487f-8fb5-0fc35d1c10cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a356b8a-13f5-43d2-ae5e-eeb19276c1f6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc9a978-58cf-47e7-8ed2-83d5b03e5dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7750a706-726b-44ec-ae34-e7555a6dcf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe701b9-aa49-4271-97e3-f495e25b03ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08d72c2-fc77-43b1-a224-63c7ac1762b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8027c34-5991-4ed0-9d54-f8dc2385a472",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07320fce-1531-4d86-9089-21ac53cd6b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a76974d-90c5-4379-80ba-346862a900bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489bf836-1e0f-42b6-9ff9-06b05551afd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09f59140-c7a1-4de7-95fb-dec294504f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ac4468-088a-4d74-a196-d5e5711882db",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15eb9de9-fa36-434f-8b52-1b180561708b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75aaa737-1ba0-4e8b-a106-092e9a55928c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b13044d-ce5a-4c85-84ec-7e42da4ccf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f559634-dc15-4b33-b78d-416b6b46d5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3190361a-aeea-4051-ae58-785be02eb6b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8155d6c6-26b6-4416-a033-7afbe04a2721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97aacad7-d86c-40b0-a72e-d7fa9a41e364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab387a3-0fc9-418d-b17b-b7472efa1f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7764c830-96ba-4569-ad11-9ac720b9da49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1601322e-a723-41b4-acbd-e4bdfff2beaf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468f215d-ab0b-4eaf-8702-0e2efeac27c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b0c26c-fa7e-4645-abc0-91231608d92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf0dda9-23fd-4789-b64c-a7aef4d4e894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9162a56-fc6c-4ca2-bb0e-c34adfb8c43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b806d16-035b-4960-959a-7f23df4ceeac",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e80a8a3-d4c1-4cb3-8f79-2e03340823e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36504a58-2a47-4a42-9921-265ac1a48e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cabeb90-395b-4498-a5d5-779b5cb22373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7de24400-4002-4bc6-b964-7ce0bbc18cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9ac769-20df-4c3f-96d2-c621b84874c7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2c8bfd-89d5-4bb7-81b2-104cef0fcb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce69815-1d8f-49e6-8a87-218018b2716c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8893599-a7e1-48ad-8281-5c63ba6709b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "73c3b30a-3eae-4aed-8add-2cd67b43be26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b955a6-ef55-4cef-9b17-d127b2285469",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2834036-6e52-4f67-8727-c8e07f334998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57562bf-2107-4fd0-af02-6e05aa84bca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e095a2-a30a-415a-91fb-4503823a9327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4db6ff23-1047-4565-a835-e7d04e094db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25574ce-d6e8-4a4b-b342-a2de8df4a7c3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70f0041-cd87-400c-a68a-4c40895e2e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe0f08a-d87a-489c-ab75-0bb29186abe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2834cd00-348a-4026-b5c2-e74b92b4063d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b94728ad-4344-48f7-b4c3-f6d94d4ec230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcc5971-7232-4775-a397-1c8f183bfdbc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb396fa-4f58-47a0-b930-177443f720fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a78f062-15a5-461c-aa33-68a2822db0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bebb90-99b2-4bb7-8f15-b571e8f7dc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c75e85-7ebd-4e22-b313-6cfe726ea701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d529a2f9-e587-4908-a226-4bd4c88e6ae5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4bd2ba-296a-4162-94bb-d21dd0439478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274f0ff5-bf18-4aec-8d19-04ae8403b6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d55e1a8-0299-4915-9b52-516e1154f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "09eda07f-c211-4e15-ae21-569081d343e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd7d85b-d6a6-4892-be20-6850ffbc93dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9839fd6b-5dde-4e49-913f-8f4686c5c353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f85eb77-64ac-43f5-b210-6813bd8455c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112f47d4-1b95-4ae7-817f-88b1aa2207b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb0ea3a-3765-448f-bdf8-71401bc027b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920c8c06-1cf8-4c6a-b3dd-3ca7c946622e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d01b9c-d112-4a0b-9082-cf56d7c95822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f59e89-d807-4ef9-8362-947d761bf981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c9b9f5-f2dd-4c56-9ddf-873d83cef0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e3b6a8-7000-4ecf-87aa-f985c41c5aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20840430-2f02-4141-8646-94fbc964c1f2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4e89e4-e40b-4bee-bb32-35ef9c497f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c73253-b49e-474d-aa5d-8fa2426df798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86fc6c5-f3ce-487f-8514-658f86270166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28295bb-a932-4b90-898b-a572142daf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f20417c-77f8-4075-9a42-1f32710f7f87",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75880ce-72f2-40cc-b477-0bd5bff69c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf62103-ac17-4972-a336-ae4373a5cc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ccf3b6-7ea1-4ece-93fb-846d6062df52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3836436-24f7-4304-a7c8-99dddee3b969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685f9273-6553-4269-bd5e-e901ef7e6839",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49272a8-82c7-40ea-ac0b-99457426db2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a473fc6c-6660-4b61-8a32-9c75cc531318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a37669-85cf-470a-b4cd-e96c7833c94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c16e7a79-7fe4-481b-b2c3-88f501efb3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5a389d-9c95-4f72-be7d-5c6c5b018694",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd8d814-a451-4a74-8579-95fb6feec961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89077c61-607e-4256-8d71-0f89dd2bd54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f865e582-cafa-433f-84c9-d456b5b390a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0baa0a4d-ac6c-4f2b-9bc8-2291df092e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5d8316-9a30-41c3-8065-5dc34131ccb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628c7e50-8d60-4fbd-a930-6719480710fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a31a85-4346-4797-b3c4-3aa775eee9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdbb284-3ab9-49e8-899d-5d49d519940e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b54e97-9c0a-4198-a1fb-e992e1d63747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8064d6af-69c7-48ef-ad34-964cda679d24",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33394c0d-7312-4191-baf7-aa38fd3d3d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68754cf8-b6c2-4587-916f-31c0c352e216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46f7a6f-7303-41c9-a319-634c326fc06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb43d42-ec05-476f-be7f-ab5e0ed76800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c77f51-2674-48af-a994-3a90d75378b8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46033196-2f23-4378-b4e4-8288dec7b543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978b8bca-4f18-4237-b5ee-a87e38715158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05269ab-d370-458a-a939-36932fa02f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8324c9c9-fd50-4ab6-862d-c663e6477382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5137671e-dcfc-41eb-b97e-740e76e8e7ba",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7958863-5401-41a9-8583-77373a80312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ff72ae-31af-4099-a586-3037d9167154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b69983c-716d-4502-949e-477e19ca0b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "233b16ac-40b8-4997-937a-d55285054e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf2976f-5edb-4eea-9a86-65b16545daa6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4928f3-4575-4203-af84-57704577bdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6ccae6-6e2a-44a4-9955-047207c37ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab42087-a6a4-4240-bed3-1e552d09331c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "170d99c4-8dff-48a9-862c-b3c6ee087a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53267aa-59f0-4f7f-9719-4f08b0eb5445",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff8ff7d-b696-4224-9765-ccebc1cce789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce07252-92ed-4cf3-bfbc-d751d7e169fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3fe2df-130f-4507-96ea-2eafd85ddf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "114901ff-44cd-4537-aaaf-41e98599e1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0948f77b-9901-4781-9cf0-ef293fe9da56",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4816c67-fcb6-4828-94bc-befa6f500229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6211ace-c098-4e1f-8990-d0458b72bda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26c4c8c-42ba-4f21-b5e5-1a7fe2c01d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2b2154-bbe6-43fe-a09f-9094438d2b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66a09c2-c47d-4d5b-9eb5-d9ae09994ca1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d12ec0-d415-42cc-b923-d121da8f68e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66ce8d8-6f7a-4e10-869c-a63caa0102a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5ae06a-b2ed-4660-b156-2f9f16ee3cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ece6cc30-bb41-4518-b5d9-33c47016b798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3351e44-e4ca-4634-9d43-2c7cd98a57a1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7ccad7-9ce1-4242-8084-31ea07d97d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592713e5-d052-42e0-9985-edcd07992935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48038962-aadb-47d4-bb50-be75a3697780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a34e95-c611-47ca-910c-40ab2b0fef77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b978894-fa46-439d-ba62-d9a2d7c7a792",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4b3bfe-9fc1-433b-a655-554e04cb61f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c181c35-51a1-4191-9c24-42da5f586f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b573ed3-e05c-4bc7-95c2-b997d9dabd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6ca895-bb46-4975-83b0-b397af7d28f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2e6933-745b-4c9d-a32c-a1aa791c1c4b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db19c4ea-c8af-4852-b100-5969e963e3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebc03a0-e182-4737-b2f8-d62b8285c0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e0a00e-cb00-4303-b803-9b16a0c6663e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6bb956-5382-47dc-893c-0140c2f7217f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee2ae93-5eba-40c1-a2ef-2f5e0b88586b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446abc36-e66f-4994-874e-075a14a5265e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e65ae92-0a7c-4b12-8e35-dd8bc771820f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4f867d-3b3d-4300-961e-6f9567f49e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "667de006-b419-4726-8641-34bcac38ebcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c142cdb7-5063-4bab-a512-fd0c3f904716",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08b97e8-c1a6-4c9f-9d42-8805c3e595f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a08c912-f9f0-4eea-9c93-cec78c965288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e78453-b630-4925-8b56-8a2993da9368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e188c79-4137-478c-999d-98185d025599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c675c2-3781-454f-8548-dc74564a0be1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30b067a-5bac-4b1a-9dfd-3574a0ed2aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4763343f-e599-4fc2-958a-5fdb41b048d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479ab5f6-1549-4bcc-ae40-fe224f73cb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2a909c-d40f-4b32-9864-4407aebc1c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7631d085-9da4-4e46-8975-faedf3a52b73",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ecdeb4-30eb-4b28-8e49-6511747d812f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5105fcce-2f35-42f8-ba62-683fbe694f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cede278a-2020-4be0-b883-7c51f7a75c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3dd5c3f-62e7-4ab4-8f91-98ab95a29203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48de242-ab6d-4043-ab45-e1d660e6f1ce",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662563aa-9b3f-4092-a807-3bb7ad22ad8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6601d6-0419-4e39-ad16-786d14255b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818b8ed9-ed77-4da0-a2fc-bcfb81881e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b0d670-2b35-4cbb-9203-125e512b3408"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a89d2b5-5611-4ed8-a1a5-c68a7ed8d438",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dda599ab-a242-43de-8928-f172ad922dde",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4eb8f4-609e-4b15-b8f0-e5b6f93184a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a93ed9d3-5db6-46d1-8830-80061669738e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18b5b84-a1cf-49b1-82f5-f30098bac4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91845eb2-f0a6-4a0e-b0ad-f1f955bc1b1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da4cadac-0fd1-43e6-95dc-9f4fa8690d79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d43a27d-8dca-4129-927e-10e157333fb5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "866f5ddf-3e52-4bfd-a5fc-f4bdd7026f30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0853f9b-783b-4115-b09e-413130383904"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7deef845-aeaf-4bd2-87ac-ebb9065138eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9cc6a3e9-e496-435a-b3ac-b01bffbb3c04"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e76e552-2fdd-4bee-8805-41d0b2126278",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19ce603d-0f5a-4fbd-bf38-d273f0966ae0"
            }
          }
        ]
      },
      {
        "id": "e527355d-ff44-40b3-a604-9e76a053870d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "228e110c-4be0-4ace-a02b-e5898587c232",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4365b19-893d-4157-881e-bffd0fa14785",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e60e4365-e5f7-40b2-ac9e-2f6406175779",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37ed7b4-a0c8-437b-8b6f-308da41bdb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64964b60-53d5-4e3d-9bc5-1a62213f5c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626de653-2740-4fe4-95f6-7e4e13cccd7b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1508e11-0413-4d1e-9bac-03368c704662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6600bb26-f657-4a76-a4be-3f1027d3ec0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab352f74-9a3c-420f-a1c2-359d33be57d0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca2bcdb-c5e9-4c83-b1f1-2b0ac4295307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb1be389-5f0c-41e2-96a6-f5ee126cd7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515a1714-a2ce-482a-9181-03c3f2e2f912",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb3f46d-626d-4292-a1b0-69c35a3e412a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0c71fd-8cbb-430e-8e2d-42ffb0d8ef99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1321fb-1c0c-480b-a34e-5c1b4621fea9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d2d419-c049-4d19-bc93-6feb0b5a352d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e758ba99-fc36-4dc6-bf52-b82ea47fdf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d8a1b8-699f-44f4-8da9-25f96b4dd6c3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b236f4-b486-4453-bed4-51d6628f42f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a6693a-d218-48f3-b773-31e79ea80ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629ee375-81be-4e22-84e7-0a731840b9ac",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c61bb7-515e-491a-93b8-9f5e4a16a06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e470a63d-e7de-4371-922a-c1265267ccab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0076787d-9763-4ca2-9781-f9258055b4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafd42be-cb8f-4c6a-8156-3e85b2167058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9c76e5-9921-43bc-81f4-a939b738a922",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75af687-343c-4ecb-945d-ced354f54da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a8a3958-e150-4b3d-b5ad-58aac87982ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39bff55-f20b-40d0-8262-9217046b93d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f87bcc6-f879-4898-8bcc-39f30fa7ce8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433be087-e6cf-43cb-896b-b2153a400558",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c476f897-ecce-4f4d-bfed-b0d1400cff9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542368c3-25e1-404c-817c-14cb931b4ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e64f5ba-277c-4158-96f0-3d419a0838a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f75782-8043-4ab0-88c3-7fe8fc0f06fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272ee60b-68e0-43de-88f6-b70523425a6e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141ebce0-cbc3-4749-b368-d524ade36f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7a8694-70a3-4ec1-8a08-c4f8f3f43dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483f4f47-1380-41e0-bf05-6d879252dbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b844823-4ded-4fdf-a563-796844387d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde06458-e03d-4bfa-96a1-f603f0b7ac0a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218f8bb0-4852-4d25-9c72-5676d1ba5b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5bbe9d-23ab-4101-b7b7-649d0eba16f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d18aed8-423e-49dc-ad58-b1064f929fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfd6602-acb2-4d2d-9caa-6923ef7155ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d52c58-4d2e-4013-9bca-5faf8121f4d7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f96445-0d9d-4884-9f89-39d784a51fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb74baf-6a9d-4360-8802-dc961fee4bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2687dbed-3696-484c-af8c-366314f521fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b3ca17-04e5-4cfa-b4a0-2fa274322da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa20dc4-7394-4a08-9ca4-bd260d44c899",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41d28ca-9289-493c-90f0-95000d99b345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1bbe28f-5900-4f8f-8c21-0a6759cff8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfddae11-e1b7-461d-859b-ec81caaef2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6cdb7e-6d91-4438-a1f8-93770a386c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeab73c1-d6eb-46d1-9a12-c2e949daf683",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c46576-09b0-4466-aa5b-1b19e3af322a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb2c2e2-5ce9-4565-9ee0-538ee31a4e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a85ce7-68d2-4a7e-95a8-860855312619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79833d33-5e8c-4e45-b3bb-2f4931d8a7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097683db-38c3-4d7c-8ced-b6b7a2134941",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c81edd-130d-4df9-83c9-4239177a04d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5c92e7-74c8-420a-946c-4c8229070f44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927664ad-fd9d-4089-bbf8-bae3d1b27863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5250ae-6538-4595-bf7e-92f48d2a5232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58846df0-6b96-4640-b104-78c228b0adec",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72247d37-bed0-42d1-9875-7d0e16dbe88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6ce3644-5baf-4209-bf58-669585c8acab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffde5ce4-7d4b-49e4-834d-956cb9b58d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213fd3e8-db25-4af3-b9a2-1616f050fc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c428c6fb-fb18-492b-8272-85a3b485a822",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42c9c03-3e94-4f37-bec1-f030da48febf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030fa345-68be-42d1-b277-dc5569d9783b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be76645-b0e1-4968-842f-0ee39f6dc1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687a88e7-481e-4569-88c8-0ccece21b684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a2fd0c-3eff-4b5d-bc12-730144dd07eb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80e0d0a-a594-4060-86a1-4bcdf6f9608a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900cba2d-3e68-4861-b235-76b9bfe1f90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea08b6d-63dc-4a68-9330-fd8122421dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa749aa3-d102-407c-a9aa-6063e013ac17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9778037-a022-4886-be89-a0c566847d33",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211dbcbe-e324-407e-a4d7-db9f8194d467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7f8526-d5ae-4ac9-b014-b97609216d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8ef592-4a7c-4a30-b0a3-719fcb3490f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0119c3c7-0f2f-464c-99f8-8b8ce125c9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83874862-45e4-43fe-a377-9602ec12bb9b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053b1b1e-dc97-4f9f-bd2a-6fd08dc2ae27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f38d02-a272-45c9-a0b5-785b862c283e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b304d0-dfbb-47d0-a661-36b53532870b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93c5e90-099b-475c-b300-ff5270658711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437f60ab-b231-4df9-9982-408aa697a83e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa318e24-8f4b-4652-bf36-4f2c93625e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83f4d0e-7824-4596-bfd7-10e9ceb4e829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffdb73e-c3fc-4d42-922c-74ac37d16ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e67f41-8708-479e-94d9-876dcc7c32c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c637962-1c2d-46aa-94cc-02481f353154",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be870bd4-9c9a-493b-b894-f9d219e4cd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc903593-5972-4c00-a63b-f44f3ba78fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b442592-3dbe-4039-82f3-661a991cccfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdf383c-ae26-40e5-95ed-2eb4a20a1a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165778cf-00cf-4e1c-bc04-301bd0e88ea6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f5ebfe-3416-4cdf-96e0-8b0f5ebaf519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1b5189-1f32-41e0-a469-b25a462b24b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f1b895-7123-478b-863e-a16843a5356e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1987f262-09b0-4166-8016-b9f53a4afeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2104275f-9d09-4c5c-b83a-cb184a9746cf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab97cfc3-856d-4020-bf78-6030718aff9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9edc5d-3343-44a2-a977-f4db1303f420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b2943b-e9fe-4a09-96e4-a26be7a84f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103e05ca-fdd9-4631-b001-b25011e96e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d7c0e2-b983-41df-9b69-154ed48405bd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352f380e-1fbe-4246-9377-7fd3379fb07e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2393178-eb6e-4f20-974a-a725702e2e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfe05cf-0cda-4be4-b811-4fe76759b3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941809d0-933e-43b7-8abb-67a8880579c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0e5e1f-4efe-49b4-970f-f22de17ccaa5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff861cc-7dbc-4eb5-9487-413efc20ebac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656ac609-9621-4bc6-ae9f-b48332c0ada4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c58924-de3b-4900-9ebd-a95355602c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262ed4a2-b93e-4f43-a456-77929ddff16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71df7c2d-b095-47bf-a618-3951908d8d47",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6691ee-b41b-4529-ae3e-15ebb863fa9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a893608-7b80-4255-a5a2-879d9747f2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd155927-461c-4232-8c86-61d7ec9bc857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd17bb61-0260-4912-8945-1dfe156fb39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16a6de1-951f-4906-a222-144c62527422",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb93b85-52a3-41c1-9520-9c94b362e11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17575fcd-affd-4143-81ef-7ccb24ac03e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6993cb36-6f43-45b9-9d91-641da1562b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607a9875-b9e5-49d4-aa4f-da547cae5758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a49ddb9-4fc6-4e25-a312-edf1cc792520",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc1976c-3a4d-4a4a-a550-a169e7fb573d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8c2d3ff-a888-46c0-b1c9-75820e8a30cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7054555c-5b89-4cd9-baa8-903cddd969c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd98e8f-c173-4473-bd91-eabd47c6b16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949bee67-5785-4ab7-b08a-2d034fd55e5e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182207cd-cab0-4142-9903-210f2905a5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a4b3a5c-0bcb-46e6-8c73-1d38e541c483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "295a7f4a-5dba-450c-978a-bbe6341a3b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f5f1bc-d53d-4391-814e-b1b42bf933a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468a23e5-9334-4c39-98f3-124d6eac9636",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997080b2-6416-4fc0-8f78-0da03764f299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6074fa1a-4e31-4e4c-ba1e-ece282f2723b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c7d6a5-fd19-4a5e-82b0-d65eded8bcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ef392a-9e61-4b8d-a67a-3a9efd4b1af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed95ce77-f976-4c01-a0e3-806fcfb7d6fa",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0ac4a9-eb9b-4e75-a951-74c0d93c598b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17c6dccd-9a59-40a4-aa01-8264a9fd9bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f7bac2-5756-45e6-b299-e113a531b11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a82bfe-647c-4485-ad1b-a0c47dbaa515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6737dba-6c60-4d1b-a8e7-7ea4e2dcb6e4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad34d9fc-adcf-42bb-8bd1-8791bc3a0228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12488093-2d55-45d0-ac5f-90c87fac38e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "651486a0-1c81-4dfd-b7f9-c024a0a1fcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da486ec-a2ee-43b4-a7b7-0f5e1c9a2c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa56bb8-9e22-4922-b2c7-c3b9d4cece1e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4726b680-30cd-438b-9ab2-028363f980b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b8dd0d1-873d-45e8-9beb-d66154e1b726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df9b1a-d1f8-47f0-a212-2e39afce2352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef364f9-a786-4abb-80a7-6fce2970441d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4eabe99-8b12-424e-b266-eae9b763d481",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292964a6-7bc8-4e6c-b32c-18ee411dd6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c74722-1793-4cff-ac86-6d7e8fc62d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e3414d-547c-4125-bced-8cf00ad3d453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca44a4aa-9d2b-413e-a153-40d50fb9d38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d732ef99-9ff2-4a9c-bb91-5761f1d27946",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09db206-d9c6-4fb5-8e87-799377b26ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46bcd23-b995-4345-ba88-52eff213e4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7537c3-ee40-4f96-b1df-8da0443df230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837765c3-9fb6-4bec-99f6-c8bc68055252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26b1a1e-c066-4f25-a351-9f1e3eea7e02",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06d542c-2e2f-4112-a6be-025578d16a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898756fb-02d3-4218-8d9d-bc350110c2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4381aaf1-db1b-48aa-9a93-253423db6ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d143288-a2d7-4000-a8a8-4d80a75f54c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e92578-5f61-47a6-a974-f0a4993141fc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453917f5-afd8-49e3-b0f7-ece2c04744b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675babae-8b12-43d3-9fe2-383a47bc46d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199ad9be-e796-4bba-afd1-ff35693e6105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf04837-2929-4bd8-beaa-bd76518563fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ebf98a-fdf7-4d74-b158-e55bb2e68b4b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2450acdf-9c96-4b3b-bd86-0bbd284712ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83559c13-0330-477f-94a3-e8ef7df62dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d153d05d-b8bf-4fe3-a204-55469d83d977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868e5d91-4b34-48f4-a291-c3d9bed23896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a2ee24-a95e-4ec6-b617-bd0256555118",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac588ba-a7ab-4e64-a099-c72c2dafcdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45b5952-a0f3-4aa3-876d-cf79424605ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c8ebe8-f7f9-47c3-81c0-99e74e6a7b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b38585-1167-4700-b4d3-f172a9fda195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f346ac5-c69c-445c-9747-6026dc1260ff",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd85533-38d8-4817-9f69-42bb86406e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8164a135-1044-4950-ada5-504b1881e7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4663971c-a23f-403c-86d8-007c0599077e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb86c23d-ebd2-4c87-bcfa-687c8630da11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c510221-e68c-4b94-88b0-7a5feac59b3b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac32dc8-a011-47d0-839c-88d38bd5ba22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c4aaae-de6e-4c47-9f2b-0cf363f1c61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce420bd8-667b-48d5-a2a2-a57c3dac8ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6544031b-3de5-4dfd-90f2-3bd052e7c324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17236f7-9894-4d2f-be26-3ad35cd58fbb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a3abf2-303b-4233-b51e-a0749df80f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce523e30-03a3-4f40-8fb5-4d13f716189c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804e7bc4-3d58-49d3-9883-86ad8c5a4942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6cf7dd-2d78-49a7-a7f9-c96985cc1f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebfd9e3-823c-4f8f-9150-5b3e8f82489a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a808425-0169-45fb-92c6-f3944b1c149f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea8fd71-4aa1-4ece-904b-a8f7ecce5a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58040407-964e-4bc2-8085-7e055281d00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10cfc3c2-4e63-4293-b1df-915634a1fbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89839e7-4232-41e2-9f2d-356ef3e858e6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9568672d-7036-46d0-8b0a-5d519889b3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9acd2b-50a0-4e4a-88c4-f2e8251fe52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13bd54d-1e86-41c0-923f-5f033cc9b09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46651f54-4eca-48eb-bb2a-eed9359514b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783d1880-2705-4c2b-8a28-1a6ea4ce0fc7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e812b119-c697-47cb-92b7-47fe4c27fb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16133e4-2256-4862-ae0e-91ec5a16ddf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1fd7df-16d5-4a95-8fa9-97e8cccc7ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f6b872-b170-4571-af72-d015fc0d8748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e129491-bb4b-43fa-b979-cd4317ecff44",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13282301-0a0b-42de-a0e5-589426151d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163f93dd-439b-4e0e-b3cd-a59075ac711c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685dc1c2-6c4d-4728-935f-c6f30ec3119e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b66415c-2222-4d5c-878a-6743c30451ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7e9b03-e463-40af-bec3-db278e8bcb1a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbdf8a3-ccf9-425e-9940-00d7e566e3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6bd1d6a-9477-4079-897c-9850053d4c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdc40bf-4619-458b-8bc7-5bca661e87d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5308ad6d-fa46-43af-832e-f5a852d0a71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f872adb9-b64f-4d21-adab-2e4952ed9bf4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05b59bc-b688-479f-b495-7435acf36b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b736ecf-eafa-4861-95c1-ad7e27bdcbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a032d6f4-c1b3-45a2-a72b-e17148e709c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0e6ff8-3a06-4d87-b89e-64c773cd104a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dcae11e-21a4-4431-b84a-6c8d8f9cd2ba",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef028d9-f9a8-473f-910a-5b0e8eb987f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de196dd-b970-4c13-9beb-43f15d7165c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07084c2d-ea2a-42b7-8e64-4672013e7e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99235878-da8e-4a2a-9117-48f89543ff83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1acbf95-1697-48b2-8789-0118ba4e3dc5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78864a16-e095-45cf-9faa-b2d96a0c5840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d55f984-cfc2-4b87-937d-326e9c8ec8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01786eb6-b18a-4f95-b3a3-108554bc95e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be28b381-d639-4e14-938b-0b926b1b1708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8a90cb-920e-4f89-9b80-b0c941be133d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c36de22-a4ba-4c99-87a6-ac3e0faca041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec7911e-15a6-435b-9353-41356135bcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048740ba-976d-4611-baf2-19b5ff76ae0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b79591-c2df-482a-a2be-f074ef07bb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90fa923-4862-4de6-b27b-9135fed586d3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80826877-df2d-40e8-b203-cdd43b4f4d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c7d766-c350-43ad-9755-7896ebdd8e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16b626d-4b21-4490-959b-122f163ddbb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498fe941-f9d9-47bc-b7fd-b8ab9f08afc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1c6fc4-e58e-459d-b2ad-62947cbf5fb5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4022ee-da7d-49cc-9e92-9e4031b2ba22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295085a9-8703-49fb-a01f-b54817f209fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f48c4fc-70a9-40e0-ac5f-9e14824446af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f32fce-8d78-40ff-9e62-cee28ba0e132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ffbbb5-8195-4cab-8868-ebccad67a867",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1780ab0f-1a17-4a2f-bc40-2a9581e83581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3270bb5-78e7-4034-8c7b-961681ed4629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cef645f-9d6d-4279-88ef-3a8e53ba0e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c67528-6971-4919-83bd-d7aed9723c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba165b5-daac-461d-8414-869f2338a73b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2109f98-7306-480e-a670-3b292c8397c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de47c6e-519c-47c6-b47a-0f248876da4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204ba0e-ca8a-400f-9146-f8c4af974115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50eff9be-71c3-446b-8416-e53572e54e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7692962-460c-46bb-99e4-fac8b0ab711f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b48fbd6-b30b-4ee0-9a3e-4b99272bfe46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6784c6f-66e5-4f6d-8890-b76399662701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923584af-baf7-4abb-a6e4-5f1c3b29d86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e37dec-5f7d-4cf8-9a7f-d056fba1fb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f2b785-a252-4106-b912-e34e8ca9b9ae",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b3c636-cd3b-4f1d-8a55-b496b9033c4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658ec28a-a734-4dfa-b295-f09fc4ac3195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235b04bf-7f12-465e-a11c-a278124990f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef71b48-c610-4a10-9338-243caae28996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848f391f-2557-4aa1-88c3-efe1f9e51dc3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633d0e8e-8483-4ac8-813e-99b623df99f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479d2ac7-f2ba-43eb-a344-58e8d9010cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a21d61-ee1f-4239-8dc7-45e20f2f43cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db8ec5e-0a97-4449-a4c1-802f75574c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbf54dc-0de6-4049-bb51-c0a106e2e753",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9db5a3-a3a2-4574-a28a-531131f057b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b558367-a83f-45ee-b774-712aa7f6a2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee36bfbe-7999-42aa-a9b1-4a7f317f9205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03ed27b-92e6-491c-8086-a97a1fc9b51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f30f7f-b3ee-44ef-9bc8-3cd6e49c6482",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5853190f-b241-4e84-81ff-b412017b8e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4adcf1-49a6-4914-bb45-138a47bbf39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53f6fff-c596-4898-bedc-ab430715261a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f079bf-3fca-4647-b38d-62cd3c189c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b6ac6d-0314-4ff4-99b3-496772182548",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53571e7-00b5-446c-a4ce-14c7d61ad352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac2c03d-4ebd-439e-b254-7c320c368b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7fbbf9-71ef-4518-a797-1443efdf441c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84712a19-63da-460f-85d0-1e39d6a289c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fde8975-c017-42aa-a26b-7a21a6847573",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfd852a-7b7d-420e-9b55-a4dd09032377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6005ee8f-66ba-464c-942b-94d638dd9c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe90b7f-c8fb-45f0-b0ef-2a6b63263937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2201048a-465d-42c4-aae3-fbd6b07ad9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b864cc78-5de9-4107-a5d9-d5a48947fffa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f903fe4-8e7c-4e92-8fad-3aa3a6e7bef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48bf611-85e0-4f5c-bc26-3157ec661595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e60fbc-8793-4ec5-b385-62f28e454150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4dec06-6d8e-4c31-8577-0b585a23d626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f271e7-5481-436f-8cbc-6fdd2cfaaad6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2bd2c1-6f54-4a18-9ed5-1880c45ec365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3f9ea40-74ca-4c39-ac82-38e3c91ca9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e138e580-1eed-4029-a3f9-66208642548d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92213c0f-a693-457f-ac19-4de867a07cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba135974-c102-49ea-8790-92d414112c6c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0684101a-0235-4150-8a97-d32a216e7fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2054a8a5-4d26-44a6-ba9a-92c53f489547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d07536f-7d45-437f-9f0c-ad9da31b4172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a49ca3-2c9d-4c32-ba72-5df789877573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6eb440-6544-42d2-b380-562d2f471164",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d11242b-14db-4da5-8634-0c99fa125af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b889e261-3274-4ad0-9a3f-48af4fd038e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ace05b8-c583-4b89-81c5-1d324c505bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cceeb8-c22e-419c-a77c-9a218f4a7443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fc7e20-6ad2-458c-ae2d-9945b47e175d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5324acc-22e9-4a39-a9e6-a2ac20a032dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10d312a4-2bcb-42c2-aec1-9511db7b6066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acf7d91-aea1-408c-84d3-8a2fbd288a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b7c68d-086e-46fd-8309-319d921d2e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0611058b-c833-47f7-8a04-210ff09b391d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6579ec-811a-4718-a47c-b0769d567cbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2349466a-5edf-4a3a-b6cb-5f22d399e193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4bc060-462b-4b1a-9399-b93943863822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b3be8a-f35e-4173-bd62-324ba68eddc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ca4d68-954c-41ec-a250-2013c9e3b642",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c27178d-0c34-4542-98ed-21fae501e660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25d0287-e85d-4877-957d-ae5e80d112b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0add5b5e-70e4-4114-a7f5-375c5da9a7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c92970-a6a9-4ff0-930c-e62234a88507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab4cdce-013b-440e-b088-32a06a31557c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c60e8b-d585-4c7c-b629-799d0e6d42d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4639b802-e1da-4804-93c3-5839f0806a97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6319c4b-0bc8-4724-9f6e-ccc55237de18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a0fe03-856e-4d29-a99d-6a71f6154ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548eacba-36a4-400f-aa6e-a48fc80ad384",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa89c47e-ce5d-48e1-ac5c-ac008b7f28d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c867839-5ab0-4fc5-a98b-b14668671e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905c8372-f2c8-4b86-8b52-eeef2b844fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a958e5-3682-45d9-bd0f-41931de35b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d877ac7-7216-44c8-83d5-3ca743700fda",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3485671-0dad-412d-9e6a-b36414c89b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058609da-6962-4836-8bf8-a181dd467908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffafa87-f934-4d1e-ba37-1b2e5817310a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2fe6ab-75bf-4e42-8a04-ac3124aeca48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fedb772-c495-4dc6-9f17-267a29151fd3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff66b230-99f5-4b1f-b344-0c8270c2ff09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d393d5-870f-4300-bb5e-42d620843ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea0db3b-e2aa-4a1b-87d6-27b505d51e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206fd229-fa7f-4638-9427-6785c5342332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3690a4-34ee-4cdf-8b1b-2c17dad5dd49",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4cf441-ad2e-4696-b336-23a244d72ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f149f6-9acb-4c0c-b71d-93ca40fa5ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "656d87a5-754e-4251-a3b0-9652d51e3b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41326b7-f40e-4572-8ad5-1e28e8039120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6235f231-bf3d-417d-9a4b-60e80eb6eb5f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2a8f64-d999-4915-9adc-cef2481f47e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0bd2013-7086-4e5a-87fa-c4adf9708e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73981764-86b9-454f-bc4e-30c2bfd2ca06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ad53a7-a91b-4e02-8030-4409d882f39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53003f33-3fca-4d37-8d2b-a512daab38e9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0869150a-0018-4ed3-bb1f-dbc6f3c10d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecd5ef2-a146-4ca9-852c-34504ff6179f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb1f546-04cc-4955-a769-88ed5c550d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d04758-4acd-4ce7-a475-96068555a207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df86ba4d-1044-4e91-963d-6ef24698651b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487cf498-bd6b-4558-94c7-a99871f24a63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96b6b1e-2845-4a4b-a271-eec13c4fff5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4408dbf8-3771-48e4-9ace-4029e84d0554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e8164e-b972-4295-9481-c6ad94de6150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd126d88-7125-4c29-b5c1-baff24540e5c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7a992c-dec7-4712-b757-cc0c4e900843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf714622-d07f-40d3-b51e-7bf49524795c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55053da3-cbbd-4112-944a-6eb218156cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c1d58e-bc3a-4797-b495-0430ff413f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b2f8a3-1657-4acc-a847-2029b0d5e946",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d5eb35-06de-41d3-86c5-5e41d3ae9f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c3ae929-eac7-45ff-8821-cc0788eb70be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba0c767-f034-4db9-9c35-ab8f43585a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8e8bbd-583c-4159-8ef4-08c6076054a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5d432e-0cd6-4e3b-b80a-41cd16a2339a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5383a7d0-3d5d-422f-8213-43b1c0266328",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9429112-ae10-4a81-b5bb-5074981b1e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb551847-a346-4d56-91c4-44ede07bb8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9210678-cdf5-48c0-ab0a-1d7276668fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c124fc-d84e-483f-8d9b-fe967960b622",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d850fc5e-8a2a-43b9-9e41-cf2e58c473d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2b27e6-adc9-44f7-9dab-2bc8455ed58e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ba9a5e-30e1-4383-8777-274a49b18e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb990cf-d11a-4027-b1f3-d22da7e8ca5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15b87d2-7c5c-45bd-b3f1-456e2f58082e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c5c669c-f9e4-4f0b-affc-2cf36f79fb40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6140696-d0cc-4f4f-a0e0-dc00cb350fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373665cb-fb14-4e4e-b2b4-b500274f85d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405db50d-14b2-48ec-8d81-afd7ad46013b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885b7e88-6b1f-4989-a49b-742ef1383454",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daad6682-8929-4d61-b035-04772d7e6fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d1faf4e-c923-46d6-ae59-7cf91d8e4f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae6b784-f5e8-4554-8395-b0d9cfb10cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d01e223-886e-46cd-b8a7-1d3f7ec89a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b30ed0-32be-4e80-b9ff-b7af39e2f40a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43160953-3d32-4f66-aaa9-04f41168ceb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e03fb5a-c08c-4e14-9fb5-7ef78b7ff745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62eb272-543e-4074-8023-9260f318c013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7be673-87ca-4834-af16-7d9642879e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3179e8-cfe4-42e2-b12b-c2afa4946cdf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d39f77-d393-4b3e-b589-c12b5e3e17e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8853ea-3b1f-418b-91db-37ba38f06431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bbbbed-5d04-4e87-840e-e44d89e15514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5baa876a-f124-4183-8959-8c5cd5621760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60f4b89-9aec-4920-9e75-d1967a42efb0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d179aa-0390-4ada-b8da-ddd7f6221a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a25d136-aa88-4f10-bfe3-6304e65b0d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16a799a-06ff-4469-aae8-397e10bcb4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bcad8b-242f-477d-8832-7bdefb543b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684792f9-4079-4a43-9c85-fe701f87ddc9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e767c0c1-cbbb-450d-a0af-65842fc99ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eff4fe0c-244c-4394-b0a4-d11b6834b6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c574d-35f5-46fc-819d-3dc479d0f03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475f77ce-4332-4260-ac6d-22b6e2c4d881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c55fad-b041-4f0b-aa19-f35a715a66cb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc42acd-149c-4d34-aa3e-ece898e2d2bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254965be-c3ff-4fd1-b8d5-dc3b365346f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625f64c4-98db-42ad-8b4d-31343c524fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4141a38-dc69-4467-a681-6e717aac7448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b4b918-d793-4d3c-940b-df8096e8a258",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762f0cb5-291f-4743-a25b-baf0e92f1878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c1834a4-3021-4ba5-9275-bdc9660f0bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0333a7f4-6850-4a72-a0db-6fb8c11bb8a6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e333a98f-72e9-46e1-b981-594261170272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21595ac7-8167-457f-8eee-105a87748046",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd16c02d-2fe7-45bc-ad89-c196fe10e076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ee9219-f9bd-4be3-a2c2-37bf6a790740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c302288-7f5d-44b7-b262-1861e219dced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed88845-8bba-4822-98ac-3a62686c9c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551bd60f-d608-40a0-b92b-c6d7f9f3293e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419d0d78-68d9-47ad-9f0d-05f7be5b1424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c3c69fc-78d9-45b3-986f-baa200ce5c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394e8339-e764-4c83-8d5d-8cf2e6da3571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7968173-2dde-4ae5-93f1-9a2b668442c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c2053b-cdf5-458d-9cf5-d90751f62f25",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b412a75c-87e5-4892-baef-02aad5dd0b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d61813-bdd6-4186-98bf-2735167159f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b038ce78-92b7-4138-87a2-cec10bd42f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb634a4-2e86-4873-a2b4-c48b1e38d837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f24238-1b45-4bb6-a269-5de69f455584",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a638f4-18a9-45cd-bc59-51784ceb9311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2bfb09a-475e-438b-b64e-98388cd7f880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e4c71c-e5bb-455b-bb41-abe1590ac5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebedf5d-380e-4eff-9fbd-258a4c9d9007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3093b4-3f2b-4429-8204-1e0a7730f2db",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946e36b8-5741-423e-ab0e-e6b91d682b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a17e80ea-0d1f-4208-beae-ed2691a200d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277781d4-9a0e-4b8b-9613-02c06dbb4c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b934c4-0458-4cca-8ac3-794d555054b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf426a9-74cb-417c-97ed-e2cdd05afde8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591fe3f2-c721-4130-86b4-db4ed7fbd4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08073c8-f052-4c4c-8925-d75a0168f05f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125791d3-77dd-4ff0-af20-42772fc85653",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c4267f-2e6b-4964-8c07-a8a4891313de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76f7d95-62e0-40cf-b2c6-185041956243",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2b1385-e13b-431a-80c1-2c780910b148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b5f27e2-5f38-44cd-bf4a-1d1c58057845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc78d9ca-e84b-4028-ba34-91335977970a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9455af6-77f0-457f-b423-ec4d955e71c8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b108ccd8-9698-4b00-8bc4-d975ecfdbe09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ec6920d-6937-445e-a8be-7f67e471ac0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "455ca9df-940a-43bb-add2-90140a90b1a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81cdbc58-6246-440c-a7e5-4b006d1d51ee"
                    }
                  }
                ]
              },
              {
                "id": "f791def6-a32a-41da-926d-66ed10812cb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4275bc87-e150-4473-a3e2-701320e58ddf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbb90b5-8bb1-4a6f-aa19-fbbf8512ed72",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2cadc541-595d-4f24-bc05-161e58edc555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7ae9de-010a-4dcb-b2dd-7d22b180d9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38235ef9-0548-4ff7-8996-c3794a15aede"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "949779dc-5620-43ec-a893-521c22728cc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf928bd9-b4e8-4072-b41d-e71647a51332"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afb355d1-b38a-4282-890e-c902a2b86b80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4de9a84d-b55f-4080-a9ba-21880e424265"
                    }
                  }
                ]
              },
              {
                "id": "87ff0b4f-78c2-4cfb-9da0-45ccd52ad13d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "acff5bfa-a319-49a3-914c-2abec0e8a1da",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38802509-f7af-41c2-988a-a7afc8105ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e7220be1-e0cc-4f46-9195-9a46fe6202c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21efb06-1773-4089-86a2-db1833d80c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e2ddf3-438e-4eee-bd80-b519a8c685d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e06fe65-d329-41b5-b81e-95c3e5916a44",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb6aa9ce-f7c5-4b11-b361-2b468ed861eb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c659ceb3-f567-490d-9481-281f0016fab0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e940b086-f132-4fb0-9abe-42f6d548262e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e46de25c-503c-493f-b597-67d510ca6a46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5ae28c4-d1ce-4ad3-be95-9bd4cbc14ae6"
                    }
                  }
                ]
              },
              {
                "id": "668934a8-74fe-4eaf-9f94-02072f22f89b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa8756bb-f75e-48d8-a0ee-17352b41159d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c17f19b-f9c2-4172-bdeb-bcdb28d98ac3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3283c449-df59-4ba0-9c11-cbcb152ceb6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "469835b7-d6cd-470a-8b0e-b1eababfce41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0e38fff-f4cd-45e1-bf71-702b27a3fa21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0f4194f4-b408-45a5-a7db-248e28f90924"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74ae75a3-3b49-401b-a2f4-4c7c1498a8c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1b0a62a-da9f-4bc6-b0f2-b251fbb18aed"
            }
          }
        ]
      },
      {
        "id": "53ddbad3-eb1e-4319-9bfe-851185f9efe5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6d52e70a-1359-4992-9e73-a72fb217df99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "61771671-1218-49b1-b654-f78eaa19d215",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bf2ecee-9fc7-4ae8-892f-7cb39b21363f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4572bb-0916-4012-a056-3a5a0add2d39",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12c9a461-0a88-40c3-a370-87bce9c4715e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac54353d-30bf-46f7-afae-d2a82d0d7c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5721036-85fb-4991-b677-9cc099ba32de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4e73e8b-8a33-4630-b121-d58eb35f258d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a120687e-e522-4a43-8e7c-0cb4a5b85b88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78d553c8-1818-44aa-b19f-d4dd1c4266c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ced77952-126d-4590-bd1d-89294c728334"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "743fe31e-fcc2-4df4-aad6-74f55290e0b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "09e5054d-67e9-49fb-9d43-31b40eb87b7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf05d6cd-86b9-4913-b45e-f06ef8884e18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c9e459a-0439-47fe-a3cf-3598bb7222c8"
            }
          }
        ]
      },
      {
        "id": "238a3517-504c-497a-a34e-c756bf7e8907",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "542f64fd-5b10-44a1-b3c4-1f88325b98f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9118818-5d45-486e-8ca7-5452faf9202f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3287da29-fc86-4afe-b6c3-fc5f70e57e89",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd3479f-ac8a-4ce7-91bb-c74c2a75fcaf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c076e75-4f66-4518-b265-f5ba2a1ceb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f089dc3-ddf0-4891-a437-8ce23fdd692f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "156cdba7-cfdc-457c-b543-8b79a83a1261"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "703a7356-7ac5-4295-9a7c-80eaeb36abdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23b0eb13-281b-4698-8d01-bdd41ba2151b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f09b524-ca92-4cfd-9cd9-28bfd85cdc5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "652232ac-d830-4e37-aedb-594dc41b64b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d93d96c3-b6cd-437e-9b77-4f4ef040b7e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ca6f403-9ff7-4dfa-ba3b-e162f8e71841"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08bf8524-a616-4cf6-8326-179ba79ed316",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3659abc8-a2d3-430a-b81e-571817681e3c"
            }
          }
        ]
      },
      {
        "id": "c34f97aa-ccff-4ffe-8236-e25fd1d26e3f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1bd58e2a-345d-49a4-a963-7dbb9fd74616",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38e0f76f-3701-4817-b857-615069051fa3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdb1bcfc-9090-4ced-9657-ca2e167e22d3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2922fa89-5b66-4355-aee5-dd37193c570c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07ae0aa3-103a-4fe4-9867-3beb325a9f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114fe916-a7b1-4004-8280-617413056a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e7008ec-19e9-49ab-9d0d-41af1f56c3a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc2aff5d-4861-4875-92cf-799d52a69ba2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebd75b9e-ce86-40d1-8cd0-b5447f0dcfe7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56fa5a08-54db-4332-9b2d-5c8d70f1bf43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb77b50f-aa10-41bb-b2e1-e127c93a3d8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f035dbf-6957-41b8-b826-4ff96df2e245",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "585007f0-b3d8-4116-ab2f-6edb4253de0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca630438-f3bd-48ab-8479-19d514333008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14747e96-71cf-42d7-b809-a279c474b33b"
            }
          }
        ]
      },
      {
        "id": "9caa7ace-f5e7-4054-8709-b8f88a9eb120",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf3ec4c2-dd6c-4e21-80fb-925ad477ba9b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8c0a5d1-0b4a-48ce-ac01-2f18dd52f138",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5029a3a6-c5df-4938-83b8-49f9f7716379",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9a4c435-2c38-4509-a0ef-d4403b23f1a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e75f21dc-f253-443c-9ba9-79ee46d9d7d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.185964912280701,
      "responseMin": 2,
      "responseMax": 288,
      "responseSd": 26.985840592614448,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709512478334,
      "completed": 1709512489531
    },
    "executions": [
      {
        "id": "6077f04f-6e1b-4c4f-987f-532961742ad5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6140a560-0ec5-4189-9034-52769901b7e5",
          "httpRequestId": "b40289dd-4443-4346-b010-377a64f824c1"
        },
        "item": {
          "id": "6077f04f-6e1b-4c4f-987f-532961742ad5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b72270dc-0e17-43f5-a0b3-c2babab9daf3",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "0f0e3a9e-8985-4419-a14a-1733746779c2",
        "cursor": {
          "ref": "7f1e3352-4ad1-42f5-8d70-d162d833cb08",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d2166317-3760-490a-bfdf-4e42a5d06700"
        },
        "item": {
          "id": "0f0e3a9e-8985-4419-a14a-1733746779c2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0b6d750f-0df9-4c76-a350-f9b019fec28c",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "5b4da622-8bfc-451f-aaff-c55f8c2ddc89",
        "cursor": {
          "ref": "f6a1108e-d8f3-45df-b2c7-1507ea27e9a3",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "091373b9-4065-4f18-aa23-e3c5ee3db90a"
        },
        "item": {
          "id": "5b4da622-8bfc-451f-aaff-c55f8c2ddc89",
          "name": "did_json"
        },
        "response": {
          "id": "b2d68fcc-0ec5-4e19-b213-99cb30e0c348",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3267409-dbc7-4cf8-b513-69a3a52bdb33",
        "cursor": {
          "ref": "cf56e23c-cccf-488a-b3aa-71573a80995f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dae3f19a-785b-4f8b-9f96-9660051e43f7"
        },
        "item": {
          "id": "d3267409-dbc7-4cf8-b513-69a3a52bdb33",
          "name": "did:invalid"
        },
        "response": {
          "id": "10005192-2e91-4674-a4b9-3e7aad97025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3267409-dbc7-4cf8-b513-69a3a52bdb33",
        "cursor": {
          "ref": "cf56e23c-cccf-488a-b3aa-71573a80995f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dae3f19a-785b-4f8b-9f96-9660051e43f7"
        },
        "item": {
          "id": "d3267409-dbc7-4cf8-b513-69a3a52bdb33",
          "name": "did:invalid"
        },
        "response": {
          "id": "10005192-2e91-4674-a4b9-3e7aad97025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5301ded7-aee6-4796-826e-8e5e4ed46557",
        "cursor": {
          "ref": "04dd2b5a-e06a-42c9-9412-c59cb586315b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c67a69f5-be9a-4e12-bf33-777a69deed01"
        },
        "item": {
          "id": "5301ded7-aee6-4796-826e-8e5e4ed46557",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "800308cd-e25f-430e-b4ad-28e91e656057",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb790da-8cf5-4ea4-bf62-24653c9bad6b",
        "cursor": {
          "ref": "775136e4-1cc8-4b7f-adf3-192cc61ea0cd",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "22ff6161-555d-409a-bd9b-a0edd60062db"
        },
        "item": {
          "id": "0eb790da-8cf5-4ea4-bf62-24653c9bad6b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8f99d9dc-941b-4014-8030-4d721cc8e5ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacf9d6c-a805-40d4-906d-603e7f7aa4d9",
        "cursor": {
          "ref": "fd79b379-5876-443b-a3ee-9861f903315e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f1ac5a55-4be0-4c54-a4ea-f49b32bcb166"
        },
        "item": {
          "id": "dacf9d6c-a805-40d4-906d-603e7f7aa4d9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fb7d860a-f3b5-4eb3-8d03-49f2be94f42c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927da183-c13a-4fb0-98cb-c7ea78d238a6",
        "cursor": {
          "ref": "99d5baab-6348-44a5-8f1d-78d5180f95ea",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "604017b2-0400-4945-a7b6-dbfd69e91094"
        },
        "item": {
          "id": "927da183-c13a-4fb0-98cb-c7ea78d238a6",
          "name": "identifiers"
        },
        "response": {
          "id": "4c0675fa-9ff3-43d0-b132-8727704b0123",
          "status": "OK",
          "code": 200,
          "responseTime": 251,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87359e40-82f6-4361-b2e3-81bb682efcb0",
        "cursor": {
          "ref": "5ba79f7b-6525-496e-955c-ab61d9a11c39",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9a0b5bcc-534f-4463-925e-83426a7701e6"
        },
        "item": {
          "id": "87359e40-82f6-4361-b2e3-81bb682efcb0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85669935-5b0f-4919-bde3-07dc45065706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e93e65-d34e-4454-9e2b-fa4881522a96",
        "cursor": {
          "ref": "3f3a2197-5e32-4626-bf98-7d7a388dffab",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "edf87b0c-b66e-40b7-89b7-910e6dd7e4bc"
        },
        "item": {
          "id": "46e93e65-d34e-4454-9e2b-fa4881522a96",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c538dd4d-c48c-417b-8077-c21f2bb1a7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb58ecb8-81d9-4bc8-8fc6-45aac0766959",
        "cursor": {
          "ref": "bd39e70a-8b89-45f4-af77-90af8ab73b5e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e16f79ff-bed2-4da0-b6b2-e9b1abd94622"
        },
        "item": {
          "id": "fb58ecb8-81d9-4bc8-8fc6-45aac0766959",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9ec1a592-0561-42ff-8e0c-419fff0c6269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e122685-47e1-4eb4-92ea-65bc3842f514",
        "cursor": {
          "ref": "9548c7fd-e0e9-475f-8d90-305873891eb0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9274e312-95b3-4313-8475-e8352d49fb2c"
        },
        "item": {
          "id": "2e122685-47e1-4eb4-92ea-65bc3842f514",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2e124eaa-d151-4200-8ca2-aed5edd1c777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48041489-6d01-4337-85cd-db7ba8d04165",
        "cursor": {
          "ref": "ebb895da-c39b-4d23-a78a-2f0cae557e10",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "bf17a57d-5a62-478b-ab7d-69809a46d334"
        },
        "item": {
          "id": "48041489-6d01-4337-85cd-db7ba8d04165",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "87bae457-6939-4051-b0e5-df00d7109440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93930c18-049e-4e8f-9a93-ac2c3b9373bf",
        "cursor": {
          "ref": "23e610c2-8e83-4363-ad7f-a1b5caa019b1",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "31dc2396-b1fd-4630-9cf4-c203b685c1df"
        },
        "item": {
          "id": "93930c18-049e-4e8f-9a93-ac2c3b9373bf",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ff46de6a-9abb-4def-820b-41e7b96d6bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36272807-39c1-4dd9-8c9b-c259b4e049bc",
        "cursor": {
          "ref": "fcf080a7-dd37-4787-a25f-f12154df14fa",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f9279cd9-3aa2-4e00-9cea-c4b706ae0ede"
        },
        "item": {
          "id": "36272807-39c1-4dd9-8c9b-c259b4e049bc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3868523c-1443-4dca-801b-1e441ed24b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c5880c-1f16-457b-9a2d-be4727daeff2",
        "cursor": {
          "ref": "e4e6ecaa-f306-4aa5-b0b8-0c70bdd0e33b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "89b3a9c0-257a-4109-b4fd-0f72193da4ae"
        },
        "item": {
          "id": "87c5880c-1f16-457b-9a2d-be4727daeff2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "858316f2-5f90-4df5-8524-f313e98d6e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aabaeb-37ac-403e-89e2-ac0840d3fada",
        "cursor": {
          "ref": "37398639-2f7a-425d-9cfe-d677515f873d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d77ab975-e835-47a9-a506-3b688656579e"
        },
        "item": {
          "id": "90aabaeb-37ac-403e-89e2-ac0840d3fada",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f4d55dd7-d8fe-4db9-a808-db58be0b6616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8800120c-79ec-4b7b-b42b-2f1e352a5778",
        "cursor": {
          "ref": "7541ef52-1d6d-4f28-8256-9aa4409080d4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5cbeede1-d369-408e-b76b-4050161e4234"
        },
        "item": {
          "id": "8800120c-79ec-4b7b-b42b-2f1e352a5778",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "554d4cc2-7fda-446f-b4d1-cc4e1ed54d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e84aa92-1e25-4c61-8bea-6b4225047cd7",
        "cursor": {
          "ref": "5d9248ad-97e3-4b80-8968-de598c791779",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1b770089-3cff-4e2a-8662-109166080d8b"
        },
        "item": {
          "id": "9e84aa92-1e25-4c61-8bea-6b4225047cd7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6347869a-d091-418a-8834-214f20229985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f838e0a-5927-4a33-8573-e479ff03cdcf",
        "cursor": {
          "ref": "58e22f89-1c3a-4094-88b8-0cd9b273c095",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c728028a-5757-4a5e-b33f-be578f1f926d"
        },
        "item": {
          "id": "3f838e0a-5927-4a33-8573-e479ff03cdcf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5f81ad5b-470a-4da6-ac62-99f20817f027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761c498e-6cb8-40f2-b00a-dbdcb97d0156",
        "cursor": {
          "ref": "97aa66ae-8df0-4204-bd54-2b12e8c4dc73",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f200fb43-a92e-4313-887c-834870550883"
        },
        "item": {
          "id": "761c498e-6cb8-40f2-b00a-dbdcb97d0156",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "518373d7-e066-4dc0-91ab-621a121a9bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df35e852-e638-485a-88f4-6c5a2d7fce72",
        "cursor": {
          "ref": "22d297ac-3945-4134-9649-a6d3728e765b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6319d090-b062-49b9-85f3-5cf63578032b"
        },
        "item": {
          "id": "df35e852-e638-485a-88f4-6c5a2d7fce72",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55431961-4268-4c30-9422-e326a3b5f84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8557f1f-820a-4e57-8ca6-4a3699c6123b",
        "cursor": {
          "ref": "b661386f-8ae2-42c1-a595-2ddb0a69d5f1",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6cf16a59-18ff-46da-b9cb-77469b7e25c7"
        },
        "item": {
          "id": "d8557f1f-820a-4e57-8ca6-4a3699c6123b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8d473d6f-012b-49d9-b9ca-7b6f02ab3423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4704a99b-e0dc-4637-862a-1f7dc1e95fa4",
        "cursor": {
          "ref": "4d37721b-f180-4884-b0a2-39d55ba3c4c6",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c1b22f3f-05bd-498d-9731-1a25a94dfb09"
        },
        "item": {
          "id": "4704a99b-e0dc-4637-862a-1f7dc1e95fa4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1a8e01f9-010d-4d15-9822-5c855a3d281d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7319b605-a13c-4f4b-acb3-6591032ec887",
        "cursor": {
          "ref": "21a6a266-27b2-493f-a6fc-57bf626dc6c5",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "37251c43-98e4-4c0a-b5f6-2bcd9fd44fbb"
        },
        "item": {
          "id": "7319b605-a13c-4f4b-acb3-6591032ec887",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "95f62b1f-22e8-438f-bbbe-14220327403d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b97863d-d986-4840-bd55-80f0b9222d43",
        "cursor": {
          "ref": "265db565-08ad-4cc2-a27e-2a75c6dc4c36",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9c461f6f-aa5f-4fb7-bba6-c086df3e125d"
        },
        "item": {
          "id": "0b97863d-d986-4840-bd55-80f0b9222d43",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "37e4189c-a41e-4fef-bce7-9a441c81d5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea5fd29-97dd-4549-982e-c42f2f8edfdf",
        "cursor": {
          "ref": "1a9d84cc-3ff6-41fd-a720-ac26231e32f9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5253c7e7-59c4-4c18-a6a2-dff4222ebf98"
        },
        "item": {
          "id": "6ea5fd29-97dd-4549-982e-c42f2f8edfdf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f53d7fea-fba8-45b1-86d6-b38697eaa753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840b7a41-bd77-4f60-ae93-af26e1b5cc96",
        "cursor": {
          "ref": "79993556-b162-48b8-92c1-cbd259057f7b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4f2e18f8-9790-4062-8781-7262cb1d09fb"
        },
        "item": {
          "id": "840b7a41-bd77-4f60-ae93-af26e1b5cc96",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "de6eefb9-25ff-4c80-b316-934d32120a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9802f02f-1b47-480b-8f30-76e885015dbd",
        "cursor": {
          "ref": "4085fa26-4d7e-4840-9589-39ebec51ed3d",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e56fde97-bc26-4788-9685-0a50c2ed4bbc"
        },
        "item": {
          "id": "9802f02f-1b47-480b-8f30-76e885015dbd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4421042f-9e88-436b-9f6e-679a974e2933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23dea99-45ff-4bf7-bb0f-fb1326cd73fd",
        "cursor": {
          "ref": "8bad1900-12a6-4d9b-b8fd-01601b4de8d4",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "984947d3-eeb4-45d9-b73b-76ba44b10d55"
        },
        "item": {
          "id": "a23dea99-45ff-4bf7-bb0f-fb1326cd73fd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "55d88c81-19c2-4b6d-8956-035655ae2f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf1cdce-2702-4119-b99d-47fb8c06c365",
        "cursor": {
          "ref": "1cd90f80-7fdf-4985-8845-84b136540e23",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2f5186b5-96d3-4976-9fca-2ac8bf20cb35"
        },
        "item": {
          "id": "adf1cdce-2702-4119-b99d-47fb8c06c365",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "184d2b4d-9492-4016-81d5-6c1445a497d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04c729f-8789-4be8-857a-87ebecce1e5c",
        "cursor": {
          "ref": "70ce6fdd-f7ca-4fb8-962f-469cc4c12833",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ea2ca184-8e66-42dd-870f-f9d61bb7c8b5"
        },
        "item": {
          "id": "c04c729f-8789-4be8-857a-87ebecce1e5c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e4b3b7ab-bb31-419c-a9d0-7b13dc7e68bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cbaa20-61b5-4be2-9a4a-fd1ecef54e86",
        "cursor": {
          "ref": "843b3016-9b1f-42e4-806e-d50eb51e62cd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6692db2b-1a0c-4f9b-b571-632a0f22fd91"
        },
        "item": {
          "id": "78cbaa20-61b5-4be2-9a4a-fd1ecef54e86",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a957a21c-da2a-4e24-ad99-d0b52df79caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9863134b-ac71-4d19-9e99-4a23386b4ed7",
        "cursor": {
          "ref": "a918b01b-fa74-42e5-b0c8-ce132aea701d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5bdb65f3-f25d-4453-b2a2-4bdd1dca8247"
        },
        "item": {
          "id": "9863134b-ac71-4d19-9e99-4a23386b4ed7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "68ff92d7-516d-47d2-aa85-ca8fc80be99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18778828-c607-4bd9-b3b4-10ba65f4b9ee",
        "cursor": {
          "ref": "6d235672-2a6a-4a01-ba31-93df3f71e3c2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ab3bdbbf-030e-4a1e-91a5-439b3be71abf"
        },
        "item": {
          "id": "18778828-c607-4bd9-b3b4-10ba65f4b9ee",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "15f6d2f4-2301-44b5-8b3a-7debb2cc7cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f25412-f5cb-44ea-9598-7a3c3f3881df",
        "cursor": {
          "ref": "a319361a-6b99-4ade-97a0-7707377371e9",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d728812c-004b-4a76-8430-d721f6457f1e"
        },
        "item": {
          "id": "20f25412-f5cb-44ea-9598-7a3c3f3881df",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a9343c0f-c2ec-4b1d-bbed-e02cafdc970f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f309c6-5a49-41ef-8a90-6d57fb6a1253",
        "cursor": {
          "ref": "e7632b8c-4242-4ee5-a3df-947590331909",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "826eec3f-c0f1-410e-9604-e5c7f45b7650"
        },
        "item": {
          "id": "24f309c6-5a49-41ef-8a90-6d57fb6a1253",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e0516a3a-2d37-4002-8237-13a03913ae57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dbc9c3-80d2-4a53-8788-500e6935cbf4",
        "cursor": {
          "ref": "7c2110d7-5328-4d07-9eea-0b4a61504c9e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b90dcd75-eb17-4639-94d0-6f8b0ad440c8"
        },
        "item": {
          "id": "61dbc9c3-80d2-4a53-8788-500e6935cbf4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b6608f63-38cf-4cce-8dbd-65a47c6a36cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c390f9-4500-4871-bd5e-7080cd6a0439",
        "cursor": {
          "ref": "9d0e9f1b-1f6c-492d-90d3-72d5adef869a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8e9a4260-acf0-4384-8212-6540467142bb"
        },
        "item": {
          "id": "87c390f9-4500-4871-bd5e-7080cd6a0439",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "673b9cea-91f7-41db-83d4-2dfdf5962e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a019679-4aa1-499a-8b78-16e38e16a62d",
        "cursor": {
          "ref": "d87e87e5-d4e1-4ca5-af8f-ddeeec024611",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8c0bb328-a60d-4c94-a1dc-d9cc8e16680a"
        },
        "item": {
          "id": "4a019679-4aa1-499a-8b78-16e38e16a62d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ad3a56e7-8b3d-4953-b07a-3374be2c3252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84435630-af81-4829-8cbe-67b220f0d373",
        "cursor": {
          "ref": "578cce71-0549-4dfb-a3f9-c6c701dacef1",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "290a2c54-1513-4b28-8444-358a2d205dff"
        },
        "item": {
          "id": "84435630-af81-4829-8cbe-67b220f0d373",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d43ef649-ed4e-4bbd-9b88-0f3b96d02d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233263a9-ba04-41cc-b7f2-73b4c37e0a16",
        "cursor": {
          "ref": "7150dab9-f4a4-4e09-8094-bde92955d79b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e70ab10f-65bd-4f1a-8ae4-015117a12ab8"
        },
        "item": {
          "id": "233263a9-ba04-41cc-b7f2-73b4c37e0a16",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "23857c5e-7b1f-4606-afa7-2e670f71896f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9841efd6-ee20-405d-987a-77772f1c216d",
        "cursor": {
          "ref": "b3221cf3-f913-4320-8e61-d4866efec800",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "af92a032-72a7-4b83-8565-64f181b38364"
        },
        "item": {
          "id": "9841efd6-ee20-405d-987a-77772f1c216d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5e391902-6aa1-42f5-a35a-b3824ffe9e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60185ef8-be0f-482a-9e99-d11554f955c5",
        "cursor": {
          "ref": "16ded4bd-852d-464d-9eca-e5e9922e56b9",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ee91d411-b907-47fd-896a-2c1cecad146d"
        },
        "item": {
          "id": "60185ef8-be0f-482a-9e99-d11554f955c5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8d508cec-bc23-489d-b744-1b4832b406bb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0e8023-bbb0-4564-af3e-8e6ceb49abaf",
        "cursor": {
          "ref": "e8b91096-533b-43ab-93f3-cb1e9fc699af",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e44c0841-dd08-471c-acb3-8d0a93dea47e"
        },
        "item": {
          "id": "ed0e8023-bbb0-4564-af3e-8e6ceb49abaf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "edf82e52-389e-4cc1-bbda-50c23994d215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baed151-02c6-45ee-98e4-702086eeff07",
        "cursor": {
          "ref": "9dfb2f29-0ead-4fc9-9f7d-fa5e87af18cf",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cdc984a0-1cf9-46d8-9681-3280f1587ebc"
        },
        "item": {
          "id": "7baed151-02c6-45ee-98e4-702086eeff07",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3bed7969-d491-4012-845a-d82c9a3068c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94611bd9-ea20-4a5a-a803-b3f603608869",
        "cursor": {
          "ref": "e58b6958-b5bc-4e16-983a-46c76655bd8b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "65629472-1dab-435d-b95a-b8b9262a6d71"
        },
        "item": {
          "id": "94611bd9-ea20-4a5a-a803-b3f603608869",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "70335878-3fa9-483c-afc7-1126c17d7c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f602c4f5-d673-45eb-968c-8d45bc98341a",
        "cursor": {
          "ref": "17d5ff20-de2a-4475-b9f4-f3428ebea07e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fef30f31-3031-461c-a760-e32c4f3b48f6"
        },
        "item": {
          "id": "f602c4f5-d673-45eb-968c-8d45bc98341a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5486780c-306f-4773-a04e-d1bbe602462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c13c90-480d-4a48-a7d0-d999a8be6d4c",
        "cursor": {
          "ref": "11921fd3-2089-4e5b-ba68-4e82a145739d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c12f5644-bc54-4359-9f76-e1b09fd06220"
        },
        "item": {
          "id": "61c13c90-480d-4a48-a7d0-d999a8be6d4c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c55a40b0-a6c7-4e47-99d8-9660098babfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab453d08-545c-4f87-9d0b-5dc7f408e3c7",
        "cursor": {
          "ref": "f0cd978a-2519-4d27-b1cd-02d32a4fb1cb",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "78703d21-2a99-4452-85f9-4798f6f32696"
        },
        "item": {
          "id": "ab453d08-545c-4f87-9d0b-5dc7f408e3c7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "97faf21f-354e-482f-aea1-1e5c11bd436c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc21e19-71f6-4045-86db-abb3d394e781",
        "cursor": {
          "ref": "869e3426-3991-4f08-98c9-59f8fddd7392",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2122f96c-790e-41aa-a6dc-330e08004998"
        },
        "item": {
          "id": "fdc21e19-71f6-4045-86db-abb3d394e781",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d8a6a00a-9d18-4072-aef4-ee6c4a61d4a6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c99cd65-d3c5-425e-990e-ce2f80f5d29a",
        "cursor": {
          "ref": "033ddbe8-4091-4b0b-a442-731a3b2aee66",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d58c73a0-7f51-4170-880e-b86bf9d9c653"
        },
        "item": {
          "id": "2c99cd65-d3c5-425e-990e-ce2f80f5d29a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5f610c6e-3ec5-4f37-ae20-401c541103a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53893c1-d563-49f5-80fd-5296a4035930",
        "cursor": {
          "ref": "18c901d7-1a45-4e3d-8eb9-31e6e159ea81",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a275e5e3-e628-4fb8-942f-c559f740aada"
        },
        "item": {
          "id": "c53893c1-d563-49f5-80fd-5296a4035930",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7796142f-5859-44d4-9fca-1ffd86d9db6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e3911b-bc42-4ef7-aae1-27a46de2832c",
        "cursor": {
          "ref": "fa6e118a-d144-410f-b956-0a5efd18b378",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "77da5c81-ca93-4f2d-bceb-632e83dd98ab"
        },
        "item": {
          "id": "d4e3911b-bc42-4ef7-aae1-27a46de2832c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a149bc0e-7c90-4ce0-8f38-af36223f1682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e522fef-318d-4183-b5aa-8d0dcc879bcc",
        "cursor": {
          "ref": "75b31229-9f51-48ad-a2d1-d695d1a2cbfb",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "95c802cd-a500-43fd-917e-c0f544251d7e"
        },
        "item": {
          "id": "4e522fef-318d-4183-b5aa-8d0dcc879bcc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "593a338e-3256-4b9f-bd84-212d268a4623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ba76e9-0eac-4681-b913-811437f21b1d",
        "cursor": {
          "ref": "4e691306-3660-427d-8ae0-0a725d6946c4",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "742be6de-798d-4783-992b-66efae8fad37"
        },
        "item": {
          "id": "48ba76e9-0eac-4681-b913-811437f21b1d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "79f3a69e-fd68-4efe-b4b9-7e18433c8a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46899065-ceac-4371-9112-a8d016d42ee4",
        "cursor": {
          "ref": "f655f617-5164-433d-bb03-41e83b52568a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6f5841f0-89d3-4e62-b89a-05d74e312150"
        },
        "item": {
          "id": "46899065-ceac-4371-9112-a8d016d42ee4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4ae47c95-7fe5-4607-9edd-806b191e5d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f798915-1ffe-4c70-9b73-17bc0bd6aab4",
        "cursor": {
          "ref": "a1a7f284-de38-49cd-b5cd-48446b254c39",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e8770c84-053e-422f-854e-911b877b23e0"
        },
        "item": {
          "id": "1f798915-1ffe-4c70-9b73-17bc0bd6aab4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6b1e4b19-b1ab-4cfc-9f31-2dc5f8cb182a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0987fa-4f98-49e4-bafe-3fdb3ef81a7d",
        "cursor": {
          "ref": "32278041-b4aa-4282-bf35-a126578358c1",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6a497f93-46ab-4364-bfeb-697162c29719"
        },
        "item": {
          "id": "ab0987fa-4f98-49e4-bafe-3fdb3ef81a7d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d72f469f-cae9-4235-8b82-ef9802b8f9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9024df0c-607c-4280-9396-5e119f415ee9",
        "cursor": {
          "ref": "a000ec67-baa4-497e-8fb0-fae685e3a65e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d18ac73a-a8f2-4584-a7df-a9a63f9b3254"
        },
        "item": {
          "id": "9024df0c-607c-4280-9396-5e119f415ee9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "33970cad-627c-4bcc-841c-c5a32b51a9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a659b38d-fe92-46b7-b446-bb80deb2fbef",
        "cursor": {
          "ref": "a154d579-aafa-4e67-b264-1e1efbc1ff57",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b02f618d-75c0-4dc5-b9dc-75ce4b1677e2"
        },
        "item": {
          "id": "a659b38d-fe92-46b7-b446-bb80deb2fbef",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f1e8685d-0577-4597-877b-82e6c771d0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c46306-67ee-461c-b755-97c83c325f16",
        "cursor": {
          "ref": "e2844998-7c7e-41a5-8197-3ba1a8bddf8b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "15b31731-21c3-4fb9-8fa6-5af791599f6a"
        },
        "item": {
          "id": "c1c46306-67ee-461c-b755-97c83c325f16",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "576c2c49-cbe0-439b-8319-cfc3c7b55200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973f903e-6e55-4103-9b72-cd9baf536e37",
        "cursor": {
          "ref": "5befc09d-003a-4820-a8fa-6772f2837c29",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3ecbe750-308f-42b4-b001-c15f7c0d5121"
        },
        "item": {
          "id": "973f903e-6e55-4103-9b72-cd9baf536e37",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a5199745-bab3-426d-a7cd-bea6ee161333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabaa5d4-0a07-4284-8327-c280aa37efe4",
        "cursor": {
          "ref": "e55c30ec-bc0b-4b99-959d-eb3ee0f46cae",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d3948d1f-9052-4019-8268-c7d8dd2767a4"
        },
        "item": {
          "id": "cabaa5d4-0a07-4284-8327-c280aa37efe4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b16226ee-1f05-44e3-b7c8-71e85df1cbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1567159-9e42-48b9-81d3-1ed3fe4d8c8a",
        "cursor": {
          "ref": "761d5d11-fba6-4680-b414-95380dacd57f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d8b2fa4d-14ca-4b02-b719-f5ca225b7ceb"
        },
        "item": {
          "id": "f1567159-9e42-48b9-81d3-1ed3fe4d8c8a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3eb420c5-cd6e-4f69-8131-404fd835a9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ab9010-bbe8-4558-b769-365b3b9fdd55",
        "cursor": {
          "ref": "579f3ab3-2d8f-4880-b182-aca9cfcde8a5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f53f43b4-cfa7-496d-a66c-bcfe4bc60055"
        },
        "item": {
          "id": "83ab9010-bbe8-4558-b769-365b3b9fdd55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0bd41892-eb50-46af-9013-63c02f79fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649864d5-7157-4898-9fe5-501650c8b475",
        "cursor": {
          "ref": "1c311713-e956-4277-9098-cc81d20be979",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0f9ce8b7-f548-4adb-90d7-47d92943329f"
        },
        "item": {
          "id": "649864d5-7157-4898-9fe5-501650c8b475",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "47da14c2-0231-4bbf-8997-84c01a45ce6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da3855c-a152-4d0c-bb33-5662eebaf7ef",
        "cursor": {
          "ref": "37b6ab27-2944-4487-8038-227bd0e377a1",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4de7dc86-960e-488c-8f78-b626df738fb2"
        },
        "item": {
          "id": "4da3855c-a152-4d0c-bb33-5662eebaf7ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "752b36c6-4886-45b5-b694-d370711de655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5b5c7b-bc7b-43ad-8795-a8780a455cad",
        "cursor": {
          "ref": "d1516fd2-7795-4aff-a204-62b9329ca14d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9a4a950c-fd8f-4f94-bb8c-b2a99ee68c6e"
        },
        "item": {
          "id": "de5b5c7b-bc7b-43ad-8795-a8780a455cad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fda97fcb-cb29-4872-91df-c82b53476078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234205b7-9d4b-45be-8fbb-a4945f68ee1e",
        "cursor": {
          "ref": "36cf79e9-5282-49c9-b40e-45fe04c50a8b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "29a803f6-b505-485e-b449-8b592e31a701"
        },
        "item": {
          "id": "234205b7-9d4b-45be-8fbb-a4945f68ee1e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a20adbde-62c6-4417-8e80-1fa00bd4af86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2312d2a8-dd34-40b2-8a37-3c5a3deb78aa",
        "cursor": {
          "ref": "f2830555-52d8-4f3b-ad35-76559f19cc9e",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a2548e1f-72fe-4fc4-bc5c-5377f4292ff2"
        },
        "item": {
          "id": "2312d2a8-dd34-40b2-8a37-3c5a3deb78aa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "90237af0-8741-400b-8dd5-13e5aae9f08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8e5f81-8dac-4094-b093-b62ab222f61f",
        "cursor": {
          "ref": "78c2de66-cf42-4fcb-9407-712f9fb04742",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e350927a-83ab-4015-8a81-4586d191b567"
        },
        "item": {
          "id": "2d8e5f81-8dac-4094-b093-b62ab222f61f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "69c33f3a-85a9-485d-bcb1-34337cbe4455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0933394-32c9-44c9-b6b3-36fcc10f3c99",
        "cursor": {
          "ref": "9dc6117b-e23b-4bdb-ab30-2d0b93822829",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e60611b3-8236-40d4-8fb8-77cc87223752"
        },
        "item": {
          "id": "a0933394-32c9-44c9-b6b3-36fcc10f3c99",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0c3e46f1-b15a-4ea1-8eca-264686ea3da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c532e0b3-4b21-4409-892c-b810b549416c",
        "cursor": {
          "ref": "6af3a829-de92-43a0-89f9-ac019a7a2b09",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5e75f0a6-acb3-4f9a-8b70-fdc58d3284ec"
        },
        "item": {
          "id": "c532e0b3-4b21-4409-892c-b810b549416c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "38e72056-8293-44ce-8b3b-6c3619fe9147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a017a6e2-fbee-4b70-8ce8-c266f82e1d9d",
        "cursor": {
          "ref": "862fc066-2595-4f63-8ece-690379a6b9f6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7cb4aceb-d6ea-4cbe-ab43-bf8e8e2340e8"
        },
        "item": {
          "id": "a017a6e2-fbee-4b70-8ce8-c266f82e1d9d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "67fcaee2-06b1-401d-9699-dd405a6d1a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5e9378-69b5-4298-8f23-dc422660679e",
        "cursor": {
          "ref": "b0da5f48-76bd-4929-84f7-f7236083b76c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "13010487-ade2-4c15-a5f2-cd09132bf0c9"
        },
        "item": {
          "id": "7f5e9378-69b5-4298-8f23-dc422660679e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b6e8445-a9ff-4c46-98fc-8be1c07c4f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d744d4b-55c8-436c-b61f-954464b43489",
        "cursor": {
          "ref": "317ead67-6385-4357-9a88-687c65e9f5af",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f9d841a9-2ae1-4175-8c04-b588a05413fa"
        },
        "item": {
          "id": "5d744d4b-55c8-436c-b61f-954464b43489",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bc4260f8-163a-43e1-8d5c-05d74ebf26fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a7e542-cc02-492c-97df-329c3f96d445",
        "cursor": {
          "ref": "ec20fbf3-a839-4e39-a218-02a02e6668a3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c5f8ee10-be70-4e5d-a4b7-5a9113838bf5"
        },
        "item": {
          "id": "24a7e542-cc02-492c-97df-329c3f96d445",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "83ffcc83-5e71-414c-b7c8-3d406c027c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb06cf-ac4b-45c0-b2bd-adb7066e2293",
        "cursor": {
          "ref": "80da9a64-e49d-4f48-a97b-a434de204c22",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "217a84fd-d79a-4a9a-b1b9-dc46a1edbe4e"
        },
        "item": {
          "id": "81fb06cf-ac4b-45c0-b2bd-adb7066e2293",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "22ba72ba-4804-4096-812d-d475710cc0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c9ab0b-525d-44f4-9bc7-b7d0ded68c89",
        "cursor": {
          "ref": "5c59ffd5-956c-4bd2-9c09-5b81ee77e944",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f2377784-6e15-47cd-b4f5-f6be83b57371"
        },
        "item": {
          "id": "40c9ab0b-525d-44f4-9bc7-b7d0ded68c89",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "80e8badb-deba-4159-b54a-e63f49ef06be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38c6253-4ea4-404c-9294-b442cb5255ec",
        "cursor": {
          "ref": "7499b954-3091-4aff-b15e-9857bddaa701",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "79049a10-bcaf-424b-a5f8-f87170274fd0"
        },
        "item": {
          "id": "e38c6253-4ea4-404c-9294-b442cb5255ec",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bcfe0a2e-17c8-4452-aff8-6f5993ba883e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e444ce5f-0561-4fdb-81e9-3f7bf2325a64",
        "cursor": {
          "ref": "80ee244c-5885-464d-a5f0-39ed303aab19",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "98e3b070-5711-4bd2-8009-6280b6e77bcf"
        },
        "item": {
          "id": "e444ce5f-0561-4fdb-81e9-3f7bf2325a64",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "09360e51-829d-476a-9f4d-6af0cc057df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871eb8a4-aeb2-4663-9e11-f8efc865fd3f",
        "cursor": {
          "ref": "cfb787a7-d114-41e3-8dcf-1b14a2d9b5a9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ab03113c-cae7-454e-925d-37e6f5cb3de6"
        },
        "item": {
          "id": "871eb8a4-aeb2-4663-9e11-f8efc865fd3f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "18109877-aba6-46ff-ad53-a6a45c963982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c906e8e6-fd7c-49d8-9283-1aaceed76743",
        "cursor": {
          "ref": "e714a728-f2d0-4824-afb0-3cb92f29e239",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "58572426-9b1f-469b-894b-b68c5d44d622"
        },
        "item": {
          "id": "c906e8e6-fd7c-49d8-9283-1aaceed76743",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "878adea6-c57d-4afb-ac83-756cd69e71c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abb8279-d662-4c8e-b0fa-b5124fd7ea4b",
        "cursor": {
          "ref": "f341ad5f-83b7-464f-a40e-a230e8cdcdde",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e482d812-5d1e-4bfe-a19a-a589290b2e3b"
        },
        "item": {
          "id": "8abb8279-d662-4c8e-b0fa-b5124fd7ea4b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b879deae-d761-4c38-826e-2d477462d140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bd5736-c358-4d34-a349-c585d3629b06",
        "cursor": {
          "ref": "a342c0ee-5d86-4cca-b0bf-00fd3b065b97",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e1c3899d-c644-48ee-bff0-2c6082eba435"
        },
        "item": {
          "id": "c9bd5736-c358-4d34-a349-c585d3629b06",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c86214b2-a05d-4ce1-8c59-307faedcb590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d23d07-ea3f-43bd-a08b-15e2a68b9225",
        "cursor": {
          "ref": "e7c74315-6c28-41ef-8cf2-5115299f57cf",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "197e14b2-bebd-4a0b-beab-43469113c168"
        },
        "item": {
          "id": "e2d23d07-ea3f-43bd-a08b-15e2a68b9225",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "05934323-e4c6-48fd-9624-a5dbc50127b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bfc7e0-12b1-41ae-84b2-f11e4607904e",
        "cursor": {
          "ref": "c104e021-20e1-41d2-b412-ff030625f357",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8128e1ba-5ef7-4073-b604-03c7a6f2c91c"
        },
        "item": {
          "id": "d8bfc7e0-12b1-41ae-84b2-f11e4607904e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1bab2b22-3c59-4a83-aebc-843fe32a35dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58be0f3b-4c23-45e3-94bf-f22e91ef8c84",
        "cursor": {
          "ref": "4cd8b987-2e1d-442b-a97c-0e59ce055730",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "be9e3ef9-d8f4-4093-a24d-bcb920256bd4"
        },
        "item": {
          "id": "58be0f3b-4c23-45e3-94bf-f22e91ef8c84",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "06778674-3946-4d94-9f3c-406ef853e33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b3b219-2904-47a2-9114-e5cb2b157086",
        "cursor": {
          "ref": "8a7a2eb9-62dc-4efb-8259-be2c021d9dca",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3c6f18b1-505d-4bac-900a-b303071e7ee9"
        },
        "item": {
          "id": "39b3b219-2904-47a2-9114-e5cb2b157086",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "29e61cd2-b78f-4db2-93df-d65bcc966fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1f4ff3-394a-41ab-b1d3-452bc46a43d5",
        "cursor": {
          "ref": "028974ec-ac24-41c6-8950-a31ba79da4c3",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e06aa5fd-e6f9-4bc9-aee4-490df8c509e3"
        },
        "item": {
          "id": "cb1f4ff3-394a-41ab-b1d3-452bc46a43d5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3db9313a-f19d-4737-889c-a472e719753c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c73329-7468-40d1-869e-08628041d97a",
        "cursor": {
          "ref": "9d992822-d39a-4ff5-9154-e6262ac96038",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1181d744-58a1-4788-8c5f-41dd4600328c"
        },
        "item": {
          "id": "e9c73329-7468-40d1-869e-08628041d97a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "552e2e16-6f61-4237-a0ba-9d6c894abbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d38aba-7d49-4446-a1d9-ea1a5a2c9de8",
        "cursor": {
          "ref": "501b905c-a5fd-4d0b-add6-ede70c6f41c0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b787adbf-e90a-468e-a1b1-1b4fa3ff85fa"
        },
        "item": {
          "id": "d0d38aba-7d49-4446-a1d9-ea1a5a2c9de8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "36ed5d99-3799-4303-89ed-1e05b07b7b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991845e1-fc74-462f-a649-c71af82d2513",
        "cursor": {
          "ref": "6642cfdb-b4cc-484c-bc8b-38529bcf95fc",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a8226b36-0749-4e1b-af0f-528f58ec2468"
        },
        "item": {
          "id": "991845e1-fc74-462f-a649-c71af82d2513",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c6f0d3d3-df89-434f-b72d-d8c2a8ba3f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0d8fc8-9a8e-40a9-8d8f-e336547892f8",
        "cursor": {
          "ref": "96d2a6b6-8b36-4d82-aea6-7c99448ac186",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5236ffbc-1b29-4cc6-b06e-1860fc2ccfae"
        },
        "item": {
          "id": "cc0d8fc8-9a8e-40a9-8d8f-e336547892f8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "02766951-8649-4cd9-8a6f-260ffc3c41d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924d04a0-89ab-4d22-9fc6-9ddcf8cbaaf9",
        "cursor": {
          "ref": "1b64c924-8201-481a-9336-f11f2dccd3a1",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a16fd941-8624-4686-a292-26e06b51fd8b"
        },
        "item": {
          "id": "924d04a0-89ab-4d22-9fc6-9ddcf8cbaaf9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6f6da37b-cfd3-403f-bfbd-fb073f44fc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bfe6d0-d819-489f-8009-562622ec4586",
        "cursor": {
          "ref": "46bf37d6-7327-4f99-a036-99acfcdce830",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ddd7ab9f-76c3-460d-84b9-38415b5b6f4e"
        },
        "item": {
          "id": "f0bfe6d0-d819-489f-8009-562622ec4586",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3035ac31-cfe5-487f-a07d-e06a7cced75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54505893-a70b-42c6-8064-6a12e34f245b",
        "cursor": {
          "ref": "5eef6626-2781-47fc-89d8-f95d2f33dd91",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c8d4eca1-c927-460b-887c-ee899157885f"
        },
        "item": {
          "id": "54505893-a70b-42c6-8064-6a12e34f245b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3717098e-2666-49ac-9a4a-222db7c7dda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f78ce0-497d-4a22-a39d-306dcfd2cffe",
        "cursor": {
          "ref": "5058b455-7254-4627-8334-d3285fa6790d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b591c53a-e482-4e1b-9ced-d82813356880"
        },
        "item": {
          "id": "35f78ce0-497d-4a22-a39d-306dcfd2cffe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "71f5c32b-d375-4669-b427-8234404ed837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbc7c96-793d-44b2-aabc-1da846bcaa56",
        "cursor": {
          "ref": "f6a7349a-7672-43d8-95fd-e6876864a5f2",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "07323b33-f7f9-4d0a-827e-652fc182b900"
        },
        "item": {
          "id": "9fbc7c96-793d-44b2-aabc-1da846bcaa56",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "133b8003-0b51-4b22-8c20-0a179c735108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268d47d1-215d-4527-9563-d529c16c55ca",
        "cursor": {
          "ref": "6b51dd3f-7693-4ad6-8396-44a93f3e96f3",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cdd48d39-b111-49e9-bf9b-b1c7fa10c8d8"
        },
        "item": {
          "id": "268d47d1-215d-4527-9563-d529c16c55ca",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "850057e3-1949-4393-a092-caa8781198ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6f9517-1ad1-43d7-988d-9da67f02f2d1",
        "cursor": {
          "ref": "bbe77ed5-1aec-4173-a1d3-f82221a8c03e",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ce2c6ee2-ba1a-485b-8458-06e58a0671fc"
        },
        "item": {
          "id": "5c6f9517-1ad1-43d7-988d-9da67f02f2d1",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "19cc31e4-2e3c-46d2-8a47-42c22650312f",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35993dfa-3786-4feb-84f1-5de03750c171",
        "cursor": {
          "ref": "3a4267c2-e34e-4464-aa2c-91210341833b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5c062128-106c-48d5-8798-2f785cf729a2"
        },
        "item": {
          "id": "35993dfa-3786-4feb-84f1-5de03750c171",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e91138f4-56bd-4878-8e9c-eff78b4ba748",
          "status": "Created",
          "code": 201,
          "responseTime": 134,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d20fc51-420b-438e-9e10-c24c04fa7946",
        "cursor": {
          "ref": "9e926afc-fa6e-4df6-b0fd-111a49f5c847",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "efd0969e-7c08-4198-86dc-50e9f8502914"
        },
        "item": {
          "id": "1d20fc51-420b-438e-9e10-c24c04fa7946",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "326b5446-848d-4f0b-a0af-82e84e2ae773",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a088d97f-1f27-4de3-be42-3de530b51b06",
        "cursor": {
          "ref": "eb55f2a0-16ae-4e2b-888c-80a2da7d74c9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8b7740e7-a8a5-4860-af37-f78be0261152"
        },
        "item": {
          "id": "a088d97f-1f27-4de3-be42-3de530b51b06",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d7135df7-6973-4680-9901-403aeafa16ce",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef837f5-cc9d-4b27-985e-7969d1742af8",
        "cursor": {
          "ref": "680e50ce-9f98-4547-85c5-fc2df03ce4dd",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3d4f3def-b3d5-446b-b2fb-d3c76ed9d273"
        },
        "item": {
          "id": "eef837f5-cc9d-4b27-985e-7969d1742af8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "68ea116c-47ac-48c8-ad5b-fc669206df85",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafe61b4-985a-4f46-a9fe-131ec5be5ba9",
        "cursor": {
          "ref": "293b01b6-0554-4e4d-aa53-0719b4961968",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "50384711-9ebd-4640-8b1e-958e20fed568"
        },
        "item": {
          "id": "eafe61b4-985a-4f46-a9fe-131ec5be5ba9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "870df210-9465-4218-8813-6abcf24ac9ed",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8fa613-c9d1-4efc-a5c1-2ea1f659d924",
        "cursor": {
          "ref": "bbefdbc2-78a0-4814-a1af-556869463a06",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d0ca615c-17f4-4794-b4cb-92edda8c1f2e"
        },
        "item": {
          "id": "0e8fa613-c9d1-4efc-a5c1-2ea1f659d924",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "90ae0f74-fbfc-440f-9a12-782d77d608e1",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02545ed9-40d5-4ed7-ae1c-44ff2a6a9d4f",
        "cursor": {
          "ref": "13b438c4-cd89-4cc6-b58d-58f87cf56069",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "73542a36-4256-4b78-b266-0dd9f5317284"
        },
        "item": {
          "id": "02545ed9-40d5-4ed7-ae1c-44ff2a6a9d4f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ad96a24-914c-4ccb-b91d-0f292d177398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ab06e5-452f-4e63-b432-ec1bffc1f896",
        "cursor": {
          "ref": "416b8842-fd01-4692-9c59-844e563b48b8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ae7a19d1-ee11-43e8-9f4c-5c6e7aba3bc0"
        },
        "item": {
          "id": "b5ab06e5-452f-4e63-b432-ec1bffc1f896",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d3311ca2-acfc-4dcd-a6fe-e0735e89d2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d7d8ac-e92d-4509-bff3-e8b835332707",
        "cursor": {
          "ref": "1099653c-037d-4a85-b25a-e111adc79a18",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6c0eb429-c50b-497c-b2ae-babbef680d02"
        },
        "item": {
          "id": "53d7d8ac-e92d-4509-bff3-e8b835332707",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f8f1bdf-f2b0-4295-aab1-a4aa5479e0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35a4b0d-08e1-4b45-9962-cbca4a1ed307",
        "cursor": {
          "ref": "a5a49cad-6f5e-4399-a31a-273612c5475d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "47c120a4-b93b-4e9f-bcc5-c2179f6d4228"
        },
        "item": {
          "id": "e35a4b0d-08e1-4b45-9962-cbca4a1ed307",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1b80e38d-0c56-4b44-9e81-38518da5306f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f82d9b-38af-40c3-9477-8d7e236de9e2",
        "cursor": {
          "ref": "b5de2036-75da-4df7-b7e0-e42fb199a4bb",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e3ee69f9-dbd9-4afc-9a4b-9cb11b75e1a6"
        },
        "item": {
          "id": "49f82d9b-38af-40c3-9477-8d7e236de9e2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4495b38a-fdd7-4d99-aeba-1a77704d86fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348227bc-3850-4653-92e5-a02b83d84869",
        "cursor": {
          "ref": "4ea7fbc6-43ce-4bae-a3e1-8dd18dc364b8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "750dbf5d-9755-4b40-ad43-8652acfc6a14"
        },
        "item": {
          "id": "348227bc-3850-4653-92e5-a02b83d84869",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "696ab1ee-38c3-4581-8b0f-741b1bc84d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4003fff9-99c7-4708-ba9a-48cc06f8ed04",
        "cursor": {
          "ref": "918ce1d4-82bb-4510-b105-0a1ee28e4291",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "529f63b3-9289-4ee4-b656-a6e4ade6997c"
        },
        "item": {
          "id": "4003fff9-99c7-4708-ba9a-48cc06f8ed04",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f955d6e7-66e3-4cbe-bb27-3027ba48baff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c3267b-7650-4293-8b88-5888a487c001",
        "cursor": {
          "ref": "d3e2cd2c-e212-4b09-a707-1d3ec141c720",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e55bca97-8b3e-4994-a1ae-e434110f3d26"
        },
        "item": {
          "id": "c3c3267b-7650-4293-8b88-5888a487c001",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9203c820-7051-4d90-b03b-f0f102731c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6001df-f91d-4310-b187-78bec924a493",
        "cursor": {
          "ref": "3f14c60e-c721-41a5-9c20-b9f00dc6c0ce",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "052e6b55-9ec2-464f-84ec-126ae25e5b7d"
        },
        "item": {
          "id": "ea6001df-f91d-4310-b187-78bec924a493",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b9a85563-38af-41b4-8d8d-8b52a10f3988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c5e852-4350-4aca-82ee-fdd5d957e533",
        "cursor": {
          "ref": "396ea826-9c80-497f-a216-a0477a2726a3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3bd630d5-d7ff-4b95-afab-78f56a40c2c2"
        },
        "item": {
          "id": "06c5e852-4350-4aca-82ee-fdd5d957e533",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e6544540-e01f-4d85-8744-fec6ba950a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558ab64d-624f-4a38-81ea-b056023b9fe4",
        "cursor": {
          "ref": "9b5730eb-7d2a-4982-a6d7-119d3c135e0c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2d43e240-cd8d-4abf-ad76-d77b5e6d86c5"
        },
        "item": {
          "id": "558ab64d-624f-4a38-81ea-b056023b9fe4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d2d46865-911a-4826-bf83-c549db6f9afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451bddb8-f639-4fbd-8a7f-a76ce1cc2575",
        "cursor": {
          "ref": "08301d39-7780-4467-b1ad-5c8ab6db18b7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5f3a8735-845e-41cb-8e01-498ade161bd9"
        },
        "item": {
          "id": "451bddb8-f639-4fbd-8a7f-a76ce1cc2575",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e0759af6-6adb-42ef-999f-d250302a7bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13a3d66-816f-4525-a68a-def9cb826843",
        "cursor": {
          "ref": "e0de5697-8082-4ade-a164-60872fd36d87",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fa17e83e-d809-4349-be55-49e051a8ff99"
        },
        "item": {
          "id": "d13a3d66-816f-4525-a68a-def9cb826843",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d7bd7699-6fd9-4218-83f1-ae04bc56295b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a416140-e910-492b-9232-b102d34f5293",
        "cursor": {
          "ref": "67f101cf-6809-4ffc-b7e7-eaf68da504e7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4146e735-681d-4a3e-8a6c-72702cef2799"
        },
        "item": {
          "id": "8a416140-e910-492b-9232-b102d34f5293",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8b41e591-2a6d-4e67-a28c-f373543595f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbb73a4-fd4d-40d8-9542-8607f616c315",
        "cursor": {
          "ref": "4613fd0e-d20c-4160-8664-7cac4ae023bc",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ee8906fc-a339-439b-83e2-49976be200f5"
        },
        "item": {
          "id": "9cbb73a4-fd4d-40d8-9542-8607f616c315",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dd9f8a1e-6c47-48e2-8df4-d82162e95b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b1dd8c-4377-4b01-928c-e6f1ec2b29d3",
        "cursor": {
          "ref": "c0594f94-2656-4dc8-8345-749948c8bfa7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "228dec29-5191-431b-9327-2094628861d7"
        },
        "item": {
          "id": "92b1dd8c-4377-4b01-928c-e6f1ec2b29d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b8862647-8da1-48be-8cc8-08e609741afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342acd9a-47f1-4280-9e8e-4552aee8f286",
        "cursor": {
          "ref": "533df988-3321-4efe-821a-b354c1f9eb52",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b05e33da-36d5-4074-a420-2df79e0dfd40"
        },
        "item": {
          "id": "342acd9a-47f1-4280-9e8e-4552aee8f286",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "70a387ea-bf2e-4511-97da-7b061b2bc4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fa587c-86a9-4af1-909b-62e234bbb3a4",
        "cursor": {
          "ref": "14e8e2ad-a472-4b27-a07f-6387b511fe21",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0e148bf0-c626-49de-8afc-d6fec04be7ad"
        },
        "item": {
          "id": "90fa587c-86a9-4af1-909b-62e234bbb3a4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "05658a90-96d9-44a1-a454-9d7ec6b3fd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82bb5a5-3a4a-4dbe-b951-5f5b8ccd4839",
        "cursor": {
          "ref": "fb633139-6427-4e92-b35d-a931d792951a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a4778ecd-a50e-4918-b19a-41bd0ab2cd79"
        },
        "item": {
          "id": "e82bb5a5-3a4a-4dbe-b951-5f5b8ccd4839",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7052375d-71dd-46c2-856d-f982be6e082e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085f64b9-8d48-4494-9116-43b29fe0d00d",
        "cursor": {
          "ref": "95138156-101f-4423-88d4-eac2c9e62d65",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "80f49334-b576-45c8-a434-e3e4456d6532"
        },
        "item": {
          "id": "085f64b9-8d48-4494-9116-43b29fe0d00d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1bce0aac-2723-4059-b164-50e0b836455a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7373636c-2ad7-4446-b3d1-a83650f863c3",
        "cursor": {
          "ref": "4c044fdf-6fbe-4d31-9c83-2d890c3ab096",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "16beb61f-8d81-405b-b9a2-67380486f330"
        },
        "item": {
          "id": "7373636c-2ad7-4446-b3d1-a83650f863c3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0a079b8e-6398-4731-a6f5-f5d6f439516b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e79cd-5464-4482-b60b-6d4c53fa9c07",
        "cursor": {
          "ref": "f98a2db2-96f7-4a2a-8e7d-4c271258ee9d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "06f00e21-0412-42a2-8fed-1aa39b5e3e20"
        },
        "item": {
          "id": "d85e79cd-5464-4482-b60b-6d4c53fa9c07",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4098dea8-1f28-45f3-bda1-5a3b2b09681b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2251d3f8-298f-4cff-b9a6-cbdfae45d906",
        "cursor": {
          "ref": "d69eb283-d79e-4459-ba70-04ede6fda780",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bd71f535-2075-40e6-a110-3e571044122c"
        },
        "item": {
          "id": "2251d3f8-298f-4cff-b9a6-cbdfae45d906",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6da19839-b248-4db7-8f82-306bad630abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de8f73e-ed81-42ba-af03-14335d418136",
        "cursor": {
          "ref": "8534661d-ba2d-4ee9-96ea-29fec737cda0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d5881187-38e4-4f72-8f86-bdd0ef4d5b7f"
        },
        "item": {
          "id": "0de8f73e-ed81-42ba-af03-14335d418136",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "64e4688b-7f67-4c53-8978-52b4c3007d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e06307a-d8a2-454f-bca0-749eb1ad17e6",
        "cursor": {
          "ref": "28326d61-8bcd-461b-8e9a-3aed990f08ba",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fd8c52aa-d56c-4fd7-9cab-afb88da8b6c8"
        },
        "item": {
          "id": "7e06307a-d8a2-454f-bca0-749eb1ad17e6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dbb2dd1f-b15a-4ce2-8721-ebc61e13ab60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a2a885-ee11-45aa-b007-d2e5479ff6cd",
        "cursor": {
          "ref": "c194ac8a-7e25-4d79-9241-04231c1f0290",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6621ded1-9b7e-4edd-a266-47ac3356411e"
        },
        "item": {
          "id": "95a2a885-ee11-45aa-b007-d2e5479ff6cd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0fa84340-2cff-40b1-bf66-b5a358e2d4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51377d80-478c-4ff9-a6a1-f80701ff907c",
        "cursor": {
          "ref": "02c9df8b-2a17-4153-88f3-bd4e8344829b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2d9f4362-346d-47af-b550-8da939bd15ac"
        },
        "item": {
          "id": "51377d80-478c-4ff9-a6a1-f80701ff907c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "47f0852a-dab3-4f30-acc0-1ff021342a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea41750-26fc-4655-867d-9edbc89956d0",
        "cursor": {
          "ref": "68a44f5e-66ad-4192-8d69-1cf0459aa374",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a7d8edb9-2f81-4c25-b7cd-60b006e97cef"
        },
        "item": {
          "id": "7ea41750-26fc-4655-867d-9edbc89956d0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "39edf499-a109-43c3-a101-0a2994469ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac52c539-94d2-4cb3-9eb2-5739eeed4183",
        "cursor": {
          "ref": "c9b1a231-a104-4591-81f0-ea2b768677de",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "65099615-fd39-48aa-8034-e69f965dc485"
        },
        "item": {
          "id": "ac52c539-94d2-4cb3-9eb2-5739eeed4183",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "affa4eb4-0f81-496f-ab60-12d0ea32d842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aea851c-2763-434a-b87c-7bc860f6d2b3",
        "cursor": {
          "ref": "426800ca-f216-4336-a63c-a966748a9be8",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5a783af4-e06a-4b8c-859f-6909b1265ab1"
        },
        "item": {
          "id": "8aea851c-2763-434a-b87c-7bc860f6d2b3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1c40262e-c05d-4450-b72a-251098758437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9513cd-f615-47f0-9ce6-b605d53ed892",
        "cursor": {
          "ref": "d8078112-4f28-40f1-afed-d6e46009a84d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8f5378ba-59bf-4ff3-a0ac-a70d8cbfc792"
        },
        "item": {
          "id": "aa9513cd-f615-47f0-9ce6-b605d53ed892",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "522fcf9f-7e6c-4f7f-9759-da44b7442428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a216059-8e21-49b8-a3b7-1968c121097d",
        "cursor": {
          "ref": "411bbaeb-7098-42ac-8913-7cabcfcc5750",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "af3e2429-d1ad-4db6-967d-cb0235f509a1"
        },
        "item": {
          "id": "5a216059-8e21-49b8-a3b7-1968c121097d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "61cedcc2-074b-44eb-bed3-986446663678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a90c66c-f961-4e30-8923-6f5cdb207ea8",
        "cursor": {
          "ref": "dfe16c84-6e1b-49c2-8438-b5bdec7e1583",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "20b9cf21-4dcd-4876-bbbd-adc05d29105a"
        },
        "item": {
          "id": "7a90c66c-f961-4e30-8923-6f5cdb207ea8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b129ad6c-6c90-4acb-84d8-418b7ebcca32",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284ede2d-50a9-4c97-a626-e430a7782b64",
        "cursor": {
          "ref": "9303a4e6-df12-413d-9b69-7ff388cf3249",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "accb0530-1ebe-469f-b76b-dc8aca31aa17"
        },
        "item": {
          "id": "284ede2d-50a9-4c97-a626-e430a7782b64",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "68e1c3ba-7a51-4341-ac99-60136c2482fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011abb59-f4a7-451a-93d2-7fe5de214494",
        "cursor": {
          "ref": "74717b62-b4be-46da-a63d-f85bb56e451c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f4ad0915-4736-49e0-ba30-aef5ade92d9b"
        },
        "item": {
          "id": "011abb59-f4a7-451a-93d2-7fe5de214494",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "82b57623-42c9-48cf-b6e9-fcf555f86af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105a4f9a-3e99-4a70-86b7-3b7e0af1b4aa",
        "cursor": {
          "ref": "ba7c2c1c-7db1-4f25-bb33-decc9c870b36",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1befd11c-9f96-4a93-839a-44e1f1c2ae73"
        },
        "item": {
          "id": "105a4f9a-3e99-4a70-86b7-3b7e0af1b4aa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6a5a2875-1df0-4cf6-807d-3fba1428aa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffc44e3-985a-44b7-91c7-17c71b7eed8a",
        "cursor": {
          "ref": "e509f8ee-81bc-4f6f-a779-7e20ae8e0f97",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b6f24dd2-49d2-407e-b012-9a8cb95b9402"
        },
        "item": {
          "id": "8ffc44e3-985a-44b7-91c7-17c71b7eed8a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1161c3f6-c009-4bf1-8193-dcf0fffb217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a356b8a-13f5-43d2-ae5e-eeb19276c1f6",
        "cursor": {
          "ref": "319a1fbd-eafe-4c22-8064-f7334a7399c0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "351fce5a-12a9-4464-a3c4-acae38391f87"
        },
        "item": {
          "id": "1a356b8a-13f5-43d2-ae5e-eeb19276c1f6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1023a306-bcb9-42b3-a3a1-26b27aa120d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8027c34-5991-4ed0-9d54-f8dc2385a472",
        "cursor": {
          "ref": "9ba3d27e-0160-420d-953d-1103fdd90a24",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "02e6e116-fd11-4ca2-9d76-663dbb68094f"
        },
        "item": {
          "id": "d8027c34-5991-4ed0-9d54-f8dc2385a472",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "658822c3-4046-430d-a8fc-43e3ca549b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ac4468-088a-4d74-a196-d5e5711882db",
        "cursor": {
          "ref": "cb3b1c1b-6155-4b0f-a594-f7090b3e92ec",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "91df61aa-579e-49fa-8631-25686dfd5c51"
        },
        "item": {
          "id": "d2ac4468-088a-4d74-a196-d5e5711882db",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a49cf8bc-51af-4d34-a20e-1b74d48bc82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3190361a-aeea-4051-ae58-785be02eb6b0",
        "cursor": {
          "ref": "12bfa678-ad11-4d82-bf28-cf57ab4f0018",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a3981bf8-1447-4544-b43f-3b9ee3d55288"
        },
        "item": {
          "id": "3190361a-aeea-4051-ae58-785be02eb6b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bc12b217-ff13-48e8-9d4a-9bb0820ce666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1601322e-a723-41b4-acbd-e4bdfff2beaf",
        "cursor": {
          "ref": "3d19fcb2-69d2-4fd9-b0df-001612e427ae",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1a24f001-e15d-4caa-a225-fa643039ba6e"
        },
        "item": {
          "id": "1601322e-a723-41b4-acbd-e4bdfff2beaf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c3967f9e-9738-4e60-bae9-d70158662b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b806d16-035b-4960-959a-7f23df4ceeac",
        "cursor": {
          "ref": "f2fcff3c-dc11-4413-8296-3ad1be4245d2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2269c012-6a67-4e1f-88e8-d839fc9e0a64"
        },
        "item": {
          "id": "2b806d16-035b-4960-959a-7f23df4ceeac",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c41dc364-f6d5-4a05-80cf-7b093bc00412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9ac769-20df-4c3f-96d2-c621b84874c7",
        "cursor": {
          "ref": "335afce0-9155-450a-8767-bdfbaaad6209",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "76bb4079-c1d6-40f8-ae0d-91f2d0b36be4"
        },
        "item": {
          "id": "6a9ac769-20df-4c3f-96d2-c621b84874c7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b20d3f50-8e81-4418-91d3-28912f9a00e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b955a6-ef55-4cef-9b17-d127b2285469",
        "cursor": {
          "ref": "f56097bf-c800-4a59-9a07-f923667d5c25",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9e4c4113-14c6-4803-a7fc-f9d6f642adc1"
        },
        "item": {
          "id": "05b955a6-ef55-4cef-9b17-d127b2285469",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "12d2d258-c5d4-46a9-80c9-89bf0f426ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25574ce-d6e8-4a4b-b342-a2de8df4a7c3",
        "cursor": {
          "ref": "59ea8029-4d2a-4768-bb70-fc74f4e021f5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d74bd3e8-252b-4993-a21b-cc2956e17c1a"
        },
        "item": {
          "id": "c25574ce-d6e8-4a4b-b342-a2de8df4a7c3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a67ce9af-308e-4326-bcf5-26bc8d4348b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcc5971-7232-4775-a397-1c8f183bfdbc",
        "cursor": {
          "ref": "b846d96d-3347-4354-99c2-bc76ddfcd774",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9547b9f1-4f74-42ea-896b-44f9cf807561"
        },
        "item": {
          "id": "9fcc5971-7232-4775-a397-1c8f183bfdbc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9c14a6fa-5e2b-4346-be84-4ed2d4db7e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d529a2f9-e587-4908-a226-4bd4c88e6ae5",
        "cursor": {
          "ref": "630b1bdd-f75d-4ff5-aced-f1d190a88ee0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0dc74555-5b9d-45ee-b6e9-40585212abce"
        },
        "item": {
          "id": "d529a2f9-e587-4908-a226-4bd4c88e6ae5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "69c94c97-125e-47a1-8a1a-9b3e37a29c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd7d85b-d6a6-4892-be20-6850ffbc93dc",
        "cursor": {
          "ref": "55faac79-8422-4445-9dbc-283aa7d6397c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e54047e7-6776-49e8-98f4-793618553df8"
        },
        "item": {
          "id": "acd7d85b-d6a6-4892-be20-6850ffbc93dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "25486390-5c58-4153-a994-c6e4173fd090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920c8c06-1cf8-4c6a-b3dd-3ca7c946622e",
        "cursor": {
          "ref": "c1facc64-8929-428f-9f00-f03495c6aace",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9ac98902-49aa-4588-8e9e-a1c1004edb56"
        },
        "item": {
          "id": "920c8c06-1cf8-4c6a-b3dd-3ca7c946622e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "78260941-9f52-4128-bcd6-78063d6200e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20840430-2f02-4141-8646-94fbc964c1f2",
        "cursor": {
          "ref": "246411cb-8f8a-4869-b583-ac07c673f66a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "451f287f-f289-4a85-b9bc-52e44b9c57ee"
        },
        "item": {
          "id": "20840430-2f02-4141-8646-94fbc964c1f2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8598893b-9439-4969-b886-e70c9bce772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f20417c-77f8-4075-9a42-1f32710f7f87",
        "cursor": {
          "ref": "e11589e3-ae47-452a-85e7-4206f507ba02",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "41b2cbe6-d463-4c33-ad3c-c919cc181d8b"
        },
        "item": {
          "id": "4f20417c-77f8-4075-9a42-1f32710f7f87",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "eb7cf3df-742d-4005-bc64-8b8c9b0cdcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685f9273-6553-4269-bd5e-e901ef7e6839",
        "cursor": {
          "ref": "1a9b352e-4373-425c-bb12-4e6d360485d5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "55d9117f-0615-46f7-8de7-b2e1bfc54611"
        },
        "item": {
          "id": "685f9273-6553-4269-bd5e-e901ef7e6839",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "06452f82-a8e6-4c94-99da-a38f8a07e943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5a389d-9c95-4f72-be7d-5c6c5b018694",
        "cursor": {
          "ref": "5d7887a7-e147-442b-9941-50d309ee5c0e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "16e15b88-a96a-409e-b877-0529f13f0009"
        },
        "item": {
          "id": "8f5a389d-9c95-4f72-be7d-5c6c5b018694",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "992d75a3-2a3d-41f3-b985-2eea14dcb683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5d8316-9a30-41c3-8065-5dc34131ccb7",
        "cursor": {
          "ref": "8ddb82e6-47ac-430c-81e5-2312bc33998a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "07cd6b4b-03fc-46be-b8b2-fad1219e483c"
        },
        "item": {
          "id": "5b5d8316-9a30-41c3-8065-5dc34131ccb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6a5d2ec0-1a60-4baa-aef2-34fde0290f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8064d6af-69c7-48ef-ad34-964cda679d24",
        "cursor": {
          "ref": "23c36d95-3138-451d-9b69-67558cc62136",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d0b2afa3-6b61-45cb-b1d7-90a5af30ba93"
        },
        "item": {
          "id": "8064d6af-69c7-48ef-ad34-964cda679d24",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa41b4b9-b00d-414c-881d-16835c9a76c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c77f51-2674-48af-a994-3a90d75378b8",
        "cursor": {
          "ref": "4a749137-23e2-40ed-8fda-2132e328c5be",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1d04ef24-8f0a-46f2-8ec7-4ee232768df1"
        },
        "item": {
          "id": "44c77f51-2674-48af-a994-3a90d75378b8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aa5de425-d8f5-4705-8a72-04dd8946975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5137671e-dcfc-41eb-b97e-740e76e8e7ba",
        "cursor": {
          "ref": "daefd633-98d2-4db6-9b1e-d82905db72a2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "73319c92-eff3-494d-b50a-bb722898ab50"
        },
        "item": {
          "id": "5137671e-dcfc-41eb-b97e-740e76e8e7ba",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7529f108-03f8-4e3a-b756-93db8c14a7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf2976f-5edb-4eea-9a86-65b16545daa6",
        "cursor": {
          "ref": "f2ece742-036f-455e-afa3-47acd618af56",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4e9b104e-0d67-4811-a134-7c3557cba05d"
        },
        "item": {
          "id": "daf2976f-5edb-4eea-9a86-65b16545daa6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "883fb9c2-ed1a-4b7a-a3a5-dbd65a6c0c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53267aa-59f0-4f7f-9719-4f08b0eb5445",
        "cursor": {
          "ref": "0e5b5adb-2044-4b25-804b-6b5922a422a2",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7d6832c2-3a19-4574-8ff8-7ba486d226fe"
        },
        "item": {
          "id": "b53267aa-59f0-4f7f-9719-4f08b0eb5445",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "76a8b9bf-12d1-4ed2-b272-7de4ca0d818a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0948f77b-9901-4781-9cf0-ef293fe9da56",
        "cursor": {
          "ref": "177b9fae-e531-490d-b911-e6315fafa6c5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "483b2c49-9f09-4f00-8db7-1428cf86a62a"
        },
        "item": {
          "id": "0948f77b-9901-4781-9cf0-ef293fe9da56",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "87680131-9b26-43d3-ad24-4c45f14285af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66a09c2-c47d-4d5b-9eb5-d9ae09994ca1",
        "cursor": {
          "ref": "188440e6-0446-4ba5-8e9d-4bad58430cc8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "91df898f-70e6-43ab-acd1-434e3ce20e8f"
        },
        "item": {
          "id": "e66a09c2-c47d-4d5b-9eb5-d9ae09994ca1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e7534ae-790d-4042-89c7-1b653d8a217a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3351e44-e4ca-4634-9d43-2c7cd98a57a1",
        "cursor": {
          "ref": "822638ba-9b2d-40f1-82c7-62264fc1b182",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e58f0926-1dbf-4c02-b7bd-b864636c2536"
        },
        "item": {
          "id": "d3351e44-e4ca-4634-9d43-2c7cd98a57a1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5df4e6a2-307b-4f25-a75f-02762e3ec203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b978894-fa46-439d-ba62-d9a2d7c7a792",
        "cursor": {
          "ref": "18512c08-03cd-45c5-a692-6955d78eca22",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4c8e01e1-7c6b-43d5-852e-310530f45474"
        },
        "item": {
          "id": "9b978894-fa46-439d-ba62-d9a2d7c7a792",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "edb8fb89-a900-485b-91c3-92928c025374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2e6933-745b-4c9d-a32c-a1aa791c1c4b",
        "cursor": {
          "ref": "5abe7505-3827-468b-9a6c-4689116bd419",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "af3d3d5d-897a-41b8-b95d-9fb47b7a476b"
        },
        "item": {
          "id": "de2e6933-745b-4c9d-a32c-a1aa791c1c4b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c9be167b-a8fa-477f-b57e-48613049c070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee2ae93-5eba-40c1-a2ef-2f5e0b88586b",
        "cursor": {
          "ref": "83e3c300-791c-4049-b02e-e81bcddf5b26",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e41deeaf-43ba-4021-a8c4-2234ba4e38e9"
        },
        "item": {
          "id": "7ee2ae93-5eba-40c1-a2ef-2f5e0b88586b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4488bddc-31a5-4fe2-b873-71dd375a8234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c142cdb7-5063-4bab-a512-fd0c3f904716",
        "cursor": {
          "ref": "929de3c9-2261-408d-beaf-93b1b28e72fd",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6da51a18-d10e-4e76-9d96-d2aa912eecf2"
        },
        "item": {
          "id": "c142cdb7-5063-4bab-a512-fd0c3f904716",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5c48e492-3ff5-446b-a3e3-6348df15a018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c675c2-3781-454f-8548-dc74564a0be1",
        "cursor": {
          "ref": "bc529c3b-9755-4e1d-94e0-fcb8f414d5e9",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "104a2382-8aec-46e0-be11-dc3838810ca7"
        },
        "item": {
          "id": "39c675c2-3781-454f-8548-dc74564a0be1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6698b2df-a99d-4d58-b374-f84141f23781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7631d085-9da4-4e46-8975-faedf3a52b73",
        "cursor": {
          "ref": "8f02c9aa-ed75-400e-8390-8699b8f85520",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1c0c2385-1552-4b94-b5f9-efc87bd9a463"
        },
        "item": {
          "id": "7631d085-9da4-4e46-8975-faedf3a52b73",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "24969c73-4f3d-4ce5-83de-597db62cf170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48de242-ab6d-4043-ab45-e1d660e6f1ce",
        "cursor": {
          "ref": "4e25eee0-2fd6-4b01-ad46-3120fef1485a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "45ad3b86-0706-4da2-a6e2-0c9f900b3452"
        },
        "item": {
          "id": "e48de242-ab6d-4043-ab45-e1d660e6f1ce",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f53532f7-3f3b-44ce-8a56-c3b6835c26bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda599ab-a242-43de-8928-f172ad922dde",
        "cursor": {
          "ref": "7d07f7ef-fa7e-472c-b4c3-033b59ed9ae0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8937d627-b92e-4751-88af-6c98bde276cb"
        },
        "item": {
          "id": "dda599ab-a242-43de-8928-f172ad922dde",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "da3fd4e7-c755-4c78-bd04-fb890c7db93f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60e4365-e5f7-40b2-ac9e-2f6406175779",
        "cursor": {
          "ref": "8dd2262b-15a3-463c-ba15-408c06187d56",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "12bc4dec-e1f9-48dd-a2ea-0411befe639d"
        },
        "item": {
          "id": "e60e4365-e5f7-40b2-ac9e-2f6406175779",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3251ffba-f297-4e76-b84f-a2acfc568539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626de653-2740-4fe4-95f6-7e4e13cccd7b",
        "cursor": {
          "ref": "70841d44-bafd-4ad1-83e5-d89ceed27fae",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "27e0f8c5-812b-44ec-a17f-4d33e7c21c3f"
        },
        "item": {
          "id": "626de653-2740-4fe4-95f6-7e4e13cccd7b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "38b5cd2c-6db4-4a72-99a9-5fc41fa47f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab352f74-9a3c-420f-a1c2-359d33be57d0",
        "cursor": {
          "ref": "cc42b0b6-75b8-4cc0-9707-965306a0ed9e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "15c89f38-aa30-4398-8106-a39b889ce156"
        },
        "item": {
          "id": "ab352f74-9a3c-420f-a1c2-359d33be57d0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3ebd893a-d4de-4ae8-84e2-05491bb0c4de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515a1714-a2ce-482a-9181-03c3f2e2f912",
        "cursor": {
          "ref": "5bc46906-a045-4202-b908-aee142acc097",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "367009e8-3460-4a46-adca-a44bfce1e3ec"
        },
        "item": {
          "id": "515a1714-a2ce-482a-9181-03c3f2e2f912",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2985927f-a18b-4377-938a-f836c846d602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1321fb-1c0c-480b-a34e-5c1b4621fea9",
        "cursor": {
          "ref": "34321d14-72aa-4b98-bf5f-777624fb2eee",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dbd2431c-4181-4918-959b-63263033ae8e"
        },
        "item": {
          "id": "db1321fb-1c0c-480b-a34e-5c1b4621fea9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c699ff08-8d20-44b3-a7ba-15ae9664c4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d8a1b8-699f-44f4-8da9-25f96b4dd6c3",
        "cursor": {
          "ref": "0a6acd7d-4309-4a0e-b70a-acfc123a1b03",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b7c8b8be-8dcb-401a-a14b-91bcb6c59958"
        },
        "item": {
          "id": "81d8a1b8-699f-44f4-8da9-25f96b4dd6c3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0edda07c-42f1-41b5-9988-5a9468772015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629ee375-81be-4e22-84e7-0a731840b9ac",
        "cursor": {
          "ref": "778f15c1-c078-4cc9-9e09-95f518488ccc",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7dfc97cb-696c-4c60-a3ba-e6196f30a4f3"
        },
        "item": {
          "id": "629ee375-81be-4e22-84e7-0a731840b9ac",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "32ea0be6-c7de-4d56-a51c-d19930944682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9c76e5-9921-43bc-81f4-a939b738a922",
        "cursor": {
          "ref": "08daf661-991d-42b0-8857-3f9c25996dea",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bb51a266-f85b-4b20-a282-49977b3de8b4"
        },
        "item": {
          "id": "ae9c76e5-9921-43bc-81f4-a939b738a922",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fd4d8727-7d03-47f7-9592-15c2c51a7255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433be087-e6cf-43cb-896b-b2153a400558",
        "cursor": {
          "ref": "eefdfaa7-07f0-46b9-bc50-d22673e72703",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7f3229b4-630f-44f0-b8d5-63a4ef844462"
        },
        "item": {
          "id": "433be087-e6cf-43cb-896b-b2153a400558",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b64b07f1-d274-44de-b469-5df61ed5f1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272ee60b-68e0-43de-88f6-b70523425a6e",
        "cursor": {
          "ref": "04889dcb-5924-46c9-81d2-a29b7f598dee",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c06610ca-80b7-425e-8cdd-c97e37cf0b6c"
        },
        "item": {
          "id": "272ee60b-68e0-43de-88f6-b70523425a6e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c7f071e2-3127-4d52-ab15-c57b5b4d4cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde06458-e03d-4bfa-96a1-f603f0b7ac0a",
        "cursor": {
          "ref": "7733da91-51da-47a8-bd8d-ded9931a2b14",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2fc9e3e1-6845-4418-b286-a4eb3cd2b385"
        },
        "item": {
          "id": "dde06458-e03d-4bfa-96a1-f603f0b7ac0a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d9bc2aab-bddb-411c-80cb-008dc627120d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d52c58-4d2e-4013-9bca-5faf8121f4d7",
        "cursor": {
          "ref": "bae1e37d-907f-48e1-983b-084b20c12f03",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6208ca53-3495-4cd2-a590-3bfb63bcd68b"
        },
        "item": {
          "id": "c5d52c58-4d2e-4013-9bca-5faf8121f4d7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "17802345-8b84-4466-a2ea-acf902f314f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa20dc4-7394-4a08-9ca4-bd260d44c899",
        "cursor": {
          "ref": "f068df96-56f6-4e4b-8fe5-096152fdd783",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "695cb9d7-065c-4803-bef1-114dedb71c61"
        },
        "item": {
          "id": "eaa20dc4-7394-4a08-9ca4-bd260d44c899",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "244fc462-a4a6-44f2-98e2-a300ac7ee828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeab73c1-d6eb-46d1-9a12-c2e949daf683",
        "cursor": {
          "ref": "76993240-b8b7-42c6-98b0-061fea120b18",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "32aefe3e-cca4-43ba-8778-e6d701f9ee79"
        },
        "item": {
          "id": "eeab73c1-d6eb-46d1-9a12-c2e949daf683",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7cb69bf1-e8b9-425e-8937-ac37689c624d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097683db-38c3-4d7c-8ced-b6b7a2134941",
        "cursor": {
          "ref": "a71fe887-a019-40fe-8db9-a8d39eb6dc71",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "69fa30e8-ba02-4f99-8cc6-93bca0d608c3"
        },
        "item": {
          "id": "097683db-38c3-4d7c-8ced-b6b7a2134941",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e704f51d-baa7-4d2b-9149-3955a7361a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58846df0-6b96-4640-b104-78c228b0adec",
        "cursor": {
          "ref": "d30a8c6e-833d-4968-ae2d-2bbbc8d6673b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "05c35b1d-71fe-4234-83e5-4fb082858669"
        },
        "item": {
          "id": "58846df0-6b96-4640-b104-78c228b0adec",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6ff510e1-b2ff-4988-a978-16aa97bac0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c428c6fb-fb18-492b-8272-85a3b485a822",
        "cursor": {
          "ref": "62c1f9df-1d61-41c1-836f-41f4d948ffda",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ba7a9ae9-8901-4d01-b366-1666f56b54f8"
        },
        "item": {
          "id": "c428c6fb-fb18-492b-8272-85a3b485a822",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7058f0ec-7675-4bb9-9b2c-193920cf9852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a2fd0c-3eff-4b5d-bc12-730144dd07eb",
        "cursor": {
          "ref": "deee8fd8-604d-42e4-8f27-49c49f100078",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "83e54dcd-67df-4306-a92f-bd59a7f59070"
        },
        "item": {
          "id": "c9a2fd0c-3eff-4b5d-bc12-730144dd07eb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5975a24a-3660-4096-8102-471e4d77e707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9778037-a022-4886-be89-a0c566847d33",
        "cursor": {
          "ref": "99bf2914-0fe2-4681-a044-4d412b6ed385",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1814d480-6bd0-48c7-8a4a-eb41e65dfaae"
        },
        "item": {
          "id": "f9778037-a022-4886-be89-a0c566847d33",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "70777264-c458-4472-8b75-8d49daaf8f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83874862-45e4-43fe-a377-9602ec12bb9b",
        "cursor": {
          "ref": "749b1253-94d6-4913-97f6-af10986554c6",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5dba58f5-b3ff-4eb1-9e4e-898bd0d93e6c"
        },
        "item": {
          "id": "83874862-45e4-43fe-a377-9602ec12bb9b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "493d4591-a3c7-48cf-9605-f681ef024b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437f60ab-b231-4df9-9982-408aa697a83e",
        "cursor": {
          "ref": "4543dce0-2f6e-44d0-91fb-06caaa3bb623",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "34a944a3-4945-4aa8-a2fa-c53191c3a551"
        },
        "item": {
          "id": "437f60ab-b231-4df9-9982-408aa697a83e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8f395bd0-0eb2-4281-a9be-6e5f305f8169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c637962-1c2d-46aa-94cc-02481f353154",
        "cursor": {
          "ref": "160e6ece-15fc-4f13-9c7d-38bd67cfa5f1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "80f20979-7de9-4188-be81-db812ce79dc1"
        },
        "item": {
          "id": "8c637962-1c2d-46aa-94cc-02481f353154",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e5092e2d-f625-47d1-9067-8d637a712b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165778cf-00cf-4e1c-bc04-301bd0e88ea6",
        "cursor": {
          "ref": "93833956-ba72-4aea-a6e1-8b36016f8bca",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e000be7e-1f5c-443d-91f9-377c6a223af7"
        },
        "item": {
          "id": "165778cf-00cf-4e1c-bc04-301bd0e88ea6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "229fdb73-c33f-4320-9bda-9e402cfdc164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2104275f-9d09-4c5c-b83a-cb184a9746cf",
        "cursor": {
          "ref": "74f43629-eb3c-47b8-825b-5719bcacbce0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f9c0572b-2f45-4836-a719-369a10f9579f"
        },
        "item": {
          "id": "2104275f-9d09-4c5c-b83a-cb184a9746cf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a5ed600e-34a1-4b3c-9019-de7d31bbefbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d7c0e2-b983-41df-9b69-154ed48405bd",
        "cursor": {
          "ref": "b868dc7d-4beb-4f29-9740-85d195b56b18",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5e51a7e2-eb85-49d9-a531-8975f1e2e365"
        },
        "item": {
          "id": "e2d7c0e2-b983-41df-9b69-154ed48405bd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "327b4ccd-bbf4-4223-aa8c-85e38dec0746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0e5e1f-4efe-49b4-970f-f22de17ccaa5",
        "cursor": {
          "ref": "f4c360ab-fb73-4652-8a04-c9b9ad321533",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "40c7d6a6-f69c-447a-98fd-f0c947c7ba86"
        },
        "item": {
          "id": "fc0e5e1f-4efe-49b4-970f-f22de17ccaa5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bbca9e4f-1ed3-4fe8-a18f-2ed7cb343deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71df7c2d-b095-47bf-a618-3951908d8d47",
        "cursor": {
          "ref": "3e319240-efcb-4fb2-a2e0-d03a40e21f28",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6d638ee1-9902-4e2b-900f-ac9f87374ebc"
        },
        "item": {
          "id": "71df7c2d-b095-47bf-a618-3951908d8d47",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3c4cb759-2533-4fec-8775-5b17b36e3a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16a6de1-951f-4906-a222-144c62527422",
        "cursor": {
          "ref": "0a4da403-6df0-4c9f-bdea-a41ce59dab62",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7accae54-37f2-4b7f-94c9-cedfd4fb3933"
        },
        "item": {
          "id": "b16a6de1-951f-4906-a222-144c62527422",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "67c67508-da0c-421d-b4ad-33ff4c5ffbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a49ddb9-4fc6-4e25-a312-edf1cc792520",
        "cursor": {
          "ref": "cfe460ce-39ef-4d55-8a5f-5f19c67e4434",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8235752d-ee01-444d-92cc-b543ce2c4613"
        },
        "item": {
          "id": "0a49ddb9-4fc6-4e25-a312-edf1cc792520",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3c4e881f-f37b-47e3-886e-f09931187d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949bee67-5785-4ab7-b08a-2d034fd55e5e",
        "cursor": {
          "ref": "292d3fd1-c029-4a21-b5af-d7b42a5e2e76",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "62f26f10-239c-4cb6-836f-0d2e42713256"
        },
        "item": {
          "id": "949bee67-5785-4ab7-b08a-2d034fd55e5e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3d790054-27d7-4438-b377-1ead950670ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468a23e5-9334-4c39-98f3-124d6eac9636",
        "cursor": {
          "ref": "9e003ef6-957a-48e8-8615-b1d7390c7703",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d30a3bc3-6fc9-4a7b-98aa-63789634be79"
        },
        "item": {
          "id": "468a23e5-9334-4c39-98f3-124d6eac9636",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ec292c7f-66a8-4b40-82ae-6b4437635e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed95ce77-f976-4c01-a0e3-806fcfb7d6fa",
        "cursor": {
          "ref": "b7aa7565-5d80-4241-ad76-c746d7be219e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ae228071-037a-46ff-8a26-550287607ca9"
        },
        "item": {
          "id": "ed95ce77-f976-4c01-a0e3-806fcfb7d6fa",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cd8e349a-bd48-407d-9ec6-52e995aa1f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6737dba-6c60-4d1b-a8e7-7ea4e2dcb6e4",
        "cursor": {
          "ref": "adb85d1d-f80c-4c4d-93b5-4e5f202f5c28",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "12b78f5c-0890-43c8-87ac-e8c9c3c8735a"
        },
        "item": {
          "id": "d6737dba-6c60-4d1b-a8e7-7ea4e2dcb6e4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "df01d7bd-3b1b-4cf9-9069-76b01c876c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa56bb8-9e22-4922-b2c7-c3b9d4cece1e",
        "cursor": {
          "ref": "00fb4863-ecb3-4e85-b1e6-6af52f85f486",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "289c5cd4-099e-4a83-b6e5-b428ee898c05"
        },
        "item": {
          "id": "1fa56bb8-9e22-4922-b2c7-c3b9d4cece1e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "de6a674f-604d-4530-bb60-7b57cbd493bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4eabe99-8b12-424e-b266-eae9b763d481",
        "cursor": {
          "ref": "fd3a0f0a-4413-4dcc-b9f0-fd095b26b90c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1a7f9666-8fda-4a15-96e5-2ec5fbbbbfbb"
        },
        "item": {
          "id": "d4eabe99-8b12-424e-b266-eae9b763d481",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "15ca128e-7580-47eb-9883-377f83ad8491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d732ef99-9ff2-4a9c-bb91-5761f1d27946",
        "cursor": {
          "ref": "5d0649ef-e8e4-435f-aba6-c0c966615cd4",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "60054c23-6343-45e5-a53a-a61679d05d33"
        },
        "item": {
          "id": "d732ef99-9ff2-4a9c-bb91-5761f1d27946",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "40e6b9ac-c412-4992-af31-15d8dd537e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26b1a1e-c066-4f25-a351-9f1e3eea7e02",
        "cursor": {
          "ref": "09bceb6e-a7c5-4b8f-ab7d-0ca7e6302e14",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a3097d7c-d91b-4d28-8e71-c89a5237e5d7"
        },
        "item": {
          "id": "b26b1a1e-c066-4f25-a351-9f1e3eea7e02",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "45acb8c7-e903-4535-bb2a-e6cdae225b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e92578-5f61-47a6-a974-f0a4993141fc",
        "cursor": {
          "ref": "0f5c9048-1553-42d1-9234-31a975a00cc0",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e1cf124c-b98b-48a8-abc3-cc981910e2c3"
        },
        "item": {
          "id": "d0e92578-5f61-47a6-a974-f0a4993141fc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dea268dd-ac89-4ecb-beb6-dfdc919b725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ebf98a-fdf7-4d74-b158-e55bb2e68b4b",
        "cursor": {
          "ref": "92fac576-d9de-405c-a0ca-5483d55773fa",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f88f08df-4ee0-4beb-87c4-dc0b542639ea"
        },
        "item": {
          "id": "75ebf98a-fdf7-4d74-b158-e55bb2e68b4b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "af39cd84-cf85-405a-b42d-5d74a58ca6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a2ee24-a95e-4ec6-b617-bd0256555118",
        "cursor": {
          "ref": "610b3b69-a3be-4dac-8cb2-27c5f583b180",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4ccd74dd-e7c4-43e5-9042-6597c6f92b1d"
        },
        "item": {
          "id": "81a2ee24-a95e-4ec6-b617-bd0256555118",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "46d21c67-9189-4266-ae54-a08c6912c252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f346ac5-c69c-445c-9747-6026dc1260ff",
        "cursor": {
          "ref": "d4425dd0-43c2-4022-b9aa-18e16cd4175e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b2ca9e97-fb7a-4c99-a8dd-4e6452bf04e6"
        },
        "item": {
          "id": "3f346ac5-c69c-445c-9747-6026dc1260ff",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0ec7426b-39cc-459f-b4d4-c63bfa3ed54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c510221-e68c-4b94-88b0-7a5feac59b3b",
        "cursor": {
          "ref": "b9ba7d1b-9038-4693-b5e1-5bc59ed8a75d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3e40f01d-3c8f-4fe5-ac8b-1cc59a86f550"
        },
        "item": {
          "id": "9c510221-e68c-4b94-88b0-7a5feac59b3b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4cb39ab8-80e4-4d61-8b3f-0759cd44a883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17236f7-9894-4d2f-be26-3ad35cd58fbb",
        "cursor": {
          "ref": "0da7c158-ffcf-41fe-a541-f54ca1ea73bd",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f7ada771-c6cc-4e28-84d5-aa7843ede3ae"
        },
        "item": {
          "id": "d17236f7-9894-4d2f-be26-3ad35cd58fbb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df79e33d-6139-452d-b9fc-d26f1f8d8614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebfd9e3-823c-4f8f-9150-5b3e8f82489a",
        "cursor": {
          "ref": "17443d68-a5ae-49e2-9511-63b76b9a67c9",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d044b6f9-0434-45ce-8900-ce344a9be6fe"
        },
        "item": {
          "id": "bebfd9e3-823c-4f8f-9150-5b3e8f82489a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "24832251-8e33-4bb7-a71c-eed795bbbc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89839e7-4232-41e2-9f2d-356ef3e858e6",
        "cursor": {
          "ref": "971e108c-1986-48c9-98e6-bef78fee9558",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "628fcfcf-75a7-4c1a-82bb-b520334fe35f"
        },
        "item": {
          "id": "c89839e7-4232-41e2-9f2d-356ef3e858e6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c91df55b-2864-41fa-b662-0a219b459d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783d1880-2705-4c2b-8a28-1a6ea4ce0fc7",
        "cursor": {
          "ref": "642e72a2-fb71-4e8b-b271-5ce993f69969",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "553da869-868d-482f-b485-c9ef45235da8"
        },
        "item": {
          "id": "783d1880-2705-4c2b-8a28-1a6ea4ce0fc7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5392f7de-6fab-4d02-ab3a-4f533c86bfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e129491-bb4b-43fa-b979-cd4317ecff44",
        "cursor": {
          "ref": "7daab9d5-a1ae-473b-8c1c-9ef8e53155ff",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3ae835c8-e068-4caa-8f7e-a42a7b5b8ee3"
        },
        "item": {
          "id": "9e129491-bb4b-43fa-b979-cd4317ecff44",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b8ba5bea-3c38-423e-bf64-833657b93b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7e9b03-e463-40af-bec3-db278e8bcb1a",
        "cursor": {
          "ref": "523e9a79-ed82-4f1b-af93-200c86088197",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2a79cfb3-313a-4dc6-8020-6ddc2c739165"
        },
        "item": {
          "id": "6b7e9b03-e463-40af-bec3-db278e8bcb1a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a0a0c00a-8829-4c10-90aa-897e159e5da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f872adb9-b64f-4d21-adab-2e4952ed9bf4",
        "cursor": {
          "ref": "106b0055-f91e-4d8e-b022-28cdef74c9d2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fad9bbf8-e36f-4a89-9bf9-5435f9d2e91e"
        },
        "item": {
          "id": "f872adb9-b64f-4d21-adab-2e4952ed9bf4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fd1eee0d-20c1-455e-a168-2b131bba8743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dcae11e-21a4-4431-b84a-6c8d8f9cd2ba",
        "cursor": {
          "ref": "986a4b5d-c8f5-4e50-a291-d3251e3468dc",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "98abd1da-d90a-49fa-95d5-663dfbb181f7"
        },
        "item": {
          "id": "1dcae11e-21a4-4431-b84a-6c8d8f9cd2ba",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3c5d052b-a3ab-4762-9fc3-dab54218347f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1acbf95-1697-48b2-8789-0118ba4e3dc5",
        "cursor": {
          "ref": "24d3eef5-68d4-4a39-a65f-42ed640cf33c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ff2ba452-24c8-4443-975c-6fdaedd8c9eb"
        },
        "item": {
          "id": "f1acbf95-1697-48b2-8789-0118ba4e3dc5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4568b5e1-ad4a-4362-a838-8251400fc25f",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "8e8a90cb-920e-4f89-9b80-b0c941be133d",
        "cursor": {
          "ref": "cabf4edb-b5d9-4b02-8294-35989c4037fa",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4fbea21b-1baa-4cfb-a87f-bf77c89649c0"
        },
        "item": {
          "id": "8e8a90cb-920e-4f89-9b80-b0c941be133d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d6fbe0b1-bda3-42a1-b3aa-22cf85868f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90fa923-4862-4de6-b27b-9135fed586d3",
        "cursor": {
          "ref": "f2db0c4e-0587-4b97-b2e5-1f1d6036ca4c",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "1e2078f3-288c-4ee3-8ae9-38beb997954f"
        },
        "item": {
          "id": "d90fa923-4862-4de6-b27b-9135fed586d3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9255483a-2ed5-4492-850b-9fdb6040f2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1c6fc4-e58e-459d-b2ad-62947cbf5fb5",
        "cursor": {
          "ref": "ae61398c-c590-47e2-8200-0a4bb93662cf",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c0849fc6-af9a-47d6-a1f2-b6a145d2487a"
        },
        "item": {
          "id": "2e1c6fc4-e58e-459d-b2ad-62947cbf5fb5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5577b2f3-2ed2-4ae4-a233-656ffdd6f483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ffbbb5-8195-4cab-8868-ebccad67a867",
        "cursor": {
          "ref": "dcc0f918-0da1-4e01-8b1d-8a3c0c8e8445",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "26bf5ceb-d685-4e2e-9bcf-dbbe31486aac"
        },
        "item": {
          "id": "e6ffbbb5-8195-4cab-8868-ebccad67a867",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cd29817a-2a2a-40b8-9673-a24b488fc3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba165b5-daac-461d-8414-869f2338a73b",
        "cursor": {
          "ref": "bfb06f3a-15e1-446f-9756-b0947147bf8f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f0ff855d-f088-4e21-8595-3d02eb722c4b"
        },
        "item": {
          "id": "5ba165b5-daac-461d-8414-869f2338a73b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "33bf897a-3aeb-4e4c-ad94-42222df9ed98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7692962-460c-46bb-99e4-fac8b0ab711f",
        "cursor": {
          "ref": "46da1f0a-08cf-488c-908e-aeb21131c9bd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "488e1c87-40e9-4c67-8b4f-a5fab9a28c02"
        },
        "item": {
          "id": "e7692962-460c-46bb-99e4-fac8b0ab711f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e825f650-dedf-4a51-9151-5e8e92612436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f2b785-a252-4106-b912-e34e8ca9b9ae",
        "cursor": {
          "ref": "3c1e93c5-6205-4622-9366-3d1a07da9221",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "158e775e-e01e-4567-8e82-7587036c8c33"
        },
        "item": {
          "id": "22f2b785-a252-4106-b912-e34e8ca9b9ae",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3e64e100-f7a3-4cce-8e24-4749cf35fc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848f391f-2557-4aa1-88c3-efe1f9e51dc3",
        "cursor": {
          "ref": "3eb9ab84-8ad3-4dd2-b1ae-4fbcb6403592",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "08007159-337f-4978-990d-ff20e5b97480"
        },
        "item": {
          "id": "848f391f-2557-4aa1-88c3-efe1f9e51dc3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "507efe1d-7340-41f1-a0f4-53c06c128450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbf54dc-0de6-4049-bb51-c0a106e2e753",
        "cursor": {
          "ref": "c19fea5b-292e-4fb1-8b9c-54b71d2da0db",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cb7d2c64-322f-4f5f-9197-24681fb3a061"
        },
        "item": {
          "id": "0dbf54dc-0de6-4049-bb51-c0a106e2e753",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e8c833de-3fa1-4881-ac5e-687bc77f478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f30f7f-b3ee-44ef-9bc8-3cd6e49c6482",
        "cursor": {
          "ref": "28050c26-6298-4380-bc1f-66abb9f949c5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ca717ae1-0e13-4ccf-b017-7995896c5c16"
        },
        "item": {
          "id": "f6f30f7f-b3ee-44ef-9bc8-3cd6e49c6482",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "18a40d9b-825b-43a5-aa71-75bb9c42c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b6ac6d-0314-4ff4-99b3-496772182548",
        "cursor": {
          "ref": "135aa1c0-96b6-4357-9667-849c55fc7b42",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "68572e56-a755-470a-8ddc-e4530228a185"
        },
        "item": {
          "id": "58b6ac6d-0314-4ff4-99b3-496772182548",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c93e2244-1883-48d1-8352-6898f01a1252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fde8975-c017-42aa-a26b-7a21a6847573",
        "cursor": {
          "ref": "e3dd5f1c-92e1-437d-b370-ba60171ab606",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ec6cedf3-2a6e-423b-838b-6b6ddcd6e427"
        },
        "item": {
          "id": "4fde8975-c017-42aa-a26b-7a21a6847573",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8ced5541-03d4-4e66-9987-37a412436dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b864cc78-5de9-4107-a5d9-d5a48947fffa",
        "cursor": {
          "ref": "0deac2ff-ca1a-4bd6-a563-9c2a51cecacf",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "96d4a23c-6b09-495f-96a4-b7c852044e28"
        },
        "item": {
          "id": "b864cc78-5de9-4107-a5d9-d5a48947fffa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dcc320ef-87dd-40d5-8984-3695cb54af19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f271e7-5481-436f-8cbc-6fdd2cfaaad6",
        "cursor": {
          "ref": "63167edb-86dc-4de6-9be0-75430f855ada",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "208340b0-7514-4f14-b471-55523b910f46"
        },
        "item": {
          "id": "c7f271e7-5481-436f-8cbc-6fdd2cfaaad6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f04da95c-b3f5-4651-bc64-35d3f2e8593a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba135974-c102-49ea-8790-92d414112c6c",
        "cursor": {
          "ref": "4c18496c-d0c1-48ab-9e5f-dc5fdfc768f5",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a5fdc442-aa73-4b49-9110-613fabf9871f"
        },
        "item": {
          "id": "ba135974-c102-49ea-8790-92d414112c6c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "567547de-d684-4a9e-babe-31b08f1474e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6eb440-6544-42d2-b380-562d2f471164",
        "cursor": {
          "ref": "2d2d3797-5b13-4e02-bdc9-3e8a755cae3f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1c477897-04da-4dfe-84d6-a2e210c8d0e5"
        },
        "item": {
          "id": "8a6eb440-6544-42d2-b380-562d2f471164",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2d162eed-9635-4506-8353-646bfb921d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fc7e20-6ad2-458c-ae2d-9945b47e175d",
        "cursor": {
          "ref": "f4183735-e015-4c15-8b99-fba9b2862fb3",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f3f5b0bc-dcd9-496b-b9e8-8875023d3ba5"
        },
        "item": {
          "id": "d2fc7e20-6ad2-458c-ae2d-9945b47e175d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8fe9d285-2294-4484-babd-e4a6119469b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0611058b-c833-47f7-8a04-210ff09b391d",
        "cursor": {
          "ref": "afb10349-9cdf-458f-8245-f8226690f609",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75be842d-89ff-4a79-8036-d727e1bb0c1d"
        },
        "item": {
          "id": "0611058b-c833-47f7-8a04-210ff09b391d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d09ec582-c210-4cca-bea1-ff3748ac57b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ca4d68-954c-41ec-a250-2013c9e3b642",
        "cursor": {
          "ref": "b2ba542b-b37a-4056-97a5-f7fa7978ecaf",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "75741663-d5ce-45f3-82d0-61bd2dbce515"
        },
        "item": {
          "id": "c3ca4d68-954c-41ec-a250-2013c9e3b642",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e227eee5-353f-42fa-a5fe-1b521f911a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab4cdce-013b-440e-b088-32a06a31557c",
        "cursor": {
          "ref": "ac0a1a4f-f0e8-4d0d-9d49-3364fcfd6020",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "eb7aeb39-6453-439e-bc66-45dca61e729e"
        },
        "item": {
          "id": "5ab4cdce-013b-440e-b088-32a06a31557c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1827e60b-5fe2-4ffb-b6e5-68fa2daedfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548eacba-36a4-400f-aa6e-a48fc80ad384",
        "cursor": {
          "ref": "3b432d65-688c-4f32-9368-c3c5efdf799d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "346fa673-2fbb-4f1e-b9c9-873277eab677"
        },
        "item": {
          "id": "548eacba-36a4-400f-aa6e-a48fc80ad384",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6acbfa19-0e27-41f8-b024-0d78bb3945a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d877ac7-7216-44c8-83d5-3ca743700fda",
        "cursor": {
          "ref": "283b20ff-6136-4cc4-89eb-4d9e9080bd00",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5169da35-6b13-4f73-9856-a3e21382253d"
        },
        "item": {
          "id": "9d877ac7-7216-44c8-83d5-3ca743700fda",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7333733d-45d5-4af2-b11c-f6c069c38861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fedb772-c495-4dc6-9f17-267a29151fd3",
        "cursor": {
          "ref": "19bf58cd-51d8-47ea-944b-22c5b225675b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "42c9f614-aad8-42e7-9c64-b14a597836d3"
        },
        "item": {
          "id": "4fedb772-c495-4dc6-9f17-267a29151fd3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8c43bd2f-75eb-49c4-a05a-592c1130d1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3690a4-34ee-4cdf-8b1b-2c17dad5dd49",
        "cursor": {
          "ref": "01fddf0d-7014-4e00-a85a-9b3fe071e145",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "291b9e0e-68d5-4bee-9ca8-0c7b45d0ad5f"
        },
        "item": {
          "id": "9f3690a4-34ee-4cdf-8b1b-2c17dad5dd49",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6122b5c9-bd35-4277-83f3-390e33c24741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6235f231-bf3d-417d-9a4b-60e80eb6eb5f",
        "cursor": {
          "ref": "b6882745-c799-4b1d-8334-3ffe1cfbd42e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "834cbcbc-2e6d-4ab9-96c1-3406771ec85b"
        },
        "item": {
          "id": "6235f231-bf3d-417d-9a4b-60e80eb6eb5f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8404e0e0-8c04-4711-8a1a-3a50f9002fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53003f33-3fca-4d37-8d2b-a512daab38e9",
        "cursor": {
          "ref": "270ec24c-a254-4406-9b19-b0906d79c2dd",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3041f210-0f6c-4563-b8bf-ab8763199ed6"
        },
        "item": {
          "id": "53003f33-3fca-4d37-8d2b-a512daab38e9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b154e5ce-6857-4d1e-903a-8058124d2b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df86ba4d-1044-4e91-963d-6ef24698651b",
        "cursor": {
          "ref": "b0ace202-321a-4bf5-85a2-32d9c8548efc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5f9d8bc2-d893-481f-bfba-6409c054deeb"
        },
        "item": {
          "id": "df86ba4d-1044-4e91-963d-6ef24698651b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d78bb341-ae92-42da-b40e-419c0e5bf971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd126d88-7125-4c29-b5c1-baff24540e5c",
        "cursor": {
          "ref": "80398df6-3ea9-45ac-b3be-f5da6c044c88",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "13412121-6567-4ce8-a70f-e1894b092cf3"
        },
        "item": {
          "id": "cd126d88-7125-4c29-b5c1-baff24540e5c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "531756ac-aab0-4952-890d-2ad21e78f287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b2f8a3-1657-4acc-a847-2029b0d5e946",
        "cursor": {
          "ref": "f302ba68-f35b-4139-9135-1452ae076b36",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c5d7c289-93f5-4f32-b7b4-785f9b29c9f6"
        },
        "item": {
          "id": "75b2f8a3-1657-4acc-a847-2029b0d5e946",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e62474f4-ab05-4121-9ce1-58c391a543d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5d432e-0cd6-4e3b-b80a-41cd16a2339a",
        "cursor": {
          "ref": "e09daedc-9123-4f60-a79e-f8fe09d53cb0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "65730455-a81b-44f3-8bd8-dad32ad56d48"
        },
        "item": {
          "id": "7a5d432e-0cd6-4e3b-b80a-41cd16a2339a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ced70054-18cb-41e2-a20e-64ac24c72f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c124fc-d84e-483f-8d9b-fe967960b622",
        "cursor": {
          "ref": "eed3bc38-6817-4ad8-be22-ca9304b6d36c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "41b51bef-cd01-44fc-bb80-6ab8aae62493"
        },
        "item": {
          "id": "b5c124fc-d84e-483f-8d9b-fe967960b622",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "943bb585-c7aa-467a-9e65-48adf9c4ba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15b87d2-7c5c-45bd-b3f1-456e2f58082e",
        "cursor": {
          "ref": "4329bbbc-d547-4317-bffa-7a16ce3cc2fc",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "913736c6-ff84-445f-a708-c9678d0f09b5"
        },
        "item": {
          "id": "d15b87d2-7c5c-45bd-b3f1-456e2f58082e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e1937bed-8e6f-4e79-8015-f0146aeb686e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885b7e88-6b1f-4989-a49b-742ef1383454",
        "cursor": {
          "ref": "7f075752-e07b-4136-9603-ff82348600da",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f9709c84-cd48-418f-b208-10345ef10b15"
        },
        "item": {
          "id": "885b7e88-6b1f-4989-a49b-742ef1383454",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "397b7395-29aa-4530-9064-2c472b1c28e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b30ed0-32be-4e80-b9ff-b7af39e2f40a",
        "cursor": {
          "ref": "665ef03c-0497-459b-9476-e2e9d75fc473",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7ceb8e18-701d-49e6-a645-853978a1b280"
        },
        "item": {
          "id": "03b30ed0-32be-4e80-b9ff-b7af39e2f40a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "27c5e9a3-a23f-443b-83ac-811f14bae337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3179e8-cfe4-42e2-b12b-c2afa4946cdf",
        "cursor": {
          "ref": "05f35ca3-135f-4dcc-a8a0-58fc8676d254",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a9fa7072-1756-42eb-b85a-67359d5d57b5"
        },
        "item": {
          "id": "db3179e8-cfe4-42e2-b12b-c2afa4946cdf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e206935c-d682-44cc-8b81-bba6631a185e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60f4b89-9aec-4920-9e75-d1967a42efb0",
        "cursor": {
          "ref": "96c10d29-ba51-4561-b1f2-2bb9dfdadfc0",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4ba3c53c-f9e2-4d47-9194-4033d346d795"
        },
        "item": {
          "id": "c60f4b89-9aec-4920-9e75-d1967a42efb0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9ef6228b-e08a-4810-868e-d5b725cc9b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684792f9-4079-4a43-9c85-fe701f87ddc9",
        "cursor": {
          "ref": "fdc8b648-89bf-429d-b2bf-722540be2963",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e2e19049-6d1a-4daf-a12b-6ef72c818147"
        },
        "item": {
          "id": "684792f9-4079-4a43-9c85-fe701f87ddc9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a98a7952-8187-46f5-82d4-64d66d878207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c55fad-b041-4f0b-aa19-f35a715a66cb",
        "cursor": {
          "ref": "fba8fde7-0252-450e-a4ef-a44c0aacb67d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0ca9b1ac-aa9b-4cb7-a00a-46a35dda349b"
        },
        "item": {
          "id": "21c55fad-b041-4f0b-aa19-f35a715a66cb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "80e3862f-8f0e-4e87-9bd7-c949e13abaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b4b918-d793-4d3c-940b-df8096e8a258",
        "cursor": {
          "ref": "2526338b-0514-4806-9a82-ba9ac9a19fea",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8cfadff2-af3d-44d6-81e6-eb2329550057"
        },
        "item": {
          "id": "35b4b918-d793-4d3c-940b-df8096e8a258",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9474d0b3-87b6-476e-8e62-95e9fe494ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21595ac7-8167-457f-8eee-105a87748046",
        "cursor": {
          "ref": "bef26c83-d3c5-4c4f-a50a-4dab6e29d4e2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "050acf13-faa3-42a4-bf32-8a8700460b06"
        },
        "item": {
          "id": "21595ac7-8167-457f-8eee-105a87748046",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e424d4b7-a4bf-4925-bb31-4bdb5940591e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551bd60f-d608-40a0-b92b-c6d7f9f3293e",
        "cursor": {
          "ref": "72d26414-3cb5-4a7c-88cd-db47531f5f61",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f0403b56-75ca-4e96-9207-8f2bc8a814d6"
        },
        "item": {
          "id": "551bd60f-d608-40a0-b92b-c6d7f9f3293e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "04031212-4adc-414b-bcd1-2ebd705ec0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c2053b-cdf5-458d-9cf5-d90751f62f25",
        "cursor": {
          "ref": "5fb48d32-409b-4e28-9216-625ee1a159af",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7b285bcd-873b-4bdd-a4dc-a79bada7554e"
        },
        "item": {
          "id": "c4c2053b-cdf5-458d-9cf5-d90751f62f25",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e3857287-c701-4c52-af1e-41233ff0cb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f24238-1b45-4bb6-a269-5de69f455584",
        "cursor": {
          "ref": "6f39b563-5f25-4c0b-b342-568206b1362f",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "98f23c1c-5c0f-4aa9-9c45-98caed4c47fb"
        },
        "item": {
          "id": "f0f24238-1b45-4bb6-a269-5de69f455584",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1d8bdf26-51ca-40b8-be6c-bbbf704b799e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3093b4-3f2b-4429-8204-1e0a7730f2db",
        "cursor": {
          "ref": "1aab26a0-8a9b-479b-9cd1-3fbad3c9b028",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3552399a-6b39-4c6f-9bb5-f7163e13eede"
        },
        "item": {
          "id": "1d3093b4-3f2b-4429-8204-1e0a7730f2db",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2c2f6a47-0a9a-4949-a493-0b584aac7bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf426a9-74cb-417c-97ed-e2cdd05afde8",
        "cursor": {
          "ref": "37500e5a-4214-4327-ab10-5477336aa114",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "0772d2bb-89e5-4deb-87c5-b6fec5908869"
        },
        "item": {
          "id": "4cf426a9-74cb-417c-97ed-e2cdd05afde8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d64e5638-23c3-4652-8cfa-52ebe2e50adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76f7d95-62e0-40cf-b2c6-185041956243",
        "cursor": {
          "ref": "48dd3760-8f80-4ddb-aca3-1b26bda3be04",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8b1fba86-80af-4bff-9b9e-4809e5b00e8f"
        },
        "item": {
          "id": "a76f7d95-62e0-40cf-b2c6-185041956243",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "98722623-c571-46a9-b6f0-1e7de86da64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4275bc87-e150-4473-a3e2-701320e58ddf",
        "cursor": {
          "ref": "5e50fcfb-ceed-4ec7-9c72-567dd82016c8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bdd542cb-9209-4fd4-99f2-550a76886678"
        },
        "item": {
          "id": "4275bc87-e150-4473-a3e2-701320e58ddf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6edf1d97-6680-4da8-9d8a-5a6d0de8f18e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acff5bfa-a319-49a3-914c-2abec0e8a1da",
        "cursor": {
          "ref": "ea258af5-87e8-441e-91b7-c457a3cefcb1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7cff340a-7542-4282-a024-b085d9f024c3"
        },
        "item": {
          "id": "acff5bfa-a319-49a3-914c-2abec0e8a1da",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5cedbb8f-84bb-4976-9d1d-656eba9158ed",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6aa9ce-f7c5-4b11-b361-2b468ed861eb",
        "cursor": {
          "ref": "2e78d627-5fcb-4fe6-a4ae-34c25a690e98",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e6e59338-1964-493b-a7e4-900c4a23e5e6"
        },
        "item": {
          "id": "cb6aa9ce-f7c5-4b11-b361-2b468ed861eb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "01c13791-1e48-469a-a339-931e2b6cacfb",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "668934a8-74fe-4eaf-9f94-02072f22f89b",
        "cursor": {
          "ref": "70ca4453-0087-4d26-ab04-f528dd2f45d5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4d09679f-7ec8-4b81-9502-f7f1807fd417"
        },
        "item": {
          "id": "668934a8-74fe-4eaf-9f94-02072f22f89b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7381ebe1-8456-4a38-befb-c4b7c11372c4",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf2ecee-9fc7-4ae8-892f-7cb39b21363f",
        "cursor": {
          "ref": "a8430a1c-53e5-4991-90ce-a2a3e562c8f7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bf132918-1bb1-4ac2-b31f-54d1231db1e2"
        },
        "item": {
          "id": "5bf2ecee-9fc7-4ae8-892f-7cb39b21363f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "33947e57-6468-4f5a-b052-14302542ce96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf2ecee-9fc7-4ae8-892f-7cb39b21363f",
        "cursor": {
          "ref": "a8430a1c-53e5-4991-90ce-a2a3e562c8f7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bf132918-1bb1-4ac2-b31f-54d1231db1e2"
        },
        "item": {
          "id": "5bf2ecee-9fc7-4ae8-892f-7cb39b21363f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "33947e57-6468-4f5a-b052-14302542ce96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3287da29-fc86-4afe-b6c3-fc5f70e57e89",
        "cursor": {
          "ref": "c16ca4e1-85d9-4847-a07e-cd896de83298",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "10aee9e8-e12b-4e91-a0b0-eb702dd05e29"
        },
        "item": {
          "id": "3287da29-fc86-4afe-b6c3-fc5f70e57e89",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f236764a-5b9a-4adb-a662-ea62016e64e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb1bcfc-9090-4ced-9657-ca2e167e22d3",
        "cursor": {
          "ref": "32d9e2b6-fd18-4d84-b4b8-aad704f7ffa4",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "61ac5074-b9c8-4d3a-a9b7-ea9a3bb56bd9"
        },
        "item": {
          "id": "bdb1bcfc-9090-4ced-9657-ca2e167e22d3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b28ecaa7-d803-4e4e-824c-e69ead5a693e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}