{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "21475986-e5da-4684-9db9-603daff1f45e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5b7cd657-f27a-4e7f-8d00-5cb78fd25509",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8e2679a-3ab6-4564-9385-249fbc65bac6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1c64c570-7fe9-4560-acbe-6fe44ea1fb6c"
                }
              }
            ]
          },
          {
            "id": "8d03641f-4d63-43be-b4ef-8edd29a544b6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85a6eabb-7ff8-44b6-9aea-d69f9620de38",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f3f2d4d-11fd-4876-af1e-ae24024b3a78"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7ed75c1b-565c-494d-bf5a-eb71dc277896",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2cfef739-35af-4f92-be9f-5bfbef3a3ac7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3de9029f-bf83-4349-8173-25e993a40c33",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cc30823-785e-499c-acd1-1aa7d45ae330",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ab73c88-fd39-4cab-a5b9-478080f5d0af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4be8b685-03d2-4dd5-adbd-e28b9efe2c02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14f08099-9c3e-495c-9753-23358c02f8fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "efa3139a-957c-4714-962a-8020ee80c0b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36842a09-c373-4f6f-b120-6bb5ccc1c20a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c30aefcb-7666-40d7-bd86-c2eab7c5fa57",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1ff7f2c9-152e-4dde-8b78-0f8da24b9837"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbfefb71-9bb7-4885-811b-028381d1749d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7133941d-0e00-4d1b-a114-4e11ffe6e34a"
            }
          }
        ]
      },
      {
        "id": "6e1cce10-ea47-4e49-9083-2a3ac2717a3a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "76e48aa4-e6ab-49ec-9708-9e4ad1af6d98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70512c64-8ac0-437d-a763-a1f71d7d263b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d0b9d17-9a6b-4b3e-8214-2438e054a04f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ad1b56-537b-4586-8d90-9271d26d2523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1efd198c-8391-4173-9cee-df16e602e0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89addeb7-1248-4839-b6e9-58079399b18f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771c6e88-0c91-441b-a397-914c45278cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c423d072-0fee-466b-a8cf-55c9d2ebcfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66667e6-73bf-4387-9e84-d16ce6e7385d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded7a26d-3458-4251-b7d3-8559d305ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d474488-9781-4925-975c-8f02f20e7713"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72a95aa6-410f-4b02-afb3-591644e17654",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e348a411-cbe1-45b2-86df-4d30c540a6bd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800c5aff-dfaa-4a05-bc85-5cafdb62cb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8e8b627-0d3e-454a-b825-f2bd485b7c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f432257-49cf-4beb-9729-b9326ea252c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7535c2-785b-4054-8cb9-959d495db21b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7204783f-0da8-426b-b703-689d4cab4b5e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a4b52c8-1f51-4fd6-a60f-a4b466d053fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98566ebf-e7db-4daa-991e-d37a442a8ba7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "badd0908-474a-4d21-8315-ca90aa2352c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3aa2dc9c-5553-4cc1-bd3b-5fdf07b64e63",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8cd569bc-eb26-47b4-a531-20625c3ab0ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a3ffa4f-53ea-4e14-8ce6-d23047077777",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac19a609-dbe2-4579-afb1-a504fa87837b"
            }
          }
        ]
      },
      {
        "id": "8e28ba8f-4756-4d67-9e98-0da44549ba7e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8deb53e1-3b1e-4411-8de2-bf36df6e776c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac66ee9e-e46c-436e-a9da-72f9320a6bff",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "25d3de46-09cc-4021-ae4d-4522e3d1be5d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670a9b94-0a4f-46bf-9df4-8fc0c1feddf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9ea81d-a442-4161-8679-9b5d9f110862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc6be6f-90b9-42f4-bfe4-e4ef12c3f221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "845af2cf-3abd-4169-9ac5-9e850460284a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a16b369-a384-4685-8eae-e1eafe2ce696",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d3e0ab-3bda-4038-96a1-115cf7c4ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c294f627-09ec-4c82-9d2a-47648048e412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37b6a31-b9ad-4ea9-bf4c-f72031b9122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "571287a1-e533-4946-8581-28762e7af59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ebe649-42c3-4ed0-b7f9-0835fdc3c1f6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af62f9f9-3a86-4645-9529-66f0c9eab3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44c3bd6-2517-4c7f-a07a-ffc4c134bf53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c762d35-d838-4fb3-ad18-a8a4eee37966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58ae60fb-5c93-4bdc-94a4-a9ce2a4dff6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f6e213-dab2-4cab-ab6e-b777410cbdb7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a76331-9013-4598-a9e7-a95e8825e2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3217893b-edf5-4be8-9acd-54e0841daa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae52bfb-d0b3-4e3a-8b85-14609aaa0c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58d6f35e-8826-4ca9-8465-c950418683cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2a15be-1496-4a02-b8d3-5f8c5f5ec8e4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414c3820-1387-4773-a71a-ae297960823e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c78ed-9775-46a6-a2fd-0265a0a86e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395087ca-8f03-4e48-8cb6-1c5259b59914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8226d832-a543-44e6-af4e-0bbc40f6f047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d8ee83-d516-46ff-b06b-2ac4efc5ba0d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86844f02-e0b6-47ac-8f95-03497c9b8d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81838d8e-7087-48c8-a306-728e9c61a64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bafe5ed-58d3-4962-89e2-9cb0007e821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "574b77e7-672c-4e64-b344-47dccd71b7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b721d181-b7ff-4778-93a1-17dae00bb0ab",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa677f4-2545-40d3-a653-c715fd416387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b44dc26-a8af-48c1-a57f-e910dd2af416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ee4ea8-40b3-4fd6-9ba8-010943766da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b68ae59-3953-433a-91de-0e81a3bbcdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fa244a-e476-469f-9034-a2d6f6305ad8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08d0baf-8b4f-40e4-9cf0-d92bfbf16c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aad4b1e-b8ce-44ff-a194-79661409e171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c965cf-16c1-470b-98fc-f9e5e8c07900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dac3485-fd8d-47b0-9974-767f536903b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37eb1641-1586-4036-a8a7-c13bdf891a84",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad1bd51-f76e-4afa-8fdf-4d916fbb521a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4b250a-49ae-42bd-9927-2dadcfceb143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5650ccfd-d7d0-4952-aeb6-ca3d632639ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbfdb707-0752-4678-9d93-dd178de60155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9115a961-3b09-4ad5-a81e-fb4854e3ebf9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691b0078-1be7-4a0d-b07a-5dfe624661dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e9961c-29f9-48c8-8a23-5667311af495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fdb8c3-cfc2-4fa9-86c2-eebedddee5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4618740-06e2-4905-80c6-408a0ea8a789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0d9337-9c91-4ca3-a98c-c2e1d8d9a341",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9a9a36-f2b3-4d89-a95c-e219537cef22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4416d55-94a9-463d-8d57-54e3377a7890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87d6a44-9536-4baa-bf57-b32755d15bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80903ead-001a-4686-a4f0-792e8a389f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead12a17-901b-4bee-afb8-d30bdcbab25e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1b6a19-7544-4c36-9686-c2b3a9243705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b2eb2d-b92a-4f8c-9960-6e11d776a0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a982bf11-f3f8-44ac-92a8-47cc0cc0c704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b353305b-1934-4584-bc26-605c8b3c27db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b1e3fc-2033-44c5-8b00-dbb1879caadd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b7a998-cc45-497d-b810-6848fae12b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4fdcb2-bc37-4ab1-bde0-a4ba4338aaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c907b7af-277a-47f6-b4cd-78233bf0ddde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "436f7c84-35f0-483e-86ee-f0c39c79cf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a62a7df-3777-4448-9760-2abdccfae4dc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857b685c-c128-44d5-a526-47f4dc0e921d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1841febd-c10b-4994-8df7-4a8c4ab08ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48001c09-306c-4e95-a7c9-63fe68142c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85e84aec-77e9-496a-b288-cf01b0858798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6857d53e-5055-4250-a632-0a012f9d627d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb277fc-edb9-400d-96b0-1af487caa196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5d7f56-1897-4925-909c-f2f0c107d24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1db6ec-048c-4a18-be4e-70ac3779fcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e352c039-93eb-48fe-9c9c-77e8f20f505b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c06fdf-73b3-47ba-b0ef-cd3834e49e8b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5dbecb-8030-43e0-9b6d-47c2d0086fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ca0e0b-fcf9-4c46-890f-6d97ebff7e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e87533-d78d-494d-9983-e1e162e088e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "210984cb-c940-4291-a414-31f8d5bcc022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b83393-0768-40dd-82d7-0f710c88ae4a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db2060-e432-49d3-8cb7-87a3232c2062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3989c92d-0b58-45b6-ae9f-d92516666f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee9854a-2c1a-42cc-93f5-64a889b7d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b78f1e68-cf82-4f10-ad0a-28a05ca14890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3e540f-d7b0-4649-9b9c-04cf508bb472",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65087c86-6282-40a3-84be-8078611487fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f900ecde-165b-49b0-a838-e0f667eef54a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2abf7a2-9dae-4f59-a92d-58bdd39cddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "807307b6-4094-4039-8894-942419bccde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffada5b-63b6-4b03-b60d-aa769bb662ee",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af3f868-0dd4-45bb-a1f5-45a8d280a448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2c9d82-1fd6-44f7-a6c1-048e21f9c287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979cbd4d-60c1-424e-beae-f614dbf7e03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5340fc-3a07-48cb-b208-cd8e8b584c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc135ba3-2bfe-40a5-9ae5-2399a11f69e3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587285b5-173f-4caf-b184-02d3be920f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacb1fe1-4e2b-43fd-ac51-665984fcfeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79d694e-8f0a-4823-82d0-6fcb2a576286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72ec78f7-6fd5-4dd6-9c68-62765443d516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd137879-27e7-46dc-a83e-bde0dc9e362c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1559e1bf-3bbc-478a-9dc1-0ab1a6108e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d76f05-d7dc-4b7b-bd1b-02d25cc126c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd7f255-b6ee-4b5c-8d16-ae5c4728596d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8839157c-0f5e-4309-848c-114a75fbf751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab6d49b-32b6-47c7-8c83-5d6f26c18df7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ade761c-8656-4064-a6ca-4afee6f9e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6e7c33-25fc-453f-94ad-51e6bf31ad85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c04735f-d5eb-4671-b058-1b9e6ed3b8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7a0c09-72de-4575-a114-a08650437650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456bc191-05ff-40e3-a56f-bf4c91d40f8f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48934fd2-6691-481e-b621-72e21a7e5aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e53933e-adec-41b1-925d-9a1e324bcad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354a60c8-b13a-4ad7-963f-49f399914fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "611d230f-d5b1-49ee-9329-d6afe54b65be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4810a3-71da-4a66-9e52-4c11aa652bdc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ceba8f-5c8c-4032-91c1-fb90a9ad8af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66104ad-8c52-43ca-97ec-164c99984e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f54fe2-d061-4841-87ff-09a9ebe0e98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf3f820-d77e-4747-a1b3-35fe32e93673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce425d1-0828-4fbd-91a8-1f3af429b3b4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77320a0-8f52-4aed-bf19-fe23a56dbe4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae342975-e847-43ee-9389-5a06a112bb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77565bc1-7889-4d2a-8179-b2a8bb0dbf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "851654b8-8b84-415d-8b28-8304348ee38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bdc7c5-d379-42f9-bc2c-3bfbad448917",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281be947-3f12-4a08-a8ee-82e018f4bb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316e6131-951d-45a8-b4cf-fae9e52228f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5e7737-f014-45f7-b38f-ed7295d673ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "636d9e01-9e03-4bce-b012-c1423ea55362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6510a83-c29a-4d72-b598-11e5b6917c93",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2db321-65ee-4a27-b6e8-bc1d3fe31626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b287e902-7677-4ef6-93c9-a3f1c0297b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f4dbf1-73ac-4926-a45e-1d84f7327b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6df67d-bbda-476c-b0a2-df6edafee35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab6b0bb-fb8a-425a-a3cf-f909b1fd7f67",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0276ef17-c504-4570-baea-25a36b33ad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c813c046-be23-46fb-8207-457a52e3e2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadbdcd5-0d70-43c7-90fa-b0fdbb10e126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4e4696-7264-4406-82ec-f1e85d5fdb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b25a0c-4ab2-4535-ad29-22083081b80b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8a9bd3-6302-489a-849b-7f90967ca7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161cd2aa-4adf-4661-a782-e142a7a47b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc6343f-1806-44e6-8b81-5cb084d862fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2e9321-4110-413b-b0e6-e62c86a7e5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78e9bd9-6e8e-489c-bb77-650c679db839",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0674a79b-9275-4365-a378-1133676a0929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f41168-677b-4aa3-9a5c-9303f47fd157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cbb283-0e63-4815-b7ab-c03a615f79c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "13af13c7-0f95-445c-8af7-75811df92c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b773c92b-445c-4d15-8fcb-5201f6744ad4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4312a14-6656-49c6-825f-37d46cab22c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf0b4e1-1a44-46ec-bb87-f3f71a00eacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c992b9a0-4bf2-4ad9-898e-f03aada81b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6105e0a4-7063-4c5c-a1c1-85ff3b09d0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7b46ce-d50e-4381-8724-630b2cb8027c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73be90c0-a9ee-42a8-ac83-a6d9caf8ec9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711def89-6330-43a8-8f9a-e33275907e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67607608-cfef-469b-b746-60c58cf16c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49faa5ab-7edb-4365-839b-4150ad48a776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff9d421-8f64-4021-aa5b-6306ecd55122",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e451c49e-6081-47f3-bcec-6c36bba44345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396d8b3e-c21e-47da-a527-87089825e085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c220bc8-67a8-4e77-b8b6-c9a1462d4489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdec4e9-d624-48aa-82ee-6de85fa9143d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002b7f73-475f-4742-80d0-05fef2f38ca5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d547eb8-1f17-4e1c-8e1f-373a6c489de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c509956-e19e-4bfc-ae6c-8ab4631c6a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf7bc63-10db-4dcd-bbd2-40b8254554a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b82c1a2f-06d0-48f4-ae95-df3103ac46ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96e8a40-a4c4-448c-88c0-e36c990d301d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4288590e-2317-43d2-9705-b268aef1e4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8af89a2-f0d1-40fa-acf3-338c976c72f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703ea246-e0e6-48d0-9650-46bd35d81d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ef49667e-691d-400f-be7e-41e75b04f700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e829491-90ee-4a9f-9ecd-8781e0f9c0f2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15398976-a562-45c1-b36e-3f6292e58bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0903f3f7-e056-4f31-b130-a1ee7b3b2389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8bfde2-731a-4dcf-ad2d-44da813413a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc38c428-db86-4f8c-8b11-1e3092836653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c403180b-d21c-4a95-91e7-70e913a9a214",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8755ab-5104-4e58-b17e-3dfa05ff16b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3062992-093e-4b20-a9a4-f2454eff9b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474e56c6-55e8-43df-be87-07441d97086b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c505b77a-fc82-491a-b317-f1cddc0c710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5c8ebf-eb31-44bb-ac74-c664b9ebe209",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360d0df8-f5f2-4e37-b234-4ad4d893d44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03d0076-2d0d-472a-94ee-1f23652e1de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0376d2d-c649-461a-a730-94d3db09310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d60d8e83-e131-4eb0-b9da-c9e598a0ca3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495aac3a-bb03-4116-a6a1-db76c460f451",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cdf580-a1bf-4a6a-b258-a1aa9d6351ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920ec056-1cd5-4576-b554-eaa18185e3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7573964-bdee-4fcb-8828-4baf87bcc29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb3b77c-54cb-4699-a564-666ff58f328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26e45ff-98c6-480a-860f-232e2609362a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2dbfc6-85ea-43a1-a74b-7d19b2d33d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e2fd98-f726-4b11-8359-271f5a4b38bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e901c384-c9da-44d5-877d-582f885aa372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "08b37bd4-5997-4158-8a60-0cb05570f5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da30732-6a2b-4f5a-913d-cc938bcd6f92",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b166899e-b0f6-4b1f-b446-1961afbdad7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50429ee-3f84-4d95-a172-02d246642fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be4c397-182c-4d52-b91e-d9f0b6dbdbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c36b550a-3642-4f7f-9238-b450c9b7b1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2821124d-7a1d-40f7-b66e-136d6b5251ed",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419feaae-76af-4030-9449-e5581ee9695d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e3170c-c477-4b90-b4ad-e43698b02bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbd1b50-7f94-4f81-a269-fe8585c9b2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe16487-e6ee-4573-88c2-baa425e82eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6810f75a-79c4-458b-8295-155c5b33ab77",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745e3cf3-ed3d-40a8-8f40-24e1bcfea9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1953939-4289-4955-90ff-ef7d4ba483f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9cda25-b1bf-437b-8aca-6b6a6c4bd20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eef7eb2-662f-4c1b-8a77-e91d82cd9fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a067e1-b5a4-4a16-802d-4a70f9d768fb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd35ded-30a1-4426-a345-6f826ce2562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6386db0-b622-475a-856e-cd886651d77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdbab62-a8e7-4ac8-8ac0-ed84ce6f5d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d5fe2b-8793-4b34-a062-76ea785ffa22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081f2050-df3f-4ad3-8487-e9be7abf4c06",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a685a253-0d40-4feb-9539-80a9325e40a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3ad9e3-5b0c-45a9-b450-bbc6e6bba788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79b4285-b195-4fca-864e-01414f23867b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c06cee51-a5ec-4d91-83f5-c36026a22c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bb6354-3348-41ec-b52b-3e4185a0179a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a29fb4d-ef5c-4296-9426-f0660efe6341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af7fccc-835a-4ba7-b2df-fbba02dadeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95efde41-6eb7-4d59-ae71-39d551aef4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de7578b5-7eb5-458a-80fd-d77e5d2dcd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789641f4-d649-433e-8caf-c91185df1cee",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d77564-ed95-4db1-8916-7f66b04a0251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d153ea-ef1b-40a7-9a04-66309037a523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b286eea-1ca4-4cab-9309-85981c7d6aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a389d2-277d-4536-b7f6-0129bf6aff9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c538d14-5f7a-4851-8e8c-49e35d9af257",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fb3e02-7d51-4a33-8762-df5343335cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcc72de-c2d8-4e9d-8a71-f314b9805a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58873d2-b737-4944-bb2c-fc0985b9188f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53dedff0-9509-4ee5-bca7-65a4e88a503f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1264c067-2e1d-4b26-920d-122d8b56315a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8c21b9-3ab1-48eb-a750-f25e946bb669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9587cda6-8f7d-4fd9-85a9-8c77d604d136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95daa47b-09ec-489e-95c4-25eb380c2088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77e6317f-e0bb-45d5-b348-9a576f71768d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8f7a7b-b280-45f4-b034-d626ea6c8573",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9a39ee-44e7-468d-8d54-646dd478a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2971c8cb-2784-429b-9a2e-916626114a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92ac3bd-48a4-4f32-b085-339aeb3d4bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a703878-edb8-4bc0-bacc-81720bdac48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2ff688-04a3-400b-b91c-4c791bc0465a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9c0e98-d4f8-4d07-ace7-2fa4b273fbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983f6214-4725-484a-ab91-fae28cb1ec43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52dc6cb-23d0-43d5-8572-16ce3197575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ad8126-8aec-4714-9b3e-a9595259b6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f922a4c-0a51-4c56-8c3a-dcd0c4627623",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b137b62-756e-45fd-a0ae-062f4be28456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4815633-96bc-463d-aee6-1826977e12e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0eae2ec-8bf8-44c5-8f8f-777849d6e016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b271c5fe-5a02-46ce-a6dd-6245bc0e7962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4df0eb2-ac1e-4522-b60d-8d6017acb7c4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac7d1ad-8980-46c1-b631-10b08bd42979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2913af-a467-475c-8695-e803157b3815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ad2288-a4d2-4954-a223-214c554b51fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9781b79-a903-47cd-a6eb-b2c5d031e321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb6710b-71b3-480f-8371-a307528d2ddb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea084e7-40e6-4fb3-a69e-a75b6b4e0fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb361b8-48d0-4017-8a23-16e755c46404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1522e8-a2ec-492b-853c-41de109af399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3afb9bb-b10f-49ca-94bf-168f8eef8f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c87f24-09dd-498f-8e00-660b25b95e39",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5e6334-be7b-4768-876c-65c687fe4623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6490fbf-d2e1-4006-bd3f-a883fe5fb152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4717616-8c60-4bda-85e2-2348c7d1935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94ac8ab8-f03d-455c-9d07-d151cfa4aa45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3095ed-60d6-439c-b85c-33526f194a16",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9214d85e-ff8f-4c19-95e8-53b5a50bb37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2362949e-a4fa-42f3-9695-1b1252ced8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa765e9-050a-4a7e-94e0-8a630d9a93d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2264dd-6818-49b5-b6ed-62f20c998bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298a454d-8c99-49fb-a2f6-355906bcf772",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accb6943-b322-4d93-ac18-3c8115aaabd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8891ee8-c78e-4511-82ad-0e58b8189789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f03afc-33f4-4fe9-a179-050521148a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9310d4f-2b1d-401b-9b90-455c2b7bc0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518721af-8f57-4d5b-886b-9e109a76e94f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15890ef1-9672-4083-82ef-bbb8912f9c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c49a26-54b8-4cab-ac30-1d95d4361d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62d801a-106d-437e-8560-9da9de36c61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e05023-2798-4f59-aa4f-30588082e1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a27d85-cf10-48c7-8b75-876c273ff44c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36457dd3-a2cd-4e51-b389-0622ca27a03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c49f1be-6ce5-4d2a-bc59-35bf833a4f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78ac889-436f-4206-8246-ce9a96534362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9130a5fc-7c28-4da0-ba24-2c33e766d19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b96322-37e4-41e3-b1ab-337c47127f5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67d7ef9-8b64-4d2d-aa82-0058adec85f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3daa3a88-ebf8-4d2a-bc81-707db2c0af40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39720b8-8c5d-410a-bc7e-e6ccd986c3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b290ed5-ec56-401d-a2bf-fb82ca326e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2204ae-b25f-4879-ba9b-71c1a9ec78d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44116301-d8bb-48df-a456-cd4d1ead7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc6b0e3b-cfc9-42db-98d9-a1aa71510eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c3954c-45b9-49e6-9591-8897b0860f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "360bf623-7e9f-40b4-a8c7-6a5f64df0eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03542684-4380-42b7-a38b-d392518e5e32",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d88e6c-458b-4ffb-91d7-5f709056b0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421fdeb2-861d-4c82-b139-dbb071c36bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094d568c-3e2e-4b9b-983c-c34e877b15a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb99146d-1121-4947-b2e9-51205fecd667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16833fda-a23e-45ab-8b18-cbd6bc9990a3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b562cd78-ea48-4dfb-8a2c-5479f6757a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f049109b-6849-4dca-b72c-21a8e9982dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bee7fc0-5365-4b35-b748-cf3eda798770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c6b2fc-253d-4404-aa47-28120fb2f0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d763c400-0da8-475c-bac7-cee4ac98ed90",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeea3ad-2232-48ef-89ef-9c3ead612f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f7550e-fdcd-4007-85ed-c898bed4e676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03cddf1-32d2-47a7-9288-e802e341458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e2df08-26cd-4ebc-b691-9d07d2ac1b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca48562-60ed-4c81-b9a1-070306223ba9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519f2372-3ced-48be-ac65-e4cbb80ab4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26dc6f47-6fda-4429-a3c2-3a121bf6137c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b571ce20-3771-42de-992c-1e0c4b61defe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b082d6a9-585d-45a5-a1e4-e1cc8dcdb155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ecc595-6102-4a42-b421-24c290f6c819",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4d5a64-eec5-4e63-8e1c-ffd6e0519e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8718def7-f1ad-4838-9726-8e31f25d1ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d812212c-2738-4599-8600-1d1962ca7789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a76464f-d7b6-4a5a-b8d8-868fffac1d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89009b53-f825-4ed6-b20c-1781833c6655",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590ff5d4-c9b5-4816-b70c-873c79c28169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50ce97c-a6a9-4514-845e-4ddc9308600f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e642723-ffce-4466-8659-c195c4cb4d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7066d6-d53e-4533-b19b-f5e96829ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6121ccc1-e787-499e-97e8-b05ea8e818b9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffadb852-2deb-4c91-b3cf-26f93c04d2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73e1033-cff3-42d8-8b29-ee82f83ee9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5d898d-5250-45f8-b8b0-fd119988fac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "018fdf48-9c06-4471-be90-1e4e3f7f1e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36622940-c39a-4dc5-be24-c44a1eb447b0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43e7de3-7ba0-4b0f-a612-f78738175112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c045542-a2f0-4f90-bea6-aa6c503aadfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0687a408-f15f-4ca8-86c3-e3f92e0014bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b59a2701-8af9-4bc2-92b9-8e74d341fed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f73737-b176-460d-bc3e-aec17e8aa550",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31b231f-3fcc-4d62-be1c-5f0f2c11f43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377c163e-ad19-4f44-836c-2dd87295f966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd255ec1-18ae-435e-928f-aa28a5f4ee33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "972f4969-80bc-4815-8859-67119eb2b5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0458aa5c-0025-46db-b876-a7e0faf5c766",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917994ae-91bb-4ebd-9d59-6e3e9fbe8324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd93bca-1473-4665-a3a1-478bf3187a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd86b77-3e83-485b-a5f7-19f7c58790de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9520b3-f21b-4db3-ba59-6f5043fe7326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b463d7-e7aa-486f-b76a-af17b1481ae4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366a5231-3c9a-4deb-afe1-68cd596b91f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b524d3dd-9607-451a-8b40-b812f157a7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bae52c-4536-4caf-8d1b-391273db32a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dd99a7-3b7d-45e7-bb5f-94b723935334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74def5b2-e18c-46d5-9b44-0a93873ce99c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70e712c-ca5f-42f1-948f-f65d819fb94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9b28c1-b45d-4b69-9982-28b32818f8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a62b011-9b05-4381-aa25-178e4912becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73724f33-fa94-4eb9-ba43-c6abf87bc1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0868b67b-057a-4b68-8a23-b72147ad871a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b25d2df-d305-4a61-9c77-a00a39d79935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c72121-1a3b-4f2c-b1c8-f4c0ec36579e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d453620-140f-4443-8b1d-fd435b28226c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7de37b5b-3c1c-4309-9b0a-76edca7302d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0590156e-2e06-425d-8715-3fcb9041baa3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c807188-d613-46d9-920b-8e8ad355f3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694fcbe0-3e5e-47b0-bc3d-25994dcd21cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60566f83-780e-43d3-90f4-c14e983122a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cda72e-cf2d-437b-998a-b6092512be11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3e6fc9-21df-436e-be3a-0aed1a90c28a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0b6c94-bdd1-4f53-ba52-b948320a29bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40a6e06-0c98-4e6b-8b40-42fb12128e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd8cb18-e17a-4497-b4e8-a81f6767cfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "562f52d6-f8e1-42f5-9401-294d5aefa477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29997b7c-92ff-4f4e-b6bc-c04546b750ff",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb7df41-b89f-4726-b994-e038961ce62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08edcaf4-fa4a-4991-82ac-ef1caa68c2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae06687-8376-4c61-8568-5771ceea444b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e270acf-b1f1-4696-9981-40cf27529f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b39a66-4fb2-4c4c-9d6e-cb36cef996a7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86788d9-9910-428c-bf7b-ea6052ee2e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19da0891-b4c1-4a7f-8d36-8a09319a827f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808744b7-8ea4-4510-8f1e-002ec64390f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83bcbe2-b5f3-43ae-896d-1d31404875d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74e8723-1a50-4d52-87a3-7661a9b7994a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65572de8-c1b9-492f-8e0e-74220b203463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59599b30-a6ec-409d-9706-20c6a88ef4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1d5d3f-aaf9-4409-9025-0a4e57f56903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c00a6141-6faf-4d73-a4c4-96ba2e2630cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b6590f-db78-46f2-a4eb-e0a963b411a4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615118cc-fd54-4054-93e0-63d538161d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7089c30-e5bc-4f85-a702-dba977e27718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41c496b-ef48-4e01-8907-774d03a5312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7866d50-a37d-49fb-b762-22304a0a1935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecbbe82-4da7-400f-9e4e-b6ac2138fa61",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8d5875-d969-49ce-9804-6c728823dbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf940c5-ea69-4f26-be1e-4b8709a5f9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06ddab6-de29-4a86-9604-fc3dede8c193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d323aaa-02ca-4317-9cd3-9bec24849733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c61fd61-00b5-4a2b-ab55-4eb5fd868a5d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2360053-0d16-438f-8a3d-a2a978e1b81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452a08a3-47b2-47a2-b5c2-0ee3af9d0cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dda606-6e67-4ec6-adfb-ca52f7170803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5e8072-89c7-4a91-8be8-77ce4b3d250d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282c7739-26d6-4b77-8801-a2a537854a6c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787f1c77-0510-4df3-a7f8-1870fe4e8c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb2c602-2a48-4d04-ac6c-490800fc2152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a59be2-d63d-4916-9b71-ea25b7b37b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e27a37-36f7-4d31-8489-e8b79bab9e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cf15ef-95d6-408e-9697-a26504c7e42c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0dcb69f-1379-4f17-9193-b19a9de22e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c573db7e-a9ee-422d-8b3a-f98285259fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a7bc18-9d73-4438-a079-e64e80c5b2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d471753e-8491-4435-9bb2-54e5b2580ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df926e3-dc3c-4257-8c72-28c9631c2ff0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da26af1e-5ab4-4b8e-b732-617c623d534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91eac13d-59e1-4072-9394-15cf1b202fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4dc4f6-eba0-4709-b0db-5fce8093a002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6522831-7d9d-4e01-be79-5552a23646e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6882d9e1-bad8-48df-a093-11ed25605ace",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42bbcaf-103e-4c41-8caa-c78cf935a1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577c3d63-e33c-4538-ae41-5b44635da792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298c30be-b092-4a53-acdf-2144ca923893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0de7ba19-68e1-4d0c-9201-20a6737b4e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9963f336-5520-40ca-8bc9-9641cadb2636",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602226ca-1988-4fc9-981b-0a73296b6b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cf8f34-8972-4ead-88ce-798f16ea7488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6836f493-263b-4558-8898-ddffaf694820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10405f3e-8b2c-4e87-9301-3e6e9e7cb583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6253984-b883-459a-b7ce-704c9042f206",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68914b9c-f92f-42d9-86ad-1ca24455e33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdee08ca-41cd-43eb-b98c-83758e57f9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46d4c76-3468-4cd3-94ed-3c950c39a4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e740f05e-5190-410d-866d-d207efc7f286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0f3bfc-10ac-4075-9675-77a813ceb40a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f03105-f74f-4ca3-b00c-a07212dcb8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b1bc8a-2e76-4d6a-bf67-f018bd4923b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6908c9ad-0949-46a0-8dff-59c23185a7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f331d5bd-e710-4c26-b796-077ee80b0150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ea75b-4d79-4772-a295-7048c187ccfa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30725ce-8fa5-4d9b-ac7d-089495655012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df2299f-ba74-49f8-991a-02fd4c546a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5757cfb4-69a9-49a4-b609-07cba8815c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2760f487-26b0-43e4-83ff-2c30266515ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29cf11fd-00ee-4ca1-ba43-dc4032337f24",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5796c3d-433e-46d9-a006-89f36e7a8570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f20f08-d6ee-4b34-8c04-7d27638774fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fa3790-9a24-4fa1-8e75-6d05beaf7958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac828495-c9e0-422a-bb6d-8d13457cb262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c251b02a-5c1e-41ed-ab11-be610ba04566",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01737690-a323-435d-8fd9-987213aa2797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "beb3dc64-c373-4286-a40b-18674990e2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894f5d56-b0da-4b9c-8b0d-2ae5b01b0665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb98f88-b7aa-4514-92c5-189a77fd70df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5609a05a-95ee-415b-8374-3d4937ea73db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c84ce3e9-b2ed-45ea-a16c-d4af0494a244",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4205dda-91fd-4334-ad30-a9d2ad816edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7546326c-b5ad-4789-9ee0-a4f01fd8ddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab98ba5-7af3-44b7-9cf1-b7468b3f70b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "364484af-0572-45cb-807d-26a5a808609e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "787b582f-1086-4460-987d-3fdbd810e219",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41357ffb-4b0c-47df-9d44-c5b1f5ca87da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f10cdcc3-67ab-4e80-8b80-68fa19bc55f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bcfb8db-991e-4453-be33-8aaa8a5e5ead"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "19c1329f-32b6-4193-9abe-35200c2552b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34998c7a-161d-4ec7-aa85-9e72f873768c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dc6abcdc-43d7-4dc8-ae9b-336515d2ad58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbea605e-45a8-4bb8-af2d-5d2689cdb380"
                }
              }
            ]
          },
          {
            "id": "ec264d45-3eaa-42e8-b24e-c41bafbaf2b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5052398-2fd2-4f64-90aa-f258049512cb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "77ed6ef2-891b-4b22-b2f0-8f0b20b54cfc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a99208d-a0cb-474f-b108-3fa4fc0dc29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "059df2f7-679e-4a62-b696-ce3fc29d28b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b089124f-a32c-4559-8a96-701573d37b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430ae5d4-2818-4bc2-83e8-aaa9f5dafcb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dba82378-a850-4f6a-a037-b582387c181d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55d588e6-157c-48e2-b3ea-debc7fa0254f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d03bd6f7-e683-41b2-bb4a-2c1f4759c36a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9386095-2629-4b32-9d2d-d4a24e7fe3b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e73107cf-b57f-44f0-985b-476511646569"
                    }
                  }
                ]
              },
              {
                "id": "d82ef7c5-fa20-4ae6-a135-a8eff42d2f95",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aa6ebc3-ce22-4925-bb4f-057ad3861162",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8e5ebd9-8fad-4577-bf2d-47a7d9942368"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34c4e79b-a418-4a2b-9ffc-1f8b28664c97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b10501f3-5435-4565-958d-31cdfa1d53ed"
                    }
                  }
                ]
              },
              {
                "id": "ad6be812-4b97-40c8-b8b1-9afaaf26be64",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "429d1e0d-3ef7-4300-8609-a058ce2de43a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35beeecd-f68c-4025-90f2-f19e9563a68c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40eaf0d0-823d-4761-912b-7f67f5149e55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "945b49c0-8d2e-43b0-869b-d90532581b13"
                    }
                  }
                ]
              },
              {
                "id": "813265a3-8397-42ce-9ce1-e9f2a834f4a8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc87f927-820a-441c-b90d-66d16f6282ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81cc6504-f051-4a2c-ba85-25b7a17fb00e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bea890b3-8587-48df-b598-cea7a9fd44ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b8308a47-e402-44ca-b5de-2ef64150ddb1"
                    }
                  }
                ]
              },
              {
                "id": "d888a032-11bd-44dc-a9a6-962ab46da576",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd162a49-0b10-48b1-8a50-6ffc88916949",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0250720b-3365-481d-ae2c-546b7ddb1b26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9338bf80-f9e2-41bd-9aee-b21f185919b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2b1e0ad3-3285-4a10-9064-5a8842916d8a"
                    }
                  }
                ]
              },
              {
                "id": "8b852183-f3bd-42f4-bf1c-70a7d777f4ce",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edd5adfa-89e6-4266-91c1-3d61bf59ccc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d036f23f-c749-47ae-8f68-b3bd12de5c6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5fabb3d-b572-4dc2-a7d4-446bc6edbbaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1642a70c-afa1-4f04-8b3f-1c6cef0ab1a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c871c8b-99a6-4af3-9402-f54f1913574f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03d75ca8-5113-4943-9050-dd9bccb85013"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f98856e0-6ba5-4168-90c9-9a202d10cdcb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a848cb4-86a7-419d-a70c-1817c66ae023"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "019be2ae-9b11-44fa-83aa-4663be5eb0ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e2cadd56-b9f6-4002-9a7d-1d39f258d543"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12fc374c-744d-4bc7-8fc3-b4764ca91eb7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c43f3d4-7224-40b7-842c-71de6d6c2134"
            }
          }
        ]
      },
      {
        "id": "902ec5a6-2820-405e-88d4-6b49af69c2ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0e40b985-8c71-42c9-acea-b08cfdc23eb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3aae108a-705b-46df-8d0a-6bde0567ef31",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47e55f4f-946a-44ff-b52f-e39e72bc9746",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561284ca-7e92-4401-83dd-e27ee2a29645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f488a53-186e-4b66-91e0-518ab2205f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74eb976-a15b-4780-a316-965b58ad3b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a4ed02-c10a-4d3a-a5b4-6beaf637cc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650228f3-62c3-4a9f-a155-19013fa367ac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d2caec-dd4f-42a9-b638-aee7a492cedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b4f086-53b8-40f4-8e23-ec01a68e64d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280b3135-3bee-420a-8ac4-a4eaae4a16ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9acae298-38ee-4f06-8475-459aff490413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1ce89e-d3e5-431e-b28b-fe707e1a3a21",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30b2a54-69f7-4276-a09c-86e891beb021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ba857c-82e5-46bf-b9ed-e19540eece90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae1aad2c-06ea-4f79-a5c1-b55f71c3e5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "175f561c-1557-4d7a-8c71-52454f0f918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cc41c0-7c2b-41f3-a463-641e05b93ebc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73905a01-ac59-4548-b867-bcd10bd12297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722e669e-1f20-47bf-9e76-9b8e2d987b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bd0395-8a0f-4667-93da-e6a0b626e6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a841f957-51b6-44e3-a406-314a8fafda74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176b9e75-5620-45a1-8241-f748c6250ac4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c55e34e-6f75-4be2-bdb9-742011a365df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0faab1a-50fe-42f3-94a7-778ffb6825ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5fef42-0334-4d55-8342-620459c35ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3726a5f0-5402-48dd-a738-7c3435094d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048311cf-b858-4ed3-b7ad-d0fe71b1f9e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea241295-ff06-45fc-9aec-a068b5ddbbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb394cb7-5c00-4fa6-bc2b-20d3e953f196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2890b691-5352-453d-af67-8c5973d715bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e28137-4e83-403e-a520-0a92e00b4048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047744fd-f087-4b63-8516-fee3b354176e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f21816-d047-4351-885c-c9f08b4a8388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e831d2-a4e2-4842-9dbf-daaa7ef3385d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1f7e9b-7473-4889-99f5-4f64864b66e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7ff209-9fba-459a-8ec0-61baee77971d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3730d982-2101-41e7-8c54-614498a0d9f0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc9a5da-4e83-495b-b4a5-e70e74523a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad250758-1f38-409d-93a3-b7fd01b5a44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6532cc85-90e1-49a5-b1c7-ac77238184b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abcd983e-100c-469d-8382-83c8a638e9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984a0279-7487-459f-8de6-e8e3ad9fb551",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965140c7-c641-4e27-8087-7456a8a52aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb732a4-33e1-4e03-b46a-b85f1f0b2900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6432f032-e748-4dc1-bec7-b2f3aeca8da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfe1848-656c-4c4c-a6d3-ba5e50b2948e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610af356-4204-4ca5-ac9a-4e828c121b56",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180cd017-3c75-47c3-b6be-20fb36d4cc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1fb1fb9-fb68-4d5c-995a-fdf12431230d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd92ebb-e92e-40ae-9131-b636c69047de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5db45cc8-a66d-4d2e-b84b-69d02010defc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553084b2-a6d5-478a-ba92-7835ac5199ce",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20125013-d1b9-4f6a-be5f-1c363aba17f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfd2fc4-ed87-4779-9b4f-10bbc7d8aa0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19614938-875c-4de6-bba4-ca342cb1346e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8bc17c-c609-4d4f-aa38-5ba467859c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bafb231-68c5-4d07-a6c8-86930075f2bc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf38328-8964-48ef-a019-a60de312f2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87eb3b4-b540-446b-9ebe-ba6475c31fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632dff4e-fb94-4319-943d-daf7bbe1e344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74f605ca-36b3-452d-921e-f8bcb5eb5e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc29223f-be74-4481-86b8-b23e690194a5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26ca19a-cf18-4b43-9ff1-2fd7ef542aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e280ab47-328b-4530-92ea-bdc65d811d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5905ece-c3a8-490b-94a6-a41caf447ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "645ec58b-d00e-4b3a-80d7-dec8f2a7333a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747a206c-1a5c-47d9-8854-78b2f2538806",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615e5530-bc4c-46dd-bb86-e4aafe985c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9debcb-be42-4922-85f7-de031619c8d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc4b718-ad94-4554-9147-ebb3ef84281c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8c574b-3a9c-4d05-961c-8f91fc535ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1091ece2-980a-48c7-91df-f744b30edb97",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab13d500-bc84-4c5e-9a9f-44a1398c82cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41943d4e-37dd-44d7-a880-4fe52239ffbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e598dd-59f7-477c-af1e-7c6848f8e385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c8e573-55f0-4f5b-8a72-4fab5edab611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d43de6d-aa22-4d05-909f-0d636de874e7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdb420b-23cf-4709-ae28-64e2d76bcdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562deffd-8dba-4607-99fe-7919bf99f56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89b64f2-b249-4885-9c12-70239a913fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5275105-f3a4-4581-a82f-58736343ec6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa225b3-a2c8-43cf-af2c-85df59c1d8a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6040b6a5-5e1d-41a9-b36e-c89d3a4ea12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8583c404-2555-4f1c-95e6-98b4275333b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861b52a9-56c7-4935-9962-6b58533b5c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "606d5905-69aa-4f03-9e77-62e8daed7ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873f43d9-15ed-4c3e-a972-be4f2fdf02d6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf43471-1fd4-4489-96f8-a75b6f46cae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e9d34e-1e40-49a1-b00f-475a31e305f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c84475-fed5-48ee-9476-df3cb577dc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7594d8eb-a4b7-4f45-ae62-dc14e2c995d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c107383d-cdff-42a4-9ff0-712f3b3fc50d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0c0c9a-65b0-4278-bd3c-a04e74e0f7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c6773f-76d2-4a44-8467-d2ef52301c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b38de3-dd4e-4c1a-a9e0-d7aa79ea5263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8057ce5f-55d5-4b7c-9a66-22f957ef9ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6d759a-19b6-4e83-ba4b-22886fd3a8e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af04e12-ded3-4166-bd38-af6ef43e9834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949a0a90-2b17-4614-b956-75cd28b8ab4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4797cd0a-757d-4f4f-b05a-59f66430b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7baa7c7-4927-444b-9fbe-5d69e2e5a1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fad83e-1fac-4061-a1b6-b0fd31fde510",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d434a88-dba2-4a24-950a-0325a6ce3521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1ed209-6c16-4a05-8f99-9a3659d1c8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035dc63a-0b2e-4ca2-9835-65617adf643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ad6d62-5e2f-4d56-88b3-39f3f9f0ab9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c06643a-ec01-4a02-8dd4-9999218cea7a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426c6ba3-10eb-4ad3-bc08-e897dea73b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0429e683-5035-425d-bc96-ae8b5efff1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfbbe0d-25ef-471c-bca6-484bcfc93030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "929c80e7-3c21-426c-b8cb-1741436e107b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4f266c-39af-4cd3-9228-4a2220d27b1c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641dfd19-0bd6-499b-83c1-40d31682a606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5a8671-5331-4616-a68e-a92e3ec43ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f4f5c2-b8b4-4c1f-b4bb-c995eea1670c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "523ab235-4f20-49ad-bd69-94194f3f786b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609a4304-1ea4-47dc-8c01-ebe81d48c37b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3704f103-c42b-4915-aa18-0c873ea42042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d56b4e0b-0d34-4550-ad55-49a039c250f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3150c23a-3874-42ec-b561-7acdb27c904a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bc6eab-25d5-4f9e-b80e-7a8ed535154d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4ee64c-a6a1-41b7-99ba-2739bb0c7099",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498406c5-c707-4047-be02-da13fbfec9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "573a56ef-d4a6-457a-a097-71d3ecaa6b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab18a3cd-2c46-4b95-9dd5-b15c3742254f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41ac6a91-6b4c-4933-945b-112462f2baec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc00d99-c46f-4dad-809d-621e713155d9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879267db-816a-4de5-905d-3c554088a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c4054f-3053-4ecf-8eab-7178b5a61aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a84c31-a0b2-4998-8c10-3e5e30af75a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1ee334-b50f-440e-bffd-3503a704a6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df05277a-1dad-483f-9351-b7bcf231832f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fca87f-35ed-4911-9050-5e684da6ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21124eb5-453d-4df3-864e-41d10f7a6263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccf1625-fc3c-4c10-8bd3-eaf8ef7b8de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48cf0c11-a169-4ddd-8aeb-236af1cc567d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911e84b3-a631-4453-8f95-65b5c25f09fd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e72b72-99da-4725-b027-5938cd47b574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cd425d-fc7e-4282-8079-eb218a50654c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ede41c-10ea-451d-9834-0ea4ede7b0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb13f711-3e96-4c5f-86a3-061d38e250c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f605dd5b-1a63-42d6-8b12-ffdc2b25f91e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2493968f-b34a-4b64-b0ec-4de1c0af1f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c25ee3e-17c4-4c76-9e2e-49298713542b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939a4952-a30a-4da2-8398-7d6999d6cd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca48f9b5-57da-451a-880c-2e01a111f683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c9d8e3-a950-4136-9f41-8b2e409bab60",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675d413f-b5a5-473a-bd7e-bf59dd460b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532b9704-65ad-47ce-987d-e259b83706ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da3ce6f-b325-47ee-a656-8878ccae62a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6cd34f-2a26-43a7-acf3-281d27f05ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe61532-f046-4ab7-aa74-2877e09dc5bf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff813be6-2807-481e-a92f-022b75f8c131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5757437-c8a0-4e1e-b41b-f5be96281159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd63fd5-9b9e-4ef6-a654-1f5f6d3c246e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0c7ac2-35c4-4626-b26b-5271a7cda0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e984264-f535-4513-a645-fa35a4b17699",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5446f2bb-4fec-490b-8e1b-d8f819c38d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fd5dd9-f2fb-4bdf-8cee-4b561b6dc9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9d9017-7e30-42d2-a1d0-9ef86e6902e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d666c28-91e8-44cb-96f6-49c4278c9160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281c933a-db5e-4b66-a85e-2289198a2a8c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5b9be0-ce89-4d3a-ba11-701e28647d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca54711-a7f2-416a-9fa3-d2846aa23298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa1a1a4-524e-407c-b8bf-3492e85503d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b441fe9-4ec3-44dd-bcc1-03b1a02eeaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c5e4bd-0ca4-4c09-be56-dace4e229ccb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad9a5d5-9b18-4e36-be42-452a2373aae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2522c615-5538-4ba0-ba61-c18987136a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca72674-5bee-40d0-ba7b-06e6f4176d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39d76861-8312-4ff9-885b-c952e150dfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9313956-dec3-4fec-8126-4ce2389d9220",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ea0942-dbef-43f5-bc0f-ead6562cbda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a524fd6e-1cad-4067-8600-f0799e598b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c7e578-01bf-422b-b1dd-6670ccbbedc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc85c9e-b2b3-4231-943b-1df9da3dfeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2030ea2d-5b09-4a58-8dc6-318ad56bce87",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92eee55-8c9a-44b1-aaba-185bd36f781e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf06c84-f42c-4870-ab43-d5726ef48f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d85e60-7c1e-405f-bd66-0f2db63bce1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fad7e7b-c01e-4b38-8f86-62797675bd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed9afd5-6924-4db2-8387-a23a4af2c738",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e1b90f-0d3d-4f89-93e4-5d470e290136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea1de99-5291-4004-b312-7c84a7ed5180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c63e90-39e1-4389-a8b8-112569dc1bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4b653f-be8c-4086-9385-c55da88295c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e5dc7fa-220e-405b-b55c-e9e9150fc442",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e63f9f71-8d6e-4ab5-8905-c7ae594bd313",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2744eb8c-9dfd-498d-81a9-a7bc8f99a4a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d36a1274-c4c3-4493-9f01-83f2e5cc4eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5168a7d2-9434-4e3c-b2da-5f6dc63521f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72c3ad0b-28c8-42cb-b1df-95f3a7641a66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec7f4f14-0c59-4072-bfe5-c86dceef9542",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2cca253-9482-4101-ac93-03b8bbb97ad6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e17ad885-3aef-4146-be0d-3367c04cce11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39d43083-ed45-4397-ad24-c067c43f8ba2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08c52c86-6ac2-4cc8-b81c-cf4787ef3548",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "85418a71-e469-43c1-9a03-db86248a1243"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1625bde5-e723-4028-a744-a4ea5f3c235b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a78e098-29cb-4645-b3b2-c0cd56f684f4"
            }
          }
        ]
      },
      {
        "id": "1b29ab3f-7a83-4269-bb08-0860e673c32b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "33b4ab06-c71f-4278-98d2-6fa0782fca6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f768bbdb-b35c-46e3-a60a-4556508e8c72",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13c4d0f9-fefb-4205-8ca4-f71e32eca24b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341ae23a-38f1-4418-bd77-de925c6bf43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5b7538-5088-41ac-9144-e9ef3722b760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b52ec2-dea2-4c0f-a1db-bf41f55470b9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a70423-5bc3-47ad-b5bc-721940bd1a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911b6dd8-cce1-4523-ad6a-b1f2aceb9167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b834ff7-15c1-4292-a77a-9c0829fc3bb4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcc44eb-f884-4b6f-a243-eac786ac4b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2be2621-62ae-45b1-8f80-297dadfe10ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4c0751-3bd6-42dd-8ed2-f2439437444d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67db8236-8e77-4b16-89e6-8d8b39952786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34040f08-07dc-4736-bf51-67046dec4ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3787b188-2516-413f-b3c0-973c517c093b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a257ea-e5d9-47c3-b79b-9f3428278f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c781d09c-2806-4ea2-a980-ac8c5dfdab2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6248552-0766-4573-a753-0f3ce7a75981",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3c1c87-fcbd-4c4e-af1e-ef5e855e1f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4c73c6-30f5-4f54-9084-839572e8fed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8a7be2-52c2-45ab-ae22-8ade3edde0f2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ad5701-4f43-4ad6-9313-60e993b610b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93150e32-8149-4299-a1e5-9513b9858fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7108b500-90a0-45c9-86be-f596533bfb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55166e0-4fc2-4410-940d-627df27f894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a2cd5-88da-4522-807a-07fe30aa95ad",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fe52c0-6d24-45ca-b57c-cc3684d610fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed9f3fa4-3d06-433e-9e3d-300e2a6a1fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32e1d07-e3bc-44ad-93bc-ba3697f603a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba05a52-9fac-40a0-a624-bc0ebb841518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434fde84-7709-40fa-82cf-b6e6755a0435",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb6c61-890d-416a-b298-f0c282dd7ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c54956-2366-4d87-bee3-0d0ef481dd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9b6a5b-8b10-4e7b-ace2-b246d946f206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c76f95e-a8ae-4a7b-a41a-7d3a5460b0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7fa00d-d753-401c-8aca-240982507fc6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ff7b6a-fcc4-426f-ab3d-62be87b9c463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b394743e-60ec-4eb7-9a9c-c3c1146a103e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2849d73-535f-4daf-a41c-a70281fe6ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da31666f-fba9-4cae-9d09-efa0d2011220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c40b04d-53e9-42a9-9bf3-fa484f0f90b6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340c4b0e-1974-40be-a4bd-3b7059c5447b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2232565-c52a-4886-ac30-ac292aaa8a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f82fae-d04e-4830-a088-5cc02ee921e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73331a4-61a3-4d70-91ca-d5e157859a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b8317e-3bd2-40ad-8197-7ddc6cd2d369",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4573146a-9cd5-458b-9489-98fcaac5f98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ce2f4d-258e-46cb-9360-45609c3ea514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bf6b54-7830-4edc-b9e2-0fdb01a25421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a82f67-6cc2-4d0d-9177-8402ab4f30f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d78e3c2-0e0b-4cd5-8d95-b722597be842",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a239ef-3ef6-400a-a5c8-072a541752a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bb7e384-ebd1-4a2e-b750-a56424cd01eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a428d61c-b9e0-4d50-8185-e9b0db5c47b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41099957-d837-4b88-937b-a210f61a59ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c218bc25-c9af-436a-8660-1b2a0efd9522",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746bd719-b4cf-4931-9fba-c990c462a522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e12ab59d-1cf0-4659-8650-104f7c4a21ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1120c6a-aa2e-43ce-9045-f0c0c53113ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a08e533-2498-45e4-966a-43c17e2e5917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a37f469-f021-4088-888a-ea37c042a7b1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7f7815-ce0f-45f5-8d87-4df652500cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1229d9cc-8ea2-44d1-a749-f83e273bede7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23181c93-8557-4e12-89ed-97251e9895c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c1d6d55-08aa-41d9-a74d-80a720621972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e672c34-d6dc-4aae-b207-52887daf6192",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a872cc-1154-4a65-af2c-4317e126534d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d59685a-a882-4b00-ab30-d6a0a19a159b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b7768d-9570-4c14-bf98-5d741edfda63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639769e3-2d29-4c84-81b6-68f8e14604ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384551b5-2fe4-4b98-9e10-b223ee869ea6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d26b80-1427-4cfe-a3ad-4d03e32aa461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9388a5e-1d8e-4a18-987a-1c9f3fc9a33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfeee8bf-70c4-4031-b824-07b25fa88f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1569a852-5f62-4578-b592-709c1901ddd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519c5328-9f99-4531-b617-5bd7c1bcb47a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d4bc79-c632-486a-9070-d90a015ebdb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cdea06-34e1-4303-a4e9-bd7b52815c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5822358d-6802-48a5-a14f-7e8bd4e30106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a0def1-431f-4b62-9c18-2815f49f9f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eedab11-8ba7-4c39-8ef4-49ca63bf96af",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30675c62-c01c-49d9-b1f7-3ed53211b2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4604af08-6013-41f6-bcd8-fa75f36670fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2575b3c-598f-403d-8630-d2e265581d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fbddd0-84b6-4c92-97c7-d371f8315898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95fa011-50aa-4984-94f4-f7d23fcb339a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573ac168-c3ff-4553-83c7-1e79aefd0319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa373d1-ffa2-46a0-8779-3a81e12a7c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aaff3b-45c4-4ea9-9435-99bc1765f836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726c29b4-8f4c-4d75-a6be-3c7fc4c473dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33b95e9-4add-4748-b012-a123fc0f502b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57debba9-1b9d-4c07-b52e-cd1de9757f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6255fe-cf9a-4503-bfd0-338a6250ea8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905c24d1-7968-4e8b-8dc6-4186a80b18d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65794a9-cd91-4973-b972-e1a9218690ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de875463-28b3-4335-b7b6-681cd579302c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2e29f5-bb96-4977-a047-251d1fbf0465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89345a4c-c2ec-46b7-b06c-9408ca9e1314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f0712a-583c-42b0-8b21-b534a167d5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4077bfa1-3c73-4959-af33-f3bffc15b20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5448a6-85ac-4291-a298-d982be2a8d09",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ccd0ac-27bd-4d69-94de-12895db1489e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b698be-2fb8-4573-a243-6003b598def6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c95667-34f7-4ab1-83be-d5f9e5c41ac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f196b4-d46d-4685-a4ac-6c77a3f8f940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9906e3d-e115-4419-8880-4557c57c2550",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09627d41-767b-4bcf-b132-d1dda6736766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b634203-c3d9-46b1-808b-25e99f5f2dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8e9f35-c77a-4e60-87cb-1e872ecfb1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f546d39-a9e0-4926-a14f-d7dcec6fc560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d40eef0-a1b8-49c6-b1ff-43d2d1329bed",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d02e07a-d647-470c-83f9-54cb2bb9ef47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984667f5-223d-467d-9ba0-efafd3b0d6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6563ac8c-5b49-4200-bf97-feba31b2fa91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3d544e-8dbb-4bcd-b47c-25ac953a96da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfa899d-c3a2-43f4-9c2e-810c9af30bc3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6910762-b5d2-4711-835f-3487927595d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb0d713-59f4-41de-a5a1-f72f66cd6e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5ed810-dd2c-44f6-9d7d-5019b3ffd0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e877bad-920e-4bf5-9d6b-1aa319c5889e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3ef318-2bac-494a-b8f8-264d9508a634",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b32d1d1-a27f-4435-a63f-bcd3b8fa70b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a003440-70e9-4b94-bcea-53c8249352c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48095215-4bb5-4423-bac2-a2c335fe4a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533330ef-9acf-4c62-8a01-8e3c85a10693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550e9268-efae-4d9a-82a5-1f54ab62a868",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c9e4d4-95c6-4f20-8585-48cee34f9323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbec383-fdc5-45c6-a4e8-28898d8c59dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3691a1-e1bf-4f1d-ac00-3a288a88d493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab6ae3c-2a76-4a72-8281-b9872c8dac6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7161021a-13ee-4b0c-bbb3-38ec670b4945",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c73c03-6470-4732-b61e-c3e08c9810ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ee7304-1f96-4504-9b22-a641799f8d45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee5f734-1dc9-45d7-8c9a-1448f64a42ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f243b50e-3aac-436e-90ba-7b32cb5b3a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60fcffe-fcea-443e-859e-bb943aa2261b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d7e152-5f40-4fa0-a761-5b2ee72a3055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d237ab-7128-4460-9beb-a2f953e90b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc082521-835e-424e-b8ac-76ac918e4bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f64db1-8473-4742-9095-a822f61d642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9b10dd-3ded-4b34-aa7f-3ac49fb207dd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29cb8bb-e9e5-445d-99e9-0c1ff01fa746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e828256-4ca2-46a4-aa7c-3be83404e30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf673df7-c986-4793-9608-9eeda3f1f3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298a6af1-c823-4347-8888-268a4a195c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19112c8f-e20d-42c7-b552-7ac5b3799509",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b18437-1a0c-48d8-aa1d-eacd59e3bc49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34757bb-10e6-4c09-80e6-545b8bb4bb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e19129-b3bf-4815-a5c9-f0af76929696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caaee306-4177-4853-997d-5ea3b9915a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0843ad-c925-4e17-8913-a331681c6a5b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af368969-6f37-44c3-a407-e3a02c93e634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b62d0d-e09b-489a-810f-d079083e3e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53310605-8b84-4d57-a36a-5a5aea2ff212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bcd9ad-7291-471a-b13d-9d0b2c74e041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ca10d2-f1d5-453f-968d-4b26cd19bc27",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf80359-5ef3-4b3a-828e-6c49ca5c35d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c8cbe0-a088-4c1a-8496-693cee910822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de675fc6-f63b-40be-89d3-14b80c9c9f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50020ac-7ad0-4bec-9cdf-a21f17bb7575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905e9c9f-0310-41c6-a16e-a92b316a7107",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fdd70d-134d-47bb-8e93-2c932b78f28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfe1376-b490-4465-b505-4e960a838869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc7158b-e514-43ca-9b37-a347881bf927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec06ae4-bf2e-484d-a09f-400dd9570c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7325643a-4ee1-40ac-9591-510392f51995",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71187d7-3db3-42d7-b61b-c4e237b7863e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64963dbd-705d-42f9-a03b-23804cde6ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236c4da7-1b29-4fe0-89ee-0c51d428d000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16145d78-9f21-4e24-a0d4-9a0c3e1139ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698e0094-39e2-4e4d-9ded-1ac8b6ec51da",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11b7fb0-fab1-4f3b-a3c0-09d496cb8991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4826a211-8246-430f-94b0-537b60a8342e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6a488c-d625-4200-9fa2-c59ab70702e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169ce5d8-4d6e-4c5d-b46c-ceba4ba57462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e53b33-05d6-4f3f-b42d-bd32ba9133cf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea02c62-ae48-490b-a4ef-e2564750aa9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac22611a-b0d3-4f3e-b170-96057a7935a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b10206-0bed-4155-aa00-69b774edc949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fde3ac4-0920-4eaf-ad9c-980797986302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55692c43-6897-402b-8e89-05735918c9fe",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3a7a68-358a-46ce-adcf-71109565ce20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f52bc0-2b6e-4b3e-a175-c1d50b772487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4abe59-4a95-47d1-941f-091f1b80fc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a085e2-4178-46e5-8113-ed8aa3947a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738cb7fb-6e90-4b61-bb1d-9a77a84851f0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98813ce-b23f-476f-bd3f-bb1fd6a296d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2773bb-dbdd-4d48-8915-3be03e2adeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef7a15e-cb41-440f-abfd-432995c55cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b396d54-ffc2-411a-990d-0bd07a6edd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fb0398-5ec5-4ae4-b1d5-adbb52c70b18",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4559f2a6-787b-457b-9c05-5afb19374af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ec958e-3f2f-4f17-8de0-425100a47a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5874cb2e-0ff8-40e7-ba5a-6125178a628b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0370df3-f752-4fab-bcc5-5c4b4098ce65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec805f0-ca55-42f9-abb1-e60ae67d241e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed8529d-0f18-4121-a07a-34495fd2fbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a8812b-5384-4993-aff0-91eb769ec635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f808502-2b76-4d37-92a4-fde9637ada50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ec1718-10e1-4ab4-bd2d-49007aa2a754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faf4f60-adba-4730-a554-5d2e5ff91712",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e807dfe-1f29-4a12-a40d-eb7fc77cd9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40005ed4-dd5e-432e-baf9-6844b87a2814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba3472e-7b7d-4729-96c7-dea0884feeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ac2a31-2455-4af2-95db-236d816ffce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c7cb4c-0354-4160-ade2-d907601f98cc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cb314d-1a8b-4517-accf-37320e1e8287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6537f49d-04d6-4ff2-b324-6659f4abec07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b44ec47-6fbf-4f23-84ad-fefa6867960e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54d798d-4ad6-42ed-9666-c239f609f6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebddcad1-bcec-45bd-8b75-1bb50a85c7ac",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b995a598-0a06-422f-ae52-5ca5631afceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6ef49c-7d95-4edb-b8b4-88a516e9b1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7733f277-5309-40c7-9d0b-a96e204372c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfbc2f78-1729-4d3e-b6d2-12c2fd29fa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38af3ce-d294-48e3-9b8b-9cef6c915a80",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c50abe-1f12-4027-b360-8a79bea826f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e161ae-e2f8-4cea-abab-5f4a4e88810e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc6f67e-d57c-494f-a809-28ef912d256c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cd9ed8-ef41-4922-be33-f01e641153cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0d3b13-8b4b-4b2c-aa45-8911cb49c99c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b101feef-fb31-48a9-8b74-db8b27370a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f798031a-42ec-4faf-ae42-9b09c4a19621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f49c0e-fff0-42d6-808f-3ddff2beb750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f08eeb7-41b2-4b90-9552-461dea00c7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fc9c61-e41c-4c20-95fd-aeef52d29c9b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8171826f-2ae4-4355-8b3e-7261ce1fbc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e8209a-b573-4c85-9530-4277921efb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a74cb8-5203-4501-909a-cc2b7675c5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97af7712-a6b3-4289-a769-0c4d98df9e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e127f251-c96f-4ad2-83b4-e13ef7f167fd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fed3da0-f50d-46fc-9da8-d4eb0e325e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecdb795-5e7a-46d9-9f54-5e124383dbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53545e9d-d6ff-4544-bc3c-32135d663a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c1845b-55f3-4f95-8252-14c30a8d966f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0519868b-fc23-491d-aec2-b3ab17d86b49",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96f543d-18b0-4433-acc8-40fd606b2e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e092d53-a94c-460c-9cf7-596051556fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d04c0b-ced1-4c7d-b0fe-30e5f08b09e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d60e887-d022-44d8-8a15-d4324a015f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7debf5fc-7f6a-4131-ab24-0aebd9de8918",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf478c30-c5f1-4c5f-9235-408b0f0371be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dff346c-a5a1-4b41-8fac-4dc83047be9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d40a34-978a-4bb0-a526-7d877515e42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474ab2fa-2d04-409c-82f0-533c034dcb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073ff180-6992-454a-8b3b-30e34060c218",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39d4e58-b685-4d72-a3b4-1ad26022c0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0338edb9-2949-4682-a8f0-535e69483ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdebc15-a176-4c86-9b8d-867aed52da62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c3cf02-5f4e-41d7-98cc-73f603dd1321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76d2a56-286e-447f-91d7-64a4e0a317f8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a844a9-ebad-406a-9387-750dea98d232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d92b44b-0615-4c7c-8b29-08efbe42d297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d04f673-2402-4fa9-9459-fde055727bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf91f863-d6b7-448b-8e17-a81cabb4c46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e171532f-cc43-4e1f-82cd-3e4789f68b76",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a6f516-e443-45a6-80f6-b95c4bf1d9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663a4a63-7401-4cb2-bd55-d6ad98a5d466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4eed348-b257-40c9-9282-613b9237a63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d68df9b-da24-4826-8c99-ed4fb8c5397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04f1cfe-02b2-4b59-ad22-f245bda397cb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1f9f4c-b835-45d2-a597-0bfcced644b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf00d12-d00c-4e0d-bed5-90eb19e56bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4397b79-a72e-477c-9bba-5e87ec2e3f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1c5572-d7d2-463e-83e6-1f8fe1585f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cec7f9-264b-45f9-b7a5-18f162a21426",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8e04da-283f-4805-b036-b605927916a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a476862e-d092-4702-a186-26c1323ea915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97568bcf-1ca5-439a-9236-f1606c395d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea98b783-880f-40b0-ad34-3aae4d5323ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee421ed4-773d-4c31-bc4a-65f02594f4f2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a6a256-25a4-49dd-81b7-4aa37c687988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a192b60e-8c3d-46c7-b8e6-2991e729a25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880e40ed-42e6-42c9-a18d-c087a30116c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f100ec5-9141-42d7-8ccd-075b97f8d94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b968b5-05e8-4141-be61-f29a38003dc2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82d1aa3-4439-4c37-8327-6b9c9baf0c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641cf961-bee4-4fe2-a348-96b1b87fdd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e512826-e4c9-422d-967a-5f61db46674e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3682fe34-350b-4191-886e-ca8ff2c0f0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b769d2e-2539-4d6a-ba7f-d1c7f326e1b8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53e3a5e-92f4-4739-9087-5f19d0b55328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085c0a2f-5151-4d2a-bf59-4ba1db1c363c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bc4c15-f672-4185-9190-97ec238b7794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac73575f-f69e-4af7-b49f-e2fe73769755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbbfc88-e5af-460a-b997-d643cb72eb40",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a505896f-219e-4853-93f7-eb9a05431cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9964fd39-6f44-40a1-9c11-3cc3702515e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3925aa5-1bb1-48c7-a6b0-43119b2501ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f95a455-05b1-4001-95e0-a98be0ee7b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef23d197-f6b4-40f3-a51a-2b8ad7ec068b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f4b986-be0e-4d3f-938d-d71a881b3bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce5a573-81c8-451c-8860-fbdbbafbb775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b03ce3b-eca5-4850-8929-b42e87e4d1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6859fc7-a4a4-46ed-b2fc-54e7b78cca6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835c5187-7e9a-4dd3-8c39-7f2725dd5d73",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d329cc9-3c0e-489c-9b62-29b4173239dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c93f3f-b62b-4eac-be76-6564aa5484ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9880c64-4246-45d8-bb04-9103760f435c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d4d263-a636-4920-bba5-49991c718c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d517c7a-705a-4b42-b9ef-dfcc0c744a0c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57000788-6a5d-41e5-897c-1da95e4238d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbba1f02-eb66-424d-851b-1ff565407c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5ccb44-665b-417b-9443-9ab1f400dc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d751d8ff-7591-4c63-a53e-5e5a619b90de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbbcd8b-6c8c-4538-9347-7dc02f763672",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc7586b-489c-4746-b632-f85a306168cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "452b37d8-9e9a-453b-81b2-5de9017b97a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cc1f84-5a46-49e4-b21c-9591c47642dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56fef2a-1732-4873-93a6-b7b3a4c6abad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7711af0-c10c-4187-b60d-7d34f8f94505",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1eafefa-2704-47d4-8755-a67881d6457c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a47d7365-d715-4df1-85dc-57f580236075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44605b83-8763-4066-8f7a-ff0d48814740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3837b68a-5948-43bb-a9cd-09ef8ec4d80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a18902-25d0-4e94-a16f-e3d963428106",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bd9c46-18cb-46fa-a54d-6b8e4478cf15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ffa28e2-1de4-4dba-bd4c-ed9b1c87a2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "819f7716-9f9e-4027-80e3-432464f7024e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317f8b73-ff32-4f59-a3c6-0b7c27c118c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfbd1d3-c4c7-4918-b184-1667410d8f74",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc9dc28-55df-482d-a9b8-a4eb44b2f572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974d4b86-eccc-44a9-86bb-20fc6731289c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ceef03-3728-466b-b05c-999aced86a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5f9628-d200-428e-a3fc-a4390c319847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b057dab1-cb6f-43aa-b2e5-33ff74e7015f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4234539e-433d-4d15-81ec-98aae49e717e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4707c4da-0c00-489b-a585-e39dce97647f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80572ee0-18ac-4578-9f65-a2b9f13c8a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5f9253-ed10-4abd-813e-9147b5c1632b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12416d13-2cb6-48a3-b065-f58af05091c7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9438cbe6-3254-4f83-b80f-907e8d5658a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3528d053-9df0-462f-8ab5-0f5eaef3d88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ed5438-1d02-4399-af10-887b9315542e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98851ef3-90c4-431c-81ff-159a95e21c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65aae25-c852-4ee7-8a9c-fe2ace4af269",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e721e0eb-d2b2-43ef-abc7-a3d0c25e4bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7247a25-1225-4418-b698-03d3d9100a2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46214eb-3950-47ff-b8be-5b137bc8e7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2557c797-967a-451d-a086-2e78625e4967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f5d3ba-b193-4ac0-8873-54ba75ac2a79",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b76aed-250d-48d8-911c-9c3bdebbd622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecca7e9f-69d3-4f14-a371-b9b43061f43c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40359372-4b7f-4a1d-9740-7bcbce9b3fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28e30a6-ee25-43f8-8e10-6f786a744027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a2d3f4-a2f1-490e-bbdc-b1da0c6b37a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc405abd-5b02-47ad-b675-22a62f5a4690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1d41ec-e775-4a2d-9147-14cffef15d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906c62fc-b12a-4d66-8372-dc7d2be48948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e256e223-876b-44f3-9e57-1456c87b051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613d29b2-6931-4670-a921-5f5b3e7b4689",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34526550-b24b-422e-84d0-50a473fa8982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c9348f-d6d0-438f-a5d5-330fb5d0c394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c214f05-f54f-4e52-92ea-37c962b33f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500a08c9-07d2-4fef-87a6-e7ee49db52c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84436c36-12ad-4ac2-b66c-88aefd289382",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3b3a2c-0218-465e-9860-00cd9ea1d037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534027cd-3ddc-4b21-8b1e-09ee11f0078d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0de9cc2-6309-4a2c-9adb-5696a2966cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa96477f-dc94-4bf6-8e4f-bb25bec59d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c33aab4-86be-4305-9794-9cce19457176",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8e585d-f8ab-4451-81c3-b7fdf1001f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44940edb-3ced-4b68-8df6-90dd43e78e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee8a16a-b98f-436c-9106-3a164129085d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fa9fe0-e7cb-46c4-88ce-d84c96cb0140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6253ece9-ac7a-40e8-8a48-c25d9c9130e3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ddde2e-2034-4a9c-adfa-159add232a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc4cc405-543f-4e69-b937-1f7dc8ad20ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1380f68-21ef-4cc9-bfb8-0b029a0284d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40701bde-fab8-40e5-834f-02f6d597f689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fc03ff-3225-4a21-b0ca-4dcacbbf3fa3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b59760-d738-42f8-92c4-e186fe51e0f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a09695d-e7b3-46f3-acc7-1a05e25e1edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced48be6-d97c-4211-9aa1-424a32ae0bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54e2d04-fb41-415e-b391-3b7725d19122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1ce298-c535-47d0-a80b-32f5ad9b4fad",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cb81b0-969f-4495-b981-4bd9cab08cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7080ab4d-6aba-4b06-b7a0-1249c2b82f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1253cb-6987-4fa1-832c-f4fa49446f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bb63e4-af02-4cc3-879d-6c32cbb87d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059ea443-4f81-4b2c-ab9f-77d701f923d2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8085d8e6-c545-4969-aa89-36d757d4a2db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac10958-dbd6-4f11-8218-fea1c3699f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9215eaf6-d246-4099-8c2d-52e370a704a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5c8113-3243-4181-963d-4f5426a38e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413291a3-5e55-4907-8e3a-46640be965d6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ae70c2-dd90-48e9-80da-83ebcda5c352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fecb1883-f8b5-490c-9eff-e0cd538908d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acdfeb3-e658-4d68-bf93-da5433d50b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1232fe2-a607-4dd9-8e83-aa08f00cd596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8317e36-2d14-41f6-bd6c-a1333c5a4c6e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ddb4b0-992f-4ad1-9bd8-a5ad5ea4b69d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473ace30-4805-4ee5-8907-67c6a8404674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7a0394-a456-43de-8349-4427cd80ace8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3aac35-c46c-4249-9c94-9445995ce446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb69469-c71d-4347-ae5a-4d75f0e6293d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8d0095-fe0c-47a0-b5f4-3e5b0bb0bc6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a51bd9e-4694-4436-bb22-013a1eb71d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44f0713-f904-42ad-a7cc-3b4f31b7838d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f6a7ba-6c4b-4561-82f3-301fe549a98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4827d7f-b5e1-4e69-afcf-a44879bb1e6f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c5d4a9-45d1-4b10-aef8-b7c06a10b802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90db24fb-42d9-4f6b-a6ec-2b7458144f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8478512b-8f65-4e37-9c89-05219720e325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7c49c0-8d81-42c1-a503-47068100146f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ecfbe1-5b5e-4c6a-be40-4175d3ac4435",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1e4861-fc4d-492c-a515-9a112f0efe41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2061a43b-f46e-4113-b81d-9d55bf155527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e339f229-23aa-4eec-8127-11d6545b4529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d233152-5941-4007-bccc-946a499b5034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8f013a-45f0-4ed7-849f-faa93ae88d88",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4c77c1-99ef-43c0-904e-6749d2fe4cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b0acca-25cc-458c-9d2b-85a53d0cfb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bc2761-26e9-4c22-a3a7-e286e9cd7508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1509a9a7-d3f4-4bdf-9da1-ee0f4fd222d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77ebd1c-ad1c-4403-9097-818126a427f5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0421af-62dc-40ce-bb24-d62cb124f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e7ff4c-bb28-4864-8b7d-1a49def17beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1447f7-32a4-43dd-bdaa-f184321502a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f455dc5-b725-46b0-92e9-3b9cd5899403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4bfbd5-846a-45d8-833a-253238fabf51",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34790c2-28d8-4784-8fee-9601c4c27097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c385541d-1fab-41dd-b475-a2dd643385a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5b97da-f03a-4a43-9dc2-1c30cf5d5f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b36f828-d1d9-4230-8ff7-cfcdfd3d6e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f05d5e-ff42-4763-963d-df255c5d23f1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050e1b24-cc5d-4139-9c3a-4923439e9391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93bf76c-8761-45f0-b402-83f408c254fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e12357-e32e-4f58-9484-752b2e6d3f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e047a7f-c916-4e31-b782-c680360cd214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df960a80-cebf-480c-aeba-b35e484a9ec9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e31a40-5a73-449c-8744-7b2293dc2de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9144a91a-f14e-4f6b-a100-c5d507eee869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3895ad62-4c75-4709-94ad-513a3a889fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9adda2-15cf-4eb4-9953-2bc8b93de98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef827ef3-a667-4ae1-bea8-d913044a49fd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54107fb-2540-48a0-bf74-707eade2f2ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a09ba7-a058-486c-8d42-904fb41180ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75cfa3fe-3d62-4c0f-b4ef-dd212f0b28b7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197a3349-0fb3-4b8b-a574-aa2d3e3a47a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48781382-e1d2-4419-b3bf-81bc04e15471",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc0cdc-82c7-4b74-bbd5-c68d767a52ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c38b32d-e513-45ea-a1ba-d15ee9d59b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62acaa09-cd47-48e4-b424-b4c723f5df3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a91d2d-75d6-4c80-b93f-ff16c9c13e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3317615-63c3-4a1a-a199-dd83ab0d257a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65aea8fe-d9f0-4724-90e4-856f6fe1a180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "585f578e-487c-4647-a17e-2e85af892cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9588afb9-f9a2-4ccf-9a76-2f2e54fbc371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e4f4fd-91d6-48d8-8914-c9d66200f97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc23e93-238c-43c9-a291-c3a34243d032",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50170415-32ae-4e10-a6ee-6e400cff5a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "121dd77b-165b-49fc-a397-82eff5012140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab25c37-0b2d-4de0-b8b4-352bfb96d0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fdab05-fa07-4200-9290-a1b05b80d848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97f4b0f-8038-48c9-becd-f0eca56026c7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13352a1a-b370-47a9-bb04-e81dcab3cfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0eaa059-b04a-49ed-b4fd-252b28d5e685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a57b17f-898d-49b9-93b8-fcfc4bb6428a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea1fb68-e2bf-458b-a577-ef4cfe18519d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ce1691-0fe9-4b42-aa24-c10ab29c5eec",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff11a8a-ca39-4e59-b055-9b3dd4e46d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc84a46-7b31-4943-874d-59bca7d03d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab3a6cb-c948-44fa-8077-ffc9b8cb5de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fa7217-8214-4de5-8a84-3ec741796353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1535b9d-8dab-4b7e-b85d-1ced072ca97b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0779207-12c0-4e01-b484-388420b79d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03cb90b4-2ad1-4dd0-8381-f108f03fbfcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c6c4c4-4264-43c4-9041-8fb6e3afd19f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4c2caa-783a-45ef-957a-387357ca59c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa166cf-3657-4ec9-a3ef-f4974f5bb318",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160beb86-fd06-4948-8a30-b2ccc0a4f7a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8bc7311-bcb7-4162-a548-5edba18b5272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d594cc7d-e86e-4cb0-81b9-e7143d25b751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40cd754-93cd-4236-9b15-fe6c156472c7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2cca80f-5790-418f-958e-0028ac0ce5f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b909b9c4-235b-4535-bffe-666f2fbb59b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "453a433e-413a-4f25-9150-b99fc413f640",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bef4c3ca-2885-4383-bf54-55cd93f8a2d9"
                    }
                  }
                ]
              },
              {
                "id": "3ce4a2c0-c363-4a72-bc25-a59fb3fa6498",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7d25191-e697-4445-821a-4d2955eea1ee",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b22b61-4c0b-4b10-8396-b9831a612a10",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "04f062a0-6629-4d4c-9bb4-c321ddffc616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0b95e0-f1cb-4098-b29f-855c8154a8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a85cdd3b-5507-4954-a981-97b16366ad27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d752c128-55e3-4aa6-9936-0748540cfb77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "800eb1a8-dc89-4e69-bf06-2c756db053b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "354832c1-c795-48d2-ab91-a947af6336d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ea4c500-c6f3-410f-98c6-5ce36b4ece36"
                    }
                  }
                ]
              },
              {
                "id": "0e9f5782-a411-4911-92ce-0087f7865c81",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da076cfe-5ef9-4d95-9f2f-141f519da242",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8cbc73-63a4-4ad2-af98-2c8972db7f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "98b1dafd-c0ab-43be-a101-e7a520e1df93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ce63bc-fd08-4e5e-809d-89c80b5b4bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3277f8-d9c9-4524-b629-ba1c07676588"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fa5f938f-1b7e-46a2-b548-d6840b0f1935",
            "name": "Positive Testing",
            "item": [
              {
                "id": "47b638f4-f517-4d43-ac68-b7024865f9ab",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb554ef3-af2a-4179-ab6d-02154b77ed0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4a944909-ff0d-46a5-b074-6f65a9f9e1b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "197c6ed1-bdc3-43d4-a37e-85e0d6f8a602",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e80cb008-10eb-4c01-bc15-ad9ab9c1e9d7"
                    }
                  }
                ]
              },
              {
                "id": "a2c9ff98-ed46-4c88-bad3-8432121f07ec",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5e97219-2431-4302-8b52-31e08a75938e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "73aca4eb-b821-43fa-8ba8-d07e9205bbd8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95bc0950-8e21-4814-ad2f-5ed3d10e8f50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "723dcfdb-62b7-4edf-a40b-0f3242a8ae43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "241c2d70-6bcb-4cf2-861a-e236324002b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bf3bdbd8-6201-46ab-93bc-a26cb68eed92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4d64f65-b8fc-4e74-9c31-bfeba0149b15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99032cdc-e3e4-4653-b16d-c892033f4a4b"
            }
          }
        ]
      },
      {
        "id": "91ffa9fd-764d-4ede-a8f1-82cdcafd5ebd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c21fe962-450f-4578-90fe-3e3435d37740",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2e98923-9772-44e4-a2b5-484fcaaf245a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6af7ba3-9b24-4a87-80bc-3ecbda2048c4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d978b5-3040-4a23-aa62-8dea4165b72c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02e420a7-9e7e-4370-905a-ebb0eca3a1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3387b653-fb1e-4012-995e-7072bdda36b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea46273b-f585-498c-a250-06ab8a2872cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66544bfb-be27-4598-b5a5-4d09c63b7c54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88122d93-bd10-42a8-a7bb-092cdb1e436d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b80a6957-5dcd-4825-8b87-733bccc2d538",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e2085cc-dbc5-4995-8f35-90deae21228f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5296bae9-bd70-42ef-a68e-3138581a1d10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2cbd2986-0c48-418a-b4c6-78b46bf8abb6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51d3d787-5f25-407a-a9ce-f6c43ff525a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e338508-e0fe-456e-acb6-be700f7f94df"
            }
          }
        ]
      },
      {
        "id": "9071f57e-ed07-49c4-9b49-e49fd7108b9b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "14e4d6d9-5f18-42c7-99ca-827eb0fe051f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e60c04e-99a8-4bf6-a3ba-cc23f8ce1709",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83bb5519-a4b1-4614-bd0d-313b3caa529b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dd3f65-8dd0-4dd3-827a-37a69f6002a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d56a88a-1dad-40b2-ad4a-eaa83db85f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d673696f-c7c0-4976-8d49-81c0079e8dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34abbfed-5832-428a-8053-66102959dabe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6e57c96-2dc4-4d85-9697-d9002631c868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36c7eba6-8785-4461-a33f-d612c413f0c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69841590-67b9-44c7-8d27-e5a032bcb362",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43d2daa2-bb6c-4129-89fc-8420d6db9cdf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d3db669-6917-446c-98a6-ee6ea8404fb1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0032b874-1a8d-4b63-90ae-d4fa3ff54425"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ef1858c-733e-4460-b1c7-340bb33a7d02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5872eab0-f3bc-4549-afd8-c5ad20ed3eb5"
            }
          }
        ]
      },
      {
        "id": "b256aec7-23f5-4442-9f5c-56ffa23da54c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "10e69f25-c057-4749-ac93-b004b889f8f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f689381c-98d6-4874-9ab8-b4691747d287",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58cd2337-0d13-4126-826c-52e53c72565b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52984f97-9c8a-45a6-aeb4-515665e7f20f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9960ed2b-aae2-43b1-9bdc-f1573cbe4a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e439af-85f8-46eb-875c-a2eb691055ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba7c3f50-d545-4b00-a144-e53e2ea28798"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "052d4189-498c-41c4-be39-d9f8c2200395",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28f917b4-e2a0-4ffc-b03d-f18c423be381"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e22157f-e3b9-4e49-b2f5-fcb5a92bfecc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af6465e6-dc43-43ab-8ef1-aed3384f9be8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fc2a234-b5cb-4131-86c8-73218fe063f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03c7f04c-f0b6-4d63-b4d6-c333de6c92df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f982f1a-5078-4506-a3e5-4964f50441d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "843fee6e-1099-4c8a-8f6a-1b84983e9307"
            }
          }
        ]
      },
      {
        "id": "1fca558d-e630-40e7-adbc-859e3f76c03c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76edd4eb-9d16-4b57-97eb-3e3439878bb9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "322b10e9-ca7a-4a05-963b-8e9f500d49fe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d8be7351-0d7b-4cb8-a4f5-5309e4d1a51f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "becd24ec-e42e-4bd3-8c6e-710d3b561bad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9702337d-94cb-4b1e-b0d4-14f3e48dbc5c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 85.69444444444453,
      "responseMin": 4,
      "responseMax": 8892,
      "responseSd": 614.2128963418367,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722127421224,
      "completed": 1722127450949
    },
    "executions": [
      {
        "id": "5b7cd657-f27a-4e7f-8d00-5cb78fd25509",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "616012a4-6f84-42e1-b8be-ce82f29f4ba1",
          "httpRequestId": "85b4ea2b-1b13-4e81-bfd7-1e1c11ae96e9"
        },
        "item": {
          "id": "5b7cd657-f27a-4e7f-8d00-5cb78fd25509",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "38a96479-4e73-4e86-b2cd-c083bb5f26fe",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "8d03641f-4d63-43be-b4ef-8edd29a544b6",
        "cursor": {
          "ref": "89db3963-1809-4145-9127-ee5f63fdbffa",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "06b760e2-0cdd-44e3-8f16-a0066a2086dd"
        },
        "item": {
          "id": "8d03641f-4d63-43be-b4ef-8edd29a544b6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ecf74f88-6c76-43d5-809c-12905f42df7b",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "3de9029f-bf83-4349-8173-25e993a40c33",
        "cursor": {
          "ref": "c0e26092-6987-4657-9d7d-b1eaf7a7ae31",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e992bdaa-247c-4bc0-81a0-e7d4d3ed78eb"
        },
        "item": {
          "id": "3de9029f-bf83-4349-8173-25e993a40c33",
          "name": "did_json"
        },
        "response": {
          "id": "da2de0de-61bc-45b1-b691-1193af2acbb1",
          "status": "OK",
          "code": 200,
          "responseTime": 205,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0b9d17-9a6b-4b3e-8214-2438e054a04f",
        "cursor": {
          "ref": "fbc08ac7-829e-4ea8-9b5a-414d05d9cc71",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eaf35033-c3b0-4bb3-9c9f-04807eeb790a"
        },
        "item": {
          "id": "5d0b9d17-9a6b-4b3e-8214-2438e054a04f",
          "name": "did:invalid"
        },
        "response": {
          "id": "93bc2bf3-1f1b-4723-82f1-7b128dbeeaee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 185,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0b9d17-9a6b-4b3e-8214-2438e054a04f",
        "cursor": {
          "ref": "fbc08ac7-829e-4ea8-9b5a-414d05d9cc71",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eaf35033-c3b0-4bb3-9c9f-04807eeb790a"
        },
        "item": {
          "id": "5d0b9d17-9a6b-4b3e-8214-2438e054a04f",
          "name": "did:invalid"
        },
        "response": {
          "id": "93bc2bf3-1f1b-4723-82f1-7b128dbeeaee",
          "status": "Not Found",
          "code": 404,
          "responseTime": 185,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89addeb7-1248-4839-b6e9-58079399b18f",
        "cursor": {
          "ref": "26b9fa49-4f7a-416f-b2ec-b0f5e0952bec",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6d5dea3c-ccda-4c85-8b9b-be2e0e24c7fc"
        },
        "item": {
          "id": "89addeb7-1248-4839-b6e9-58079399b18f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c8cb15a1-1d76-4ed7-a8ca-c42024ddf941",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66667e6-73bf-4387-9e84-d16ce6e7385d",
        "cursor": {
          "ref": "76b6f3d6-401a-4348-bbac-3a9712cd9820",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0c1ba76b-35b3-464d-b239-9365546921ba"
        },
        "item": {
          "id": "e66667e6-73bf-4387-9e84-d16ce6e7385d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4c3422dd-60e1-40d9-b747-77e7b8f2b643",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e348a411-cbe1-45b2-86df-4d30c540a6bd",
        "cursor": {
          "ref": "5b59ed47-bce4-4a60-bb32-0ccbf001cab9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "93b2976e-f5c2-4861-8c6e-5a23350fe31a"
        },
        "item": {
          "id": "e348a411-cbe1-45b2-86df-4d30c540a6bd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a35eb22a-27d4-4e70-a9e4-7533c7c24054",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4b52c8-1f51-4fd6-a60f-a4b466d053fe",
        "cursor": {
          "ref": "12ee6e35-999d-4725-94a1-ff064f09452c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "544c4b53-75c7-4fea-a2b2-af388032f190"
        },
        "item": {
          "id": "3a4b52c8-1f51-4fd6-a60f-a4b466d053fe",
          "name": "identifiers"
        },
        "response": {
          "id": "d0a5fbd0-f086-40bb-a061-753c1207d6c9",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d3de46-09cc-4021-ae4d-4522e3d1be5d",
        "cursor": {
          "ref": "72a913d2-c717-400c-b4a4-cc7b7ac76c9c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dc022cc4-f9aa-48e4-a5ce-95094599a9a3"
        },
        "item": {
          "id": "25d3de46-09cc-4021-ae4d-4522e3d1be5d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d3de97c2-f607-4330-a7c3-07fd03ad1ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a16b369-a384-4685-8eae-e1eafe2ce696",
        "cursor": {
          "ref": "0a6c4cb1-a1f1-4152-915a-859a915ace2a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "08721496-f892-41de-8e32-100cf80c07a5"
        },
        "item": {
          "id": "6a16b369-a384-4685-8eae-e1eafe2ce696",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6443f54c-fde1-4d6c-ad62-cca4cb004b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ebe649-42c3-4ed0-b7f9-0835fdc3c1f6",
        "cursor": {
          "ref": "7c0df212-6e74-4ff9-85e4-c826fcde0607",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ef01791b-9752-4295-9a33-adcf530840dc"
        },
        "item": {
          "id": "c0ebe649-42c3-4ed0-b7f9-0835fdc3c1f6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7bc370cd-1d08-4bc1-bdee-eaa50d75faa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f6e213-dab2-4cab-ab6e-b777410cbdb7",
        "cursor": {
          "ref": "b6d37c39-d6ad-470b-9f33-ee3e232c7879",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eabac4a2-f749-4364-a976-edf4132098dd"
        },
        "item": {
          "id": "47f6e213-dab2-4cab-ab6e-b777410cbdb7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e3dadbdf-9790-40c8-b4a2-1f6b751ac63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2a15be-1496-4a02-b8d3-5f8c5f5ec8e4",
        "cursor": {
          "ref": "55ba77e9-022c-4635-b5a0-53484bbbc60a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "51721b6f-9683-4646-8031-09c3712d59e2"
        },
        "item": {
          "id": "ce2a15be-1496-4a02-b8d3-5f8c5f5ec8e4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f139483d-e1ac-4ebe-83b2-579d69e78c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d8ee83-d516-46ff-b06b-2ac4efc5ba0d",
        "cursor": {
          "ref": "8d070c30-1374-4486-9f42-e02e547d3562",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d0221adc-98da-4c51-ae7c-5e545ea345f4"
        },
        "item": {
          "id": "96d8ee83-d516-46ff-b06b-2ac4efc5ba0d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c97e8872-51ca-4289-a648-cef217713c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b721d181-b7ff-4778-93a1-17dae00bb0ab",
        "cursor": {
          "ref": "1b5fa6e6-4382-4456-a615-37bae8d133ff",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "29d923b8-f9b3-45de-8f7b-d07606a0a231"
        },
        "item": {
          "id": "b721d181-b7ff-4778-93a1-17dae00bb0ab",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "493b4ca7-b2e1-4624-8478-2df16e3abda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fa244a-e476-469f-9034-a2d6f6305ad8",
        "cursor": {
          "ref": "3dd739c8-772d-4521-892a-c8e16dc76450",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "80e3e778-8a07-477b-a5a7-dfc66e5de9bb"
        },
        "item": {
          "id": "d6fa244a-e476-469f-9034-a2d6f6305ad8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "401abf2f-f14e-49f9-a631-404f71416847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eb1641-1586-4036-a8a7-c13bdf891a84",
        "cursor": {
          "ref": "87c3d519-8ec6-4bf7-87ef-0b2716bdd39b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "94a51cb9-342a-4ff2-8b53-97773d1fbb87"
        },
        "item": {
          "id": "37eb1641-1586-4036-a8a7-c13bdf891a84",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33f9df50-4fbd-40a9-a4c3-bd3958ff70e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9115a961-3b09-4ad5-a81e-fb4854e3ebf9",
        "cursor": {
          "ref": "74778cb2-29a2-4c5a-893c-fbdbc4b40a0a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e01d2580-f441-4770-9405-3ad7609ba507"
        },
        "item": {
          "id": "9115a961-3b09-4ad5-a81e-fb4854e3ebf9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1b024eb3-ee5d-4e7b-8bfa-4edd9f2470c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0d9337-9c91-4ca3-a98c-c2e1d8d9a341",
        "cursor": {
          "ref": "de3339fc-2e68-48cd-b620-5c2556f25e94",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "59b0e1aa-2ca9-4727-bbb5-c739da55d2ea"
        },
        "item": {
          "id": "0e0d9337-9c91-4ca3-a98c-c2e1d8d9a341",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "adcf552a-8aae-427e-bcb2-4bf762f4c61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead12a17-901b-4bee-afb8-d30bdcbab25e",
        "cursor": {
          "ref": "0f6f7252-efaa-4903-b747-0d23b8eab82d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e8227c3a-1aa7-4a48-8b25-256b939fa9f9"
        },
        "item": {
          "id": "ead12a17-901b-4bee-afb8-d30bdcbab25e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d979a4e2-e2b9-4037-bdcb-0a9e6dc283d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b1e3fc-2033-44c5-8b00-dbb1879caadd",
        "cursor": {
          "ref": "2009e94c-0ea9-438d-92a2-555e76efc169",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3260eea3-31b6-44ac-8216-3b0d23f0202e"
        },
        "item": {
          "id": "d2b1e3fc-2033-44c5-8b00-dbb1879caadd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "63ba9723-eb15-4af8-a271-41c8e5f7a1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a62a7df-3777-4448-9760-2abdccfae4dc",
        "cursor": {
          "ref": "ddf44f53-3ae8-450b-9f78-12b3da2e9ddf",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bca5c9cb-0275-4391-a28d-7c864b378af6"
        },
        "item": {
          "id": "5a62a7df-3777-4448-9760-2abdccfae4dc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1d3cfea8-c25c-410c-a0dc-5c36211dd824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6857d53e-5055-4250-a632-0a012f9d627d",
        "cursor": {
          "ref": "87210bf0-99c1-4371-8900-1fbac93a0d2e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "99262767-2a31-4cb8-b553-c0c6dd4f68cd"
        },
        "item": {
          "id": "6857d53e-5055-4250-a632-0a012f9d627d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b776022f-3e9a-4c1a-9390-211909fc573a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c06fdf-73b3-47ba-b0ef-cd3834e49e8b",
        "cursor": {
          "ref": "6ab64e92-141a-4950-b58d-fcf3b10a572e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0ad53085-c322-49b9-8032-1ddf9d151089"
        },
        "item": {
          "id": "e7c06fdf-73b3-47ba-b0ef-cd3834e49e8b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3a7c1ce2-3b33-4884-835f-b9291e9387b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b83393-0768-40dd-82d7-0f710c88ae4a",
        "cursor": {
          "ref": "4205ce65-f37d-4b51-93b3-e20f2622e9f4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2dfbb158-72ae-41f6-9ea0-61018c50f54e"
        },
        "item": {
          "id": "95b83393-0768-40dd-82d7-0f710c88ae4a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f16e492a-7cca-4ad2-ba12-37cae71667e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3e540f-d7b0-4649-9b9c-04cf508bb472",
        "cursor": {
          "ref": "ce7c0153-7fb8-4d4d-b726-c16dc0113baf",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "230f91ed-940d-430d-9c72-d526c6e9f351"
        },
        "item": {
          "id": "3d3e540f-d7b0-4649-9b9c-04cf508bb472",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1be1ef44-148d-4e31-b412-3fd4d1132ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffada5b-63b6-4b03-b60d-aa769bb662ee",
        "cursor": {
          "ref": "935c6f4e-56e2-42ae-a8f8-2d1ccd825733",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "96a23efb-b5e8-4bfe-b3d7-eab1e5179a22"
        },
        "item": {
          "id": "3ffada5b-63b6-4b03-b60d-aa769bb662ee",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5ac10c27-7034-4fd9-93b2-187e1079cc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc135ba3-2bfe-40a5-9ae5-2399a11f69e3",
        "cursor": {
          "ref": "5d01cf94-71ed-4642-8e58-91d06be18d9f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "252ada02-93fc-4ee1-bf99-d34aa3b1476c"
        },
        "item": {
          "id": "cc135ba3-2bfe-40a5-9ae5-2399a11f69e3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5b56ced0-cc9b-4ad0-b68d-dec530265007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd137879-27e7-46dc-a83e-bde0dc9e362c",
        "cursor": {
          "ref": "b93671b6-39be-4dfd-8a76-f06ffd893910",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "80e8c43e-81e1-4816-8614-a93a534171c0"
        },
        "item": {
          "id": "bd137879-27e7-46dc-a83e-bde0dc9e362c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e3cbcee5-30ed-48ea-b57a-9dde13291dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab6d49b-32b6-47c7-8c83-5d6f26c18df7",
        "cursor": {
          "ref": "fbab472d-d678-4cc0-8dbe-d5047858c4fe",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3d29457c-05f1-4a17-941d-2c37fbee1a34"
        },
        "item": {
          "id": "dab6d49b-32b6-47c7-8c83-5d6f26c18df7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bc6d5f12-a150-4675-ae9d-b2a26252e95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456bc191-05ff-40e3-a56f-bf4c91d40f8f",
        "cursor": {
          "ref": "9423a8f4-5a69-4212-8682-bae3e67a3134",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2306efcf-0612-4d80-9274-30be8cec84f3"
        },
        "item": {
          "id": "456bc191-05ff-40e3-a56f-bf4c91d40f8f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "abc41194-a084-4bd1-b599-0eb1dc9cf00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4810a3-71da-4a66-9e52-4c11aa652bdc",
        "cursor": {
          "ref": "5fc3132d-302c-4d6b-a464-10307b3b79a0",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "14cd1369-3697-4613-9d99-992f68ce3542"
        },
        "item": {
          "id": "9a4810a3-71da-4a66-9e52-4c11aa652bdc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "170c6394-27e1-49d8-b584-a2167ff690aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce425d1-0828-4fbd-91a8-1f3af429b3b4",
        "cursor": {
          "ref": "8ee1ec8b-9a02-403e-af0e-377841f41ad1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4f72ed63-0a2c-4dfb-b860-1590fca58a8c"
        },
        "item": {
          "id": "bce425d1-0828-4fbd-91a8-1f3af429b3b4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e61b646b-7e16-4d99-9f16-b00f1a4f1a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bdc7c5-d379-42f9-bc2c-3bfbad448917",
        "cursor": {
          "ref": "5f4d4ea5-369f-40e6-b9e4-88756a851ccb",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3acab380-c206-4544-a769-de9c94249254"
        },
        "item": {
          "id": "52bdc7c5-d379-42f9-bc2c-3bfbad448917",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "376b3d07-e16a-403a-92e4-e0c1ce892843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6510a83-c29a-4d72-b598-11e5b6917c93",
        "cursor": {
          "ref": "b7d15873-6004-4edd-8d3f-6ffc16805dec",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "318559ee-aeed-4be5-837f-358cd02040bb"
        },
        "item": {
          "id": "e6510a83-c29a-4d72-b598-11e5b6917c93",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c532fc4c-702d-4e30-a509-ef2f855523cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab6b0bb-fb8a-425a-a3cf-f909b1fd7f67",
        "cursor": {
          "ref": "8fcd6a45-e6c8-499f-b77d-5035a3255366",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "15504dcc-f96e-49a1-bbbb-99f9c0decdcd"
        },
        "item": {
          "id": "dab6b0bb-fb8a-425a-a3cf-f909b1fd7f67",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "105ac202-0e53-4743-b64f-a1477e1538cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b25a0c-4ab2-4535-ad29-22083081b80b",
        "cursor": {
          "ref": "884a041f-24bc-48c3-a481-10f935622220",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fd5b1154-c120-4015-9333-7fe50fb2d355"
        },
        "item": {
          "id": "e2b25a0c-4ab2-4535-ad29-22083081b80b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "41044482-35e0-492a-87ad-96fe39b9c197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78e9bd9-6e8e-489c-bb77-650c679db839",
        "cursor": {
          "ref": "23fb7969-e461-4945-aaef-09b587255d65",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1473d75a-e782-431c-bd84-c06729fd6434"
        },
        "item": {
          "id": "b78e9bd9-6e8e-489c-bb77-650c679db839",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fc7ad7cf-5d61-459b-91aa-6e128a652d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b773c92b-445c-4d15-8fcb-5201f6744ad4",
        "cursor": {
          "ref": "2e2a8bf5-9dcf-4f89-8f08-361341194b62",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cd229dcd-04c7-4d3d-b12b-a6f971ff3754"
        },
        "item": {
          "id": "b773c92b-445c-4d15-8fcb-5201f6744ad4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "49b4830c-f51f-4fad-b4dc-1001a335ab15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7b46ce-d50e-4381-8724-630b2cb8027c",
        "cursor": {
          "ref": "ac3c617b-948b-4ee3-9e31-e963fa7c542f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "94a5e57b-d8b3-4eb2-8a1e-6bf2f1266ac8"
        },
        "item": {
          "id": "aa7b46ce-d50e-4381-8724-630b2cb8027c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3f94ccaa-adfb-48f2-985e-7b706f09e403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff9d421-8f64-4021-aa5b-6306ecd55122",
        "cursor": {
          "ref": "fcca4d87-60ba-4d16-92db-da7e86f45540",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "415e1dc7-9f78-4bfd-bc09-4d4c71948ba0"
        },
        "item": {
          "id": "7ff9d421-8f64-4021-aa5b-6306ecd55122",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "298abd9e-2162-4ddf-82d4-830be375e791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002b7f73-475f-4742-80d0-05fef2f38ca5",
        "cursor": {
          "ref": "e919f798-b4b3-4b0a-b81f-b4700673d5b6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9177bf49-4436-4eef-ae5f-93d6b27b67a9"
        },
        "item": {
          "id": "002b7f73-475f-4742-80d0-05fef2f38ca5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9f387a89-6f34-4fa7-857b-f2a210d1a2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96e8a40-a4c4-448c-88c0-e36c990d301d",
        "cursor": {
          "ref": "0a334d2d-26ec-47eb-a220-c427d1bff6f9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "08b49727-b5d4-4155-be86-8f9453d1fe55"
        },
        "item": {
          "id": "c96e8a40-a4c4-448c-88c0-e36c990d301d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "898692e5-ac6f-40cd-8056-c588cf83ad6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e829491-90ee-4a9f-9ecd-8781e0f9c0f2",
        "cursor": {
          "ref": "6e286720-deab-4494-a6fc-4bb18a1b955b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "350ec3ee-4fa3-4728-b2c1-20564950ffb2"
        },
        "item": {
          "id": "7e829491-90ee-4a9f-9ecd-8781e0f9c0f2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5e3af3f5-5871-44af-b406-f30e8fab89bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c403180b-d21c-4a95-91e7-70e913a9a214",
        "cursor": {
          "ref": "1a08720d-bf12-401c-8646-333335c219b5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5e20ccb9-d01d-4410-857c-d30835603609"
        },
        "item": {
          "id": "c403180b-d21c-4a95-91e7-70e913a9a214",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3dc183c2-bee6-4292-9339-ba8235493bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5c8ebf-eb31-44bb-ac74-c664b9ebe209",
        "cursor": {
          "ref": "ec7b58ae-e963-45b7-8739-0b772d54a5df",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c9036b9b-2ffd-4c61-96e6-156146d00797"
        },
        "item": {
          "id": "ad5c8ebf-eb31-44bb-ac74-c664b9ebe209",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3cf65987-0230-40b6-b052-d5b9260b0ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495aac3a-bb03-4116-a6a1-db76c460f451",
        "cursor": {
          "ref": "5e7e23da-fc45-4a8f-9db4-829900ea8e8e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "793b3c5e-e164-4888-a9b1-8d5a5a7a3f17"
        },
        "item": {
          "id": "495aac3a-bb03-4116-a6a1-db76c460f451",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a0222d81-aa21-4ca3-be58-5843b98cd6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26e45ff-98c6-480a-860f-232e2609362a",
        "cursor": {
          "ref": "d4af33ae-5a85-458b-9e69-186e973a0db1",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "45e316f2-f0ea-474d-b154-6c2f0dcd09ed"
        },
        "item": {
          "id": "a26e45ff-98c6-480a-860f-232e2609362a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2a0468d8-baf1-4df9-90b5-65cbc540f33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da30732-6a2b-4f5a-913d-cc938bcd6f92",
        "cursor": {
          "ref": "84096b34-c050-4003-8148-713d35831cd8",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7b5ef816-2aa9-4f0b-a7fe-ba5b31b37c7c"
        },
        "item": {
          "id": "5da30732-6a2b-4f5a-913d-cc938bcd6f92",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fba68849-1cc0-45fd-af0d-f811c578bc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2821124d-7a1d-40f7-b66e-136d6b5251ed",
        "cursor": {
          "ref": "8f235980-0307-4669-b52e-29f35584a5ad",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a979bc43-e95e-448d-a6e0-c90be9966b7f"
        },
        "item": {
          "id": "2821124d-7a1d-40f7-b66e-136d6b5251ed",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0a6852ae-0b08-4cdd-9ffb-ef6752879b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6810f75a-79c4-458b-8295-155c5b33ab77",
        "cursor": {
          "ref": "2d673a66-ba01-4856-94fc-10ac4250784c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b9298fe7-7207-4ccb-a9f0-252f58ecfd55"
        },
        "item": {
          "id": "6810f75a-79c4-458b-8295-155c5b33ab77",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7395b609-3284-4b32-90cb-088a4212db55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a067e1-b5a4-4a16-802d-4a70f9d768fb",
        "cursor": {
          "ref": "ea3191db-def5-459b-9105-23b646b10e18",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e132649a-a72b-458e-845d-29914750c410"
        },
        "item": {
          "id": "05a067e1-b5a4-4a16-802d-4a70f9d768fb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5f04864b-cca7-4e3a-b123-186fdadc52e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081f2050-df3f-4ad3-8487-e9be7abf4c06",
        "cursor": {
          "ref": "6e7be155-b65b-4bce-842e-721b90c34827",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "01f02ee6-4b4d-438d-87eb-0749323d73d4"
        },
        "item": {
          "id": "081f2050-df3f-4ad3-8487-e9be7abf4c06",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f8217e37-5a0c-41f4-ad8d-8654b93df031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bb6354-3348-41ec-b52b-3e4185a0179a",
        "cursor": {
          "ref": "db64189a-577d-4735-829a-0cc21ed92334",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e2c71d94-810e-4784-addc-569404bdab9d"
        },
        "item": {
          "id": "72bb6354-3348-41ec-b52b-3e4185a0179a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "41009435-037d-4ee9-b0d8-a8c5230bb493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789641f4-d649-433e-8caf-c91185df1cee",
        "cursor": {
          "ref": "a6f37586-eaee-4768-9912-8fdab6ac7b0e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1560ecde-a88c-4a2a-9c9b-41f61101c652"
        },
        "item": {
          "id": "789641f4-d649-433e-8caf-c91185df1cee",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "428bb133-88c1-439e-838f-670c05d48c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c538d14-5f7a-4851-8e8c-49e35d9af257",
        "cursor": {
          "ref": "80f851cb-5bbd-443a-aeb7-66d6a82d1b89",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c35f811c-dbd9-44d1-81a0-8996d9c4d277"
        },
        "item": {
          "id": "7c538d14-5f7a-4851-8e8c-49e35d9af257",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c4114633-b402-40db-a884-74bedf7fa066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1264c067-2e1d-4b26-920d-122d8b56315a",
        "cursor": {
          "ref": "5846139b-ccbb-4983-a6c6-454ecde30d2e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "46d7e5ae-2163-43a8-9d4b-40170a914751"
        },
        "item": {
          "id": "1264c067-2e1d-4b26-920d-122d8b56315a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c0c90f0f-55d2-4829-ab9b-c9bd601f2970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8f7a7b-b280-45f4-b034-d626ea6c8573",
        "cursor": {
          "ref": "744373a2-45f1-4883-ac91-9c6f65bcd6c4",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3d8910f0-83af-428e-bc18-343da13ee2ee"
        },
        "item": {
          "id": "cc8f7a7b-b280-45f4-b034-d626ea6c8573",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6e76fc00-85db-4899-9776-5b51d8e7367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2ff688-04a3-400b-b91c-4c791bc0465a",
        "cursor": {
          "ref": "425d70a9-6bdd-4e18-ae6a-38dadfa174b3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "744697e2-f51a-4a8c-8512-c7b28180a15c"
        },
        "item": {
          "id": "6b2ff688-04a3-400b-b91c-4c791bc0465a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "edaa314d-8794-42ac-8cdd-58452d97ebfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f922a4c-0a51-4c56-8c3a-dcd0c4627623",
        "cursor": {
          "ref": "8e77520f-e56d-4a68-b940-1eb42efa82f2",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d075db30-98ff-443a-ad1c-60ddd9102eff"
        },
        "item": {
          "id": "7f922a4c-0a51-4c56-8c3a-dcd0c4627623",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "769bed4f-1641-41dd-a70d-0f43f4ce8b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4df0eb2-ac1e-4522-b60d-8d6017acb7c4",
        "cursor": {
          "ref": "413fa536-45b3-48d9-9438-078fbae3d193",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "65393b14-3251-459b-b8dc-912839b324ef"
        },
        "item": {
          "id": "b4df0eb2-ac1e-4522-b60d-8d6017acb7c4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "aca8c95e-fe3f-4dd6-b6a5-3f4dae43fb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb6710b-71b3-480f-8371-a307528d2ddb",
        "cursor": {
          "ref": "81656771-c5b2-4038-96eb-5a276613f3e9",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e7bf1c0d-2525-4a10-bc0c-bea254ca4935"
        },
        "item": {
          "id": "cfb6710b-71b3-480f-8371-a307528d2ddb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e694f81c-e9cb-4bce-8f1e-246be10798d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c87f24-09dd-498f-8e00-660b25b95e39",
        "cursor": {
          "ref": "4290808c-cb50-4987-8f5f-0d62e569cdf9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bf2357d8-9662-4c67-8057-2fe4bbb0b958"
        },
        "item": {
          "id": "15c87f24-09dd-498f-8e00-660b25b95e39",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "21995fec-7860-4729-a73e-597e508ac96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3095ed-60d6-439c-b85c-33526f194a16",
        "cursor": {
          "ref": "e074da48-576a-4526-8291-5542c6f5728a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "59c9b0d4-1c43-413f-b34a-ba44f06c3efb"
        },
        "item": {
          "id": "ea3095ed-60d6-439c-b85c-33526f194a16",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b025a43f-dd8f-4e01-a63c-111584e4e3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298a454d-8c99-49fb-a2f6-355906bcf772",
        "cursor": {
          "ref": "c9ee129f-0d0f-436f-8c47-1a64cef50356",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2b630247-2e9a-4f66-be46-8d25fcff7277"
        },
        "item": {
          "id": "298a454d-8c99-49fb-a2f6-355906bcf772",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2896b3fb-9b26-41bd-ab5f-64e3daa3c7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518721af-8f57-4d5b-886b-9e109a76e94f",
        "cursor": {
          "ref": "e6b16057-df9d-41e6-b88b-05eaa79c3089",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e891dade-afd5-41c1-8127-f9bdae7c023a"
        },
        "item": {
          "id": "518721af-8f57-4d5b-886b-9e109a76e94f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a9910f11-7a7a-4b35-854d-92120acc53d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a27d85-cf10-48c7-8b75-876c273ff44c",
        "cursor": {
          "ref": "4990439a-e8e2-4d65-9d01-a784a14df9a4",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8ba0642d-f28b-4305-9ca8-71d8ef07be6a"
        },
        "item": {
          "id": "29a27d85-cf10-48c7-8b75-876c273ff44c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "826daf1a-f18b-4db2-b27d-534b0c3d93f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b96322-37e4-41e3-b1ab-337c47127f5d",
        "cursor": {
          "ref": "80e30792-618b-4fe0-a5a7-f1aa4dae1067",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "101df03f-0dfa-4f80-ba60-320dd7bf9f2b"
        },
        "item": {
          "id": "54b96322-37e4-41e3-b1ab-337c47127f5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "89dbcb67-cfd6-4a38-89bf-8fc251431677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2204ae-b25f-4879-ba9b-71c1a9ec78d6",
        "cursor": {
          "ref": "18cc1b2f-a3ec-44fe-b42f-c6d92f0f9ca8",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1002dde0-1d6b-4180-bffe-4789c9a1e549"
        },
        "item": {
          "id": "ae2204ae-b25f-4879-ba9b-71c1a9ec78d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e5fb753c-6aa4-4668-a071-109acb60742b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03542684-4380-42b7-a38b-d392518e5e32",
        "cursor": {
          "ref": "5b264de8-d362-4dee-bc70-edc72f7d2cf4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5c08b07f-3cec-45a6-8cde-3a69c48066c8"
        },
        "item": {
          "id": "03542684-4380-42b7-a38b-d392518e5e32",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "999d80dc-e06e-4122-9f58-c46e4edd8722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16833fda-a23e-45ab-8b18-cbd6bc9990a3",
        "cursor": {
          "ref": "c490ee82-faca-45fa-8499-b44c981df99d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "48585292-9200-4f0c-8d2e-f8dd23490949"
        },
        "item": {
          "id": "16833fda-a23e-45ab-8b18-cbd6bc9990a3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c65bde0e-ee91-4671-b698-4e75420d32d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d763c400-0da8-475c-bac7-cee4ac98ed90",
        "cursor": {
          "ref": "f99da8e9-9a50-4f25-a118-7064eda6b747",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a45c36c2-6658-435f-8083-4bf48cf25677"
        },
        "item": {
          "id": "d763c400-0da8-475c-bac7-cee4ac98ed90",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f497af1b-65ed-4e29-b982-a4c5233413fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca48562-60ed-4c81-b9a1-070306223ba9",
        "cursor": {
          "ref": "c099765d-f98d-424f-a397-10f070c1b799",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "37a40e23-c800-4d52-950c-0b2d0cd87087"
        },
        "item": {
          "id": "3ca48562-60ed-4c81-b9a1-070306223ba9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b3cdc3b1-8771-4bb5-956b-055f941a917f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ecc595-6102-4a42-b421-24c290f6c819",
        "cursor": {
          "ref": "6b7ea948-f1d9-40f7-abbb-1aae67f9c3b8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c22dc5ff-2038-4544-a896-df5ef16bbad4"
        },
        "item": {
          "id": "b4ecc595-6102-4a42-b421-24c290f6c819",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5e13ff55-b0ed-425d-9c45-a2a801f087fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89009b53-f825-4ed6-b20c-1781833c6655",
        "cursor": {
          "ref": "030663db-3839-413f-9489-d783806c3f0e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "95ef2b85-8b29-4462-a90a-dab3191c147d"
        },
        "item": {
          "id": "89009b53-f825-4ed6-b20c-1781833c6655",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "bd751b2a-ee25-4f94-a09c-15e15cf4b7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6121ccc1-e787-499e-97e8-b05ea8e818b9",
        "cursor": {
          "ref": "67d71134-998c-4e33-a844-74bdc046a2ba",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0663e5a0-a3bf-4e69-aef7-7452e58b6d79"
        },
        "item": {
          "id": "6121ccc1-e787-499e-97e8-b05ea8e818b9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ed474367-dbdc-42d8-963e-5068c980c481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36622940-c39a-4dc5-be24-c44a1eb447b0",
        "cursor": {
          "ref": "957df653-5946-47c7-86aa-fb4daf618f0f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "506387e1-4f7f-4e11-b967-bb50d0c0124f"
        },
        "item": {
          "id": "36622940-c39a-4dc5-be24-c44a1eb447b0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ec8b0260-70fb-4359-9b3c-97ec9c5c6deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f73737-b176-460d-bc3e-aec17e8aa550",
        "cursor": {
          "ref": "dac1443f-94fa-4afa-96bd-34b38841687d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f5c553eb-b11b-46f0-a989-af5f03746d0b"
        },
        "item": {
          "id": "c5f73737-b176-460d-bc3e-aec17e8aa550",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "904bf4bb-f429-47c7-9724-fed3a8896912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0458aa5c-0025-46db-b876-a7e0faf5c766",
        "cursor": {
          "ref": "80a53939-8c6f-4d0c-97cd-15f6321ce333",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6bed39bb-9ee8-41f7-b5bd-64a3f05b1303"
        },
        "item": {
          "id": "0458aa5c-0025-46db-b876-a7e0faf5c766",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "98f4c9e4-d6a6-41fa-9edb-233e7734c763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b463d7-e7aa-486f-b76a-af17b1481ae4",
        "cursor": {
          "ref": "0094dd2e-76cb-4384-9c13-e39e501bdd54",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "28bf9a3e-8ce3-4877-998c-764b565aa543"
        },
        "item": {
          "id": "48b463d7-e7aa-486f-b76a-af17b1481ae4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8efd9117-8ac4-4515-b13f-a223963b1e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74def5b2-e18c-46d5-9b44-0a93873ce99c",
        "cursor": {
          "ref": "3e1fd1d6-0d65-4cbb-beea-afc5f9f8489c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a5509764-349d-4eff-81a8-9b3aace7ab67"
        },
        "item": {
          "id": "74def5b2-e18c-46d5-9b44-0a93873ce99c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c1521122-ad04-4ab2-8f71-ed5f5b4bf9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0868b67b-057a-4b68-8a23-b72147ad871a",
        "cursor": {
          "ref": "f77fa9f4-f117-42de-be73-09eaae729d0d",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ee56fb90-fd6f-4598-a0fe-362b3dc71cfa"
        },
        "item": {
          "id": "0868b67b-057a-4b68-8a23-b72147ad871a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ca909c89-ad6b-4135-a2c5-6187beb182df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0590156e-2e06-425d-8715-3fcb9041baa3",
        "cursor": {
          "ref": "ab9caeeb-536a-423b-a7c7-dcf1c01b7b20",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1eb719e4-b1c6-4409-8ec3-5ae933386659"
        },
        "item": {
          "id": "0590156e-2e06-425d-8715-3fcb9041baa3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6f16fb45-d756-4162-a182-c5efcf99db38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3e6fc9-21df-436e-be3a-0aed1a90c28a",
        "cursor": {
          "ref": "29c7fd7a-37a4-45b4-adbe-9d1f46d684e5",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c7e05190-e50e-4506-a1ac-23831712f740"
        },
        "item": {
          "id": "cd3e6fc9-21df-436e-be3a-0aed1a90c28a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "241b4f8b-ebfd-470d-8b59-d9ea98057c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29997b7c-92ff-4f4e-b6bc-c04546b750ff",
        "cursor": {
          "ref": "f77db2d8-0442-4b8d-a2ff-03062cf884a8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "76c5e5f8-7506-4e58-b2b1-7ebbad024b5e"
        },
        "item": {
          "id": "29997b7c-92ff-4f4e-b6bc-c04546b750ff",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "72df964e-7138-4ab0-b246-791d83169d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b39a66-4fb2-4c4c-9d6e-cb36cef996a7",
        "cursor": {
          "ref": "089056bd-aaf0-4d50-84dc-93c0e41a3381",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "89126df4-5497-4397-8f1d-83395b4c539e"
        },
        "item": {
          "id": "32b39a66-4fb2-4c4c-9d6e-cb36cef996a7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "afb92906-4fc0-4c00-8d05-255f9b2af8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74e8723-1a50-4d52-87a3-7661a9b7994a",
        "cursor": {
          "ref": "185c1700-46f7-4aa8-945a-e7be118c803a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8a4494d8-4085-4fa4-9174-39f6f61853b0"
        },
        "item": {
          "id": "b74e8723-1a50-4d52-87a3-7661a9b7994a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0677086f-89b7-4757-9735-09c535dbabf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b6590f-db78-46f2-a4eb-e0a963b411a4",
        "cursor": {
          "ref": "81e8eff5-1a5a-4c0d-938f-1eb7112a1d37",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "66d28349-0b53-4543-82b0-d1ef73cd1b2c"
        },
        "item": {
          "id": "e7b6590f-db78-46f2-a4eb-e0a963b411a4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9110fd31-e40b-4b3a-a232-92b2787e05ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecbbe82-4da7-400f-9e4e-b6ac2138fa61",
        "cursor": {
          "ref": "b42f3299-57b2-44cc-98c2-5609ffef0891",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "582ab01d-577f-4fb6-974a-412ede1f070e"
        },
        "item": {
          "id": "0ecbbe82-4da7-400f-9e4e-b6ac2138fa61",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "70ef3dd8-a6e1-42f0-bac1-9ca756f9cdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c61fd61-00b5-4a2b-ab55-4eb5fd868a5d",
        "cursor": {
          "ref": "5037c3d3-334f-4fe4-9881-17a9730f95e0",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d0ba25a0-9889-404b-8df7-82e76a5eeb7f"
        },
        "item": {
          "id": "8c61fd61-00b5-4a2b-ab55-4eb5fd868a5d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2fd2b6de-d781-46c3-b37f-802e9d2332e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282c7739-26d6-4b77-8801-a2a537854a6c",
        "cursor": {
          "ref": "8651f453-05a5-4e58-b2ca-6b92cc502695",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "91d141de-6788-4962-916d-b783bb72f9b3"
        },
        "item": {
          "id": "282c7739-26d6-4b77-8801-a2a537854a6c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c64a19d9-bfd6-4c7c-ad22-03de5ca33634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cf15ef-95d6-408e-9697-a26504c7e42c",
        "cursor": {
          "ref": "f3f116ac-3ffc-4629-8f2c-d2ba3bd21d13",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7aba4ffa-7bf8-41d4-8ddc-4de9f9831e62"
        },
        "item": {
          "id": "c3cf15ef-95d6-408e-9697-a26504c7e42c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c86405cf-842e-4035-b0d1-830740d84d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df926e3-dc3c-4257-8c72-28c9631c2ff0",
        "cursor": {
          "ref": "a905eca4-a14f-40ee-916c-251fa531df19",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2ca3f175-97bf-4087-8c25-09815bb26c56"
        },
        "item": {
          "id": "7df926e3-dc3c-4257-8c72-28c9631c2ff0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bb3fe8e8-0f9a-4234-8fd2-61b23dc84085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6882d9e1-bad8-48df-a093-11ed25605ace",
        "cursor": {
          "ref": "6524980b-e1b5-40a3-8a34-ac9dd9ea8d49",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7e273ab8-b747-4ce2-beb8-08571cfb930a"
        },
        "item": {
          "id": "6882d9e1-bad8-48df-a093-11ed25605ace",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2a132fae-4646-4db7-a5b6-7451f63b456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9963f336-5520-40ca-8bc9-9641cadb2636",
        "cursor": {
          "ref": "e5a4a5a1-8cf2-4b19-9179-322d54693e1b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "37fe048a-898b-41f5-ade1-50599f429611"
        },
        "item": {
          "id": "9963f336-5520-40ca-8bc9-9641cadb2636",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fd8371d7-3570-4a3e-8397-b4a8f636ed69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6253984-b883-459a-b7ce-704c9042f206",
        "cursor": {
          "ref": "f4f735c8-b542-4f56-b6d1-a9fdc458808a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "219c0792-488e-434e-99ae-e76de2fb631f"
        },
        "item": {
          "id": "a6253984-b883-459a-b7ce-704c9042f206",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2008116f-55e8-473f-a337-6c37f8e1927f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0f3bfc-10ac-4075-9675-77a813ceb40a",
        "cursor": {
          "ref": "183ad411-0980-48d0-b8dd-d400464d01f9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3a50fe91-4f4b-4601-abe7-06c934553cc2"
        },
        "item": {
          "id": "4c0f3bfc-10ac-4075-9675-77a813ceb40a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "efd07c8c-0b47-4e50-aa7e-d0da1efc448f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ea75b-4d79-4772-a295-7048c187ccfa",
        "cursor": {
          "ref": "ea8a79e4-5314-4f34-b111-dfc870ba053f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db5b33cc-63f9-4059-89cc-41e8384abca6"
        },
        "item": {
          "id": "b32ea75b-4d79-4772-a295-7048c187ccfa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dfb0dac4-3987-461e-a94d-9dc6472d2cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29cf11fd-00ee-4ca1-ba43-dc4032337f24",
        "cursor": {
          "ref": "427e16d9-3d2e-49f1-b227-4abecd5a6f9a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4a185dcb-eb8d-40f9-bb98-c9e5d8577ef1"
        },
        "item": {
          "id": "29cf11fd-00ee-4ca1-ba43-dc4032337f24",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "363958e4-cb89-4dd6-8047-0d7f2effcc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c251b02a-5c1e-41ed-ab11-be610ba04566",
        "cursor": {
          "ref": "1bb2bd6d-d167-4a3a-adb1-969670d5e0ec",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d879e878-6022-445b-93f0-c71a98bb6b78"
        },
        "item": {
          "id": "c251b02a-5c1e-41ed-ab11-be610ba04566",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d4a63f40-bfe9-4e82-b4e1-381adf904189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84ce3e9-b2ed-45ea-a16c-d4af0494a244",
        "cursor": {
          "ref": "0b4ea353-5dac-4e95-942e-030dd0c10bcd",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c0775ce3-ee13-474f-a4f4-9b4aa43a944b"
        },
        "item": {
          "id": "c84ce3e9-b2ed-45ea-a16c-d4af0494a244",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4f0ec17a-c4cc-4723-94bd-08112360d524",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ed6ef2-891b-4b22-b2f0-8f0b20b54cfc",
        "cursor": {
          "ref": "25a6233b-6265-4b9e-9e38-79f2922b61f7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c78e12b6-8663-447b-9c0f-e010a7dc778f"
        },
        "item": {
          "id": "77ed6ef2-891b-4b22-b2f0-8f0b20b54cfc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "60a714f4-fb09-4aa9-b8a6-61855c7e3d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dba82378-a850-4f6a-a037-b582387c181d",
        "cursor": {
          "ref": "5f9cc752-fe4b-4ece-8455-7ca739a289f2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c213a0c8-c515-45f4-8729-660c309bfc88"
        },
        "item": {
          "id": "dba82378-a850-4f6a-a037-b582387c181d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "61580279-888a-4eeb-a705-62e836d3cbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d82ef7c5-fa20-4ae6-a135-a8eff42d2f95",
        "cursor": {
          "ref": "8087a896-c72b-49d8-9783-d38c696acff5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "053271a6-7fe1-4264-8e18-a57e86a4fe50"
        },
        "item": {
          "id": "d82ef7c5-fa20-4ae6-a135-a8eff42d2f95",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "141fd995-55ce-47be-b68f-fcd1ab42f713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ad6be812-4b97-40c8-b8b1-9afaaf26be64",
        "cursor": {
          "ref": "1b404eea-d55c-430a-b7ef-d83b013e1edb",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b02a4e2b-401e-4a2c-a431-527f2a584cbc"
        },
        "item": {
          "id": "ad6be812-4b97-40c8-b8b1-9afaaf26be64",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1dcb91fd-7df0-4c86-9830-51278b21f81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "813265a3-8397-42ce-9ce1-e9f2a834f4a8",
        "cursor": {
          "ref": "652a27bc-c7da-4dd1-934c-071e6fc9d19a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4889e015-a468-42fd-99a1-7f5a723d59ad"
        },
        "item": {
          "id": "813265a3-8397-42ce-9ce1-e9f2a834f4a8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1e048a3a-8b88-47a0-a7d9-5829d75b0a3c",
          "status": "Created",
          "code": 201,
          "responseTime": 8892,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d888a032-11bd-44dc-a9a6-962ab46da576",
        "cursor": {
          "ref": "a80a3030-5989-4624-846a-ae77a6cd0aa8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "31859016-b5a2-4837-9e3d-ad7b46777f87"
        },
        "item": {
          "id": "d888a032-11bd-44dc-a9a6-962ab46da576",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6ffe1d75-c3ed-4d59-9cf0-7781afe824e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "8b852183-f3bd-42f4-bf1c-70a7d777f4ce",
        "cursor": {
          "ref": "d10b4211-0d69-4eb6-ada5-01d009fa166c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "287ecb28-3598-48f6-bcdc-d49deb3e550b"
        },
        "item": {
          "id": "8b852183-f3bd-42f4-bf1c-70a7d777f4ce",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4c53be9b-2ff1-4425-87c7-964ba3b9a57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "47e55f4f-946a-44ff-b52f-e39e72bc9746",
        "cursor": {
          "ref": "3c909de4-b79b-493f-8c91-5c4894495371",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b3dda684-a01e-498d-a274-9d404b49b345"
        },
        "item": {
          "id": "47e55f4f-946a-44ff-b52f-e39e72bc9746",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64f8272d-11b3-42a5-89ff-2e7d51c87afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650228f3-62c3-4a9f-a155-19013fa367ac",
        "cursor": {
          "ref": "3f0b0e69-c3ef-4cd3-a377-61bf5c58eee3",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4a9ffc8d-d77e-43c2-a291-c8fd56393835"
        },
        "item": {
          "id": "650228f3-62c3-4a9f-a155-19013fa367ac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d40013e2-514b-4f50-9706-780f0a8ace57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1ce89e-d3e5-431e-b28b-fe707e1a3a21",
        "cursor": {
          "ref": "079218a1-acbf-4b09-89f3-0d9f859c4a66",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bd8c17e5-a4ad-4206-94cb-5f29c4facb8e"
        },
        "item": {
          "id": "4b1ce89e-d3e5-431e-b28b-fe707e1a3a21",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "52fd8282-5be3-43f8-b87b-e849e39814cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cc41c0-7c2b-41f3-a463-641e05b93ebc",
        "cursor": {
          "ref": "3c1b0c57-60a3-4141-969e-dca96d44196e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1c59b8b1-6ec2-4db0-a968-03ffc4802959"
        },
        "item": {
          "id": "b7cc41c0-7c2b-41f3-a463-641e05b93ebc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9087b536-2028-4815-bcbd-30de2b9246e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176b9e75-5620-45a1-8241-f748c6250ac4",
        "cursor": {
          "ref": "23eb5f13-d01c-4219-9faa-4269919ba1b1",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3dfa7eb1-50e6-4c9e-87b4-ba5db4832d8c"
        },
        "item": {
          "id": "176b9e75-5620-45a1-8241-f748c6250ac4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8dd12e60-e36d-4f59-b545-08e7a1229c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048311cf-b858-4ed3-b7ad-d0fe71b1f9e9",
        "cursor": {
          "ref": "67cf22e7-fe57-491e-bad0-8c0c29aa7d18",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c5c7705f-7312-42ed-852d-7d8a3bb3552b"
        },
        "item": {
          "id": "048311cf-b858-4ed3-b7ad-d0fe71b1f9e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ebd5240c-845d-4bfe-b76d-b8f7ddc2f4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047744fd-f087-4b63-8516-fee3b354176e",
        "cursor": {
          "ref": "cf4bd96a-9735-47a5-87a8-d7d72eddc0c1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "797f9507-9dd8-4940-9546-7b1d8416c3a8"
        },
        "item": {
          "id": "047744fd-f087-4b63-8516-fee3b354176e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7699ccd9-0207-44d9-bef4-970745566642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3730d982-2101-41e7-8c54-614498a0d9f0",
        "cursor": {
          "ref": "6ee79fab-b293-48ba-aeee-0aa93aa157e2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "93ee83c1-1efc-4fda-b301-48474d3064aa"
        },
        "item": {
          "id": "3730d982-2101-41e7-8c54-614498a0d9f0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3215f0a8-fd88-4f9d-8243-3fd4412d98ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984a0279-7487-459f-8de6-e8e3ad9fb551",
        "cursor": {
          "ref": "a5e9d74c-cf51-4c7c-823d-e67344ac41ad",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4e5b0e15-d5bc-4021-b91f-31335a389f2e"
        },
        "item": {
          "id": "984a0279-7487-459f-8de6-e8e3ad9fb551",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "db0901fe-95ab-4ed9-adc4-d54be34d3d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610af356-4204-4ca5-ac9a-4e828c121b56",
        "cursor": {
          "ref": "90d95d8a-ed5d-48a3-9057-4190f2ab6e0e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "28c6fada-39ba-44f5-b2f8-f07c14e605f5"
        },
        "item": {
          "id": "610af356-4204-4ca5-ac9a-4e828c121b56",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fdb4d640-5055-4d4d-937e-e03174a2db54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553084b2-a6d5-478a-ba92-7835ac5199ce",
        "cursor": {
          "ref": "469b990d-6d88-425f-9712-cd03d6cd2866",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9de6cfab-1d7e-40d7-a4fa-1e6266934c38"
        },
        "item": {
          "id": "553084b2-a6d5-478a-ba92-7835ac5199ce",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c1d1b849-8056-4c21-a448-4463e8764de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bafb231-68c5-4d07-a6c8-86930075f2bc",
        "cursor": {
          "ref": "4c2699bc-0b52-439c-bee9-053b7ff3bfa8",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f9601a8c-87cf-483c-88d7-ca9ebcf798fb"
        },
        "item": {
          "id": "9bafb231-68c5-4d07-a6c8-86930075f2bc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd4831a7-f669-43e0-89c1-6febc57a5d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc29223f-be74-4481-86b8-b23e690194a5",
        "cursor": {
          "ref": "567b108a-96c1-44a8-9d2e-b21ce98ccb1a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d537207c-1bca-4368-a881-237adef3f08d"
        },
        "item": {
          "id": "bc29223f-be74-4481-86b8-b23e690194a5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "95d8d994-43bb-4a21-b3d8-606e4a9cb90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747a206c-1a5c-47d9-8854-78b2f2538806",
        "cursor": {
          "ref": "0a115983-ed26-4909-a743-6db2dcbb49de",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e740dc2f-2871-4f1b-a8df-83b477190a91"
        },
        "item": {
          "id": "747a206c-1a5c-47d9-8854-78b2f2538806",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac6e2c1a-99e1-4719-bc4f-240480cd4291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1091ece2-980a-48c7-91df-f744b30edb97",
        "cursor": {
          "ref": "e750b139-e7de-4c24-92cc-4f53bad0a7c2",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f14274b7-099c-4284-9876-c8ebff510e1c"
        },
        "item": {
          "id": "1091ece2-980a-48c7-91df-f744b30edb97",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dc95be47-28c7-441e-8a7a-e4e9179fb78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d43de6d-aa22-4d05-909f-0d636de874e7",
        "cursor": {
          "ref": "9a3c30fb-a2e0-42c8-9e2b-8f112e6b061a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9957e37c-4d45-4dde-a90c-b62814cd50d0"
        },
        "item": {
          "id": "2d43de6d-aa22-4d05-909f-0d636de874e7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1e2faf07-1cb1-4e2c-9d5b-aa29d19dfb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa225b3-a2c8-43cf-af2c-85df59c1d8a7",
        "cursor": {
          "ref": "1985ac7e-428e-4e03-bdf8-1ea2bda44905",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f5df2ca6-d5da-4120-b7a1-c3273b956fc2"
        },
        "item": {
          "id": "3fa225b3-a2c8-43cf-af2c-85df59c1d8a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f90ff35-b605-42cd-80b8-6ea51df4e19a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 129,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "873f43d9-15ed-4c3e-a972-be4f2fdf02d6",
        "cursor": {
          "ref": "9b9e7f9f-f22d-4579-a4cc-3f0341f80cb5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d5f9f7c5-6481-4ff5-9146-e28e81416a2e"
        },
        "item": {
          "id": "873f43d9-15ed-4c3e-a972-be4f2fdf02d6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8f5c4acb-54d8-49e1-b43e-c94fb33f2ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c107383d-cdff-42a4-9ff0-712f3b3fc50d",
        "cursor": {
          "ref": "e1307593-8fcd-429c-ba28-a7f8584edd51",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ad520a14-5700-4964-9c65-95670b4de8ef"
        },
        "item": {
          "id": "c107383d-cdff-42a4-9ff0-712f3b3fc50d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4c092f13-3d7a-469a-9cc2-355401a5880b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6d759a-19b6-4e83-ba4b-22886fd3a8e0",
        "cursor": {
          "ref": "273a2f2b-e83a-4ca2-9b3e-2dd41ca076fb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a8703fda-015e-49d7-a69f-b0c0d92cbc23"
        },
        "item": {
          "id": "8a6d759a-19b6-4e83-ba4b-22886fd3a8e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1e910898-c701-4480-acfc-e51f82cd5f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fad83e-1fac-4061-a1b6-b0fd31fde510",
        "cursor": {
          "ref": "8bde8ab2-160d-492b-a5f6-42677ac8e4a1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e2671133-1902-4ea2-89e5-d039f6f6fc51"
        },
        "item": {
          "id": "c6fad83e-1fac-4061-a1b6-b0fd31fde510",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5d05da16-3645-4535-a162-e1eadc406f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c06643a-ec01-4a02-8dd4-9999218cea7a",
        "cursor": {
          "ref": "72b28b53-09bf-4b32-9f3b-aad11d3b7193",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "917eca86-c391-445b-97e0-61f980f20d17"
        },
        "item": {
          "id": "0c06643a-ec01-4a02-8dd4-9999218cea7a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "98dfbc0d-4569-4eee-aa98-f7780278c61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4f266c-39af-4cd3-9228-4a2220d27b1c",
        "cursor": {
          "ref": "01f0cf37-adf6-4b0d-a656-8a3243fce93e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "55e4dff8-1da9-44d3-a07a-ff9de2e1bc34"
        },
        "item": {
          "id": "df4f266c-39af-4cd3-9228-4a2220d27b1c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a60e788-f823-429a-88fe-9f0923b82230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609a4304-1ea4-47dc-8c01-ebe81d48c37b",
        "cursor": {
          "ref": "0ce9f049-c32c-4ab5-846d-e73263489f31",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f68e6ce0-5aa3-4911-80ff-8b39a2490a6b"
        },
        "item": {
          "id": "609a4304-1ea4-47dc-8c01-ebe81d48c37b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "38633eb0-778b-4eb5-88ba-a048df0f85e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4ee64c-a6a1-41b7-99ba-2739bb0c7099",
        "cursor": {
          "ref": "c35612f7-382c-4410-9d60-38cb7734d50c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bbfb0f50-ea56-4806-a62e-4d18a0439126"
        },
        "item": {
          "id": "9f4ee64c-a6a1-41b7-99ba-2739bb0c7099",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "23866deb-d7eb-4ebf-81d3-0ed0656a1a4a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "2dc00d99-c46f-4dad-809d-621e713155d9",
        "cursor": {
          "ref": "8ef62f52-841e-4380-837f-205eddb80068",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0e3508be-f193-4451-8600-03e33d586978"
        },
        "item": {
          "id": "2dc00d99-c46f-4dad-809d-621e713155d9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1649343a-c54a-4c4e-a0b5-3d6035c06d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df05277a-1dad-483f-9351-b7bcf231832f",
        "cursor": {
          "ref": "877e333e-9671-4815-96ac-17b1207953ba",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4ca99d3f-4d2b-47ab-85a1-3f452ee3d720"
        },
        "item": {
          "id": "df05277a-1dad-483f-9351-b7bcf231832f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f1841a1d-dcd2-403e-94fc-6cbf0607845c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911e84b3-a631-4453-8f95-65b5c25f09fd",
        "cursor": {
          "ref": "5d19275d-50ab-4c5b-b083-925b7a027930",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "226ef412-3638-4730-a5c5-5bcfd28bfac9"
        },
        "item": {
          "id": "911e84b3-a631-4453-8f95-65b5c25f09fd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "66c3b72f-bba2-403e-8e9c-dbf6e1569bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f605dd5b-1a63-42d6-8b12-ffdc2b25f91e",
        "cursor": {
          "ref": "90e23363-3c22-426d-a356-22d80848206b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5bf2932b-49f3-4f1b-b8da-e7522beaac7c"
        },
        "item": {
          "id": "f605dd5b-1a63-42d6-8b12-ffdc2b25f91e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "222c5404-07b0-420c-a295-98aa1b4ff383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c9d8e3-a950-4136-9f41-8b2e409bab60",
        "cursor": {
          "ref": "b411e117-bc1a-4020-ae57-e277a40459b3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "318b4216-e92b-44d4-8dce-6d635e064549"
        },
        "item": {
          "id": "30c9d8e3-a950-4136-9f41-8b2e409bab60",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f35082c8-1f01-4b66-bb61-22fce80d4383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe61532-f046-4ab7-aa74-2877e09dc5bf",
        "cursor": {
          "ref": "bde82e9b-4e68-440b-ba2a-73e659b63025",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e9ceeb9c-6438-4639-b435-eeb6d8cc6e40"
        },
        "item": {
          "id": "dfe61532-f046-4ab7-aa74-2877e09dc5bf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de2afbc7-ff66-4cd5-8496-1e307a099e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e984264-f535-4513-a645-fa35a4b17699",
        "cursor": {
          "ref": "e3f5ed0e-a7e5-4cac-b9f8-48f675ae1e32",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4ab60443-1dc5-4fa2-a90d-f123eb5020c9"
        },
        "item": {
          "id": "6e984264-f535-4513-a645-fa35a4b17699",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2cbcc978-8ad4-4362-adc8-93b8a563d1fd",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "281c933a-db5e-4b66-a85e-2289198a2a8c",
        "cursor": {
          "ref": "31e92a80-14fc-43cd-8b1f-e9a5ff4c01d2",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "410059a7-6649-4ed0-b451-075fb22616ec"
        },
        "item": {
          "id": "281c933a-db5e-4b66-a85e-2289198a2a8c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "defed159-6102-4e25-97ca-6928cbc8b2e1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "67c5e4bd-0ca4-4c09-be56-dace4e229ccb",
        "cursor": {
          "ref": "7c9e752f-ad7a-4eb2-b4d8-0a5adbd7d6a4",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ea9f90c5-52f6-49e5-960c-3e07825445df"
        },
        "item": {
          "id": "67c5e4bd-0ca4-4c09-be56-dace4e229ccb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "79fce058-b459-47ce-9ede-b6ecc2d23a63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a9313956-dec3-4fec-8126-4ce2389d9220",
        "cursor": {
          "ref": "5042d0e4-af7d-4b2b-b192-4de4fe0ce9f9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b8285622-4f69-4e33-adea-656183d81d60"
        },
        "item": {
          "id": "a9313956-dec3-4fec-8126-4ce2389d9220",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "094a17b1-11aa-48f6-b7b9-485e64f60999",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "2030ea2d-5b09-4a58-8dc6-318ad56bce87",
        "cursor": {
          "ref": "3df3da3c-0969-49b8-9cd5-eb593c95665e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "50eb2079-8d71-4635-947a-006c5cf52b7e"
        },
        "item": {
          "id": "2030ea2d-5b09-4a58-8dc6-318ad56bce87",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f7a6b18c-0200-444d-b819-740816cea62e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1ed9afd5-6924-4db2-8387-a23a4af2c738",
        "cursor": {
          "ref": "e6635eba-46c3-4f73-947c-2897de5adab8",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "022051ac-e4ee-442c-9cd8-6abb25d92532"
        },
        "item": {
          "id": "1ed9afd5-6924-4db2-8387-a23a4af2c738",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4f5bed47-6eb1-465d-819f-14b3b3b8ad97",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e63f9f71-8d6e-4ab5-8905-c7ae594bd313",
        "cursor": {
          "ref": "6a8cd7d1-2f67-4612-9b87-b49267f7c74e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "925a506b-2010-4859-94fe-ffe5c164e364"
        },
        "item": {
          "id": "e63f9f71-8d6e-4ab5-8905-c7ae594bd313",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f461fc65-5e84-4524-a6a0-c3b2089eb75e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c4d0f9-fefb-4205-8ca4-f71e32eca24b",
        "cursor": {
          "ref": "11dbcb80-fcd7-4aa6-af7d-c341d633a774",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "98398459-3a17-46cb-b4b8-4593091ed03c"
        },
        "item": {
          "id": "13c4d0f9-fefb-4205-8ca4-f71e32eca24b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0b09c42e-4da8-4a9a-a963-597244431f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b52ec2-dea2-4c0f-a1db-bf41f55470b9",
        "cursor": {
          "ref": "73391332-fd11-4228-91ab-b92b8edfaab7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6fdc9b2c-e050-4b08-8d98-1eccbdfe1726"
        },
        "item": {
          "id": "b9b52ec2-dea2-4c0f-a1db-bf41f55470b9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea66d612-ba0a-453c-9836-11d10eb5ab25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b834ff7-15c1-4292-a77a-9c0829fc3bb4",
        "cursor": {
          "ref": "bbc97f18-2373-4e76-8772-15e16d3df1b4",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d0bfcee4-f5ac-46a2-9508-17e211b87f27"
        },
        "item": {
          "id": "1b834ff7-15c1-4292-a77a-9c0829fc3bb4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9668f048-9d03-4969-9953-09ee26cb64af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4c0751-3bd6-42dd-8ed2-f2439437444d",
        "cursor": {
          "ref": "c7de38f1-2805-4b2f-8e7b-b6d180ec57a1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cf2ac0c7-2e54-401d-8666-e9cda3e25466"
        },
        "item": {
          "id": "6f4c0751-3bd6-42dd-8ed2-f2439437444d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4d066247-e1dc-41f2-9a68-729feee8cb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3787b188-2516-413f-b3c0-973c517c093b",
        "cursor": {
          "ref": "0100f6c2-a0e3-4fd5-90ed-21912c4482df",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "96399197-fc4d-47b0-b1c9-0e2be20967c6"
        },
        "item": {
          "id": "3787b188-2516-413f-b3c0-973c517c093b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "03460a3e-b387-41d6-853f-d79ebdc7c09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6248552-0766-4573-a753-0f3ce7a75981",
        "cursor": {
          "ref": "27e45c05-f4c5-4294-9d05-76a563e9c810",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d6174448-9ed9-46b8-8701-3b753c22721f"
        },
        "item": {
          "id": "e6248552-0766-4573-a753-0f3ce7a75981",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b4d2e2d2-5f86-4715-8d6e-c26d4f727c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8a7be2-52c2-45ab-ae22-8ade3edde0f2",
        "cursor": {
          "ref": "35c5cb82-4c37-4da8-9739-b25a32a6faa7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "23d7245c-918e-4f69-bef5-daa0a79a45d9"
        },
        "item": {
          "id": "ef8a7be2-52c2-45ab-ae22-8ade3edde0f2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "daafec5f-04c3-41d6-802d-04a65d42cc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a2cd5-88da-4522-807a-07fe30aa95ad",
        "cursor": {
          "ref": "469bb087-c451-4663-8165-e452ce695044",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "db1d8cf4-a7ae-4e79-b217-e1e3f4898655"
        },
        "item": {
          "id": "f35a2cd5-88da-4522-807a-07fe30aa95ad",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1441c113-f6ba-4edc-b98c-6b2469a97065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434fde84-7709-40fa-82cf-b6e6755a0435",
        "cursor": {
          "ref": "010b8223-8d2e-464f-b3f7-1d115b0d0b0a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a3d9a66-bbea-4dcd-b2a7-10ea3ad7710b"
        },
        "item": {
          "id": "434fde84-7709-40fa-82cf-b6e6755a0435",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c6dfee9b-afa3-4234-9a7e-e83fb0f3a590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7fa00d-d753-401c-8aca-240982507fc6",
        "cursor": {
          "ref": "9b5727d9-f272-4b79-b19d-f5243427741e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1b36a3f7-e9c5-4b7d-8cac-89ecced1e848"
        },
        "item": {
          "id": "bb7fa00d-d753-401c-8aca-240982507fc6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "94a3d288-1508-4444-8aea-1d0103f04312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c40b04d-53e9-42a9-9bf3-fa484f0f90b6",
        "cursor": {
          "ref": "6232e69b-f5e0-465c-b20a-c6ceeb5a7555",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ee3735ef-e566-48c2-bf39-8cec0a2f28f6"
        },
        "item": {
          "id": "4c40b04d-53e9-42a9-9bf3-fa484f0f90b6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3ea4f5fc-31a4-4dc1-b23d-1297f215694a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b8317e-3bd2-40ad-8197-7ddc6cd2d369",
        "cursor": {
          "ref": "691db054-bc45-4716-ba14-6eb4a0e97df3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e1948c4f-85be-4189-9725-4028c1fb5932"
        },
        "item": {
          "id": "48b8317e-3bd2-40ad-8197-7ddc6cd2d369",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c0244a3e-d899-4d06-afd1-34f3ed7e712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d78e3c2-0e0b-4cd5-8d95-b722597be842",
        "cursor": {
          "ref": "b841ee89-cc67-473c-ba5f-2d9c254d267b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "62232526-9166-4951-996d-7459c72812bd"
        },
        "item": {
          "id": "1d78e3c2-0e0b-4cd5-8d95-b722597be842",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bb421fc5-23c9-42cf-b955-67f7f980b53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c218bc25-c9af-436a-8660-1b2a0efd9522",
        "cursor": {
          "ref": "d908ffb6-317b-4c80-8ff7-1f327b19e221",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2d73fbfd-1221-4247-96b8-f2ceecf95c00"
        },
        "item": {
          "id": "c218bc25-c9af-436a-8660-1b2a0efd9522",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4036e47e-5b9a-4475-875d-ad74e664b587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a37f469-f021-4088-888a-ea37c042a7b1",
        "cursor": {
          "ref": "4d58efcc-bb88-4f44-b0b4-10de9bdfe531",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2c48f5ca-7ddc-43a5-a7cc-059e970ab3f4"
        },
        "item": {
          "id": "1a37f469-f021-4088-888a-ea37c042a7b1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e2dfff6b-8eb5-4d91-8e19-e772ff9dd693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e672c34-d6dc-4aae-b207-52887daf6192",
        "cursor": {
          "ref": "be7c9069-ee49-475c-9e16-aaea3b5a8e6a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dc7751f6-ff81-4163-b12c-f0aee1e22fb8"
        },
        "item": {
          "id": "7e672c34-d6dc-4aae-b207-52887daf6192",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7fa80a5e-c5ba-4a23-92da-53682f07191e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384551b5-2fe4-4b98-9e10-b223ee869ea6",
        "cursor": {
          "ref": "585e5be7-1bee-4361-b3a5-3e836d9199fe",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c1a52625-1841-4ecc-ba14-8a23ffce523e"
        },
        "item": {
          "id": "384551b5-2fe4-4b98-9e10-b223ee869ea6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "06fb7af6-1a64-4829-b180-5a1267d65687",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "519c5328-9f99-4531-b617-5bd7c1bcb47a",
        "cursor": {
          "ref": "d1df75b8-b68f-4046-8eb6-6607d3d62c97",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6081ffad-e7b4-495f-adda-c2b65fb5cee0"
        },
        "item": {
          "id": "519c5328-9f99-4531-b617-5bd7c1bcb47a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "131a1db8-b100-4911-a6be-ac73179cebf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eedab11-8ba7-4c39-8ef4-49ca63bf96af",
        "cursor": {
          "ref": "53da7077-1a87-475e-8e69-85cbdeccde30",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "61e08540-9f4c-4a5a-af42-940ce4fe323a"
        },
        "item": {
          "id": "8eedab11-8ba7-4c39-8ef4-49ca63bf96af",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9aa96708-43d4-4c75-a93b-2a13d77e1540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95fa011-50aa-4984-94f4-f7d23fcb339a",
        "cursor": {
          "ref": "c72c641c-f59d-435f-a71b-6317ab49641c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "044fc18e-f723-4cce-b2b6-db0cc6237db5"
        },
        "item": {
          "id": "a95fa011-50aa-4984-94f4-f7d23fcb339a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "94db560f-6e89-4070-8d37-3d55bde64a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33b95e9-4add-4748-b012-a123fc0f502b",
        "cursor": {
          "ref": "ad999681-36b7-4012-a3e6-55a016091152",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1a73d707-8e32-4b8a-a417-28390ede45ac"
        },
        "item": {
          "id": "c33b95e9-4add-4748-b012-a123fc0f502b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ea260b24-e4fb-4d1c-a709-622ace3a0edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de875463-28b3-4335-b7b6-681cd579302c",
        "cursor": {
          "ref": "15102d06-97dd-4199-bb13-17eeffae616f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b2ffe5bc-2c2c-4298-a684-aae827c881c2"
        },
        "item": {
          "id": "de875463-28b3-4335-b7b6-681cd579302c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fb6e2579-9c12-470c-a06a-28dcc8f7d389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5448a6-85ac-4291-a298-d982be2a8d09",
        "cursor": {
          "ref": "c298c083-7595-44f7-a14b-68b5e87b0447",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4e9c8933-8af4-4d5e-82f8-d5f0b1392e33"
        },
        "item": {
          "id": "8c5448a6-85ac-4291-a298-d982be2a8d09",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "efd32377-48bb-4788-afd8-25bd407b8863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9906e3d-e115-4419-8880-4557c57c2550",
        "cursor": {
          "ref": "002c7f48-b16e-4a01-a64c-aaa33c6bede3",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c85b1d2b-41f3-433c-9b34-4488f0d42bf1"
        },
        "item": {
          "id": "f9906e3d-e115-4419-8880-4557c57c2550",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cb450f5c-86d9-4e33-8933-624174d460e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d40eef0-a1b8-49c6-b1ff-43d2d1329bed",
        "cursor": {
          "ref": "44430e6b-dbed-4dd4-80f6-517e4cdf697c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6fd8b96d-09cc-4c4f-9ee3-f9500935887f"
        },
        "item": {
          "id": "1d40eef0-a1b8-49c6-b1ff-43d2d1329bed",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "303f763a-7d59-45b2-8246-d3e5c1ee6d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfa899d-c3a2-43f4-9c2e-810c9af30bc3",
        "cursor": {
          "ref": "3043646f-568d-48cc-bd3a-84036b404588",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c6b70310-584b-4265-b369-e4c702f5d16d"
        },
        "item": {
          "id": "7dfa899d-c3a2-43f4-9c2e-810c9af30bc3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "834661e5-8d4e-46c7-ada3-d73675df5ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3ef318-2bac-494a-b8f8-264d9508a634",
        "cursor": {
          "ref": "d10d0a69-0912-4ac0-9163-d3fef196aaf4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5aa1bc19-030b-4900-b861-577c8c2acbc2"
        },
        "item": {
          "id": "7f3ef318-2bac-494a-b8f8-264d9508a634",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1174c85c-a1ad-4706-a640-dce820464ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550e9268-efae-4d9a-82a5-1f54ab62a868",
        "cursor": {
          "ref": "791b1495-4eb8-4ec9-8acf-d43753583f66",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c3bba508-7044-42fb-b7b4-c97e50e82a01"
        },
        "item": {
          "id": "550e9268-efae-4d9a-82a5-1f54ab62a868",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e8378f14-97c8-4f52-a56d-e3c3f0d43dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7161021a-13ee-4b0c-bbb3-38ec670b4945",
        "cursor": {
          "ref": "dd7bc593-7d80-4c47-95c9-1edd19ddef7a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e954aedc-a954-4f43-83c1-6bc9dc8935f0"
        },
        "item": {
          "id": "7161021a-13ee-4b0c-bbb3-38ec670b4945",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6a616b85-9f5a-43c7-aa57-3f5f709f6ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60fcffe-fcea-443e-859e-bb943aa2261b",
        "cursor": {
          "ref": "9671b35c-9cf0-4dce-8cc7-3f5837a42fb2",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "acf4925e-5283-45d8-8ad3-0f4e21e55271"
        },
        "item": {
          "id": "a60fcffe-fcea-443e-859e-bb943aa2261b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "18ae2b3e-fc47-4331-8ae2-631e7c28786a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9b10dd-3ded-4b34-aa7f-3ac49fb207dd",
        "cursor": {
          "ref": "390995a1-a099-43f9-936b-153d8ad3df68",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e2a74262-4ed6-4b85-87a2-ec702faf6534"
        },
        "item": {
          "id": "cd9b10dd-3ded-4b34-aa7f-3ac49fb207dd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "68ac8f79-156b-4b93-9d4f-e293292efdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19112c8f-e20d-42c7-b552-7ac5b3799509",
        "cursor": {
          "ref": "d939fcf7-ca25-46d0-9b11-d26a61dd83a5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5568d91b-a154-4a55-a0c7-c79340a481e2"
        },
        "item": {
          "id": "19112c8f-e20d-42c7-b552-7ac5b3799509",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2ae56a4c-6d2a-44ae-9c32-8e1d598bcb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0843ad-c925-4e17-8913-a331681c6a5b",
        "cursor": {
          "ref": "c26901c7-3321-4ade-ab4a-d85b43f71048",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0f238aa2-aa9c-4778-967b-8bada3b50bec"
        },
        "item": {
          "id": "8d0843ad-c925-4e17-8913-a331681c6a5b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d06b5657-ed60-4828-ae1e-24b7696fa126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ca10d2-f1d5-453f-968d-4b26cd19bc27",
        "cursor": {
          "ref": "eb3c3ba7-23d8-4f31-9178-19e5256af95a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fb2b3ad6-81b9-4cc3-a568-b196391ab7aa"
        },
        "item": {
          "id": "c6ca10d2-f1d5-453f-968d-4b26cd19bc27",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "82d84559-cd28-4ffa-8ab7-d30e14ad4dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905e9c9f-0310-41c6-a16e-a92b316a7107",
        "cursor": {
          "ref": "20ce24ed-ed05-4ae3-8b79-47978c0b46ce",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f85ebb81-b9cd-419f-9723-c93e935f495c"
        },
        "item": {
          "id": "905e9c9f-0310-41c6-a16e-a92b316a7107",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9a0e66e9-e5ce-4132-a361-22a2e03eb016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7325643a-4ee1-40ac-9591-510392f51995",
        "cursor": {
          "ref": "9ea884f7-7049-4804-b5f8-e9d489c37063",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fd6dede7-ad2c-423b-adb2-37fec23ce9d8"
        },
        "item": {
          "id": "7325643a-4ee1-40ac-9591-510392f51995",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1ecbace1-d504-4bfe-959c-d3637ec650fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698e0094-39e2-4e4d-9ded-1ac8b6ec51da",
        "cursor": {
          "ref": "f13fdc44-1d62-4a89-a47c-4c83ba408234",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "14627fde-c5ac-4965-b93f-1142eb10fc20"
        },
        "item": {
          "id": "698e0094-39e2-4e4d-9ded-1ac8b6ec51da",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ec1841cb-1c5f-4694-ab26-e38d5f4a3127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e53b33-05d6-4f3f-b42d-bd32ba9133cf",
        "cursor": {
          "ref": "5046f4bc-1570-4205-a1dd-e0d0b0306fb1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "98e7f3a2-472f-46d4-b544-7fe8d9e611ed"
        },
        "item": {
          "id": "c7e53b33-05d6-4f3f-b42d-bd32ba9133cf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c3e21f1e-351d-436c-bc96-aec8d2f91b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55692c43-6897-402b-8e89-05735918c9fe",
        "cursor": {
          "ref": "117e5464-db24-4f3c-8269-e21cc5ddfe99",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "572dd4d2-0f0b-45cc-9e71-e8839a587d97"
        },
        "item": {
          "id": "55692c43-6897-402b-8e89-05735918c9fe",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ee023ac6-6e07-4130-b719-0825f3447f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738cb7fb-6e90-4b61-bb1d-9a77a84851f0",
        "cursor": {
          "ref": "788f68e9-58bc-497e-b370-a7c410fe1a5d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "73a82f78-7cb6-4a83-a359-0c07825e298c"
        },
        "item": {
          "id": "738cb7fb-6e90-4b61-bb1d-9a77a84851f0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "8528976f-1d1c-4198-be69-66884d411af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fb0398-5ec5-4ae4-b1d5-adbb52c70b18",
        "cursor": {
          "ref": "ef84bcbe-68f0-4677-a5e2-024df34bf566",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "83eb36cd-e4d0-4d54-a5f2-91076da73cd1"
        },
        "item": {
          "id": "a2fb0398-5ec5-4ae4-b1d5-adbb52c70b18",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "97c3e2a3-dd2b-403e-a5e9-cd58849afcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec805f0-ca55-42f9-abb1-e60ae67d241e",
        "cursor": {
          "ref": "cfc7115f-e154-496c-b57e-b34ccb39a2b3",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "dfeed930-7578-4cd6-93e5-26ca272a11bc"
        },
        "item": {
          "id": "aec805f0-ca55-42f9-abb1-e60ae67d241e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9e84f500-7152-465b-9c10-7e14db9982de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faf4f60-adba-4730-a554-5d2e5ff91712",
        "cursor": {
          "ref": "09887019-3209-4548-920e-4b7d7247291e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e62f53fc-867e-48e5-8369-ef0369514f9e"
        },
        "item": {
          "id": "8faf4f60-adba-4730-a554-5d2e5ff91712",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "08241645-fe68-4bb9-b3fc-698b2ddc17d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c7cb4c-0354-4160-ade2-d907601f98cc",
        "cursor": {
          "ref": "fd353410-59d0-4ee3-96a1-c672da7a3952",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b59b4114-f41d-4cfb-9d0b-c19a23db331a"
        },
        "item": {
          "id": "23c7cb4c-0354-4160-ade2-d907601f98cc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c114912f-6dcd-4d4d-9272-92712fc1bb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebddcad1-bcec-45bd-8b75-1bb50a85c7ac",
        "cursor": {
          "ref": "2312d0f6-e7a9-482f-8434-7b51304245b8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a99133c4-7d5e-4139-bc58-83d604c7c80a"
        },
        "item": {
          "id": "ebddcad1-bcec-45bd-8b75-1bb50a85c7ac",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "da5a2297-b9ad-4352-a4fb-bd1c27bd36c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38af3ce-d294-48e3-9b8b-9cef6c915a80",
        "cursor": {
          "ref": "b9611b7c-c2f4-4b0b-a747-7fe9e0ea265d",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "78e24004-d856-432b-8cba-7568ab9efaa7"
        },
        "item": {
          "id": "b38af3ce-d294-48e3-9b8b-9cef6c915a80",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8212cf67-7cc7-4b83-b98f-2805faf3c523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0d3b13-8b4b-4b2c-aa45-8911cb49c99c",
        "cursor": {
          "ref": "ee75d91b-fd3d-4eda-85e2-6df957b12b81",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ff5064c8-c120-46cd-ada5-94edacf1c47a"
        },
        "item": {
          "id": "6e0d3b13-8b4b-4b2c-aa45-8911cb49c99c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0beca7e7-a065-420d-a1e6-23df0718da69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fc9c61-e41c-4c20-95fd-aeef52d29c9b",
        "cursor": {
          "ref": "76576162-542f-44a4-9224-da4321fe29c4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f7b2e804-7198-4fa3-a7f3-30e03f12e3dd"
        },
        "item": {
          "id": "22fc9c61-e41c-4c20-95fd-aeef52d29c9b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ea69626d-6ec1-4371-97c8-941c1e383fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e127f251-c96f-4ad2-83b4-e13ef7f167fd",
        "cursor": {
          "ref": "ffaf189e-94eb-43d2-81d7-9879b2a419c6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c278a342-58e4-490c-aae0-82e8ecd0ef76"
        },
        "item": {
          "id": "e127f251-c96f-4ad2-83b4-e13ef7f167fd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "03c6a797-38d9-41f5-9f7f-e94746e4655d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0519868b-fc23-491d-aec2-b3ab17d86b49",
        "cursor": {
          "ref": "efd922e8-38f8-4924-a3e8-a56d5217e2e8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6f678782-3ccc-452e-9c96-5f1e5e045857"
        },
        "item": {
          "id": "0519868b-fc23-491d-aec2-b3ab17d86b49",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6fbc0caa-2114-43cd-a259-8a6303237733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7debf5fc-7f6a-4131-ab24-0aebd9de8918",
        "cursor": {
          "ref": "8180f97f-f6a6-4907-afe6-349498f84595",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0ef53b15-b92a-4640-a4f5-9744b35c1d09"
        },
        "item": {
          "id": "7debf5fc-7f6a-4131-ab24-0aebd9de8918",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "be026ad7-5032-4ffd-ad21-91d3398cf19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073ff180-6992-454a-8b3b-30e34060c218",
        "cursor": {
          "ref": "97fa964c-28cb-4a44-ab3e-944474a83124",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3c9f27a7-bc4b-4af9-b59a-14c2f3e17434"
        },
        "item": {
          "id": "073ff180-6992-454a-8b3b-30e34060c218",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "042b9586-5a57-45fd-af33-dadcced4ae00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76d2a56-286e-447f-91d7-64a4e0a317f8",
        "cursor": {
          "ref": "aaa40258-c0cf-43f1-9676-9529755733fb",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2a316ab0-4af0-46e0-a6b2-561b1bc723b0"
        },
        "item": {
          "id": "a76d2a56-286e-447f-91d7-64a4e0a317f8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d3bdb7cf-d17d-43b1-9b89-34b4990a1ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e171532f-cc43-4e1f-82cd-3e4789f68b76",
        "cursor": {
          "ref": "117209fa-fa35-44a0-8035-21467fcbeb4b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6413e96a-a605-4c08-86b0-21dc3fc9d498"
        },
        "item": {
          "id": "e171532f-cc43-4e1f-82cd-3e4789f68b76",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b7649c4c-4d71-43f0-8399-14a995cc6a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04f1cfe-02b2-4b59-ad22-f245bda397cb",
        "cursor": {
          "ref": "f499ec87-09b5-401e-bbb4-0b1de3daa16b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "542ed535-f61e-466b-acc1-34743083aa70"
        },
        "item": {
          "id": "b04f1cfe-02b2-4b59-ad22-f245bda397cb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b781166e-2cc2-4eb1-a3cf-0fe7d0317d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cec7f9-264b-45f9-b7a5-18f162a21426",
        "cursor": {
          "ref": "ed6abf8f-e019-4c56-9dae-7c3f87d66eeb",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fe7c621f-f54b-4728-bd47-01a1cc55efa6"
        },
        "item": {
          "id": "d6cec7f9-264b-45f9-b7a5-18f162a21426",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7d132b2c-97a8-41fe-95f6-2337161e1d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee421ed4-773d-4c31-bc4a-65f02594f4f2",
        "cursor": {
          "ref": "c9bd07a3-7984-4cc2-a3ad-584de80f82d2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "93377677-eec7-4b2d-b744-cbbdd1dce827"
        },
        "item": {
          "id": "ee421ed4-773d-4c31-bc4a-65f02594f4f2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6b14473f-897a-4b47-82ce-c513aee90f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b968b5-05e8-4141-be61-f29a38003dc2",
        "cursor": {
          "ref": "7e5e71d9-61d4-476a-9305-e6961e6631c3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "370f4e36-ee16-49e5-8190-a7e593a33419"
        },
        "item": {
          "id": "40b968b5-05e8-4141-be61-f29a38003dc2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8ab60fa3-67ad-4b5b-a4d4-dc46f299ca98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b769d2e-2539-4d6a-ba7f-d1c7f326e1b8",
        "cursor": {
          "ref": "98ff5bce-702c-4990-877f-32feaa34f985",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "65381df4-2652-4ef0-a310-08fbdc62b079"
        },
        "item": {
          "id": "8b769d2e-2539-4d6a-ba7f-d1c7f326e1b8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "715f1f7d-e622-4325-b150-e269b03737e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbbfc88-e5af-460a-b997-d643cb72eb40",
        "cursor": {
          "ref": "f779cbcc-b0c0-401f-a2a0-1f964473d01c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f9b7a0e8-e872-4a99-9118-338995a11c4a"
        },
        "item": {
          "id": "fdbbfc88-e5af-460a-b997-d643cb72eb40",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "33619a99-210f-40fa-a051-2ff57d3310af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef23d197-f6b4-40f3-a51a-2b8ad7ec068b",
        "cursor": {
          "ref": "c2ebbfb8-9d3b-4e70-ae25-144c7f84e415",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "37acab10-ec10-4dfd-91cb-b1b3dbace085"
        },
        "item": {
          "id": "ef23d197-f6b4-40f3-a51a-2b8ad7ec068b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "29a2d2e0-bf0d-4384-913b-87478f829295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835c5187-7e9a-4dd3-8c39-7f2725dd5d73",
        "cursor": {
          "ref": "8e42054f-33f8-4694-9d22-854eda076210",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f80a32a7-c6c7-4942-b171-73ef469cf754"
        },
        "item": {
          "id": "835c5187-7e9a-4dd3-8c39-7f2725dd5d73",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "09550737-e263-471a-afb1-0bd852aab1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d517c7a-705a-4b42-b9ef-dfcc0c744a0c",
        "cursor": {
          "ref": "0a018426-14cc-4558-92a8-26740532f2a0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cf62e4fc-b152-444a-b60e-be9d4533e9cd"
        },
        "item": {
          "id": "9d517c7a-705a-4b42-b9ef-dfcc0c744a0c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1c274040-66f4-47e2-99fa-8b6a3c0ccdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbbcd8b-6c8c-4538-9347-7dc02f763672",
        "cursor": {
          "ref": "94c090b8-a11c-4b67-8e9f-58076300188b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "600bdb5e-6ed8-4685-a33c-c9bbb5409cab"
        },
        "item": {
          "id": "cbbbcd8b-6c8c-4538-9347-7dc02f763672",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3305bb8b-eab7-4c05-a063-faca8df7fa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7711af0-c10c-4187-b60d-7d34f8f94505",
        "cursor": {
          "ref": "efc8c1d4-3c81-4ac2-b7cb-ca77313a5d3b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7583fbb7-722d-4164-a6b8-392e7900f25c"
        },
        "item": {
          "id": "e7711af0-c10c-4187-b60d-7d34f8f94505",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "72f0cb30-7b7a-49f0-950f-3a7d10c67b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a18902-25d0-4e94-a16f-e3d963428106",
        "cursor": {
          "ref": "d3d1b349-2617-4672-84b3-d3955cb73722",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "002d82f9-1e3a-4a7c-880f-fc5f0c8a7508"
        },
        "item": {
          "id": "93a18902-25d0-4e94-a16f-e3d963428106",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ae0acf97-dbfd-4ccc-9a20-88e329314117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfbd1d3-c4c7-4918-b184-1667410d8f74",
        "cursor": {
          "ref": "b9a8b822-25c7-4ea0-9e3b-7404eb8d3ed4",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "613b2c82-8aa7-47cb-93aa-d555d2e418c8"
        },
        "item": {
          "id": "9dfbd1d3-c4c7-4918-b184-1667410d8f74",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e5f392ba-2c2f-4601-8deb-2d8b56b27f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b057dab1-cb6f-43aa-b2e5-33ff74e7015f",
        "cursor": {
          "ref": "d67f25a2-1907-4cd4-87a1-7c3a1ae42b5f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7795e142-27c9-47da-b1fa-bd9ab74adf88"
        },
        "item": {
          "id": "b057dab1-cb6f-43aa-b2e5-33ff74e7015f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b289ab59-278b-4d7e-a334-5252875dd1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12416d13-2cb6-48a3-b065-f58af05091c7",
        "cursor": {
          "ref": "bd812bd0-fe0f-4798-a59c-4b1b633a00ec",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bb4d1033-157b-44f7-a050-f9e81f152d22"
        },
        "item": {
          "id": "12416d13-2cb6-48a3-b065-f58af05091c7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b7a17a1e-83d6-45f1-a8fb-62218af1485e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65aae25-c852-4ee7-8a9c-fe2ace4af269",
        "cursor": {
          "ref": "9843687c-4e54-48d0-8fb3-88b692950b19",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3f913550-c847-4d40-bf7b-e04a9288768f"
        },
        "item": {
          "id": "a65aae25-c852-4ee7-8a9c-fe2ace4af269",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d08dae75-a280-4c13-9133-bcc902541037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f5d3ba-b193-4ac0-8873-54ba75ac2a79",
        "cursor": {
          "ref": "67ebf810-7b0b-4f48-8b3a-8d356ccddae9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1c108def-5ed5-479c-9d86-2e96e5d17547"
        },
        "item": {
          "id": "45f5d3ba-b193-4ac0-8873-54ba75ac2a79",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "db9d7685-d767-4712-b12a-0c2e26aeb0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a2d3f4-a2f1-490e-bbdc-b1da0c6b37a8",
        "cursor": {
          "ref": "4ad82444-ae39-45d3-b2fe-e02bfaf7e250",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "aa41b565-ff91-422b-91ca-f2f40623a5e9"
        },
        "item": {
          "id": "f4a2d3f4-a2f1-490e-bbdc-b1da0c6b37a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c24cabe2-7164-46d3-9aca-8999214e0efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613d29b2-6931-4670-a921-5f5b3e7b4689",
        "cursor": {
          "ref": "4ca6afde-ea4d-404a-bc3d-9f18fc3c5826",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "622fbdc6-e0f7-47ce-8f27-566ba1651ef3"
        },
        "item": {
          "id": "613d29b2-6931-4670-a921-5f5b3e7b4689",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "46ab53ba-9606-49f4-936b-34df2ff7bc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84436c36-12ad-4ac2-b66c-88aefd289382",
        "cursor": {
          "ref": "ec371541-fa89-4b5b-95e8-a7e3be015d49",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "eb4ad276-7a86-4c5a-8dd6-87573ed9d9ae"
        },
        "item": {
          "id": "84436c36-12ad-4ac2-b66c-88aefd289382",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0e35dee5-68a0-48f0-b7df-d4adc2f25e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c33aab4-86be-4305-9794-9cce19457176",
        "cursor": {
          "ref": "a0a2512c-2e71-4f84-8310-067ce047d23b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9ccd6729-2115-45f9-b99f-aee2dc3ab77a"
        },
        "item": {
          "id": "4c33aab4-86be-4305-9794-9cce19457176",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4e6cc473-3e95-4395-aa3f-34c0dc0392ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6253ece9-ac7a-40e8-8a48-c25d9c9130e3",
        "cursor": {
          "ref": "955f2ba2-4075-43d5-9248-5f2b15cf8f6b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6ca9c695-e53d-4a6d-9c93-38467c42c292"
        },
        "item": {
          "id": "6253ece9-ac7a-40e8-8a48-c25d9c9130e3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "34213cbf-edd5-4c4e-a88c-c56f5fcc397d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fc03ff-3225-4a21-b0ca-4dcacbbf3fa3",
        "cursor": {
          "ref": "b83cca2d-bee5-492e-8e92-1ada39de68f7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d7e6c361-60db-4f43-b21e-672c9871d79c"
        },
        "item": {
          "id": "07fc03ff-3225-4a21-b0ca-4dcacbbf3fa3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6b24998d-74d5-4807-b28a-1c07b9182271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1ce298-c535-47d0-a80b-32f5ad9b4fad",
        "cursor": {
          "ref": "0d1fb421-b503-453c-9b24-bb9668310194",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dd4f3f27-0ee3-4258-b3a3-77fea929dfcb"
        },
        "item": {
          "id": "db1ce298-c535-47d0-a80b-32f5ad9b4fad",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f577051a-0eb1-49ad-9512-1c036464f725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059ea443-4f81-4b2c-ab9f-77d701f923d2",
        "cursor": {
          "ref": "f1ab0ed5-2640-4059-9d8a-e6cd825a6c61",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2436cc4e-101e-4c42-afa1-5c397373b9eb"
        },
        "item": {
          "id": "059ea443-4f81-4b2c-ab9f-77d701f923d2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "01e109ed-c32f-4955-90ed-d21794cd1aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413291a3-5e55-4907-8e3a-46640be965d6",
        "cursor": {
          "ref": "f473a437-d829-428e-adad-68d246a28e05",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "87baff14-1193-496a-8834-04bf0ad5ab96"
        },
        "item": {
          "id": "413291a3-5e55-4907-8e3a-46640be965d6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2fdf7dfa-347e-4c50-923b-53ca008e30db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8317e36-2d14-41f6-bd6c-a1333c5a4c6e",
        "cursor": {
          "ref": "51c5f13c-137b-435a-9e22-12cb17606d82",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d192e477-60a8-4ae7-b02c-b4442b181b55"
        },
        "item": {
          "id": "c8317e36-2d14-41f6-bd6c-a1333c5a4c6e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1bd4d4f9-4a41-4c49-a145-862a134af273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb69469-c71d-4347-ae5a-4d75f0e6293d",
        "cursor": {
          "ref": "a81d1231-d8d0-4ab5-879e-609daf942d58",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9eee0828-8c96-4e7f-bfa2-b2adbdb9c6dc"
        },
        "item": {
          "id": "2cb69469-c71d-4347-ae5a-4d75f0e6293d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "37b96e1d-5f20-4cff-a55e-0f2b52ef57f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4827d7f-b5e1-4e69-afcf-a44879bb1e6f",
        "cursor": {
          "ref": "7fdbfb7e-f6dd-4ed7-b36c-b4de7d43e1d2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "827907d7-c8e9-4bc8-bf0f-f2e45d7f59bd"
        },
        "item": {
          "id": "a4827d7f-b5e1-4e69-afcf-a44879bb1e6f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ba57f8e8-ab06-42e9-aaad-ba640f39f55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ecfbe1-5b5e-4c6a-be40-4175d3ac4435",
        "cursor": {
          "ref": "c2dd02af-8600-426e-8fb4-192cc8c5738d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5a9f8132-3d1c-4966-99db-38142b1ff50a"
        },
        "item": {
          "id": "31ecfbe1-5b5e-4c6a-be40-4175d3ac4435",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d9d7aa8d-f0e3-47d3-9815-99ae783c84cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8f013a-45f0-4ed7-849f-faa93ae88d88",
        "cursor": {
          "ref": "0cab1f39-b69f-495c-92e8-2ecc9cdbbd1c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "afece5dd-8976-4fe2-bc36-4593c3baf43a"
        },
        "item": {
          "id": "ce8f013a-45f0-4ed7-849f-faa93ae88d88",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3040b9a9-2631-4083-b153-84d6dcc4e18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77ebd1c-ad1c-4403-9097-818126a427f5",
        "cursor": {
          "ref": "e241f7d4-53e3-49fd-a113-5a4def41cc1f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "46d8b7f5-016a-4e22-9f27-bdad4d5f6d91"
        },
        "item": {
          "id": "f77ebd1c-ad1c-4403-9097-818126a427f5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "11a6889d-578c-48a2-8da2-778e94405a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4bfbd5-846a-45d8-833a-253238fabf51",
        "cursor": {
          "ref": "178f2c13-3b9d-4327-af69-5b50af61b142",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f9d16a3a-26c8-4bba-9cf9-6477243df69f"
        },
        "item": {
          "id": "2e4bfbd5-846a-45d8-833a-253238fabf51",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "11d22d9f-0b1d-44e0-972e-4f610c6db7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f05d5e-ff42-4763-963d-df255c5d23f1",
        "cursor": {
          "ref": "8a07a7af-be9d-472b-8343-ddd5fb5f3e87",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "275f5426-dce1-4ea8-b30e-d04de4364a29"
        },
        "item": {
          "id": "46f05d5e-ff42-4763-963d-df255c5d23f1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3e4ae15d-8515-49e3-8ee6-a10d29aed0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df960a80-cebf-480c-aeba-b35e484a9ec9",
        "cursor": {
          "ref": "ffbe06a9-0173-4a71-b463-61c4e66521c0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c813994d-6367-464d-8acc-a6852e3055f0"
        },
        "item": {
          "id": "df960a80-cebf-480c-aeba-b35e484a9ec9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a1fcdb26-66e9-48e2-aa4e-ed9fcb6a6144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef827ef3-a667-4ae1-bea8-d913044a49fd",
        "cursor": {
          "ref": "7426d999-0d8b-448d-b4eb-f3d64b32d2b8",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "809368f5-7f84-478d-9603-258d8517ca7f"
        },
        "item": {
          "id": "ef827ef3-a667-4ae1-bea8-d913044a49fd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1b771ffe-f29e-4f08-96e4-c03ce07c9f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48781382-e1d2-4419-b3bf-81bc04e15471",
        "cursor": {
          "ref": "f8179f6a-b2fe-4ff4-8ffa-3304e2437aef",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "29822fff-2d21-4544-836d-4016e3df4ee6"
        },
        "item": {
          "id": "48781382-e1d2-4419-b3bf-81bc04e15471",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d3f0d2ff-d7cd-44d1-bb1c-6db6dc905c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3317615-63c3-4a1a-a199-dd83ab0d257a",
        "cursor": {
          "ref": "87c5cf9a-53c2-47a5-88aa-497b4b51f9ff",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "101acdb0-dc21-46e6-b4d1-e6bcff0947c9"
        },
        "item": {
          "id": "b3317615-63c3-4a1a-a199-dd83ab0d257a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e8feda65-7ff0-487d-8ead-97d3b002cb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc23e93-238c-43c9-a291-c3a34243d032",
        "cursor": {
          "ref": "e4efbc4f-6a66-4883-a589-b8af60503d0e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fd9d6584-7925-4bfc-8354-c9156aa52104"
        },
        "item": {
          "id": "1cc23e93-238c-43c9-a291-c3a34243d032",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a7aaba2e-ae9a-49c5-b859-b4bafd4cd134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97f4b0f-8038-48c9-becd-f0eca56026c7",
        "cursor": {
          "ref": "d7cf4e9b-cdc3-45e8-a8f6-c134c5bc0686",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e2d0aaa0-37cc-4706-94fe-320efc016b55"
        },
        "item": {
          "id": "c97f4b0f-8038-48c9-becd-f0eca56026c7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c07ffe14-1e30-4205-b1b6-7a9df36c34a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ce1691-0fe9-4b42-aa24-c10ab29c5eec",
        "cursor": {
          "ref": "46669aa7-9161-4107-8f53-bf4a1b3025ea",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "75d3108e-7b5f-4dee-87e1-c832953dca5b"
        },
        "item": {
          "id": "d2ce1691-0fe9-4b42-aa24-c10ab29c5eec",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d9ff51b3-397c-4770-b85c-e0e3c0af57d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1535b9d-8dab-4b7e-b85d-1ced072ca97b",
        "cursor": {
          "ref": "52b40594-595a-4bf5-91ff-86a3d08965c8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4c90839d-72f7-40fb-a930-d5c841a09328"
        },
        "item": {
          "id": "e1535b9d-8dab-4b7e-b85d-1ced072ca97b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c6e48dad-8086-4067-85d2-62b28a13a613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa166cf-3657-4ec9-a3ef-f4974f5bb318",
        "cursor": {
          "ref": "76068575-aa6f-4022-8171-a52233143e25",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5e7b56a2-6d07-4ed4-9fe8-48f9df0e9850"
        },
        "item": {
          "id": "cfa166cf-3657-4ec9-a3ef-f4974f5bb318",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1eb3e738-f185-4322-b3c8-7b8114dacfa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d25191-e697-4445-821a-4d2955eea1ee",
        "cursor": {
          "ref": "f05e4b49-59d3-44e6-8658-dda288a5348c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c6df1561-6cba-4ddb-a5ac-4505ccc7cfb1"
        },
        "item": {
          "id": "e7d25191-e697-4445-821a-4d2955eea1ee",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ad689186-2194-44e9-8cc5-c1c76677e025",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da076cfe-5ef9-4d95-9f2f-141f519da242",
        "cursor": {
          "ref": "dbb51110-cfaf-4168-9375-67334e4a014e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fd363f9c-cf25-4c9a-b7f3-4627a305f045"
        },
        "item": {
          "id": "da076cfe-5ef9-4d95-9f2f-141f519da242",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "370d60d7-56c1-495b-9cbd-9fca063b99f9",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b638f4-f517-4d43-ac68-b7024865f9ab",
        "cursor": {
          "ref": "dbf1f4c9-7cfb-472f-84df-c81d45bb3c2f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aca3b6bd-0119-4798-bca8-c2522e931666"
        },
        "item": {
          "id": "47b638f4-f517-4d43-ac68-b7024865f9ab",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a69c55d6-d4ed-4852-8274-30bf1dc5d59a",
          "status": "OK",
          "code": 200,
          "responseTime": 3260,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c9ff98-ed46-4c88-bad3-8432121f07ec",
        "cursor": {
          "ref": "44a16147-510f-47a0-ad79-07936f5bdb1f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2eedadf7-b944-48c0-a389-32dac0f24224"
        },
        "item": {
          "id": "a2c9ff98-ed46-4c88-bad3-8432121f07ec",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "73e53fd3-46e3-4af0-84fc-2c51c239bac1",
          "status": "OK",
          "code": 200,
          "responseTime": 2199,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6af7ba3-9b24-4a87-80bc-3ecbda2048c4",
        "cursor": {
          "ref": "c7d08d9b-c1f3-4253-b02c-0047b945f02e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a569d688-9b5d-4a5e-9c61-b31432f8860a"
        },
        "item": {
          "id": "b6af7ba3-9b24-4a87-80bc-3ecbda2048c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8cb36dc4-603b-4609-81d5-1a7f7d0ab18f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6af7ba3-9b24-4a87-80bc-3ecbda2048c4",
        "cursor": {
          "ref": "c7d08d9b-c1f3-4253-b02c-0047b945f02e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a569d688-9b5d-4a5e-9c61-b31432f8860a"
        },
        "item": {
          "id": "b6af7ba3-9b24-4a87-80bc-3ecbda2048c4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8cb36dc4-603b-4609-81d5-1a7f7d0ab18f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bb5519-a4b1-4614-bd0d-313b3caa529b",
        "cursor": {
          "ref": "b4c31067-876d-41ef-abe0-eabaeb8e52e7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9ad88953-5ff2-4837-b5c0-ea3cf53c1f34"
        },
        "item": {
          "id": "83bb5519-a4b1-4614-bd0d-313b3caa529b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "14e47894-3e13-45ec-bd01-9a28042b1659",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cd2337-0d13-4126-826c-52e53c72565b",
        "cursor": {
          "ref": "580758b6-ff54-43e8-937f-77e7f9437116",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "782859be-e03b-46bf-bce0-eb12fa309af7"
        },
        "item": {
          "id": "58cd2337-0d13-4126-826c-52e53c72565b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "908577b0-80f9-4b70-9ab5-86341314668c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}