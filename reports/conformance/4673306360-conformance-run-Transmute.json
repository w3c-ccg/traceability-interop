{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "90cc5cc0-0e49-42a7-b3b2-668efca32ec1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9fb00ce8-5466-4a9a-a24f-51d8ce4dd66b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b086357a-3b32-417a-b9c3-86ac6ceaf98d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aebaf923-eea0-4ef9-8b44-2b7530f4b972"
                }
              }
            ]
          },
          {
            "id": "4bad1238-5bf7-44bb-82a4-33e50852ccec",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0fc3df26-73b1-466b-b159-7c65d62adf66",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a842b0ad-6281-424a-ad6a-acd750a37e9d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d66cac59-d9fd-46cf-bcb6-5548bc2475cb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2017451b-f36b-4b12-bb18-533cd0d5203a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "574df4ae-6643-4094-9eb6-60c41efe8c86",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97c87645-8ede-4c65-b7da-ba4dcd27a360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8829fb8f-5d9b-49ab-9358-484582c26d2c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3a4febb-1974-4ffe-8f1f-a45a69efa6c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "149bfffc-725d-4322-b5e0-3ee6caefa03b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5fcf0778-222c-4ef4-a468-3c9d56848489",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c425bf1d-f31a-4734-a5dc-58a74087a9e8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a23d6475-c186-49be-8a65-13b85d2ea2bf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "296e7c3c-8aee-4491-b811-8b9e98c14a84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2650debf-bc19-4046-aaed-573d79ec8511",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd33b4d4-d8ae-49fb-878b-7a17c7d23ac6"
            }
          }
        ]
      },
      {
        "id": "39003e0c-d652-434e-ba3b-a595804af1f5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5b154329-2ba6-4ee7-93cb-74d47a92641e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf981ec5-a258-41a2-862b-8d69d4bf14c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73af37b6-780f-4272-82c1-c03fc3e41b88",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91132b73-f1ff-4076-b07d-90b18eb072a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77b36bc3-57dd-42ba-80f2-97550eb2fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743fee62-2db3-42be-8d04-09c26853bc19",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf67b24c-a594-4137-8b80-bdf88a2bb92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6496b76-7271-4fd6-ba4b-2e6c93401ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee14f9fd-5c71-40ac-abb2-7d5a72b92b24",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92853e8b-79d4-4880-99a0-3f07b6b3958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3b3bfbb-9bd7-4344-8a4e-b180b3a18810"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "83e4e2c7-ad98-4295-b0ce-323862312d8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "175efa79-3ca9-48eb-af2c-0edbc01c1b3c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bca13d-36b1-42f9-b271-481f39dfc08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b17d32d2-e010-42ea-bce4-fcecb088ba66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90213b6-27ed-445d-af59-33b659f1748d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0353463-50de-4568-b15b-168346c8294b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453268a1-2f5a-4770-92fe-2ba59df32467",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9014bdf-f257-401a-89b4-37ec5296666b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5967fdb4-155d-4ce6-9ea2-e58d68ad3821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3482603-4e72-46b2-bba5-087e4f78d65a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "88f72c4f-bfd6-4000-a75e-907c2d54225b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cf97431d-1c78-4ef6-a2a4-e3d8ab057cda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82d19216-abbc-4f6c-885e-82de939c1215",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e70ccf8-a9ea-4c45-8ed9-4d49a93d0b20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8c05efa9-540d-4fc8-9be6-872bac7a874a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fa840bc-cd2f-4ed7-a424-239674922a25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "926718df-2d7f-4819-adec-98f3e8020280"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a572845a-ba49-4911-82b9-17150726a9f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "426dcbae-1765-4ea6-8a97-8ead0ae4fdb6"
            }
          }
        ]
      },
      {
        "id": "c0902a9b-392a-4b12-b839-793e3ad47712",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "befe605d-2eeb-4343-9e11-7c951a5296f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "483901c4-65a9-4501-a016-f7e8c3394cdd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e0e80b65-e2cd-42b3-aead-980e2748eb03",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9489c1a9-90d0-47a4-94b8-a4c863c20c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529799a1-14c8-412f-a0de-00723d78e4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2f13b7-037b-48e8-9b12-04610f0eff60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b635f0c-71d7-435c-9022-3a79dbb8e0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fda27b-3382-4ee5-b6cd-67282e12c413",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33487cd0-2a84-4355-9a9f-de3ffd21e9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c68f864-fee9-479d-8747-4fea280df0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b51bc0a-7e7a-409b-a4a4-df82d55afdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acca286c-fd59-4541-a7b7-013b9635c4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cb1e45-bad6-4ecf-a692-80678b61787c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba4b773-e168-4120-a80c-f89d6981a6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d380d2-f739-4912-97ea-1be5ebe05689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23125548-e0c4-4c7d-9edf-fb5d0ff6f737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cee2b3b-ede0-49f3-82a8-d2ae38e38616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7fd947-eab0-439d-8141-e3092b6d5fd9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0615d2-0452-4a79-9a1f-a1738d30d4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67711e25-80dd-4c5e-9807-e9fbef57617c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155b75ac-453e-473f-ba99-a7c4c50e36e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b031dfe1-b767-4086-be51-0d61908e0f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c51779e-0c89-44ba-b242-f95162724268",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2c3b7d-0aab-4935-83bb-5da5d9a79b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d79e28-c705-4e83-ac9c-5fee6bd4f8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd721caf-ed66-4780-a00d-1c73fa0b9a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9734f9c-2406-46e8-a339-ac3c6bd99962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0f2a4f-98c1-42b6-bebc-d2587bca3a21",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96881d2-1d87-4ef1-8a84-fbacf2afa5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0900a397-8443-4ada-b39c-729b3db20fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155d94b1-34c4-41d9-98ab-ab845b22c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a4a8342-3578-4f80-b01b-a4e2ac856aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8197c1dd-e5a3-4bde-9071-c03eb363a441",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496d08e5-ff13-43ef-a1c1-e02ef22cb686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bef22a-e673-4800-8b46-3953910c6bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254d2630-274c-4d64-a93d-9c8c9dba34f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30c25d0c-f6bb-440d-b417-6759dbbeee0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5906174c-f3f0-41aa-9a77-6fc1faadaacb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54344f20-19a4-4ed4-9e7c-10dd049e0a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b75edf1-c6fc-47ee-885c-0b0919a90673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283f208-bb6f-490e-8ca0-4052c6a999c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c37c8b34-d0c5-4240-8cde-3f94e96a9360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13ed12f-d2a3-4e46-9766-201e321af0ce",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1015850-bd67-4d22-b678-aa2c0a0d0b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b67f41-1fc1-494d-aec6-90e0da5d81bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53549e7-47c4-4dd9-8583-336d3287614e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7973581f-87c5-4fce-83c5-40ff9484baa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a38e58-a1a7-455e-abdf-b6b6960170dd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1488f96-c988-4966-8a73-843b7dce6a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d7bd7ab-e42e-4564-be71-e8c6305c38ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8c361d-5f82-4668-8fa3-935afaf58961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e67064bb-8b51-4578-9e17-996f2ee139ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae155108-24c5-4078-b1cd-c1ab521d2c9c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b581f4f3-377f-4e67-acb0-133f4580da7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d66a84f-a013-4f1c-b65f-8d5eb8366198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b641eb8-4ee3-413d-a43e-4cfd4852d0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "938ce759-ffaf-4ecd-aafc-5398667f3d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f2b4e2-5993-44bc-906b-fb305541de5c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d95e6eb-ae01-4980-bc98-62c141c272c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d469af-de7e-40fb-a9f4-c64b657edcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1b4b14-54f9-4245-b90d-1a29cdb7b379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb8db2be-9e45-42ae-befc-1615a15d9702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9f64d6-1e29-4474-b0a0-0ffea8075e60",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e14a81-87ca-433f-b2b0-d023b4395a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aff2f02-72b4-4310-9e41-6085588e2ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b22925-6e71-4162-8794-694af7b2bcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f42aa9ab-a2fb-4aeb-9566-d95877011bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcfeaa1-0686-4b9c-ad2e-407cf2bc5943",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71afb826-d871-4414-aaa6-c3dc4c28eaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a491e5-29be-47d2-8e4d-83e446b6e26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6121980-6206-46eb-b40e-8ef1e185e222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c6ad0e9-b535-4406-81e3-73f4439d0766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9bdfca-a76e-40d0-97df-e34683a61319",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9ef5f2-a70c-4656-bbdd-378411e7e2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6321092b-eb60-45c2-b545-b0d506fcf5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792a6380-990e-4395-8817-509c826b1124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b00fc13-2479-4d93-8e3d-54758ca1ea75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8767ea-9eab-40ae-b219-0d911859966d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1cc600-72c3-4cbe-80ae-cd4407f4077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31d007e-6765-4e77-b3d3-244fd11a5505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a86e87-2691-4b52-a908-738b358641ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73bf7923-a73b-4ea2-83ae-21433d3d8215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d976ca65-ce1d-426a-948e-a95a0b072a82",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e22e9e4-f9ec-489a-afed-53eda3bc23e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c308092c-8fa7-4556-afbb-4a17231434a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849f3d1d-44fa-4c59-82f7-bed152c9a0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a499be2-2fad-46b2-b1ce-c80317e47195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b19ec02-dec9-4275-b65b-f6da7382fbc5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf8d832-2ee2-4001-aa51-1cf1fd70fba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2cefdb-4a4a-4ba5-b60d-fe327537dba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33677ab-2847-4701-92f8-15fd21949cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "59c88243-1935-4a73-b1b1-1dcdbacc5b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ccbf2b-322c-457b-9818-550c6aaad633",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1250d5ef-b208-442b-a201-b9e9b0c76a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a3ea4d-fb56-40af-805c-c0e3de172a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1a82cc-e2e8-47a8-8e5d-4ac3059d69a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d604e512-676e-4ceb-bd67-1ed97fd150f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7801dc28-1259-4d81-803d-8b17fe214502",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99db521b-33bb-43cb-abab-d61ddfc4de42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9f4479-2204-419a-a7a9-e86ce140dfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfaef39-f1b0-4624-bf37-b0ac413cd414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e458bc65-9d11-455d-b3b5-5e23207021f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e7a360-8eab-4ff3-af75-457aba3df11e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7a5815-3883-4bf4-8652-1ede2cd2c0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb4e8db-35eb-4100-9dc3-f44d43ac7d80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468bce87-a124-4b2c-a1ac-b30e4757c06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25591ce7-54d8-401d-9356-a3ac4c0066a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc550f46-6bbf-4576-8e01-7daeed1bc527",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1842e7-b6de-43c1-a4b3-f7261a48f46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b2f9c5-0450-495f-832b-d4b24d5f9b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3f83dc-064f-4283-8ee1-67eee43da87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bfe28b8-8d61-4f12-9ec2-bf0073665129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eaf2b08-eab5-4ea5-a167-b69a4e9423d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe91ff23-6246-4e8b-b238-65498ae8e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453eebb2-b54d-477a-a434-e8f59bb3e173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84a2e8d-e3cb-4c29-97ec-4b7c4b11d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aaaa0463-e5dc-4a72-a3f9-a04edc068a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b15d0f-99b1-4aa0-9b79-b535eb91855b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e40b175-d318-4746-a3bf-e1cfe4e11479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f623e3-7910-42cd-8de2-44fa08277f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e33913-d76f-4502-9ec4-fd44517b788d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "22ac8153-4619-484d-b87c-5a9477884c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b18eda-758f-4eb3-aa7d-139a235e0e73",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50f3ff9-ce73-435a-adec-47bf8c22d82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057719aa-03ea-47df-bc19-92e1633ab638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ac8eba-eca3-4726-b5f4-9799be897529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4857c7b-1ab5-4e1c-8c1a-bc9ca6b50b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebafcdc0-3a0f-4181-a01c-cd2a01b67582",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e260be-42fe-4860-a998-13b54416b24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f6274b-4759-4068-a181-75db47e2c19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5509e546-42cd-43f2-93c6-931c9368f692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e22e125-a5be-4f88-ba90-858c825812e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4954774-e8af-4a19-bac0-f3c428b8dbfb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436d306a-66c0-4d0b-b475-3a664f5aa500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d60013-874b-47a0-9f0c-56394aa6b46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180d17cd-9693-4c60-8321-fb91d809a3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64a8527f-14fa-4aaa-99a8-325a354a8b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b00294e-9a22-4eb9-9c5b-b913203430b8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a86e03-fe59-4783-a608-aa397a998621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ce02f6-85d6-49ab-8284-8721e0c314f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5b8d5d-9141-417a-acf7-bd243c55b7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75c5590d-32a7-4e24-80ca-19c46d2fcfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056e80cb-92d6-438e-9e82-e04568a62ed5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9865b452-5763-4356-8d42-29af0d3782dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6ce21f-9052-4812-9997-65dbee8df881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa6598d-e3f5-44c2-9a56-a02a5fc4dcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38056c39-cce5-4b4a-b607-368b54e61d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd881939-d7d8-4f9b-9aa7-b43dc958b4ae",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ded724f-a2e3-4c20-a7cd-3faefef6bf57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727707fb-4c1a-416b-8783-b534b00959d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f07836d-3024-4830-b2b5-e55cdb7f6c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c015fea3-831d-4e4e-9a95-b6a8b1574f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8207e717-fd27-4c25-95eb-4e5689ae660b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709123a2-9f79-482a-a883-49559b5f95ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d7780b-ed86-405e-a343-94ec92863a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b876e4-d854-4371-839a-ce7080d842c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6b5479-c6de-4a55-a23e-9880e5c5aaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f03b1e-9507-4d2e-b24e-4eda3a5b89bf",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477370d8-2890-4090-aaf8-6f0ae402b66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0d07dc-3f8a-4ba2-91a7-f1ed89fe1be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1fe84d-faa4-4939-b7e1-b538972740b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40b14b5b-f54b-4b11-9c75-31c5e29c4d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83814d8c-19b0-4239-bf4d-62ae313d17a8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e7e8f2-c350-495b-a7f7-64e3990eab39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1a83e5-4028-44f3-b7b8-d1b211b70a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea9137f-b723-4fb4-b566-9afa7dc24e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f945228f-4751-48c3-bc92-5fb5c37452e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723bb79a-7d8b-4da0-8f63-080626255e82",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b6013c-2d26-45a1-bbf3-71b0a1dfcf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4add020c-409b-488e-991c-dda8ce4506a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bbc62b-0e65-4e25-939b-fce285566753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97fb48aa-f92f-406e-ab56-6fd4bd8d11b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a153b8-a7a5-4ff8-9ed7-1caac39e940c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43b2d66-5bf0-487f-aebd-c6695bddc838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72da3c28-477d-43d3-b101-59e57147caee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4a127a-606a-4e82-9324-0524b7bc1b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "640a9de4-bcbc-406c-80ab-f91306d76866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2409ec6-c6b2-4006-a943-e298710cf231",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6fb990-a2ef-4149-b46f-df1a11e5c85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "658e4d90-c95d-47ec-a3b9-207c14b9a136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274bb824-ebf9-404b-9bef-92c1e5e662f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f29cc6-1515-4699-a8dc-1bb43191673d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ddc609-f7c4-4ff7-bf3c-045740041a29",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a42ccf-f744-4ff5-9d56-5d60c0b054cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba07040c-9e3f-47e5-9a75-133aa07e87c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83aba29c-d33d-47b9-b04f-471a37868394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7ba48f-404f-47a1-b62d-9d3309116836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4536378-3e55-4f27-b03f-51a382cfc142",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8495ca-28ad-44a6-af30-173fd45f270c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5c162c-9641-47fa-82ae-40e838214ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685162d0-8024-4c19-b84a-7ac54af12586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc78e43-aaab-452c-bb7c-49d6706b8a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355055c5-8100-4f81-b6ce-66579c9f1b5c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c422889c-d5c9-430f-a725-e8c1b7a2c370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e456d53-8d98-42f0-851c-d9e83b9d78c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0dc88b-4db2-4119-adda-4a4427c7233f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d049aa5-fe34-40d4-96ba-9322b076ae94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4e3d4d-6280-494d-8529-3e43bf2069b9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f9140a-cc63-4eed-b099-fce535dac9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92d43d0-d0ff-4de2-b57a-fb26e1c2d9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7223e73d-adc7-4265-8afd-d45d45d6b203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "681343e0-9f32-4d08-9991-981d61e98be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65022d5d-9f1f-4bab-99d2-fc43445f7f39",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419d94cd-743f-4122-970a-d0be6cd339f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7faaeb-263d-4884-a44f-c5f0e6352fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d4a374-ac3d-48e5-aec5-3c00d95c9d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83faf311-c285-40c6-b48a-a9515547fd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940f4332-0bcc-4e97-b527-f221a31b051b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ad02d7-5218-478a-bf2a-a12980543d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6865b92-443b-4906-a7f2-30092eb7dbc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f7b217-ba5b-4a43-943e-0dab878bdf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f95493-ac10-4086-8276-b80c705767ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f24d37-0d76-4c53-b53f-0b2135e62492",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae215f3-c6ca-4b61-a009-135eadbdc406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2d8de3-896a-4780-97f5-4598bbde86e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfc147a-3954-460d-b80e-83c9100e639e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b69a44af-ed39-46c0-8a67-0464ebc1ab88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e866dd-0971-4d77-9737-8d808d451358",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d88709-55f5-432b-8d68-823952a29ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85a3b67-8a53-4ea6-af20-d4770f21d335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfe078b-54a1-4b20-99d0-a34c98d37127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd80b08-9b63-4f0a-8e55-29e6cfd2ca0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db2c4b1-6cfa-4667-a8c9-3f336ac66d5b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4345c7e-df77-4ee6-9cbc-38960fe3469f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c948902-8ebf-4a22-ab18-28b70464f755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678fc415-4358-422a-af3f-02ff6b269890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca7b1c3-7152-416f-87ba-9f579eee6623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab29ad7-3e5d-44e6-8bf6-bcc099f0d1ea",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134c6fb0-4d27-41ea-9474-49e5938283ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6d7c36-6f66-4463-b6c0-976f046a7cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2d2a4a-5b26-484a-8272-957d66795bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "303441e7-70bf-473d-a4c4-a1f90889cb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94df257b-9391-41b4-94fb-a218f3913c25",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f4b3f2-47e1-4c93-92f3-6d2dc90d77c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5be9da89-b516-47e5-9d8a-0992c14334f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fc5062-4eb6-4119-91cb-9a8d561d9abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e40fb02-4235-472f-b2ab-c3dd64e51753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df34d9c2-cb3f-48bc-adc9-e63aaa1448e7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61538e39-ba0d-4cfb-8a7b-0638806cd8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17da4c9c-81f6-4293-b995-e35464307baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640bc0f4-8a12-4efe-9687-b30190dfb351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81897073-4bed-447a-8afc-24bbcfd4ed44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e34185-3dc2-4ae8-acc2-3f5d32fd483e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1960cb95-7ba2-474c-9202-2ff0387915af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99efe114-b641-49be-9d65-730eaa62120e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330af094-12c5-4396-8348-4ec19610c45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbed731f-1743-4345-917e-1d973d292b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5d3e93-d58a-4a3b-bf5f-9bbed8a8549b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca3071c-24b1-4f90-b77b-a77a53ce67be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a352fad-7459-4a68-81cf-928023205202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25318fc2-c7f0-4bc0-9da3-fcc1f973847b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "536393b1-9fcb-47e4-89b8-a7e76a7694e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a2417e-135e-4a53-b4b3-405182274040",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06c24ae-a132-4bcd-8c03-3def41570196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58358518-cd7a-4701-aebe-0f3bdb175b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6ee196-a627-4ecb-8989-c029f8e0ef17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "423da8a3-e739-466e-a49d-503e451ece58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440f95a4-c0a0-4cdc-bced-b6771b0f4f72",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72ecfcf-b25f-4cc9-b352-8f965a33ed71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77950013-6bcc-497d-8dcc-b299703a4a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f36554-1a98-44fc-9399-b58aee99fe72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "76d57d5a-7742-4877-8976-86e1e1e1448b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3a6d1d-e16c-427c-9bf8-76ac973f2c0b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32945b49-de5e-4c36-966b-0fb87247f5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7997ee54-382a-447c-a7c6-35dfc9281c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1b5d7e-bde1-4709-b460-687d7dc72093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5000a8-e5d4-4884-8a18-1547f7ef1884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1009ef02-d8cb-4ef0-94d9-b6fce88cb659",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311b34f3-2fa7-478b-95a3-ee97f0b85c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92eb988-499e-40b9-8a77-c3211904a0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336389e1-7b1e-4aff-a542-f5cb446ab112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ec5c54-1f27-4b67-a492-e0bdcedf01a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfadb56-9dc5-40c9-a68a-6edc5a2d19e0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e655866-b839-404b-929b-951cf4e02539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faebb184-68af-446c-9543-a27d33dabea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea3f5c2-3183-4e00-ba5e-05fc6ad25ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5f3162-d45a-492e-ba7a-4f6b318a935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1f1511-7b79-4085-a071-6dc825926487",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17ae513-13ca-4621-9495-270a133085e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fa9e0c-6f01-463f-ba7a-10b1e741ec66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3ef69a-b034-48a8-a203-4b7f368ae82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "98c8ec69-d36f-4093-aeb3-9d3fb06eb78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b59bb3-155e-4cb7-9ca3-f06886ebc05f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eed426d-88a6-44c1-b20c-790becd9a0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde3c0ce-7f7b-4f9a-a14b-8bba6d2336c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799736ad-bf36-4156-b42c-8cdd9979b6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "663d6fc0-1292-41d4-b0d3-2fbb1a453357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cce936-9597-4cd0-a882-619a44978381",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0fba52-b275-4db7-948e-9cbf826d78e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ff9593-ad47-450f-93c3-c3b1a84f11bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c70130f-86d9-48ee-a34e-9f1f93bc4bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46ee75f1-d667-426b-bbd1-925eca1383cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7a3dec-cb46-44e0-9ecd-8654d41e3ec9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874aa15a-8e9e-4297-ac14-f0d620026d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f222fa8-9094-4d6b-a54e-a4d95eaf5095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18755344-f0b8-438e-9b98-b136999193e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3cd590-4ae3-4925-b7fb-fb2046b0650a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb36051-29f3-4b99-8e17-34a15b874ebc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ff44a2-0014-4ea7-876d-52b327a9ef55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329b9f6e-06ba-4fcc-bdc2-76c867c9367c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab82b2c-a4cb-4d00-8e27-8985048a369b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c472b0-eb8a-46d0-8ac0-f7ecc3d3316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ac8e24-6521-4493-a4c6-dd990a434df5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0767747c-1e42-4ff1-a117-9b1ddcb604ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b669c9c7-2fce-45a2-b840-f17852134783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b162d99-65c2-4ac8-a5ab-aa12636f6eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cf0202-cd26-416a-84cb-1674bc1391b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed620fed-ab92-4576-88c9-7b852c161268",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669c9621-233b-49d8-ae54-1473d1eb2768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64a1fc2-684d-4ae1-8e8e-0d3c95fde214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5acfffe2-88dc-4ef1-9a39-9eefa19290c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c573dabe-8626-48d3-91d1-e3fd08ab809d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae36bcd1-95cb-45d7-8125-288f41e6e1cb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60ec8a8-a9c1-46b5-bdab-0d257a1ab966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c56e6f7-c644-4901-979d-41ee110aa256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69c1538-fa52-4c65-8e3e-d54d9b919e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abffad3-6851-4420-9bbd-776a339fcc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edba72e5-8a0f-450f-8475-574938c9b8b3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11fb991-cef9-4fd7-8021-b53b64510c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5963d0a-8bc6-4ed2-885e-9d3f6855c1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97ab26-b6f2-40f9-aa14-ac2490c0f421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7da8d8-f15f-44b3-9701-ea8779fdd6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1de175e-f553-4b9d-ae86-f613a414a7c5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4659940f-8229-4f90-93b1-e3647247393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fccce32-106f-477a-a31a-b629c3bfa0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eca5db-139e-4a49-ba10-0942dbd8a349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2feb662e-c75b-4eca-9d4a-fa80c1e759d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3c14db-eaf1-4f97-b820-6719372c7948",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea3cfdb-8bda-4651-8b68-33d9eabca837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ac67a7-4c8e-49c3-b650-3a3b8376d165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6029d5a4-83d8-480b-b4dc-128e58c38175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c30fd5-3923-4d99-9c8e-def7a16308af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6b2af1-25cc-424c-8725-283edacda76f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1cbf57-3019-4a9f-b50c-e439e7f5310a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb002ad-d159-4c7e-84b0-255b85970ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66afa16-04e0-4df4-b05d-4a4635ab7710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "545bb7b5-0a07-4fc2-9854-ec5e927863ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8987e5eb-ba4b-4bd2-88e9-955352273d8c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9655b4a7-2a30-479f-a2fa-e599be6cd87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4b5bc9-c75a-4093-9a83-e1b4182825dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2d19e6-3f55-4a02-aa45-66d1e988dbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e9bc20-e74c-473c-b048-b8f5c7c2c8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59e7d80-75fa-4e4b-80b3-5ae55d261a55",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef36ecb-d089-4589-ba37-073bd3dc65e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f803352f-e77f-4bc0-9fd6-e135f61c0b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e843e99-15df-4210-bc7c-42abaeac31bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a0eca4-1ee9-49dc-9b1d-92865602b401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eafc1b-619f-477c-809c-779a6f5c56b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf581dde-815e-4c42-82a3-72af39b79da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9588f8f6-f282-4103-897d-b2fa291c9bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b30701-c605-4bdd-99df-ce0512098ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78591dcd-bd5f-4d6c-b6a3-b400d13ba84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7702cb36-6c5f-4727-b012-53be211e19cc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd4369a-9ae5-4378-ba9a-9fcd4e423ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9d30da-a5fd-4b68-a6dc-b8aa1a494daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac44108-a956-4e40-bd21-fdec022416ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "106b52b9-9d41-493a-bcc7-bba61dd7ac26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86eee353-7c37-4281-93ba-c631ed6e0ef1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668b36d5-d706-4447-9a15-ca8e5f05aea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a6e8251-d7dd-4f6d-9eea-d736d2a6abb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdec4ab-f9eb-42a9-aa14-a621346252c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff29263-6507-43bd-83b4-6142ee321d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c10459-9acf-4cf0-99ee-b7b1329f8904",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cb2dce-2fd5-4493-a7df-f15175db6e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12732e58-d9c8-4d09-a3b5-2c832bddaa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99f3f78-6f8f-45f4-aa03-9b99fe1a4617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "616feb47-64de-44ec-82cb-62338365a27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadb3dc0-19eb-4cbd-a010-f39cb5b5ecaf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1633a4-8d28-4f8e-9f0d-16000659a973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40332531-7319-43c9-a6bd-3be736f253d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b66ae40-f1c3-4fcf-9654-b523c9ca7ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9afc4c49-ffc9-457f-9fd4-cced77d28a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823436a2-a842-48fd-b216-89a80043ad01",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc78bb89-3cc2-4916-aace-53922fcc3824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e930ff3-3289-48bd-9ee8-ade1c32bcdc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67552db7-5067-4ab6-b5c1-8bd7e6f53055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c67d88b-4200-42d0-a1a2-4a8a1b85d3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9d7a17-c888-4dc2-9099-662c1742ec38",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a488a83a-26da-47b1-9f64-16de4e708c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fdd7e4-e144-4250-bc18-43d919b7f957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7a8259-5438-493c-96a7-cd2628eb8a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "054bdb66-0799-43ad-bf64-03987314932e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7b9a57-067c-4d31-845a-5a8bf9246f56",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573f6243-0e07-489a-9267-ef5f977931fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d055c2-fc66-46d5-8585-9532c4304718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea275ec1-3026-47de-b5e3-35d0e62cca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35cb0c6-4a00-4563-91b6-32b24fff9c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d66d579-4d9d-4856-8b68-3aff0bdaf4b7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b451cbf0-7691-4c61-a197-276fa194a540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13a3f4b-9624-4911-bc87-81baad75d6aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39608bfb-a319-4b3f-998b-1fd60713b541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5c91e3-b081-413c-afd4-3989edcadcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e43a70c-219a-4717-8db8-2942240e0f9b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9b0821-6c85-4246-8570-9bb309b890a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cb69c4-5566-46b6-b7ea-836491abac31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00b8620-ca00-4f99-9578-2f6f9e456ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07c091bc-9925-4b3d-8d42-035f7eef84cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b1ebf5-c138-4eb5-aac3-e7acfb174d3a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf227805-f41a-442e-98ee-963ff99ee47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbce63d-df20-4a40-b7b5-5f75244efb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f27dc2-29b5-4d2d-96bf-48f87b07ec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8d5688-618b-4dca-baa4-0bf9ab4f4eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca5ea2b-92e3-4738-b1ed-f8fbfb6273a6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8703fd8-5f57-4713-b7b6-ddf0c7959e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbe03aa-41b2-4d5d-8a88-e63180c12273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab3a54a-c170-419f-9c0d-52fd599c9eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c2e959-ffb3-4584-baef-9dae5b9084cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e47c03-2419-454c-bea4-7cf748896a9c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699374e5-f019-4f11-9e5b-7c516e8e65a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a83ad4-e457-4ff4-88a4-0a3b2c983876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272dc26c-a2a3-4493-8d46-c4c31fb3a839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "704e6e6d-4e6c-4cce-bd62-5febbb54da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980bba7c-1f62-4415-8403-c0cd9fea7c55",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf05b691-d990-41e5-ab10-58b55ce45da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e79061-2f12-4288-a6de-2c83a5204191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ff094d-9169-4b5d-a017-688fe4f53d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5d7aa4-98e0-48ad-81d9-6f7e98803bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9a263e-7ed7-4040-a318-f7ca60c3edd0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439fb3ab-74da-4e7c-be38-b27deb475475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44f42ca-3f7d-45cc-a687-321814c9d4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babdf36b-f006-4478-8814-c1a901f3f951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a50f2221-a925-417f-b6df-facdbb9fdf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7a3228-b329-4a0e-8da9-cde5f66efe2e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80658232-c167-4381-97aa-c2882e86f1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30f2d5c-8b50-4f97-bfbb-f707531103ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b2f960-d35a-4796-a9d2-e9f9fe04d462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c306047-d856-4353-bb3f-1a326df35427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea130ae8-fd96-488f-b183-8fb5eba7b20d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e702531b-5d80-429b-9488-4aec2ce7842b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66f2528-dbb4-4287-9957-1a8e5b90071b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f091a05c-0c9c-4f97-a3a7-dc9c5327f8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1938ea0-f7d8-4d28-bcf5-f08ba0fe1080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e30c2da-a2df-4ae4-9981-d007b59f8b7e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a792620d-e624-485b-9449-90700951df60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e826ee35-5664-4880-927a-191b41e6af7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229c6a7f-889c-4284-b98b-a63915c0dccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c63ad842-ecec-49b0-9353-3120bc97f760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b443eac-3cd0-4416-8385-95925202fedf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eaebea-f3ac-4acf-a360-baac1bd17fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a7d50b-9ecf-4c96-a2b4-9e501d686a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb23ab9-2c79-42fe-99c8-b156c1f2ed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b75a021-035b-4ca0-8ace-0dd5a8afd830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348148ac-db19-4b53-aa22-ad670e5f4f58",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e783e425-69cf-4292-ab97-65aa02cbfb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339f8964-4524-4da4-a89e-907ee862b80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5597336-efeb-4bf6-a952-7e64b73c3d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "518d5ae3-8b96-4591-9751-4f2ad5dde886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fea301-40e8-4084-80a3-91644b0bd0bb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3f774b-9c9a-492f-89bb-fe39a8484700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805eefc9-c1ea-410c-98ce-a73f40eee1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deeab04c-bc8c-4c96-977d-df45fe932be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b3c07b4-d520-4413-a090-6ace11b3c61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491d55c9-e87b-4f12-bff2-3a5de082bb07",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55435959-65e0-4f21-9ecd-a400b665ea3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49bdab0-8389-439a-b4e4-6d7efd7b9990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44aee5c-7e69-4a13-8e27-9fab016bb7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0a9c2d-fe27-478d-a5ea-75c01bc0f4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822c2822-3ad2-4854-84b4-a733f2120818",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecabddb-d7fb-4a6a-be45-6d9048b16e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ab41e0ea-c9e7-4242-bafd-5d0ea0a30ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de8d524-9b98-4826-bff8-344ad3ef0f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b765439-ccd4-499d-8df0-c27acc92ce9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15ac5d3b-f0ea-4c74-a118-d968bef880db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06f86a97-eced-4a63-83d3-5c622f363db5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbd0dee-109b-4f35-9617-0c83dc179a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a50ecc61-bf93-4086-9ac8-1a823fa07298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3e571f-3bbe-4e7f-9f84-007cab7fce95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41d0f999-13bb-4872-8d7d-8893a4502c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316d951a-9829-421d-8c03-b4654b1251c5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5307f9-9bbd-43df-9b55-bda7382939c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bd2a714-e533-4b13-b5ca-56ac047389a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68aa53ae-47f5-40ea-b519-94f516d9faba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c7f6ca-4556-4781-be85-e584eef24481"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6349252-64dc-47a8-9052-78925cdddcd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3233f81-d954-440f-a3e1-12a361745743"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee8908a1-47f1-4d6b-a9c0-d5184957f851",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47430acb-2fa4-448d-afeb-884bbaa407de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d901078-0d11-4df1-9212-495e4585d559",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d65450fd-01df-4b11-8b05-730b522706cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "262039a4-ef53-49e6-a544-73d5ddc59ae5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "394af66e-9056-4aa9-ae70-9f3ab4a3ef06"
                }
              }
            ]
          },
          {
            "id": "22c8907d-b56e-4e67-818c-54e7996c5665",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51253437-fe11-4c0d-ae0f-454872435f59",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "18708ccb-8c98-45a8-b755-17a6eb1b631a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6931e894-d865-4079-a76d-f88b7775b12a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8597de0-deb5-46cc-af0c-74ea6f76ffc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9afcdbcf-7fcf-4a18-85cb-c0f300d00e55"
                    }
                  }
                ]
              },
              {
                "id": "64f0ad6a-0175-4894-ae36-1fd4af7760fd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9201ece9-8484-4637-a95d-46fa1e04242e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e725ae8-e53a-483e-9c21-ca692fc3af95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "142d9173-54e4-4c5d-bbe5-fa31760ebae2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56244256-029e-459a-9a4e-ad434d134ce1"
                    }
                  }
                ]
              },
              {
                "id": "9aaa1fb4-657a-4cb2-b97c-7e2f75f4444d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c5f60f7-aa74-4778-849a-71fd83d9b111",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7cc2e53-7ea3-4bec-a3b4-d8f6adb18343"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e1709b8-b987-4b3c-9283-8b9170f61d8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6734a4e2-0c3c-4281-8fa7-09ece96281d6"
                    }
                  }
                ]
              },
              {
                "id": "06fcd426-9bbd-4df2-bcf1-0f51f5020ef9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94c0c42a-d921-45e3-a67e-523403c4b682",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d99a456b-74bd-42ec-abc1-8a67aad0172a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b4c0a03-b0c3-4a00-b70d-d06d8dca6807",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d2347aa2-545c-43c6-bbe0-ff1c0124f82b"
                    }
                  }
                ]
              },
              {
                "id": "c87ab925-eb6a-4869-8fee-ce43af68fe74",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "209bebe4-5ba0-4cf5-a82c-bf3027c2b886",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "748305a1-f584-4525-a5ce-1fa86c2d6f60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "957630af-5d1e-4850-9120-c6d781ade364",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cd3cca82-e68b-45d0-b43f-6941a305c94b"
                    }
                  }
                ]
              },
              {
                "id": "a6713b69-8271-4067-81af-042cd6953eff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c484c1b1-277c-4a4c-b0c8-8e5ed46cbcce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a00e3ae-3f01-42a8-b52c-5eab95413171"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa3c7eeb-857d-49f6-ae34-3a0f0ce56e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2ea52a2-5b93-4d85-b14e-3166fd9596c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9fb5ce8e-9769-436e-9dff-de47260d92a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9ac9c2a-537c-4257-ad42-52a3dd08d662"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6f2f316-482f-48e0-b9e4-36aa77561370",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4e064fd-2b67-4c3b-8aa0-a135382b6473"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b36ab0e-5d63-4032-ac36-c5c3ed0c586d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8c11d80c-b4fe-4b35-8508-0abe33ba7c2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4e1d75a-2084-4b8b-86b9-72e784ca9e38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "229cc7cb-5865-47b7-a60f-b539c1941a0b"
            }
          }
        ]
      },
      {
        "id": "6f332f95-5dd0-4f8d-96f5-32a588cf4a78",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9a469878-a39f-46be-8722-f684e57dbead",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4acbdc7-9d62-4923-aebe-427d34239976",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf261955-3d5d-42d1-ae90-b0b6b23c801a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98edd6c1-7414-47f3-aeae-c8327098a28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e76fe0-620b-4612-91ac-ff792bcba00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d88e58-b9be-45c2-ae5d-b6920c136634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e375530-5f4d-46ac-83ef-c2b6a00a41d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769797d4-c36e-4cc4-b68b-eacb5527b98f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464ea5d2-0986-4597-9880-af57397a17af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1336505-26bb-45c4-90e1-c67c1d7d60a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cca303-fe8e-4b27-bb96-d85cd587b918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8117229-78e1-4f6c-a10f-b9c6eb155910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ef9779-1471-46e1-b361-beb099734b8a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ef2dbb-b14e-474e-94d1-0b574eabce60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525e3030-a4b5-435f-9e8b-c03169884c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8243c5e-450d-4b2b-ba6f-ff6886680b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "462809ee-a634-4da2-a3b6-76cb18ccfc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497e34ea-d883-4889-844e-ee55b9a3b2f5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de54ea5-3988-44ac-b131-7e2dca662625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77aa3b1e-11e4-48c1-9c59-42679ea79455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7b5ac0-b449-4920-af4e-e19dadb7e53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7d9d2c-9add-4b1d-819e-a6d6bdeb3dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbceb060-8f74-4d10-b4f2-31627fad1cf9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbef89f7-83b0-408e-848f-9491ea4532bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1c0dee-ca39-44d5-a210-bb713b4dc45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b144cb5e-2723-4479-bae9-6c068aa217c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb64e8f0-1980-4ad3-b481-91814b5f779a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb826eb-0ab8-4bab-8587-62a4bf93d577",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304bf533-0878-4755-a652-a456ecc4d326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18459fd9-0643-4756-ab54-96e07dc1fa39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f708d71-3e30-4468-b453-1dd1db60a712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6f35e6-fbfa-4bb6-a0f1-ad676245e4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3f892a-98d8-48a8-b9d1-51c59028d544",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af98af7a-a01e-4b2b-8583-3510b7d15fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92d1035-dbdd-43c2-89a9-761748d36bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46f1058-d96d-48b5-8917-db4e36174757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7a2109-c846-44b8-a734-f35069a6fc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0028ad11-ba80-42b1-91b5-dad54b51b824",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10e4520-a76c-47fb-a40d-f3d53f6fef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006e1165-9b24-4a1d-96dd-259152017865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5c4390-dca4-4bc9-a203-f557cbbc47f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b384f77-0e94-4297-8d34-375bb3ddbae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ea05d9-8842-40ad-836f-6b3a700e6c14",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24db578f-0cea-472a-aad2-a31bb5b2beba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900e0704-1ef6-4d58-a1aa-e846eeb7d2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30b2e05-da28-43d0-a1c5-df9dca854356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e88cbef-f31f-4fac-b045-09046d87b9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482e1c5d-97a0-4f3e-a887-3ebf548291e6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c5ea9a-b2e4-4be1-b73a-c11a5dc1a1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d28c629-c978-4737-8e98-fbc5289d5b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3dcd08-adfe-41e0-887d-bcbee3cdd09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "972601d0-34c0-4daa-89c9-81c7a94e7faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe543fc4-828d-4704-89e5-5b3063024c7c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d12c747-e5d6-4d1e-aa0b-7045055b8fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950813b8-3a1a-43a8-b56c-0eca88179a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1ba45c-5c83-4265-bd4a-93f06c5be127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6e509b-222b-4950-90e4-a4b94817872b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab3f86d-1b8c-4d6f-862c-2819cc482210",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a68a6f-510d-486f-aeee-b6cafe03f158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e346208d-dfb7-49f6-baa4-be0773ae4d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e516de-3a8e-4a1d-965c-d1ae3147163d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88005ec2-4352-49f3-b2c2-627dd1c3975f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a39bb1-f2e8-4b23-aa38-97ddb2e6a176",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9b4885-1ac5-45e2-aa74-4fcb36cc5a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c53a74c-0d6f-413f-adf9-ff6f3a7fee5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68219909-ddce-4ec7-952b-fbe8759aafc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6914332d-01cb-4e44-bfed-5aec836fb6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7bd061-8860-4d03-a1cd-a1cbf1f3fe21",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e9063a-ec85-42d6-ade3-beb3bc396b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d414bc9-0531-450d-8d7a-c5332fc9194b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a542188-181d-4c86-ae5f-ab230962007a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "152df0e9-3c2d-4f7f-864f-d57d97fb4f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ba4b08-de04-4717-b2c1-644ca60b6db2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb3d832-1f75-4afd-b097-2feb12db70df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a73879-8f5c-43c7-b41f-a9ca79f9d694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581e07c0-5a69-44b6-a4b3-bee71f6ea646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "29478397-098d-4639-b511-fa838f591b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84572736-29b8-4e0e-9bcd-60626f6690b0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab38309-ead6-4988-9fd8-4a2917762b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacdecf7-4ad7-4150-92e9-961a6312a179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d954c30-3df2-4b46-b590-70a76fb2ad19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "03e1b7ec-ba1e-4a9a-9720-15124ce8f18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c50ab59-9720-46bf-9265-dbca5ea473d8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff106df-ed3a-4e99-99ad-31fe7e070a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab061d0f-22de-4917-9af1-9e1e540f0fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b0fd6c-52d4-4303-aa83-b0c620533d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e85fdcb4-3254-42dd-9cb4-799631f3078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cca3c92-4089-4b0a-8c43-63d3d21b27e6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a1837e-b2b4-4939-93d2-41819878c578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6c9d13-720a-4dcb-9e85-dc3da89ce66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9c355b-8d38-4ff6-9492-950219477e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac60be3-8cf0-44de-8ecf-8608cbd8028a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4671b74a-ef2f-4e79-8099-9411e669a223",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfaa316-cf5e-46f1-9572-2a0e2e3283a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0444b4-0012-4e29-abf8-d1041312a119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2839e3ed-0e81-4869-8c70-ebc5edf3c1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2b7612-33cc-401c-a2d7-f609bd3a900b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfb4549-4f52-46b1-8f16-0b38b078f0ca",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c9702b-319c-4a46-85c1-d5cca81c229d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eece98e5-9ccd-478f-a837-143dd89480be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99de1a39-2b81-402b-b989-e097b6dc8021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b187920-f3c6-4450-a99a-5b1d4cd8befa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8cc289-0344-429c-a3c4-e83a28d993c5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e74676b-386a-4788-a75a-5272e25d72ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d2588a-c5da-4b6b-b0c6-0aba1f2a3484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab9d1fa-f108-4981-a3a3-7935fb0b4e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cddca7c-23f2-45b4-854d-70ccef036fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef1a9b3-5f19-4542-970d-45f74820bdcb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76691de9-b1a1-4f4a-b00f-e3490faf59cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d47f219-4eef-42ee-88ab-b993b7306ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9836fb-672d-4099-93fd-c2f245837130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf286f3-e980-43cd-bdde-52784d13a4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db9b564-ed63-44ec-8b38-62f184ab8c81",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022514da-17a3-48f5-b505-5256943e3bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019a148b-fb80-4e81-8040-e86c6c65168c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478a561c-433d-4789-92dd-4695975a7f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3bd3d79-67ca-49d6-8fa0-1e666af92b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d696b3c-4c0d-4c20-814f-4d1f6c044d52",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80636d12-cb10-46a4-9676-fa9037b20182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44836c13-a1c7-464f-9a6d-0ab8ce03437e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08608620-108b-40e8-a24c-1d3f3baedccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9b64c9-031b-4310-b7ba-742640a6e3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe769ed-b6c8-4581-867d-32d3c725a88a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8d148a-3495-4215-a98e-2f964b40af42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595dcfef-2df3-4408-9b93-ab94898938c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30038f71-173f-4466-9f1d-3b41c6ad7b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d79e24-f493-4966-8c04-b6aca2d446b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942f26b1-59b7-4b35-bf34-956878849497",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93f2928-9dda-4ff2-b97e-701d7b972062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c24531-d818-48b6-8ff1-9569c2128147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ec2c6e-8ed9-423e-91c2-373204c21b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "908f5595-301d-424f-8f46-4c142a34c6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39234a7-726d-42a7-9eba-77815b81bbc1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02a840e-8557-401b-a23d-f14b0307d49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cec7f05-2963-4c19-9b76-b92a0a0f0db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e09520-ebfe-4d81-a2ff-9863c1b09ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d2dabe-024b-41e3-91fe-f7663decae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee40a099-8290-416b-ae16-0ca3bf7b2723",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55983f65-fe1a-4aee-93b6-7549fdf24f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e651a8a-0564-46e5-9b0f-230aef4ce30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f563965e-a2f1-4807-956c-4dc4c7d239d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00c40f2-1890-402a-913c-dd03731fe294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caa4da7-6123-40fb-acf3-9d5200aa6e87",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae583c9-2910-42a3-b096-35cc2577c198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99372613-f091-4983-982c-c5d33fc30c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5556c46-1372-43dd-805a-875a3c6ce284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4be126a8-abc2-43d0-ad91-e6b29df178df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f54eb41-7322-4d96-bb5f-ff54bcf2a5a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f8eb0d-f189-4f75-ba75-beef15045c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6721e1-1cdb-4221-85f5-94abeb31d28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90d336d-ce42-49bd-8ba9-1b7598a2bed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80036381-4ce0-48d9-8bae-68a7461495da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403b7fbc-c61e-4c4b-b3c9-fd6413dab3d7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7204d730-9728-424f-9f51-f731527e6dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65edf912-281f-4e35-ab32-d7858d7ddad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50c5ca1-cdd5-4a87-bbbb-ce182d151542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d87d790-1452-466f-a1a3-2779e7514dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9940de4-b691-45fa-9157-7b0ab050c435",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2372a354-c794-4948-85db-42f7c2bfe970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6270190b-46a4-4486-ab63-58987b1241e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81908236-fd80-4b06-b70a-4736e09eb62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5845c72c-f004-484e-a26d-bd7383aae35d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0806253a-910a-43a9-9bb8-31c22a343392",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4399201-bf2a-48fd-88eb-4c9e0637f1b8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fcec4c-6eee-4bc8-931f-8e98fd7bdeb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dcadc107-9cce-4f9b-b16b-c878e404ac0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6809862-1ba0-4533-95fc-8df387d5a008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8c3ec45-b2b2-44dd-8377-0cd11a2671e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc1d54e-eb87-4732-9491-ac8e9684604d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2df5cb9-4d27-419f-8397-54dee26974d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "365dbad7-c7cf-4fa1-9825-217284726ea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6265eb1-112c-4f54-96af-d90e156ad05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad6f5963-bfeb-4419-9bb7-2922383b9542"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7859289c-e269-454c-8069-a78f3beca079",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1e8804e-2168-4bbc-8e32-eca00da70930"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a8cbbc3-0dc2-45cb-8497-0c11c5544ee4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b781006-9e5d-4ec5-a4df-dc1b9a291b9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b9446f8-1bbc-4c17-8c9a-df737fd4aea6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1818b4dc-a9ee-44e4-a302-90719f5692ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8670d909-251d-45b7-be31-3ed804fc477e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98435bec-222b-4fb2-bcdb-803b3a87bd64"
            }
          }
        ]
      },
      {
        "id": "ffdd7125-2f83-4353-82ac-ed2699d2f488",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c9918b0c-7875-4296-956b-bb71e18c87e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5ed137c-5ac5-413f-8756-74325e13f267",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44e7b856-33c5-42fc-8d54-501f130f940d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713794e7-2ff0-4494-b306-07ca2dced956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ee2f0c-19e0-4ace-b206-65d59741faa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2ee361-5041-4025-a364-c520f0e8b42c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2631f073-c46e-4e84-9159-d3cd53c63dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e7a48f-8332-4fc5-b612-8f87315bd04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe5deeb-e22c-4205-9fbf-cd8d19b23d51",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756738c4-a12f-465a-a585-0f4915b6a0b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e63a49-71a4-476f-a847-a1cf4a83061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6d3c9c-3397-40fc-86f9-5c3f41ac895f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5101f77f-b8c2-43b6-b87c-bcb07421e3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2558e0-fffc-4a7d-88d9-58bc34a5330a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3301fc99-1ddb-43a9-8b4e-9319b62ba2df",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24720af-fd87-4ae7-92c0-f1c6e7d05dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbba70d-cd53-46ff-8393-3a2ee05aa0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75acfb9-cfdf-4f47-b560-6bb8f0b3bfde",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fcf90c-3051-4e5a-8d61-f7e196bddacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94f1723-2a2b-4e08-a661-2b2ca72cc452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feea9cab-947c-4ca8-acf5-26a8869592be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56390e28-2951-40c7-b2e8-b422e58f15ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630cc40f-ef80-46e3-8e2f-1d7718f0ce31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd08248-2581-4260-ac4b-68fd00723e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72ced31-9109-4e91-86c5-0e973284b3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e027aa-19ec-4f97-b1a0-9752e5dc56d6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c736849-57c4-43ed-988f-612d1571965b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee23bd0-4cad-489f-b28f-e6bfbb097a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f5b86c-9de5-4b82-80af-3951d28ba780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d25313-7e13-47ec-8590-bf70a8efbc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8504da-5c45-4360-a8e1-84a2a6e99619",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99311b81-a093-4fdb-8f5f-d7a1ef29b9f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbbb7d3c-865b-4d9f-bc48-3c35711cefdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26132cc-b62d-412a-9f39-b2bf2d44d7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d15409c-6937-4d08-8385-f229174b9551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c146d2-3065-47ef-9650-61ae7d34c4a2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87ee639-bd78-4a97-8caf-5c9174c4a42b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80a2852-f17f-4241-9ea8-272fda559e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfe0a23-6a90-48d4-954e-3ad840d644f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8710f52-0131-447d-aaab-fb677bd2d94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41be27c7-dd51-460e-83d3-b78ca5c3566d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153120c4-bfee-4709-b792-e0bc846516b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a89d7cb-6df5-425f-b348-381d5c3d97e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2491afe7-cca2-48e8-ad99-2cf71d0755ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbae93aa-1115-4f48-a64e-02e931248fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a707549-b28a-4681-bf57-4faf6da5df70",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f010d509-2423-4cf4-b39b-0ab447f380e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056e6ad7-9487-4390-9a93-4e8a57c56250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "089a5f14-fb6c-454a-9f8e-e61496e427c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e84ce76-42d8-4592-8a6e-493812b8dfd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03ad16c-0689-4125-b18a-fe94203b02c6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d474e01f-1f95-4217-aee4-329b5aac7a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1025f98-e7b7-4a97-ba0a-0a973c9ac35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cbb91c-02fb-4f6b-97df-c010c29e9652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba6b2e6-c65b-499d-aebd-d4bf705a60e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61287111-6ccb-493a-a686-8ab871db91e6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0b5623-b9a3-4cc1-a5b3-9586ce3b4bae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ab5815-4170-4138-a550-fa619f40b9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092b0bf3-b712-46c1-9a38-a86352b99c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a351e19-0d00-4340-a1af-61147718b224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924595b2-74c2-44b1-b20c-8768b8f2c0bb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adb4ffb-f0cb-4b79-8da6-e234202346d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d46284-9769-41c1-9808-94e94565d53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c7de66-43ba-4b8a-a001-f2ca2c369114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60549050-c028-461a-92dd-d6cf28df3d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5c1728-70da-44e7-96a8-6bd62cb052fd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ab2efa-aa11-41c0-af28-568d48bd50a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a60d8b-46d8-496f-9ca6-97d418769fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f57bf45-8c0b-49c3-af9b-1262d6835d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03dfb4e1-6e4a-47e2-8d34-09e00f0bb931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61a524d-6387-4aa5-8d31-1ea3d2ee4a82",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ce8189-6772-429b-b99c-b607ac8d1f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5b0072-d9de-4402-adea-51ec6d135f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa2ad71-ea9e-4d37-903e-ecc269391a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf6768a-274b-45a0-90a8-4196d31e99af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598a9459-41eb-4086-8e73-8ac884bb150e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fb1a6c-3570-4cd0-93e0-68bf643d119e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9af7c9c-6394-4e2e-a1d0-7cff32eb2a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b75068-751e-4f64-95ef-62db9b128100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1591ff5a-1130-4f88-9c9c-8b8b4655db3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b529eb0-1234-4311-9309-73910f7dae48",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e1fe1b-7a0f-430d-9700-130e1c8a1780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4df6d1-b8a7-4156-9a11-6b382b520a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffad9365-34b2-4470-b415-db688c71f834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395f2da6-c454-4bb8-b755-080a80c2fa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de873af-8e4b-42d3-9442-fd55cf10e4d7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1524219f-da86-4912-83d7-62d8ba78e3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec18968-0f16-4f6c-acb5-ce2571c5482d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecff75e-86d1-4bf0-a80d-667256305789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4ee3af-2455-4378-8d90-997ee5c51ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba79536-8c09-4413-a4ff-5bcf53c79526",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068a3c3c-d1bf-4696-88dd-b61627363ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c823d517-1b66-483f-974d-9780fdcd69fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf3afeb-6d41-4132-92d9-b9ef0d760c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd78f1dd-b453-46f7-af8f-c1b2d6f8462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd7ae79-dcf3-40b8-8406-1773d5f656ae",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c25f3ae-9384-4381-9b71-fb17aabd45b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d6ed1a-f566-4ff8-8269-f9e0f86a8606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8581e134-915c-4d31-9a19-e9729f3b342e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a79c027-08f8-448c-b675-38fb5ff4be05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38d2b47-1538-4caf-9d19-4bba9eada224",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d75dc55-6876-4960-8d9c-1b2cbcaf98f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132142a2-5c7c-4683-a6f5-50f553eafbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b9c17b-7f12-49f1-9a54-e2f4594fbdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78509a8-4e90-4c55-a5ef-daf3d0244121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f22ec5-8a16-475e-b606-60fb687c2401",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c161191-5ad3-4b38-9ba5-3ad2be517063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2de3f8a-24bf-4767-a301-a52cb08bd451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d103563-fffa-48f3-8f2a-faa1984d7100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20929c4c-6fa2-412d-97e7-0db88a8f5ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678f2bfd-f5b7-42a6-9503-d23e787b768c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0157bf17-f133-4571-a5cc-5179b5e80fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73af6625-53ab-4143-971d-6c13ce58c377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b6ffe9-358a-4c9d-9a75-f6d4efaa7adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8367abc-084e-4dbe-b0aa-1e901d045f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cbdcce-be0a-42f3-92de-c1a91c1eb635",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a541fd9-6d69-4720-a73d-d8632de0b26d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c794c08c-1626-46d0-81d2-05b504aec2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f54d28-d41a-40a0-846a-c015c4bf24d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c1f50e-ad44-4060-9b81-76d8d8cccd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef92a44-90ae-4b43-ac9d-eeb254d7ec2c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf453de1-e955-49c8-88c7-57bddf006324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ff02dd-2a25-4391-8d9b-67d55df2dd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77597233-0ee2-4167-b219-4ac0c7684c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7740022-940a-4ff5-be78-6d2892a58ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef40485-de02-49a9-82cb-78630639568a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94646596-d32a-4a82-86ff-64b69cc4e406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2b6c10-2f01-46a8-aa0e-90134e6f1a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963a0a55-45c8-4c13-bdd4-731f48dfce59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f582033e-de8f-4ea8-ad1c-cfbba423aebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8397c932-8341-46e6-b78a-c7110e51af94",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0aa2c6-6242-4d4d-ade6-c8eab577e98e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f20667-3488-4cf7-99e0-1a3d7635a004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5890267-503e-4d4d-bfa7-a0a15331dffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f86603f-e1a4-4c09-8ceb-5e15ac5888fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea71ece0-f252-4607-85a0-7b70f97b01a5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc27e3d-4ba2-489b-a505-c37467cd95ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae18b51-1de9-4dab-80b2-1e1f5b2908da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be218b81-45fe-4e7d-ab5a-fe091f38efe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a329e10-7506-463c-b806-86eaa244a946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d8e5ea-3939-459b-bf29-db1c214419af",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7087f9-b65d-4991-a2e7-9a975f54aa5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16924337-6ad9-4e4c-8a08-e3467c97cacd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5581d826-7543-43a6-8069-ff53dced9dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647673a0-73b2-412e-bd7d-3358e39335b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d88afa3-d756-4a82-b3cb-9cc9c4f4c6bc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0520d19f-c315-4fac-9729-26b6095a77e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6d9f2df-3b71-4644-9809-c0d5027e3945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5399b85c-bfac-4391-bfd4-38a525913f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f570614c-2959-4103-ba4a-85e19cf91f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b768af-609b-48d9-b75c-4bd49f3e552f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55bbc9c-758e-4fc7-bdae-4628b4c4d29c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789f7b56-7150-4d52-9601-480c002dc28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1229097a-5d0e-4872-833a-2b25eb32708e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e067011-08d9-4128-9363-6a522d1ea043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834465c4-90f9-4e8f-8b81-aa3ef0f89728",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3147f1df-4c27-4ba7-bda1-c28052cf59bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b2c48ac-0595-46f2-935d-11d4ee445dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c8177e-818d-4010-9293-c6d6cf59296a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a6b490-44e0-4373-b6c5-791255a778b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0088860-a4ca-464a-991f-a1a8471285b0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8dc1a4-2422-4a03-8364-3a79f7cd09bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d3c9d3-f696-4460-bfd8-e028e12e0029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a561a6-99d5-4da4-a258-2be16ffb6fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10cbfe4-0b98-43ed-aa76-7e8386175a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37655471-aff7-434f-b3df-3d2badf42536",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88ea9f8-49b1-4bea-8b6f-a1b5a6004edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b2d739-45e5-4612-934f-dba59b59b5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ee5a3d-24a9-489b-a1a9-326aee85d32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f4438e-e1f6-4023-8e0a-268f60e12efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f42d4c-020c-413d-9027-f5e1603b1732",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ed6f75-2423-4150-b522-3aff6957361c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1468f94-7aa7-41e0-aba5-9a0711e8a5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dd2e8d-9fef-4433-8c39-620aa787c559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d7b8ab-56bb-4ec9-86aa-9987bdd8b10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8c515e-cb47-4237-9cfd-b6e1d348474a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924fcb67-ed1d-4935-88df-ac61ff7737a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47e8880-5ec5-4f34-a1a2-75de34af580d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd30d36-be3a-42e6-9903-fcc21a4c7272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc41e4ab-8079-4698-80d6-a6e32a1f8224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3a7bb8-48bd-42aa-a85f-e5171057f097",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0170ac7-eef8-4c8b-bad8-871984b78a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cde6ea-63f3-4504-984a-9d709a548364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b24b9a3-e2e3-4583-9e2c-7518f8dbe9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea19358-ab01-4e22-b8e8-978ba74de4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9864d76-3e37-4a8e-998b-b236708c8e24",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c571ec9a-d7eb-4638-a793-3ee5ee3b5e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93abbfe2-05e4-4b50-bd7d-5e89174741b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e8b2ba-6efe-4fd5-886a-1f2b04f71a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f22b52f-dd42-4c35-b5c7-b0dc3648ba64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1c1d9d-fab5-49b2-9bd0-2da8a66174b4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e22323-69b4-485b-b72c-c12f13fc8108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb1ad2e-b3b6-4eee-af77-7d28a4ed8154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88502294-5ee3-4bfd-aef0-55f08ffbff32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8529f3a4-561d-498d-9d5d-8cf8b2875d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa02d783-9a5d-4250-a286-5bf36220b195",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d74d20-ed11-4eeb-8b08-c2c0e95e8387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30ead71-86d1-4fdf-b977-90d476d2d563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1316dc-4f49-4c30-a32b-0daa2083fcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58edd4a3-6657-45ed-9b80-ee79ebce65ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfb9b99-109d-4c58-84fd-419e55bc7f11",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3bc2c5-6eea-4929-8f85-5e162f0d49f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7508fbc4-8338-4f5b-b0a0-57301929d556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9c34a4-4697-4152-996f-9b3f26b17716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835b547e-7c3c-4344-bf23-7cf9a87e1d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fca273-4789-4139-8842-b883023fccfb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec926f2-f4ad-4623-a97c-810c9444a10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46a662f-b60c-4384-abca-8473007d6b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6940c0b-5c40-4288-bbf0-32577f3acfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db9c555-9c62-444a-86e1-2119b5fae95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e35b78-9e0d-4971-8888-709e39f42e4a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f10d30e-d702-41fc-9ea4-aa0103e080ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04feae49-1ba9-4d31-8db7-fee269bdc0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4c475c-f59d-4b4f-8f3d-0d34944d8dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbaece0-fa07-4fe5-9435-54ac4b7c2c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa78bbb-22db-4c1d-a9c5-df3cef5c07ad",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a27bf69-2169-4f95-bedd-3b0b68dd9fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6060b4-ced7-418d-832e-f0c992f3f191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77178ed0-0551-4e1a-b06c-7c801f4b5af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd00f75-5517-4546-afc6-542770a84beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a6f978-aff5-4dc3-9501-694481a2d04f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a9edf5-98d3-4340-a43a-8644d9888512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f779293f-5211-4947-a9fe-fcdf268eb754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99666c16-dfcd-4f9c-b955-e389cfd478df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b99adbd-8100-499f-a5f9-03982fd959d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13879f3e-0daa-4f72-aa7f-ac06392fe4a2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86662921-83f1-4ccc-b1c0-853ff574c12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089ba6a1-8d8e-4b12-979b-97a637ef45d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d9e73c-76a0-4173-8fff-d5242fd9d81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e391910f-efe6-4e48-b38b-8594871ab272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e524439c-99e4-45b3-9a1d-95f8eccca896",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c20305-859d-45b8-bfa6-1f08fbf30283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601c7b06-3193-4223-9b87-f03ea9c18f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef43682-9064-4955-820c-cf13211d749b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b252820-c8d3-4a59-a1d8-b4c5a644d15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1212c15-0d3b-4b34-bee1-25c2c6fe5b82",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea3cc09-76c3-419a-9b89-bcaba8b0455b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085d4e33-305f-4801-8d7d-9ff8806496fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d78d93-c799-4b58-8f20-567add1b18aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7a9ffc-8ccb-4835-babb-73716c7823f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff0b7b9-4fbb-474c-a92c-ee2a9eacfddd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6abd23-c09f-4634-af32-ca7a4c3fcea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b70f546-a0a4-44fa-83b0-25e0058385ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742075bb-2e1c-4be9-b34c-38cb9b657f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7eee8a5-eab8-4466-9d94-ff688232e1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045caf85-5d42-4c62-801a-448f70b2b68c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a91822e-be3f-43cf-bc0d-62de23ddb993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f7ecb6-3166-447d-b06e-7cb24916374e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "605cd60a-d92e-4d4a-87b9-90b8854c992a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf230e1-4507-48ed-bb0d-918f029bb58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67ac36d-7909-4f23-9dc6-a6ef56b35123",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c42430-51b2-42aa-bdd7-29c1aaa2e59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd1e60a-eaee-4577-8e48-3a43ab1f62d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce9254e-acd9-459b-8b1a-7c758733defc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b291ad-d935-47ca-8f16-cc33b6530aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d323d736-870d-4ae3-bfd1-d47e00c3a1d8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92467919-4778-4608-a9a2-59aa5b6fd0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0deff0ad-107f-4b13-b5e9-024133e52147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093131b7-009e-4f34-ac69-bf291329d85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a6b6e2-8c94-4e98-bce5-e56be1549fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7cf6c7-5a51-46da-9437-a31beb282a6e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47461901-a834-4e95-8a5b-3388809d9d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74cf481-9753-4cbe-a602-2feb327b45f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bedba87-2f3c-4b05-a4dd-cbc76b568666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc37351a-6271-4ae0-af5b-8eb75ad5e52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4888c9c7-46f8-46de-9b15-83f8ec9ddd2e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945526a2-b213-4e38-9e17-565d213b15fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8122bb-e160-4773-a39f-40cfc052b135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79bd8f6-2a35-40e1-a8e0-b46452f02bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2862afe0-192f-44e6-8228-09413369b2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ef4e61-ce29-41b1-a007-c3ca2ad8ce7f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fee524-9b3e-426c-aef5-686827b0642a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a50c89-5f2f-416c-9b0f-63f36e25e2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1442addf-5bc7-4984-acd0-8a4b4710875c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55bd0d7-1f35-46be-bdd1-3ae771eb0be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba49315-571b-4efe-8941-93831615da83",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a181e6f-8c76-4853-9237-b4743480b92a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a1bec4-add2-495b-91b2-de84a3206715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e147cc11-8078-41f1-81aa-e0b2133f623b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab48190-a3b3-4293-ae78-9bab81ee6b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a32541-42b0-4cff-9a9d-b658c98703c3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a293c3-f209-4254-8303-98cf92174bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9afa33-7065-41e0-8be6-fe7a90b29790"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef95d71-5e35-4d26-aa70-27018bde87f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d4a8a4-4993-4501-96b1-69abb07485dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8150bd7-1eba-4c83-a348-727b11fc9ebf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fe9a42-1974-4d68-9045-0b80e6fb6200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337caffd-281f-48cb-8771-7d94d0385206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4706a57-aa28-4135-af10-ec20859239b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500d51ba-5245-478c-8bd4-42a8d4649f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c1da3e-a5d9-4ab3-bae0-38316aca37c3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dbbea8-92b5-4875-9165-0c6e8fe67ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cee9c4-2770-4dca-b43d-cb730fcd3d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7848f5ed-f71d-4915-a6f4-e269f72b5810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbd125a-c037-4109-9e5c-be559aa62738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721a7a56-3765-4a15-92a3-13015e615620",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcdf805-c4a3-43ae-bf35-71961d0671d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7154279-3f97-482b-ba0e-23f01829286b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c919fb3-7bb7-4c88-abb5-0988e6c090db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bc2a5f-f71b-4d57-b46d-40fad8d8fd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71dee1f-7bf0-4241-b0d5-0577a4a1b582",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e32a5b-a753-4abf-806d-e16397b03100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d2d6bc-dc59-48b9-8ba5-d1fbdd9e6f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f16820b-198a-4893-9d90-4f247e124fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67703e5d-c636-426d-81ec-301a5bbf4f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f2fb5b-3287-4616-b1c8-efeb1ec2569c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce5af65-de80-4180-8b4c-d9d924306145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41156488-dd4a-4368-9832-27b1548aee52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7529d2-1156-4aea-bfb9-60facaeeca31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be68d0e-84b3-4e3d-888a-16a2bad1071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cf5b47-4050-4ad6-94ab-549131b657bb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabe4127-f8b0-4d12-b044-213f3779fb66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb84beb2-ebd9-4207-bcd5-f712cfbcfcdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581d980a-0755-4f77-8d9a-5f495e56489a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646ce59f-2b90-4dbb-82d7-042175e693ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafdbbd2-16dd-4b2c-a3d3-f033b2e2a56c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf51407a-02e2-4718-8f84-1bce3c106eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6b3dc1-7b78-487a-b852-0d3763f348fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b2af98-13ef-4295-a26f-033b134d978f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc319c65-8e93-4a1f-9348-0d1f50bd1f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f573128-849a-4d4f-9ad7-20ee09ecdf91",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71aaaa9e-3026-466e-a21b-4ca1e5c568a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b717c6a-7fa8-49fa-a363-66b8caf2fe79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c6fe88-7cd6-47e2-b8a3-4e663c4be9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65aaadcb-870d-4e3c-953b-c20748329c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93133381-0598-4117-b781-f93f1b31365b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2368d7-12a3-4c77-b94f-14c1938cf49b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf64278-eb7e-4192-9c84-81f4bd7dcf4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b2229c-0fc0-4961-bd5d-1681de1ed9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3277474-b22d-4a1d-922c-f7883d4b8be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dbc125-fc0f-4bfe-b2a4-b931b08a09f1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94094c1b-04a6-4abf-b535-cf228f22ac62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "687658ba-8d18-4fb8-8bc4-5f0faf0400e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4dfee6-8683-441d-a5bd-132168f281de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff7490b-183d-4b76-b877-96260afa6176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7890ba14-d5ec-4079-bab1-8e73ce064a01",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f60d07-ca2e-48b9-968f-b7d7740a8beb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7071cb48-6558-4ca2-84bc-c5143e112ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5193c7-b504-4a2e-b869-e2e9fe3107cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c2a3b7-00b9-41f0-abc3-71171bfc89b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34720a92-1a6b-4ad8-83c8-c58c6422af8e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b78ae4-2ff7-45d2-9dd0-6f5eacbd0407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e081800c-7abf-4c56-a1ef-e122539134ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ede356-faca-49b8-8911-4934b35324aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ab3636-fc18-4028-ae5f-83c4fa9c99ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0754948f-0b6f-4425-9856-7ba6484592a3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3407a24-e00d-46bb-849a-dd9a0c43321b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea2533b-e1b5-4023-b353-bdc0fdecd034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3f9ea1-76b1-4c6a-97dc-0b0777c36925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48560a1-2b0c-492a-8166-cd098f0e71c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f428ba6-2f6f-415f-84c5-a1d8316a4892",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af50886-768c-43dd-8b21-4b891cc18765",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e49ad35-5a5a-4aba-a4a2-ae23330f1ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479921c8-df92-48f0-81fa-6577af12b448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269cf5ff-b4f9-4a34-bbc5-0c57d3b8b12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15ac82a-be61-465b-8a96-3b314c98d711",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118a3c62-bb5e-47c1-8adc-cd7edaff22ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8d46c55-ff15-46e5-994b-1336c0b5263d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368071b4-d9ce-40a3-b617-7e83b1a4f173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d95d7d-97d2-41bd-a69c-81ac13d0c6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09553bc9-7c97-4704-a9b7-4047bad20655",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34800a0d-f628-4b24-9832-9f6e5d63d4ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce008e56-02cb-4bcb-b4ff-b48da1a3804c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d5627d-77ba-4bb4-86c1-21ecd81d3080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296ab095-4841-41ef-99b8-586f3084fa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90294451-51c1-4fd1-9596-f510c1d50ac8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f496666-6610-408e-96a2-37158a49d954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef6c663-0e04-4a4b-8529-d047e84a8066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50158e93-05dd-4b4d-97be-5f06a0c577e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f57dc5-2cbb-4ae2-ace9-9eb7c3c40b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc6ef24-7a43-429b-b146-674adf680be6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde765f0-cbb2-47dc-8135-40964fda62da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc59f169-c1ba-409b-a676-c60a5f75c9e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d6e8fa-fa0e-44ef-a1cc-0f24382cad97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f016c79e-3a18-4622-98f0-edd83533352f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9200b37f-e869-4757-bdc5-8e83c4ae8633",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ace710d-cde3-4e0d-bbd3-85fc38310f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16b957d-675a-4393-96cb-3e21b0b68708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15daadb5-3abb-4150-a834-a6ff11a863b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147a15ea-19aa-40b1-8d79-d1bb8ba7006c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43253c1e-5beb-445a-a05d-3d433f122af8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d89f63-7e9d-4cbe-bf11-d765f1ca9c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67fbc4b-0a40-4964-b8fa-8b5178787666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a4de2a-972b-449f-a98c-999558ea5e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72989625-d499-4ea3-bddf-9dc4b263f222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc4bb2b-6ffe-427c-bc55-755950fb2bd3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cacc4a8-bef6-43a7-9511-a6f8cae15229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4140c06b-401f-408a-b9d8-ce32fe9f9a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed44f214-ca2e-43a8-9311-755772a3ec76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80abaa91-9283-4e60-a17d-9b84eef64760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724edbe7-83d2-403a-b657-3a92f657c168",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cc8460-5ee3-4ba6-bea6-3968aa8cd192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1acdd7a-2c07-4bcc-a7fe-23c1c777a1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4219076-8f6f-4ff0-ba46-28a78d9c48ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429f33ca-54d6-4a0c-bc63-947dd19668d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaea04ec-e9a2-45e1-aec7-560762fd5d76",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4d9e05-26d1-4c17-9170-507a0f5898e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39da7545-4628-496b-b157-3b8913aaa8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c50814-e6b0-4704-80f6-5fbd648af870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d6ec25-70b8-419a-a855-42047021f6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8620c8-eb08-44b9-9882-75a59385444f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb05f474-5baa-49ff-a3ca-9523518cdc9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0af58a4-d5a3-4348-b2fe-b011bb9d3a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071ab767-81c9-49ad-bef4-8894d0306b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79e4e48-b19d-4e92-b829-6a9b211088a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8970222-35ba-4ef9-a6b8-8f8915edc446",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dec67ca-05d8-4def-8f81-91c3715348bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4e8aa8-dd18-483d-a871-4c384df50ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685ebdb1-4d99-4adc-a7d6-6754598281d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792de750-d8e3-46e5-8361-9fd345e723ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd16745-ba4f-495e-8a9f-e42ddd2cd7a0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8919708-5890-45bc-9cac-ddc177af715e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e635804-8e8d-474b-a996-fc819631eba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0837e56b-f6a4-4add-9260-0c7fc54a3d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44469e8c-61da-4056-a259-06b984891040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e269977-c24a-4413-82f9-2e3a16c58204",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad29492-6307-4f40-8d74-7e160f638e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa65a89-0e98-4058-8743-e1d21cff1652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b8ad0b-4171-4072-b96c-59498a945b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b0b58d-1773-41a7-80b2-9f1c0aac45ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd24d32-452d-430d-b5b3-6e1e326215cc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9138b4c0-793e-4e50-a037-26f8d5501801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4b13b0-e19f-461d-b35b-1b4f42479e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df2bba7-9cd9-4001-a890-848762514834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf79738-aa23-4f10-9789-817e9b841627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a0590d-df58-4942-ace0-d4154c5fd6ec",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e821ec-89a7-418a-bb61-5a1e257a0ba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0ef369f-3786-405b-8d32-3dfeecc2b459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46d56ba-e308-4fad-89fe-74e26030da49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361d5cf2-2dd7-4ed6-8a0d-e7f31f35ba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c0b63d-2e17-4703-aab9-e2e75ef47c75",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c48e4da-cb5c-444d-bc7c-302df9573dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba436854-1802-4694-8777-6b135197660f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a392fc5-23c7-462e-bac3-272113e0d80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bb3c1f-1e9e-4785-b9f3-42dfcfab3712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361c982d-56c2-4e5a-932f-6874e2a97a10",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d760e03-b64d-4e67-864c-1402d6841bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b9639b-c79b-4f6f-b60b-95b4f378d359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecb054a-3935-487a-abca-8c354fcac4d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82a8ceb-7977-4513-ad2b-6767e82ee9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fe7e49-795e-4db2-b60e-3f4cd0b61ceb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f40224-90c5-404a-8b0e-3de82ed4f39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d884e9b9-e063-448e-9413-47b310836c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6d657-bc8a-416c-8e2a-7ba388e5bd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615ae8de-bbd9-433b-b264-43ca8ab371c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2031f9d4-88c5-4ad2-882a-5aa0cc2ba481",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbb97ee-2e1c-4d41-820a-88098d0e2d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85fe81f-8744-4d25-a10b-8d24bce739c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5846594d-7e29-462c-9419-1673cef31dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0848d31-f12c-4d78-bd24-52532aeb5f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46adf914-4333-4251-b68b-0c88c9ffbc22",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba0c21b-990b-4786-b29d-a3032cc8f643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc6d1951-ea82-4c2d-81ca-6316e31578f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ede999-d208-46e0-ac05-a61d946a80cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b804acb3-106a-48de-ad20-ff37fc5bc331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec4d991-b5d0-4d4e-be74-b3cc1753bfd9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267784ee-3a63-4deb-8f8a-3073456ca52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8025f3f-7136-49f4-b447-016f8e239f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce558e67-6dab-49f3-92dd-d06546d1d823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca0374c-be2a-4c4a-8d18-5b3f98a43b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62feca08-b0aa-4c20-848c-ae0fba456595",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8c2cfb-0c20-410a-9c0e-b797aafa8672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855f558a-4e6e-4962-a3bc-c85f1465a9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ce9d8a-d07d-4a28-9af0-f17140cf6c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1a57b2-fd8b-477a-84b1-8889c38dcd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003a2572-cf14-4489-a218-75d3a244283e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de424d5f-88a4-4c27-b77a-cfc77ad1255f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d922d2-221b-4e1d-868b-6cd46cd92563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fc7fc5-9b28-4a5f-bcdf-02b757be4bef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a34fc1-e411-407e-9468-7e85cb3d8dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb841aa-66b0-4e39-b39c-7d98c85a48d2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3fcd2e-b682-479e-8cb3-700b21da30f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11c5738a-0a0b-4dfd-99a4-3ac9b6232991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b751b46-14dd-49e7-910e-0d770e40f278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43ee8c8-2e1b-44fc-832f-a9e7f468d9b8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81cbc34f-a2a9-4286-83e9-517022677937",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9474755c-a19b-405a-8881-8731c0347729"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "231da8a1-b0f8-4cb7-86fe-8c94fdd6f457",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b04dbf4e-e5e3-4e06-9790-e761ced200c3"
                    }
                  }
                ]
              },
              {
                "id": "2ad0f083-a5f6-4306-87b8-61fd2e8c3a5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63d0103b-24da-4598-80ba-78d6035c7990",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8a7564-f40a-492e-9030-510af647b278",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4ab61817-4d8a-4249-a5c3-ab210ac7ac75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3df9b5-1ce4-47ce-bed5-b214ebd2790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d882f1f2-56a2-4ee7-b488-51d07385f373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b09656b-544a-4d2f-bd53-469164f33c55",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eee8835-5bf8-44fd-ba1e-dec95b05e8b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "42c02b28-1273-410e-b1a1-f9c821cf78b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2423e3-52e9-43aa-9240-d7c156f2b74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c6bace1-4e3a-4e65-b7b5-e899f47a1691"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31feb3e2-4dd3-4c8e-a1b3-af044eaf4864",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7aa0d0d-8f05-4ca0-a168-157295e92e7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed6b5456-5e9c-4f6a-a906-cff8f0297c2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1ede352-1a91-4065-83e4-ffd97ad83fa4"
                    }
                  }
                ]
              },
              {
                "id": "a222f65b-bd56-4def-addd-1f4fe4ac420b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0c0f7cd6-2a66-48a5-98b3-ff396de53971",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4ea79d-5327-48be-baf6-715d629e8f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "454a42ea-ca5b-4418-b599-682bc8faee4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f15d80-49ab-48c5-b8bd-4d2f58dae8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12e2867-f391-404b-8699-5155e7f27926"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f86caae1-9284-45af-b78a-b80f176942f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bbfdc541-0a3e-4771-9702-0063d05462d8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59dc94ae-ad85-4577-92f5-e12f9eb9a08f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df6f4b9f-7e56-4f42-80ec-fadd4d265750"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff180e36-3862-475b-9330-8ca758289184",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c77c4f4a-5e49-41d6-a1e8-00681b9d35e0"
                    }
                  }
                ]
              },
              {
                "id": "ac997d39-75fe-44b4-a37a-3721a22d5fac",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f7e33ba-32f8-4a57-a874-c8e79f98659f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0a101628-179e-4028-8fb2-cada9cc171a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c08876f6-6e6a-429e-bc9e-1cd87b99ee47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "859bebfa-b70f-4ef1-8b0b-438a1ff8455f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd9508a9-f173-4002-b4a9-26a1d9f234d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1356c456-8676-4a8b-a346-2de641ffaf7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5619fbe7-bf98-4b1a-8bad-0e5a3e1e8bda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "423e2fbe-aca9-4133-b4e8-a76ed2f8f693"
            }
          }
        ]
      },
      {
        "id": "2a9b7c93-f85f-428b-aa38-55a035074628",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a08d0dac-2dbe-461f-9b0e-c7192b77ccaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92a58b7d-822f-49e7-ada7-53d849e28af8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54d2a010-1c84-4270-8521-9e22d721cb69",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d986d2d2-a6d3-4abb-aa3d-d8db13075a2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "08ab779f-0b6c-4bea-a9e9-20ade2bde762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f25082-60c1-4ae1-af33-c6e307e53a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9c457a9-3d1e-4e0f-90db-a8bdf59bda02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be28bf8c-adf5-4b78-9cd1-ad4a72c85a16",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8586868-bc05-4af3-801d-ee7634f9543f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2ac533b9-ac5b-486d-910c-76ab5c1f1db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f4d925-1933-4440-a2a7-1145b1a50191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b93a23e3-b2de-4d87-9acb-480674dfeffb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f25f700c-d0e1-4f92-86d8-bd3f93c71fe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8141e8c8-4c50-432b-b891-ca99cac3ff61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab14d18b-58ed-4964-a722-ee83355a5ecd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66aafc7c-42fb-4d27-bcc3-20852bdb5697"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46140d77-a104-42f1-b02b-8812bd40aab9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "404b76e0-21b3-4cc8-a57b-0dd766d0627b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b78f9485-73db-4dcb-acac-0ee545c66cf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fe371be-6ea4-4d9c-a002-0ab834af49ed"
            }
          }
        ]
      },
      {
        "id": "694b131e-f0cf-4cd7-a223-195eba44c301",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4648e769-43fc-4450-a4f8-357782c8dce2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c80a932-3fcb-4b8f-984d-4a5ce10015bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1549989e-ac69-4403-bedb-40db2f60b282",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a9ed56-f2bb-44dd-afd6-39255f801b42",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44c48463-0f91-4563-bae6-f5a3620f37bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61778d4-1fe3-4ac4-bec9-50bb52df16f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fa24b52-5b15-43f0-9724-8241c22d6153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe98ef2-03a5-47f7-acb4-c4efa1dcb1ab",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d07f96-7a8b-4114-9ffd-9acfab4f26ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b96620-5e0f-4a59-8fc0-83b0b01fa6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faba0895-8c7b-46b7-a272-233646eac42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e37be43-0929-4cae-9e02-d67a364ae1c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d507dcc-4877-4e89-9e4a-e67de189e125",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb0f7400-3f14-4bb9-a330-dfd103c4c20b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf3df087-22d0-4383-a1a2-86f5aedf9260",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12d957df-0721-4d4e-ae9c-f61a5646de93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9aee185a-d776-4cfa-8212-570fcb66c6a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8216e128-aafb-4853-9f4c-89999643c567"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff8046e5-df9d-48ff-b315-898c0800d681",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3db06ac-d3b8-4638-9e64-755d3f161323"
            }
          }
        ]
      },
      {
        "id": "7febd2a9-622f-418a-9daa-eadb4e7a8f65",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "87ef5a2b-884d-4cfc-95e1-127f83bf413b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "358be724-9dec-4983-97f6-8432de6b3318",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "813150d2-ae6f-4870-818b-dabae04ae0ea",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfa07ee-6cd2-454c-a271-9537e0f3fc28",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba3f2b04-7dfc-44aa-a0f2-0ac5066b724b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ed2c6f-43cf-4ba3-bcb0-5fcfe8fd1a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b910c34d-13a9-4e4d-9789-d7ad36f8fde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5421c0-2c24-4b35-bfbc-61b4b0e91a6f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733373bb-4864-4948-92cd-dfc63dd87c49",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e4579e61-2606-4bad-a3f8-fa3214b4221d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbcc95b-146f-4e89-9b4b-65ae0378174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc6da159-496d-4260-9f3f-8f9caaabd15c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87ce88ac-0fbe-4ecf-a6e9-25edbbf84a20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8da9adb4-7ad3-4b87-890c-351685da38a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0599008-5406-41ab-af2a-89a62d504552",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "135cadea-72c5-4852-962e-467b1da11682"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eda21cde-a56f-49c2-9f2b-24b030c2f104",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "852d8f6e-7957-43ba-96ed-404d7f8e737e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42c7ff35-8d3b-4712-a247-b69073398b75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c52fb32-7856-4f6d-a08e-2e076b809602"
            }
          }
        ]
      },
      {
        "id": "34b554ac-ea83-4dca-8456-74c12479f9ad",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b86f069-57fc-459c-8433-dea6af276f61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ed3e01a-98cb-4658-a1ba-5a5216bd263d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "622521eb-9ccc-4443-a551-5b6967f42592",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76bfb2bc-cc2d-4083-89ee-97c44a076726",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7680863b-0c3b-4b5f-82d1-71b8e18a7942",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 792.4769230769231,
      "responseMin": 9,
      "responseMax": 9042,
      "responseSd": 1013.2270853024662,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681259792683,
      "completed": 1681260013004
    },
    "executions": [
      {
        "id": "9fb00ce8-5466-4a9a-a24f-51d8ce4dd66b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ac33aae8-c838-42af-a45a-aec4765819cd",
          "httpRequestId": "26b219db-c8a0-4640-bb16-23c8956c4b85"
        },
        "item": {
          "id": "9fb00ce8-5466-4a9a-a24f-51d8ce4dd66b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "42629130-f376-4687-b022-27a68ea65f00",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "4bad1238-5bf7-44bb-82a4-33e50852ccec",
        "cursor": {
          "ref": "cd7c6203-8227-475d-baab-e714143e6e9a",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2d0a023c-73b0-4b8e-83be-589c6b49260b"
        },
        "item": {
          "id": "4bad1238-5bf7-44bb-82a4-33e50852ccec",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6fa7f4b8-4096-4652-9dd9-84c0c372b958",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "574df4ae-6643-4094-9eb6-60c41efe8c86",
        "cursor": {
          "ref": "d514c5d7-ef36-4cfe-a32d-8e30e26f7d6f",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ce887172-4865-4f73-ac18-db8c9be39dab"
        },
        "item": {
          "id": "574df4ae-6643-4094-9eb6-60c41efe8c86",
          "name": "did_json"
        },
        "response": {
          "id": "bfd59adc-d1eb-42c9-bd3e-09a40e5111aa",
          "status": "OK",
          "code": 200,
          "responseTime": 1065,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73af37b6-780f-4272-82c1-c03fc3e41b88",
        "cursor": {
          "ref": "fd73e025-7a1d-4bdc-bf22-5936f86c7512",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "08c9f213-731e-4264-9c53-9938adfeed49"
        },
        "item": {
          "id": "73af37b6-780f-4272-82c1-c03fc3e41b88",
          "name": "did:invalid"
        },
        "response": {
          "id": "850ee53c-435d-4a6e-96de-9261ae7ff46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73af37b6-780f-4272-82c1-c03fc3e41b88",
        "cursor": {
          "ref": "fd73e025-7a1d-4bdc-bf22-5936f86c7512",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "08c9f213-731e-4264-9c53-9938adfeed49"
        },
        "item": {
          "id": "73af37b6-780f-4272-82c1-c03fc3e41b88",
          "name": "did:invalid"
        },
        "response": {
          "id": "850ee53c-435d-4a6e-96de-9261ae7ff46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 709,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743fee62-2db3-42be-8d04-09c26853bc19",
        "cursor": {
          "ref": "5dd47fb5-1760-405d-a466-76805114a358",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9dd0f520-5e75-4a10-bb90-1507bc34a235"
        },
        "item": {
          "id": "743fee62-2db3-42be-8d04-09c26853bc19",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ff8a9671-f65f-45e9-bb22-9c72c8aca080",
          "status": "Not Found",
          "code": 404,
          "responseTime": 682,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee14f9fd-5c71-40ac-abb2-7d5a72b92b24",
        "cursor": {
          "ref": "142b02a0-2759-4761-9716-292f6821c180",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f1c1a4d8-c5c0-4b77-ac0c-f85eaf03137c"
        },
        "item": {
          "id": "ee14f9fd-5c71-40ac-abb2-7d5a72b92b24",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eb4998a3-9aec-41e5-a5fb-be75cc45516e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 716,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175efa79-3ca9-48eb-af2c-0edbc01c1b3c",
        "cursor": {
          "ref": "684e9a0c-b84f-4d9a-ba7d-fb6639ba05bf",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "462e2ef7-55c5-4be4-8542-7785981f99f2"
        },
        "item": {
          "id": "175efa79-3ca9-48eb-af2c-0edbc01c1b3c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b20a1dd-8794-48ae-bf62-a59f8f8d54fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453268a1-2f5a-4770-92fe-2ba59df32467",
        "cursor": {
          "ref": "36f32853-99ce-4e2c-9b19-7d774f023a99",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "88eb46b2-6dc7-4c26-86e3-3b2428d2e4ee"
        },
        "item": {
          "id": "453268a1-2f5a-4770-92fe-2ba59df32467",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a4556dc2-95a0-4465-9963-3a0b44c62b47",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453268a1-2f5a-4770-92fe-2ba59df32467",
        "cursor": {
          "ref": "36f32853-99ce-4e2c-9b19-7d774f023a99",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "88eb46b2-6dc7-4c26-86e3-3b2428d2e4ee"
        },
        "item": {
          "id": "453268a1-2f5a-4770-92fe-2ba59df32467",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a4556dc2-95a0-4465-9963-3a0b44c62b47",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d19216-abbc-4f6c-885e-82de939c1215",
        "cursor": {
          "ref": "d97e1bdf-6f77-4811-abee-eba9ebd66983",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e0e824b0-7e34-4010-9f40-c9f7e679663f"
        },
        "item": {
          "id": "82d19216-abbc-4f6c-885e-82de939c1215",
          "name": "identifiers"
        },
        "response": {
          "id": "5e598154-ed62-4fb1-9b31-2bc92bcb9317",
          "status": "OK",
          "code": 200,
          "responseTime": 1101,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e80b65-e2cd-42b3-aead-980e2748eb03",
        "cursor": {
          "ref": "54c04049-6aa7-4894-b2ec-fed5a1a8ee77",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1abef175-3aca-4388-b5ae-2a6e0c0b9873"
        },
        "item": {
          "id": "e0e80b65-e2cd-42b3-aead-980e2748eb03",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "136e4b44-9ea9-42b9-a4f3-b3e381bbf85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e80b65-e2cd-42b3-aead-980e2748eb03",
        "cursor": {
          "ref": "54c04049-6aa7-4894-b2ec-fed5a1a8ee77",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1abef175-3aca-4388-b5ae-2a6e0c0b9873"
        },
        "item": {
          "id": "e0e80b65-e2cd-42b3-aead-980e2748eb03",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "136e4b44-9ea9-42b9-a4f3-b3e381bbf85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fda27b-3382-4ee5-b6cd-67282e12c413",
        "cursor": {
          "ref": "82785fc2-493f-4c5e-a90c-3df5c0ef4279",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4bc00e1c-8834-402f-827d-e318b63c6dfa"
        },
        "item": {
          "id": "f9fda27b-3382-4ee5-b6cd-67282e12c413",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c57bfe46-5fdc-40c0-afef-d4ecc11a35aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cb1e45-bad6-4ecf-a692-80678b61787c",
        "cursor": {
          "ref": "2ae635cd-dc93-490c-8b7c-c02e18fa0abe",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dab8e31e-c5b3-4b99-bb40-c83e70c86739"
        },
        "item": {
          "id": "25cb1e45-bad6-4ecf-a692-80678b61787c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8da15d98-e33a-4d21-9876-63647b060db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7fd947-eab0-439d-8141-e3092b6d5fd9",
        "cursor": {
          "ref": "a1a7a299-f9d0-4eb3-ac4d-074700ab74a1",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "07bf8e0f-32f7-47ca-9b85-503f11abbfa9"
        },
        "item": {
          "id": "5a7fd947-eab0-439d-8141-e3092b6d5fd9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c31de96c-1a53-47f1-82b3-7880c0415bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c51779e-0c89-44ba-b242-f95162724268",
        "cursor": {
          "ref": "d5f5a7bf-2fc8-45d1-82cd-65111d4bf389",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c42ec52a-456a-4821-83f9-9e837d32f41d"
        },
        "item": {
          "id": "4c51779e-0c89-44ba-b242-f95162724268",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2674c873-1425-4016-8dd3-839c13693ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0f2a4f-98c1-42b6-bebc-d2587bca3a21",
        "cursor": {
          "ref": "4dc05095-ded0-4af8-bda1-ac7f098e2866",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "883e20c8-70fc-4b13-9b7b-63e3ab84b918"
        },
        "item": {
          "id": "4a0f2a4f-98c1-42b6-bebc-d2587bca3a21",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "92a6c4a7-6355-41ca-92db-31ce4f1afac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8197c1dd-e5a3-4bde-9071-c03eb363a441",
        "cursor": {
          "ref": "3c6595cd-02c0-463a-8eb7-dedfd73a4075",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c4c01405-97b3-488e-b4d8-aad483c6ba72"
        },
        "item": {
          "id": "8197c1dd-e5a3-4bde-9071-c03eb363a441",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cabee3ca-6ad8-44cc-8af8-c5bc779b179f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5906174c-f3f0-41aa-9a77-6fc1faadaacb",
        "cursor": {
          "ref": "b533fef6-5304-4c7e-8352-b97675de1621",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "150889fa-c279-4d51-af76-366da3e2965a"
        },
        "item": {
          "id": "5906174c-f3f0-41aa-9a77-6fc1faadaacb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "49289418-a3cf-4d82-9d79-748d58ba9bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13ed12f-d2a3-4e46-9766-201e321af0ce",
        "cursor": {
          "ref": "ec9d2ad0-0107-48de-9ee7-779d29c47067",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "367e17d8-9e1f-4b89-93b1-c6b7158a0191"
        },
        "item": {
          "id": "e13ed12f-d2a3-4e46-9766-201e321af0ce",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "345d5772-3b57-4ab2-a462-4dd50bc56b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a38e58-a1a7-455e-abdf-b6b6960170dd",
        "cursor": {
          "ref": "4f300f44-9982-4b60-8b18-1acd6c3ab061",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "76b8aa86-59f9-4fd6-9d7a-7afe90f9e47d"
        },
        "item": {
          "id": "18a38e58-a1a7-455e-abdf-b6b6960170dd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "76a2f969-b4b5-4513-8028-62b5cd94ca79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae155108-24c5-4078-b1cd-c1ab521d2c9c",
        "cursor": {
          "ref": "065e7e48-ae1e-4fc7-9125-b6bcb218b105",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "64b0a979-9963-455e-9cbf-a9b58ba2620e"
        },
        "item": {
          "id": "ae155108-24c5-4078-b1cd-c1ab521d2c9c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f53101bb-6e7e-43d6-8e09-005f803ae343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f2b4e2-5993-44bc-906b-fb305541de5c",
        "cursor": {
          "ref": "6e3eadf4-2621-4f9a-8866-00843a063121",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d15fbeda-41ee-4e8c-b128-862adf1fd982"
        },
        "item": {
          "id": "07f2b4e2-5993-44bc-906b-fb305541de5c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "df9ec6a5-2500-49a9-a11b-f16d9c40b083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9f64d6-1e29-4474-b0a0-0ffea8075e60",
        "cursor": {
          "ref": "113971ca-a9d4-4718-bfae-5ae064fe95ae",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "707f633a-49c3-43a3-9b67-3567d31d850b"
        },
        "item": {
          "id": "ce9f64d6-1e29-4474-b0a0-0ffea8075e60",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1585711e-0ebe-4ead-bf4c-712889278b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcfeaa1-0686-4b9c-ad2e-407cf2bc5943",
        "cursor": {
          "ref": "8bf16772-6190-4d8a-b1e7-bc9b5ac80eb3",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0dedaab2-1405-453c-9ae8-5b6d87f0607b"
        },
        "item": {
          "id": "bfcfeaa1-0686-4b9c-ad2e-407cf2bc5943",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b34d253d-038a-477c-8db8-6b813f3d2574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9bdfca-a76e-40d0-97df-e34683a61319",
        "cursor": {
          "ref": "7380f779-96db-40a7-aea7-16eb63dccec9",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d77ae0b7-7e2b-414e-840e-a099f3a39326"
        },
        "item": {
          "id": "3c9bdfca-a76e-40d0-97df-e34683a61319",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "80eae7da-ef71-45ee-b3c6-5a1515d41eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8767ea-9eab-40ae-b219-0d911859966d",
        "cursor": {
          "ref": "f9a41225-0698-4eb4-9e42-c4291487c879",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2ebee2ea-b97a-45cf-9e63-8596885c0e40"
        },
        "item": {
          "id": "ae8767ea-9eab-40ae-b219-0d911859966d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "051d9ad6-5de1-4ec0-9bb3-c8afa0a30176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d976ca65-ce1d-426a-948e-a95a0b072a82",
        "cursor": {
          "ref": "b1885d0f-e0c6-4619-a424-3f61af55c861",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "27ea996c-7627-4e9e-b1e0-05e0c6f2f5b8"
        },
        "item": {
          "id": "d976ca65-ce1d-426a-948e-a95a0b072a82",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b4ae726c-da4f-4fc6-878a-2b42fcb49e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b19ec02-dec9-4275-b65b-f6da7382fbc5",
        "cursor": {
          "ref": "224f75b2-222b-4bad-b2f2-78788a76fa1d",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f8156313-fd94-425e-b274-2561a01b8bb3"
        },
        "item": {
          "id": "7b19ec02-dec9-4275-b65b-f6da7382fbc5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "af848782-4452-40b6-8101-db6feafe7ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ccbf2b-322c-457b-9818-550c6aaad633",
        "cursor": {
          "ref": "32b6bca2-c2b6-4e0f-ada7-0b8807eb8837",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e467a892-7f05-4cda-95e4-14196135614d"
        },
        "item": {
          "id": "a0ccbf2b-322c-457b-9818-550c6aaad633",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "461b5c9d-66a4-49d7-aa0e-2d103d48c2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7801dc28-1259-4d81-803d-8b17fe214502",
        "cursor": {
          "ref": "63b00e2c-1956-41cc-976e-771006e89090",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e95f6702-f7ef-4a37-b4b5-c9a57747d59d"
        },
        "item": {
          "id": "7801dc28-1259-4d81-803d-8b17fe214502",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5e87c65a-3187-43b1-b88a-86b921437237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1042,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e7a360-8eab-4ff3-af75-457aba3df11e",
        "cursor": {
          "ref": "d9037b11-39d2-4ae7-b1e2-a978041525b0",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5bafff9f-af5b-442b-8132-87ed49976ae0"
        },
        "item": {
          "id": "68e7a360-8eab-4ff3-af75-457aba3df11e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "70d43ff8-7dae-4a6b-985d-defff03f97f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc550f46-6bbf-4576-8e01-7daeed1bc527",
        "cursor": {
          "ref": "05750d93-9ccc-46bd-a7fb-6ce57ce63bd2",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "05cd99fe-80c1-47a7-9a75-beebababa818"
        },
        "item": {
          "id": "dc550f46-6bbf-4576-8e01-7daeed1bc527",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b98b3d9a-d630-488f-97f8-3eafad661fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eaf2b08-eab5-4ea5-a167-b69a4e9423d9",
        "cursor": {
          "ref": "be556027-a978-46a5-ae16-fc342f265e7d",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "902dd4d7-9ded-4292-9b73-ee7ad42e6919"
        },
        "item": {
          "id": "3eaf2b08-eab5-4ea5-a167-b69a4e9423d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "52e10ec1-71e4-43cb-9e37-64767327b251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b15d0f-99b1-4aa0-9b79-b535eb91855b",
        "cursor": {
          "ref": "945ffdd8-ef5b-4729-a132-6f0b7035b84a",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "49c3ff3d-6411-42a8-89c1-98363dbc3344"
        },
        "item": {
          "id": "91b15d0f-99b1-4aa0-9b79-b535eb91855b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "70591514-749f-4c22-b699-a981184d427e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b18eda-758f-4eb3-aa7d-139a235e0e73",
        "cursor": {
          "ref": "4f2650c4-c697-4c93-a9e6-cf5d38cede0a",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2654c6d2-bc17-4b11-a4c7-a1cd784fb37a"
        },
        "item": {
          "id": "57b18eda-758f-4eb3-aa7d-139a235e0e73",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a9ca4e73-4910-4dc1-b900-fd61b0c91b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebafcdc0-3a0f-4181-a01c-cd2a01b67582",
        "cursor": {
          "ref": "b08e1449-849e-40d8-ad38-829c3ef52a94",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bb37df1c-9d75-4f16-bc9b-e7159dd323cd"
        },
        "item": {
          "id": "ebafcdc0-3a0f-4181-a01c-cd2a01b67582",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2c73bba6-b791-4af1-8357-8f8ca3d58238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4954774-e8af-4a19-bac0-f3c428b8dbfb",
        "cursor": {
          "ref": "e78b9f01-511d-4aed-a38e-47cbfa6cbebe",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6e4d8ecf-eb07-4d35-92d6-a0002952164a"
        },
        "item": {
          "id": "e4954774-e8af-4a19-bac0-f3c428b8dbfb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "88fce3e0-c30d-4590-a121-c18172e5f302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1040,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b00294e-9a22-4eb9-9c5b-b913203430b8",
        "cursor": {
          "ref": "3c5aec02-b1a9-467a-b4a3-17f660393f2c",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1a7ef2ed-bb59-4f0c-b336-16f6e23e8078"
        },
        "item": {
          "id": "6b00294e-9a22-4eb9-9c5b-b913203430b8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e1711da7-f31d-4f4d-850c-63b786052937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1135,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056e80cb-92d6-438e-9e82-e04568a62ed5",
        "cursor": {
          "ref": "7a3b5f7b-9728-4e1e-a3e9-a44daab8518e",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fce74ed4-038c-41b1-876e-4b3948109a29"
        },
        "item": {
          "id": "056e80cb-92d6-438e-9e82-e04568a62ed5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0de7c7cc-91e9-4b74-a092-ba25add0ce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd881939-d7d8-4f9b-9aa7-b43dc958b4ae",
        "cursor": {
          "ref": "9b7dfeb1-0338-4993-9da0-9a373805e4cb",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dfb21782-355c-4374-85d8-34b3d30ee4c7"
        },
        "item": {
          "id": "dd881939-d7d8-4f9b-9aa7-b43dc958b4ae",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1967cc5f-ebd2-48c8-8b79-df9829119784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8207e717-fd27-4c25-95eb-4e5689ae660b",
        "cursor": {
          "ref": "d1ea8f33-1b5b-4389-9d78-4e37eee887a8",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1fa970ba-81ea-456f-b503-09e6fc95f88f"
        },
        "item": {
          "id": "8207e717-fd27-4c25-95eb-4e5689ae660b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "799d4d54-7336-40b6-b203-0e712bd5f98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1096,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f03b1e-9507-4d2e-b24e-4eda3a5b89bf",
        "cursor": {
          "ref": "45d29df9-59f4-469c-bde6-9afc84f0a4e1",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cbfc52c5-4036-429c-9493-d8e34f4c7bc2"
        },
        "item": {
          "id": "88f03b1e-9507-4d2e-b24e-4eda3a5b89bf",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "535cddef-c065-4fcb-8a1c-5d30fdca075e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1325,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83814d8c-19b0-4239-bf4d-62ae313d17a8",
        "cursor": {
          "ref": "4fa076c2-63d7-462d-8fa7-378b7474a82f",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2d510c27-f42a-42f4-8381-0684b4cde539"
        },
        "item": {
          "id": "83814d8c-19b0-4239-bf4d-62ae313d17a8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fba31de9-79d1-40e5-902f-f00b8d742c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723bb79a-7d8b-4da0-8f63-080626255e82",
        "cursor": {
          "ref": "29e0defe-20a2-4525-a293-2cd71de24f48",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6ca8f41a-8f76-479f-961a-9eac3ac6f908"
        },
        "item": {
          "id": "723bb79a-7d8b-4da0-8f63-080626255e82",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5223460a-9a31-4d26-ab09-30e1d25247a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1606,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a153b8-a7a5-4ff8-9ed7-1caac39e940c",
        "cursor": {
          "ref": "95662212-07c9-454d-bcc6-9ede9f7052bc",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "37476a21-0896-4126-bbfe-91901fcedd37"
        },
        "item": {
          "id": "72a153b8-a7a5-4ff8-9ed7-1caac39e940c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "30153908-2551-4f7e-ba06-ef9ae8fac9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1302,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2409ec6-c6b2-4006-a943-e298710cf231",
        "cursor": {
          "ref": "8e3c0fea-c1ce-4fbc-8df0-294653e9645c",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2536fd60-4b32-4860-892a-c88c3efc3d9f"
        },
        "item": {
          "id": "a2409ec6-c6b2-4006-a943-e298710cf231",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d6efe0c6-96b9-4371-9ea9-9b56baf2731b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1172,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ddc609-f7c4-4ff7-bf3c-045740041a29",
        "cursor": {
          "ref": "2864bae7-5229-4bd4-9eb3-2c992e54d51e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fecc4489-43b4-49c0-b634-e834a49c6806"
        },
        "item": {
          "id": "81ddc609-f7c4-4ff7-bf3c-045740041a29",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6fc0e87b-ae5c-48c6-bf5a-c6b8958681ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4536378-3e55-4f27-b03f-51a382cfc142",
        "cursor": {
          "ref": "b0a20d02-3d59-4c88-9e35-eed6638ee93d",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a3684d0d-5380-44fe-8361-7402bb2a7a87"
        },
        "item": {
          "id": "b4536378-3e55-4f27-b03f-51a382cfc142",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8aba72bc-b3a5-452d-b313-7a08fa4d283f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355055c5-8100-4f81-b6ce-66579c9f1b5c",
        "cursor": {
          "ref": "c40f67c4-7886-4507-bac9-407691bfabd3",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b776b138-1d37-4e1d-a1ad-14a2d6fd4293"
        },
        "item": {
          "id": "355055c5-8100-4f81-b6ce-66579c9f1b5c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ac862484-e8be-4623-8e07-1974fccd84ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4e3d4d-6280-494d-8529-3e43bf2069b9",
        "cursor": {
          "ref": "0eaf6c27-a344-4b7c-80f3-bdd9b29409aa",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b5d4a7e2-57b9-410f-b723-a4351e3220b3"
        },
        "item": {
          "id": "2c4e3d4d-6280-494d-8529-3e43bf2069b9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a8fc6703-1f0e-46b5-9f47-d02968126ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65022d5d-9f1f-4bab-99d2-fc43445f7f39",
        "cursor": {
          "ref": "65a14cd6-ee0b-453e-83cf-de014bec9ab4",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a4dfd930-b9f1-405d-bb99-d422a27ff18c"
        },
        "item": {
          "id": "65022d5d-9f1f-4bab-99d2-fc43445f7f39",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "737e5ea4-7c79-4e75-80e0-428d0492e5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940f4332-0bcc-4e97-b527-f221a31b051b",
        "cursor": {
          "ref": "b6be8d39-d3db-4a2b-9c94-e3dd4c12864d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "01369850-ff46-45c2-ade1-993413547d28"
        },
        "item": {
          "id": "940f4332-0bcc-4e97-b527-f221a31b051b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ec7088a4-6fc6-41a2-823e-ef01e82486b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f24d37-0d76-4c53-b53f-0b2135e62492",
        "cursor": {
          "ref": "30c26f66-4771-4a99-a48e-96b43c727e25",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e04acb5c-9975-4129-a253-6482433c27a1"
        },
        "item": {
          "id": "a5f24d37-0d76-4c53-b53f-0b2135e62492",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "91b39e57-4e7f-4a10-be67-90f6b6cab01a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 744,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e866dd-0971-4d77-9737-8d808d451358",
        "cursor": {
          "ref": "dabd6f51-ea9f-4a3a-a17d-ccbc2d0958e4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "da7e18ac-6435-40cd-9da7-3b36b6d1146c"
        },
        "item": {
          "id": "d6e866dd-0971-4d77-9737-8d808d451358",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b7648ad9-2068-4caf-8098-7482ebc858c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db2c4b1-6cfa-4667-a8c9-3f336ac66d5b",
        "cursor": {
          "ref": "d1e0a8ea-a2f2-46fd-92b7-9c89ed237195",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e77cd426-db47-4db5-aaed-8df8e063ef03"
        },
        "item": {
          "id": "1db2c4b1-6cfa-4667-a8c9-3f336ac66d5b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "52e797c9-9c54-4049-816a-8c2f51fe28bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab29ad7-3e5d-44e6-8bf6-bcc099f0d1ea",
        "cursor": {
          "ref": "b7850367-f474-4d91-96da-29a6565a7817",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c37cfe88-109d-453f-b96b-7afc30f02780"
        },
        "item": {
          "id": "6ab29ad7-3e5d-44e6-8bf6-bcc099f0d1ea",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2a2583b3-9282-4622-9504-2a09b8bd73d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94df257b-9391-41b4-94fb-a218f3913c25",
        "cursor": {
          "ref": "3eee07e5-196d-4ab6-b83b-724fb462bf3b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "aa1407ba-f258-417f-a747-9646f8454235"
        },
        "item": {
          "id": "94df257b-9391-41b4-94fb-a218f3913c25",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5e3477b5-83fd-4fdb-8954-fbcfa14e262a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df34d9c2-cb3f-48bc-adc9-e63aaa1448e7",
        "cursor": {
          "ref": "f8254380-3d25-4990-9d4b-12f38bedde84",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "02660e2c-fd03-4813-9999-eb1ba6925608"
        },
        "item": {
          "id": "df34d9c2-cb3f-48bc-adc9-e63aaa1448e7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8dd6deb4-67f3-4b63-9539-be2389fb1a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e34185-3dc2-4ae8-acc2-3f5d32fd483e",
        "cursor": {
          "ref": "1f4a3d4a-af1c-410d-9e2c-32581ec3d497",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "49bf023e-fb5e-443a-a746-ff4de02cf22f"
        },
        "item": {
          "id": "43e34185-3dc2-4ae8-acc2-3f5d32fd483e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cde15d86-734a-4915-8f09-ed3ba986a4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5d3e93-d58a-4a3b-bf5f-9bbed8a8549b",
        "cursor": {
          "ref": "494b8428-344b-47f5-add5-2c8640256b9b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6913cec7-08c7-4be2-afd4-e1dd517c4049"
        },
        "item": {
          "id": "0a5d3e93-d58a-4a3b-bf5f-9bbed8a8549b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f2b6be4a-a09a-4592-83db-51e2d0f32770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a2417e-135e-4a53-b4b3-405182274040",
        "cursor": {
          "ref": "da8603c0-e173-4838-8328-964ba32ef403",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d4a9bb1a-e615-45aa-9f0a-31ea0ccec06c"
        },
        "item": {
          "id": "d3a2417e-135e-4a53-b4b3-405182274040",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "28e4c9be-b589-439b-b5d1-7fd112452925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440f95a4-c0a0-4cdc-bced-b6771b0f4f72",
        "cursor": {
          "ref": "3ddc651e-262e-4045-a826-ec7a10b4629d",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dbc1d5ac-4725-493c-ae70-e9ea7bde2cf6"
        },
        "item": {
          "id": "440f95a4-c0a0-4cdc-bced-b6771b0f4f72",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5f070a88-fa76-435d-99b1-028f37c5a9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3a6d1d-e16c-427c-9bf8-76ac973f2c0b",
        "cursor": {
          "ref": "6ccd92a0-2cd6-41bb-9bcd-62cf48576bb1",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f2126a9-ee94-4ba0-a7d9-04929421b2ca"
        },
        "item": {
          "id": "0e3a6d1d-e16c-427c-9bf8-76ac973f2c0b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6b8c3252-64d1-42b3-aab0-cf3ba4faa230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1009ef02-d8cb-4ef0-94d9-b6fce88cb659",
        "cursor": {
          "ref": "9d22aff8-b8a4-4a2b-8a53-333806dbcf58",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "988f758e-0c66-44f6-af37-70bb50e73093"
        },
        "item": {
          "id": "1009ef02-d8cb-4ef0-94d9-b6fce88cb659",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9058b283-7523-4473-8547-7cbe6a493687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfadb56-9dc5-40c9-a68a-6edc5a2d19e0",
        "cursor": {
          "ref": "3cb87ee3-d5ca-44b0-a760-67c3a8f95154",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "44443870-ed5f-4bf5-b205-90fa9814e9ff"
        },
        "item": {
          "id": "0bfadb56-9dc5-40c9-a68a-6edc5a2d19e0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b8acee28-b647-4ffb-a8a4-fb8e04a186fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1f1511-7b79-4085-a071-6dc825926487",
        "cursor": {
          "ref": "1caa92ff-9f2b-4ded-b519-c34a6c6b4b07",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "83e71fd7-6649-4dc3-a5cd-0dca45f3509f"
        },
        "item": {
          "id": "9b1f1511-7b79-4085-a071-6dc825926487",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8a8e5f9d-3bf8-4d2b-85a0-7e38285aa5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b59bb3-155e-4cb7-9ca3-f06886ebc05f",
        "cursor": {
          "ref": "f6c29deb-14b7-4d4d-8599-40e89216f1c6",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0e110a8e-9cce-4b0d-8346-ac703c551f04"
        },
        "item": {
          "id": "93b59bb3-155e-4cb7-9ca3-f06886ebc05f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "520a1b18-3cec-4ebe-8706-0063d162c357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cce936-9597-4cd0-a882-619a44978381",
        "cursor": {
          "ref": "4feb0baa-ae2d-4875-8d2b-b631e337d993",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "01457bcd-e3b7-46c3-8049-bff52ff69c0f"
        },
        "item": {
          "id": "e2cce936-9597-4cd0-a882-619a44978381",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5f871d09-5f6d-465f-b8ee-86ed9060abf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7a3dec-cb46-44e0-9ecd-8654d41e3ec9",
        "cursor": {
          "ref": "f1606ad1-e1b0-4de6-9b4e-a99546a70994",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "29123499-d6e6-44f2-934d-bfd0763f5aee"
        },
        "item": {
          "id": "7c7a3dec-cb46-44e0-9ecd-8654d41e3ec9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ca4f962b-9f3a-4de9-84ae-1006386866a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb36051-29f3-4b99-8e17-34a15b874ebc",
        "cursor": {
          "ref": "764e22e2-b4a3-4fde-a53a-4160d620bf95",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "10e24f1c-b32d-4ef1-af32-8d65373dd15b"
        },
        "item": {
          "id": "2cb36051-29f3-4b99-8e17-34a15b874ebc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "94047542-23d0-400c-8661-f8cfc9f543de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ac8e24-6521-4493-a4c6-dd990a434df5",
        "cursor": {
          "ref": "a798c3c6-103b-49dc-96bb-02fbf35981e0",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "eff37fe7-c33e-463c-bbd6-afaa4eac06eb"
        },
        "item": {
          "id": "25ac8e24-6521-4493-a4c6-dd990a434df5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d573b07d-bf04-45cc-89c4-4c2c3987878f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed620fed-ab92-4576-88c9-7b852c161268",
        "cursor": {
          "ref": "60fc024f-e8b4-4552-9303-c591cde30434",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a272ab46-e0a8-4382-9348-6432fe18ca4f"
        },
        "item": {
          "id": "ed620fed-ab92-4576-88c9-7b852c161268",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "79a16546-eb39-4c7f-ad05-57dae411499d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1051,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae36bcd1-95cb-45d7-8125-288f41e6e1cb",
        "cursor": {
          "ref": "3df079e7-cf1f-4192-9a5c-fd649ddced20",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5b195dca-7588-4c14-9b65-9a9eb297c956"
        },
        "item": {
          "id": "ae36bcd1-95cb-45d7-8125-288f41e6e1cb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e6d11834-4364-4b33-9a64-d97318941701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 978,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edba72e5-8a0f-450f-8475-574938c9b8b3",
        "cursor": {
          "ref": "cc6bef43-b3a8-4ce4-b26b-d2f2ed1359fe",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "07895dc5-3a72-4e73-9963-98228f5b6099"
        },
        "item": {
          "id": "edba72e5-8a0f-450f-8475-574938c9b8b3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bca8b31a-1056-423f-94e2-6abb48a3136a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1de175e-f553-4b9d-ae86-f613a414a7c5",
        "cursor": {
          "ref": "0ea67806-a200-4de5-9c53-624877454967",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e20e1e8a-b542-433b-96c2-9e1b845fd7a8"
        },
        "item": {
          "id": "c1de175e-f553-4b9d-ae86-f613a414a7c5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0e388105-ad92-453b-bd68-08016276385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3c14db-eaf1-4f97-b820-6719372c7948",
        "cursor": {
          "ref": "27bb3906-27d1-45c1-b900-ab660db722a4",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ffbaf8cd-6b24-4db2-8807-de1caf4bdc6c"
        },
        "item": {
          "id": "da3c14db-eaf1-4f97-b820-6719372c7948",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5ab8ce42-95ab-4ea6-936c-f8a28b8ed80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6b2af1-25cc-424c-8725-283edacda76f",
        "cursor": {
          "ref": "01296596-fc0e-483d-ae3e-7fdb7ade1155",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e87be572-040e-42ef-993d-0657c5e8dd74"
        },
        "item": {
          "id": "9a6b2af1-25cc-424c-8725-283edacda76f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4566c038-31fb-44c8-b19c-429a74c61c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8987e5eb-ba4b-4bd2-88e9-955352273d8c",
        "cursor": {
          "ref": "8630c43b-1a66-4fe3-8538-e6e319d4d982",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5db45887-af5c-4a88-8b6d-9cb5a71a3b47"
        },
        "item": {
          "id": "8987e5eb-ba4b-4bd2-88e9-955352273d8c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9d68be8d-8eee-4974-a98c-896482e7b83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59e7d80-75fa-4e4b-80b3-5ae55d261a55",
        "cursor": {
          "ref": "fad67385-51e5-4a34-a098-e35221f309e6",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "29d20769-3bbd-4328-ae15-0c0741b69c66"
        },
        "item": {
          "id": "b59e7d80-75fa-4e4b-80b3-5ae55d261a55",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b42c097c-e2cd-4d07-9d46-82c5ce195d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eafc1b-619f-477c-809c-779a6f5c56b9",
        "cursor": {
          "ref": "7d83eea5-c416-4235-ac1c-fd065ddcc15b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "79bb7f2b-f007-4bf4-9e42-7b3af5243e1c"
        },
        "item": {
          "id": "71eafc1b-619f-477c-809c-779a6f5c56b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d8d6bfd2-eeda-4ea1-8971-4bc93e096ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7702cb36-6c5f-4727-b012-53be211e19cc",
        "cursor": {
          "ref": "9caab2fa-8e57-42ff-9a18-1685a701a46b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b4b0b01b-b8bd-4d1b-8d63-cc48a50cfc04"
        },
        "item": {
          "id": "7702cb36-6c5f-4727-b012-53be211e19cc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eaeb8d5f-aaa9-413a-921d-163d9cf73c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86eee353-7c37-4281-93ba-c631ed6e0ef1",
        "cursor": {
          "ref": "d59afccd-4f0a-4d45-8c25-379306070c4b",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "08aebe4c-63b6-495f-9618-d724a8bb1976"
        },
        "item": {
          "id": "86eee353-7c37-4281-93ba-c631ed6e0ef1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "74fc7da9-8ad7-4f1b-bbca-abb5789600cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c10459-9acf-4cf0-99ee-b7b1329f8904",
        "cursor": {
          "ref": "228c5f91-6217-486e-ac37-f7c7b59db8a5",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bc05ab6b-1cf2-481e-ab8b-029afa95f662"
        },
        "item": {
          "id": "72c10459-9acf-4cf0-99ee-b7b1329f8904",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "91dc4b84-a5a2-488d-8c48-7c798b134e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadb3dc0-19eb-4cbd-a010-f39cb5b5ecaf",
        "cursor": {
          "ref": "4d341f5d-e6ba-4806-a98d-2aa65767f54d",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e4d0da1c-b573-4ea4-a4f5-bb167c887567"
        },
        "item": {
          "id": "fadb3dc0-19eb-4cbd-a010-f39cb5b5ecaf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3f5c76d6-6462-4e3f-8b46-eb9de2358232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823436a2-a842-48fd-b216-89a80043ad01",
        "cursor": {
          "ref": "dc1986d0-cd90-4e42-8010-8e3ee4eef080",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8752cfac-2a3e-45a0-ba58-20a37f66f2c2"
        },
        "item": {
          "id": "823436a2-a842-48fd-b216-89a80043ad01",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3e5eac64-b3ff-402f-be2e-ab218325ad4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9d7a17-c888-4dc2-9099-662c1742ec38",
        "cursor": {
          "ref": "450b6900-20df-44a2-8355-b3b8b85e86de",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c7741b07-9718-44b8-b1db-26b9be5811f7"
        },
        "item": {
          "id": "0a9d7a17-c888-4dc2-9099-662c1742ec38",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f132ead4-0943-4324-b894-ea8a9ad32852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7b9a57-067c-4d31-845a-5a8bf9246f56",
        "cursor": {
          "ref": "c091ec74-8ff6-41d7-aad2-e8a8fc4815e9",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b8a6850f-a8a4-4a06-97fc-e4284eee60a7"
        },
        "item": {
          "id": "4d7b9a57-067c-4d31-845a-5a8bf9246f56",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c74ec0d8-154a-4d10-878c-3a5c572962e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d66d579-4d9d-4856-8b68-3aff0bdaf4b7",
        "cursor": {
          "ref": "c3bbb866-d2f1-4283-bbce-5ed874695c82",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "beed9689-6ed4-4b78-9275-27e079952945"
        },
        "item": {
          "id": "6d66d579-4d9d-4856-8b68-3aff0bdaf4b7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "705bc722-f93a-44a2-8816-bdedbacbeea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e43a70c-219a-4717-8db8-2942240e0f9b",
        "cursor": {
          "ref": "669ed176-d8be-4768-a9dd-e4b0d99d93c9",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0198c446-b69f-4b0d-a02c-6df45d029e3c"
        },
        "item": {
          "id": "8e43a70c-219a-4717-8db8-2942240e0f9b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9e775291-8028-4e45-911e-1cc05b49f607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b1ebf5-c138-4eb5-aac3-e7acfb174d3a",
        "cursor": {
          "ref": "ed67742a-8cc3-4f57-81f3-6cfd36f870dc",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3564919b-5e07-4baf-86b9-c74da381b88c"
        },
        "item": {
          "id": "69b1ebf5-c138-4eb5-aac3-e7acfb174d3a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a407d6e4-0cb2-4f41-bf49-7879dfed70f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca5ea2b-92e3-4738-b1ed-f8fbfb6273a6",
        "cursor": {
          "ref": "f205dc1e-e2b7-4279-b976-930f64489ade",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e44676ba-724e-4e1a-a351-8d26d3887e5f"
        },
        "item": {
          "id": "aca5ea2b-92e3-4738-b1ed-f8fbfb6273a6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8b3d3137-ffe8-4164-92c3-ce1ef20a2761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e47c03-2419-454c-bea4-7cf748896a9c",
        "cursor": {
          "ref": "2ab83233-5a3a-4cda-8e8f-862ee37ff0f3",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "50e6de57-5b62-4a3a-8d9a-be2d3ffc607a"
        },
        "item": {
          "id": "63e47c03-2419-454c-bea4-7cf748896a9c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "944ce3cc-ac5c-414e-b864-fbc097d57f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980bba7c-1f62-4415-8403-c0cd9fea7c55",
        "cursor": {
          "ref": "be17365a-8d39-4359-96c2-67451116dfa4",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9e3f3540-f865-4dc9-bfac-ae8e40b32833"
        },
        "item": {
          "id": "980bba7c-1f62-4415-8403-c0cd9fea7c55",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a7e1a83a-5b82-486b-8c3e-7e3cc071e21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9a263e-7ed7-4040-a318-f7ca60c3edd0",
        "cursor": {
          "ref": "ef2894e4-44d9-4eae-a65d-7f13b452b7b4",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9794f67a-6a96-49c2-b344-d02c08362cd5"
        },
        "item": {
          "id": "cd9a263e-7ed7-4040-a318-f7ca60c3edd0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5d615aeb-eeff-4185-8f3f-d4bf19cca681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7a3228-b329-4a0e-8da9-cde5f66efe2e",
        "cursor": {
          "ref": "cbcfd4b4-730b-4ab4-9a41-8df70c0e2ea8",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9a65c497-5683-4d4c-a94a-76121646b798"
        },
        "item": {
          "id": "7a7a3228-b329-4a0e-8da9-cde5f66efe2e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5104c670-7272-46b8-a8ff-b84020ee8be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea130ae8-fd96-488f-b183-8fb5eba7b20d",
        "cursor": {
          "ref": "688713d1-5f4f-486b-be19-2551e115806c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f3462c14-7a34-48e2-8fa3-ba62acf7a84a"
        },
        "item": {
          "id": "ea130ae8-fd96-488f-b183-8fb5eba7b20d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3a5e71f6-d531-46aa-8e5e-76e96bdbb5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e30c2da-a2df-4ae4-9981-d007b59f8b7e",
        "cursor": {
          "ref": "e79debef-61b8-4b72-9dee-289380ccd310",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e0cecdee-c072-433e-a65e-71456048a57e"
        },
        "item": {
          "id": "1e30c2da-a2df-4ae4-9981-d007b59f8b7e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "92b583e4-8c3b-4b15-8173-3a7eafbe5e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b443eac-3cd0-4416-8385-95925202fedf",
        "cursor": {
          "ref": "9d843a1f-1614-48ae-9c2d-424f2122ad47",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0b59ce87-0515-472f-bb2b-74e8f72e0718"
        },
        "item": {
          "id": "4b443eac-3cd0-4416-8385-95925202fedf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6a454712-1aaa-41e8-a5f2-1c9268894c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348148ac-db19-4b53-aa22-ad670e5f4f58",
        "cursor": {
          "ref": "8cdea9c6-dd01-4f72-9fa9-9dadb1374dc9",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "552514be-6162-4734-8faf-3546675cfd63"
        },
        "item": {
          "id": "348148ac-db19-4b53-aa22-ad670e5f4f58",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "92014007-a896-4a6d-8a74-e63aa0cbd35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fea301-40e8-4084-80a3-91644b0bd0bb",
        "cursor": {
          "ref": "ac3a3ed8-1845-49ce-9366-f611dee93e35",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c8c7d3a6-d76f-42a4-9c5a-ae955369c554"
        },
        "item": {
          "id": "09fea301-40e8-4084-80a3-91644b0bd0bb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ae344059-48e6-4cec-a1be-ee71859ddf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491d55c9-e87b-4f12-bff2-3a5de082bb07",
        "cursor": {
          "ref": "b6978fe0-ba8a-4489-9b2d-3659638251c1",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c6e526ec-c35c-4084-9bbd-b415517f5a51"
        },
        "item": {
          "id": "491d55c9-e87b-4f12-bff2-3a5de082bb07",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1030e7a3-8bd4-4d96-b89a-2459d9f29c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822c2822-3ad2-4854-84b4-a733f2120818",
        "cursor": {
          "ref": "3e036b9d-ff5d-461f-9bbd-b56e9c161970",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "15375c2a-bdec-4ef2-b80b-bba392fb9d08"
        },
        "item": {
          "id": "822c2822-3ad2-4854-84b4-a733f2120818",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6b739f15-f71d-46af-9e16-26707bcc09b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f86a97-eced-4a63-83d3-5c622f363db5",
        "cursor": {
          "ref": "d7f9f585-323d-49c6-b0cd-e4d1ff0a0fbd",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9181e0fd-f598-41fd-9ae7-3a8eada32bdb"
        },
        "item": {
          "id": "06f86a97-eced-4a63-83d3-5c622f363db5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6bd501ef-1416-4c94-80a1-4a935aec1bd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316d951a-9829-421d-8c03-b4654b1251c5",
        "cursor": {
          "ref": "105d1583-5255-4f45-bdd1-d61576ed5fde",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b722ea1c-220c-49aa-83bf-d0e1bcd2b632"
        },
        "item": {
          "id": "316d951a-9829-421d-8c03-b4654b1251c5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "30f30ee3-8d49-40c1-bbab-93dbbf664c85",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51253437-fe11-4c0d-ae0f-454872435f59",
        "cursor": {
          "ref": "ca3e9b42-97b1-49a3-b9d6-b124770f64bd",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "af740f4c-bab9-45cb-b0ed-4476c5dbf325"
        },
        "item": {
          "id": "51253437-fe11-4c0d-ae0f-454872435f59",
          "name": "credentials_issue"
        },
        "response": {
          "id": "523c0022-70dd-4022-b034-4dca24868298",
          "status": "Created",
          "code": 201,
          "responseTime": 6577,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f0ad6a-0175-4894-ae36-1fd4af7760fd",
        "cursor": {
          "ref": "ebbacafb-5523-4eee-92da-e2876bd28e44",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8e20825c-7b28-4893-b128-b3c15550a888"
        },
        "item": {
          "id": "64f0ad6a-0175-4894-ae36-1fd4af7760fd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e33dec16-6e7c-4a6a-97c5-ebb910e95209",
          "status": "Created",
          "code": 201,
          "responseTime": 6232,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaa1fb4-657a-4cb2-b97c-7e2f75f4444d",
        "cursor": {
          "ref": "42c88bcc-e783-422d-a79b-e4ec5dd9a3db",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0996a9ae-2da3-49e7-b790-a97f756578e9"
        },
        "item": {
          "id": "9aaa1fb4-657a-4cb2-b97c-7e2f75f4444d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "05aed4c3-458d-43eb-aaca-934b6cc04890",
          "status": "Created",
          "code": 201,
          "responseTime": 9042,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fcd426-9bbd-4df2-bcf1-0f51f5020ef9",
        "cursor": {
          "ref": "912af6f7-b9c7-4822-a7a6-4958d82753e3",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c84feb6a-3a43-4c35-9fe2-e36552a19d78"
        },
        "item": {
          "id": "06fcd426-9bbd-4df2-bcf1-0f51f5020ef9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "50b2c3b6-138f-4f9c-9788-2d68a82d9caf",
          "status": "Created",
          "code": 201,
          "responseTime": 7035,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87ab925-eb6a-4869-8fee-ce43af68fe74",
        "cursor": {
          "ref": "d13f9b2c-8eba-45a5-9434-a5b246afe5d9",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "13ac1b34-f4d4-47c9-bd4b-d68a95b30523"
        },
        "item": {
          "id": "c87ab925-eb6a-4869-8fee-ce43af68fe74",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3f77d9fe-2bad-4f8d-9305-8c1ab69e7d60",
          "status": "Created",
          "code": 201,
          "responseTime": 6311,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6713b69-8271-4067-81af-042cd6953eff",
        "cursor": {
          "ref": "c6a3e85f-3764-4b58-a164-cc0bdd0bbb01",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7cec1f95-15c6-47d1-a317-b2b406d2e90a"
        },
        "item": {
          "id": "a6713b69-8271-4067-81af-042cd6953eff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f8de1f63-156e-4346-9b06-719d4c086e31",
          "status": "Created",
          "code": 201,
          "responseTime": 7432,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf261955-3d5d-42d1-ae90-b0b6b23c801a",
        "cursor": {
          "ref": "52d985e5-db4b-4a7c-bc96-55f65b8d4587",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "164fcaa2-df78-4817-a6ab-430f4149f580"
        },
        "item": {
          "id": "bf261955-3d5d-42d1-ae90-b0b6b23c801a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c15f03e7-8ed7-4576-b6b6-c6da3c760f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf261955-3d5d-42d1-ae90-b0b6b23c801a",
        "cursor": {
          "ref": "52d985e5-db4b-4a7c-bc96-55f65b8d4587",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "164fcaa2-df78-4817-a6ab-430f4149f580"
        },
        "item": {
          "id": "bf261955-3d5d-42d1-ae90-b0b6b23c801a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c15f03e7-8ed7-4576-b6b6-c6da3c760f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769797d4-c36e-4cc4-b68b-eacb5527b98f",
        "cursor": {
          "ref": "acf80e4f-9a84-47f2-b1ce-b1a691478e6d",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c6c32f2c-edad-40ab-951b-ed0342d04d67"
        },
        "item": {
          "id": "769797d4-c36e-4cc4-b68b-eacb5527b98f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f07d7c25-a597-4c41-884f-35c4cc016a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ef9779-1471-46e1-b361-beb099734b8a",
        "cursor": {
          "ref": "b55a05ce-d7fa-431f-8b71-10a44cc4d3f0",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8d7ddba0-0979-4853-8bb2-08740234cefe"
        },
        "item": {
          "id": "f7ef9779-1471-46e1-b361-beb099734b8a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "445e0c50-3f44-4d4b-ac60-030d3c0742ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497e34ea-d883-4889-844e-ee55b9a3b2f5",
        "cursor": {
          "ref": "130e4cd8-67ef-4ea7-acd1-9ff818b63798",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "33a6c10d-5df4-4cab-a325-c38ff21fa930"
        },
        "item": {
          "id": "497e34ea-d883-4889-844e-ee55b9a3b2f5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9e0c5acf-38f9-4f3d-9300-809f91c15b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbceb060-8f74-4d10-b4f2-31627fad1cf9",
        "cursor": {
          "ref": "69203d0b-b433-46dc-866c-4d010c5cca43",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e3cfa4dd-53e3-407e-8a5b-0a98af42958d"
        },
        "item": {
          "id": "bbceb060-8f74-4d10-b4f2-31627fad1cf9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cfaea690-8325-4382-83db-41bf71901f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb826eb-0ab8-4bab-8587-62a4bf93d577",
        "cursor": {
          "ref": "43c62486-4f3f-4726-bb6e-4b416a0888df",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7efd2b66-c039-4c13-82b7-797e3bf44737"
        },
        "item": {
          "id": "7bb826eb-0ab8-4bab-8587-62a4bf93d577",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "54a05724-0c53-4ee2-970f-2cd065a10e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3f892a-98d8-48a8-b9d1-51c59028d544",
        "cursor": {
          "ref": "549c30ff-fe1a-4389-a508-f918a90707ad",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "102a1161-a227-48d7-a09e-04ba6ac16ab4"
        },
        "item": {
          "id": "9f3f892a-98d8-48a8-b9d1-51c59028d544",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "49cb652b-6293-4f6f-be89-756bd27df137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0028ad11-ba80-42b1-91b5-dad54b51b824",
        "cursor": {
          "ref": "3b29cf31-8742-4b7a-aa84-a3f797d11fd9",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b5779995-36bf-476c-bb49-ac80e30dde56"
        },
        "item": {
          "id": "0028ad11-ba80-42b1-91b5-dad54b51b824",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "36907da9-4145-45b7-9bbb-d7856623b0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ea05d9-8842-40ad-836f-6b3a700e6c14",
        "cursor": {
          "ref": "40c0e151-8a62-409c-a563-19d6f9cafa90",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e0682bdc-a5b3-40e3-a5af-38835dcd12a3"
        },
        "item": {
          "id": "c8ea05d9-8842-40ad-836f-6b3a700e6c14",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e6068b1e-d558-4100-92ee-463e92465e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1375,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482e1c5d-97a0-4f3e-a887-3ebf548291e6",
        "cursor": {
          "ref": "bec25f30-e503-40a4-8ed3-a1075667e841",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e9bdf87b-2483-42b9-9bd3-6018cee7a2e3"
        },
        "item": {
          "id": "482e1c5d-97a0-4f3e-a887-3ebf548291e6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d81694e-0660-4f52-91be-e57675f47835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe543fc4-828d-4704-89e5-5b3063024c7c",
        "cursor": {
          "ref": "43bcafd9-2830-4435-b218-4098f93a51a7",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "769c643c-4180-4344-80bf-65d6d5655338"
        },
        "item": {
          "id": "fe543fc4-828d-4704-89e5-5b3063024c7c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "560201c2-8cea-4fba-b600-a239b0ce8b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab3f86d-1b8c-4d6f-862c-2819cc482210",
        "cursor": {
          "ref": "961a7add-5bfb-49d3-8ccc-d06c64481112",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "067d079c-321d-44cc-a08f-f84786cdbcfb"
        },
        "item": {
          "id": "5ab3f86d-1b8c-4d6f-862c-2819cc482210",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "34208937-5df2-464b-a5a4-15abb323d7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a39bb1-f2e8-4b23-aa38-97ddb2e6a176",
        "cursor": {
          "ref": "dbb81b55-87cf-40fb-bb1a-da734a41bdd1",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ceaf23dd-bd5b-4490-b872-07eb3ac732aa"
        },
        "item": {
          "id": "48a39bb1-f2e8-4b23-aa38-97ddb2e6a176",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e6cd8cfd-4623-4bef-8c38-032a0109200c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7bd061-8860-4d03-a1cd-a1cbf1f3fe21",
        "cursor": {
          "ref": "6a99e74c-90b8-4a8b-9256-448f684655f7",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ad9eb890-b212-467f-96c4-59ca27edc453"
        },
        "item": {
          "id": "fe7bd061-8860-4d03-a1cd-a1cbf1f3fe21",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "786bb1f4-6187-47cf-b1b7-20e658abfba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ba4b08-de04-4717-b2c1-644ca60b6db2",
        "cursor": {
          "ref": "3e2f5850-2934-48e6-bcd0-3b63139825ac",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d4ca056e-545a-4f7d-9e53-98439fe5c7c4"
        },
        "item": {
          "id": "f2ba4b08-de04-4717-b2c1-644ca60b6db2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a0478336-dcf0-4a8d-a215-e110284b18bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84572736-29b8-4e0e-9bcd-60626f6690b0",
        "cursor": {
          "ref": "27c1ede1-9499-4e2b-966a-7892ae61da43",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "69064223-315b-4f25-88d6-125089acd9d2"
        },
        "item": {
          "id": "84572736-29b8-4e0e-9bcd-60626f6690b0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a14a76bb-32bf-43fc-8e4d-894fdedb8a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c50ab59-9720-46bf-9265-dbca5ea473d8",
        "cursor": {
          "ref": "7aed3afd-4c40-4e33-8fca-9cb0bb2d03d8",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bf90f047-68ad-4bed-8953-28347c74baff"
        },
        "item": {
          "id": "1c50ab59-9720-46bf-9265-dbca5ea473d8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bc42394b-7d83-4a9d-89b2-9b62ca487d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cca3c92-4089-4b0a-8c43-63d3d21b27e6",
        "cursor": {
          "ref": "04a30a95-ae97-4e23-8fd5-c9fd24e4852f",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ce05f4e2-f0c7-490c-886c-988324206284"
        },
        "item": {
          "id": "9cca3c92-4089-4b0a-8c43-63d3d21b27e6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "828e466e-1aed-4159-b87e-99083c035957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4671b74a-ef2f-4e79-8099-9411e669a223",
        "cursor": {
          "ref": "534ac83b-0525-4a3d-a0e5-b2d7a7dda7dc",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "51e5f8af-4b42-4c30-b308-b3cdaa686287"
        },
        "item": {
          "id": "4671b74a-ef2f-4e79-8099-9411e669a223",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "640501cd-8803-469a-a441-39f5f520699d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfb4549-4f52-46b1-8f16-0b38b078f0ca",
        "cursor": {
          "ref": "1df9a227-8cfa-4139-804d-8feacc787f66",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fabf5517-6afa-48e4-8d05-6655b0e9404e"
        },
        "item": {
          "id": "8bfb4549-4f52-46b1-8f16-0b38b078f0ca",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b195f16a-1058-494d-a5e5-87f64e84bab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8cc289-0344-429c-a3c4-e83a28d993c5",
        "cursor": {
          "ref": "068a1eed-215d-4d2e-ac44-9459db67d20c",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4cc4f699-2a42-4740-9a1b-d3914a31969e"
        },
        "item": {
          "id": "ef8cc289-0344-429c-a3c4-e83a28d993c5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "542ab8c7-aabe-4bf8-8ea7-a327b0f794ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef1a9b3-5f19-4542-970d-45f74820bdcb",
        "cursor": {
          "ref": "79d49360-8dae-4363-ad4c-9385ae1c63d0",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7ba4721d-8f42-4c92-a99e-cbf5806ba484"
        },
        "item": {
          "id": "eef1a9b3-5f19-4542-970d-45f74820bdcb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e678cee3-15ec-4381-bb93-f0c45b9e008f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db9b564-ed63-44ec-8b38-62f184ab8c81",
        "cursor": {
          "ref": "5b35a567-678c-4df5-9c82-651da0a547f5",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "435d5110-d5f0-4c11-90d2-d8ca10e86233"
        },
        "item": {
          "id": "7db9b564-ed63-44ec-8b38-62f184ab8c81",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "85f424fc-5912-41e5-bedc-386bd2ca1cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d696b3c-4c0d-4c20-814f-4d1f6c044d52",
        "cursor": {
          "ref": "76e72f42-92ee-4796-9a54-168eb3e8d039",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "be2242c0-5cb4-480c-95c5-2301e3450d6b"
        },
        "item": {
          "id": "7d696b3c-4c0d-4c20-814f-4d1f6c044d52",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "882746ff-9787-4290-9dc7-2d4cbb66f70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe769ed-b6c8-4581-867d-32d3c725a88a",
        "cursor": {
          "ref": "77ac1e5f-e90d-441a-ad5e-2a54518a548e",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6c0eeacb-2e35-4979-a879-ea7c840b7ad2"
        },
        "item": {
          "id": "abe769ed-b6c8-4581-867d-32d3c725a88a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f4c8d874-4562-4c41-b840-c60ccc1f54c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942f26b1-59b7-4b35-bf34-956878849497",
        "cursor": {
          "ref": "560971b6-36db-429e-b08f-e05ae3436a6f",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "76c83aa8-f9a3-4d01-baac-fd3ce452f911"
        },
        "item": {
          "id": "942f26b1-59b7-4b35-bf34-956878849497",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "78963fe5-ae10-4517-aff1-1fb2fe79d0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39234a7-726d-42a7-9eba-77815b81bbc1",
        "cursor": {
          "ref": "9057cc31-f426-40bf-b0e8-3869e1e9ce17",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b4c14a65-248e-4799-8a20-dd282722a997"
        },
        "item": {
          "id": "c39234a7-726d-42a7-9eba-77815b81bbc1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb84c443-ea96-4adc-8173-da1d87fc64b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee40a099-8290-416b-ae16-0ca3bf7b2723",
        "cursor": {
          "ref": "59266a01-f599-4e7b-8776-ccc62f16f8bf",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e24dd1dc-47bd-4303-9dbb-2795ac19be6e"
        },
        "item": {
          "id": "ee40a099-8290-416b-ae16-0ca3bf7b2723",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "750e1def-b5a8-4171-8890-82ddf4ed3b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caa4da7-6123-40fb-acf3-9d5200aa6e87",
        "cursor": {
          "ref": "bb4407bb-a2ba-4607-a1cf-cb371271e363",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f1a7244-1991-4d40-ba22-c1df88b772ca"
        },
        "item": {
          "id": "3caa4da7-6123-40fb-acf3-9d5200aa6e87",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2574fc17-80ed-47df-9d07-a58aa4ee15f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f54eb41-7322-4d96-bb5f-ff54bcf2a5a2",
        "cursor": {
          "ref": "802f99ce-47cf-4518-96a1-b23c7dd91a27",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2bf34349-614f-4555-b9c2-6e3d3a0241b4"
        },
        "item": {
          "id": "0f54eb41-7322-4d96-bb5f-ff54bcf2a5a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c058fd2c-e21c-45ce-abac-11062d1d3c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403b7fbc-c61e-4c4b-b3c9-fd6413dab3d7",
        "cursor": {
          "ref": "1a3245b2-6fe7-483c-ae37-a6fd96261a2c",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8298d620-2db8-4f11-9795-783a9af7ef34"
        },
        "item": {
          "id": "403b7fbc-c61e-4c4b-b3c9-fd6413dab3d7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2cf3522e-e677-4a5a-af9e-bc32a132f4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9940de4-b691-45fa-9157-7b0ab050c435",
        "cursor": {
          "ref": "62add185-132d-4e80-92ef-e863f0e9a469",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ef15c92f-c22b-45b2-82de-4be09adb2f57"
        },
        "item": {
          "id": "c9940de4-b691-45fa-9157-7b0ab050c435",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4a487a97-8e8e-4e33-a46a-0d4c7fe43e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4399201-bf2a-48fd-88eb-4c9e0637f1b8",
        "cursor": {
          "ref": "ad883dde-9ccd-496d-889a-5ccfef1e3fc3",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "159ef2e3-ffc9-464e-80e4-4a5f612f59e1"
        },
        "item": {
          "id": "f4399201-bf2a-48fd-88eb-4c9e0637f1b8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0e59de09-4f94-45f6-aaad-3232e110ba54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc1d54e-eb87-4732-9491-ac8e9684604d",
        "cursor": {
          "ref": "3c2a8290-3f29-4248-9a51-74e82a136004",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7a0eb95e-02d9-4f7f-8534-7fc6e1cd8beb"
        },
        "item": {
          "id": "8bc1d54e-eb87-4732-9491-ac8e9684604d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "0cb0285b-9452-4145-adb5-14c43ab80d96",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 627,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e7b856-33c5-42fc-8d54-501f130f940d",
        "cursor": {
          "ref": "96c5ecd3-bfeb-498a-a149-bfcfb5e1e39f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0e022f42-ee5f-4f67-b6ee-da6a689f7825"
        },
        "item": {
          "id": "44e7b856-33c5-42fc-8d54-501f130f940d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e0d3507c-95ee-4d8d-ad11-069431b3624a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e7b856-33c5-42fc-8d54-501f130f940d",
        "cursor": {
          "ref": "96c5ecd3-bfeb-498a-a149-bfcfb5e1e39f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0e022f42-ee5f-4f67-b6ee-da6a689f7825"
        },
        "item": {
          "id": "44e7b856-33c5-42fc-8d54-501f130f940d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e0d3507c-95ee-4d8d-ad11-069431b3624a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2ee361-5041-4025-a364-c520f0e8b42c",
        "cursor": {
          "ref": "64c7a0b1-77ba-4e39-a08b-fac5d9fdbad1",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "847d0925-dce9-4269-995e-c456c7ccaf8c"
        },
        "item": {
          "id": "ae2ee361-5041-4025-a364-c520f0e8b42c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "36506470-d068-4d38-99c8-f7749dbf9e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe5deeb-e22c-4205-9fbf-cd8d19b23d51",
        "cursor": {
          "ref": "ccfe4ca3-a5a1-4f5e-8b26-c26436798bd5",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9ddb52dd-f76b-4166-adef-1b7328b151f8"
        },
        "item": {
          "id": "cfe5deeb-e22c-4205-9fbf-cd8d19b23d51",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "57d23f7f-91d0-4b49-ad5c-2bb5fb102bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6d3c9c-3397-40fc-86f9-5c3f41ac895f",
        "cursor": {
          "ref": "9ce8f9af-6106-476d-9eac-34f988889ba6",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3483a176-389d-4645-9683-34fff291dd1e"
        },
        "item": {
          "id": "dc6d3c9c-3397-40fc-86f9-5c3f41ac895f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ebb8b578-06cd-4841-abc6-f46489843b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3301fc99-1ddb-43a9-8b4e-9319b62ba2df",
        "cursor": {
          "ref": "555a0900-ae59-4cc2-b2a9-f334807b0496",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f1061fde-e0f9-4469-95dc-be5e8d193527"
        },
        "item": {
          "id": "3301fc99-1ddb-43a9-8b4e-9319b62ba2df",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "09666303-e4db-4c26-975f-1c2e2e265cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75acfb9-cfdf-4f47-b560-6bb8f0b3bfde",
        "cursor": {
          "ref": "1b7eaaf9-0ad0-4264-8383-2904aa975c03",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6a58e4e3-e3ae-46f6-a1eb-fa2691a1d699"
        },
        "item": {
          "id": "c75acfb9-cfdf-4f47-b560-6bb8f0b3bfde",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "840a721a-c0eb-4a4e-b62a-db1a03ff72cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feea9cab-947c-4ca8-acf5-26a8869592be",
        "cursor": {
          "ref": "b545a930-6030-4576-9582-b10a6005c0f4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eb1812d6-1158-4f54-99de-165749733f78"
        },
        "item": {
          "id": "feea9cab-947c-4ca8-acf5-26a8869592be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b1d35af8-d021-4061-874e-14b0c33011bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e027aa-19ec-4f97-b1a0-9752e5dc56d6",
        "cursor": {
          "ref": "5c131dd3-3273-4551-a421-7091ca273935",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "70907815-0b3b-470b-9043-368d1efc5443"
        },
        "item": {
          "id": "10e027aa-19ec-4f97-b1a0-9752e5dc56d6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5a518de6-8201-45d3-a0be-df37ad837cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8504da-5c45-4360-a8e1-84a2a6e99619",
        "cursor": {
          "ref": "c3586a62-e0f3-4a40-8aae-55da0710150f",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5de61725-39c7-4fd0-9745-3542d7282809"
        },
        "item": {
          "id": "1b8504da-5c45-4360-a8e1-84a2a6e99619",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b160b859-3d5a-42e6-b3cb-6eef8446de86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c146d2-3065-47ef-9650-61ae7d34c4a2",
        "cursor": {
          "ref": "f506d680-3777-452c-836e-232090103537",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e5fe592e-4295-446a-b901-0ed69f5e1dbc"
        },
        "item": {
          "id": "63c146d2-3065-47ef-9650-61ae7d34c4a2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cd69e3b7-51dd-4aec-82a8-96322141a458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41be27c7-dd51-460e-83d3-b78ca5c3566d",
        "cursor": {
          "ref": "9271a055-ea13-41a1-96db-92f617f890d4",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ad4f7ac1-278a-4832-8ab0-50aaf6584a85"
        },
        "item": {
          "id": "41be27c7-dd51-460e-83d3-b78ca5c3566d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "75c176eb-da47-4a57-8635-465c8e1ed9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a707549-b28a-4681-bf57-4faf6da5df70",
        "cursor": {
          "ref": "328c5720-ae4c-46ec-a893-45790f613a57",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3fb18b65-faed-4c5a-8116-ea804e6416e9"
        },
        "item": {
          "id": "4a707549-b28a-4681-bf57-4faf6da5df70",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "84a2c666-b9ca-4302-9a9b-f339aa907de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03ad16c-0689-4125-b18a-fe94203b02c6",
        "cursor": {
          "ref": "3eda4f6c-85d3-4b31-961f-22cdfa9715fa",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6842452a-3da5-4308-9e53-68e8be6ba9e3"
        },
        "item": {
          "id": "d03ad16c-0689-4125-b18a-fe94203b02c6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "45e1018f-2ecd-4b8b-81a8-8f6110f0b686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61287111-6ccb-493a-a686-8ab871db91e6",
        "cursor": {
          "ref": "944bba23-c763-4b9a-b92a-e2df5f91be96",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2ecd7546-3676-4a4d-bdd9-24bfd90b8f7c"
        },
        "item": {
          "id": "61287111-6ccb-493a-a686-8ab871db91e6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "725a8d27-9aad-447a-b161-af5c3f8b3415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924595b2-74c2-44b1-b20c-8768b8f2c0bb",
        "cursor": {
          "ref": "6648a1d6-deec-40da-a5e8-5539f7619bc7",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "782878f3-7a53-468b-ae38-92af7e7c5b50"
        },
        "item": {
          "id": "924595b2-74c2-44b1-b20c-8768b8f2c0bb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c4baa5bf-4b54-4203-ac58-c89381fe5f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5c1728-70da-44e7-96a8-6bd62cb052fd",
        "cursor": {
          "ref": "44093072-bc8d-4b53-9f52-fc54a7915a2d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "39d7e4f1-e0e5-4a17-93c5-398514439a1c"
        },
        "item": {
          "id": "bf5c1728-70da-44e7-96a8-6bd62cb052fd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b10e2544-3349-4672-84c1-07a0b885fdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61a524d-6387-4aa5-8d31-1ea3d2ee4a82",
        "cursor": {
          "ref": "35d50de6-24e7-4e63-b3b9-369325956e5a",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bfb6c504-2853-4749-92ec-9bffbc3f384c"
        },
        "item": {
          "id": "d61a524d-6387-4aa5-8d31-1ea3d2ee4a82",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6255cd3e-6219-411e-b479-b467a299f75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598a9459-41eb-4086-8e73-8ac884bb150e",
        "cursor": {
          "ref": "7a223514-3538-494d-b021-393ffa374155",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3f0aea69-8120-42c7-b3f6-b0b1b5135dd3"
        },
        "item": {
          "id": "598a9459-41eb-4086-8e73-8ac884bb150e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "da1e1326-d69a-4432-95b6-7647591a2e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b529eb0-1234-4311-9309-73910f7dae48",
        "cursor": {
          "ref": "42cdc3df-d34d-4ece-be3f-f69c6d9b132a",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d4e634d9-7180-4c4b-982c-cec0a04159b9"
        },
        "item": {
          "id": "8b529eb0-1234-4311-9309-73910f7dae48",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "42b5e79c-e876-4ea2-96d2-687a08d2f01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de873af-8e4b-42d3-9442-fd55cf10e4d7",
        "cursor": {
          "ref": "cac7d9c9-bdd0-4300-be72-5e5dc5801869",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "75259fd3-8b60-4cce-8ce9-9c833159e6fc"
        },
        "item": {
          "id": "2de873af-8e4b-42d3-9442-fd55cf10e4d7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1666da8a-d471-4e34-8080-c67c32b5f3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba79536-8c09-4413-a4ff-5bcf53c79526",
        "cursor": {
          "ref": "5e9aef4c-0c51-43a2-9d42-8fb855479664",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5b962f31-23a6-4e77-9d15-1cd6a4792d30"
        },
        "item": {
          "id": "1ba79536-8c09-4413-a4ff-5bcf53c79526",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "868d570d-2315-4f80-ae7d-dc4a2cc39f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd7ae79-dcf3-40b8-8406-1773d5f656ae",
        "cursor": {
          "ref": "cefaabd2-e872-4fa1-b1d6-a7f300c7921d",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9376097c-97f8-4676-9816-c92819c85a3c"
        },
        "item": {
          "id": "bfd7ae79-dcf3-40b8-8406-1773d5f656ae",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7c360cd7-c0c3-4432-91b5-4f6c8eb228ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38d2b47-1538-4caf-9d19-4bba9eada224",
        "cursor": {
          "ref": "bd81b750-e72e-4517-a228-8442564d6a70",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3682efc3-fb95-4cb4-885b-7d272174f044"
        },
        "item": {
          "id": "a38d2b47-1538-4caf-9d19-4bba9eada224",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8a20eeb4-a43c-4a47-a8ae-557eb072a616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f22ec5-8a16-475e-b606-60fb687c2401",
        "cursor": {
          "ref": "366e42b5-014d-4807-be89-9aa1a3bbce55",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "56cad0da-0672-4e19-999c-f6dbc75e673d"
        },
        "item": {
          "id": "56f22ec5-8a16-475e-b606-60fb687c2401",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4066be87-311e-430d-8791-539e388f8111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678f2bfd-f5b7-42a6-9503-d23e787b768c",
        "cursor": {
          "ref": "edf178c6-0aed-439e-9012-215ad4c2d824",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f05104f9-d6b7-46ee-8503-21ef63827b6a"
        },
        "item": {
          "id": "678f2bfd-f5b7-42a6-9503-d23e787b768c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "de4121b9-e834-48fa-a04c-e9d24719df9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cbdcce-be0a-42f3-92de-c1a91c1eb635",
        "cursor": {
          "ref": "91668609-5bbd-42ab-887d-cc9d39db7261",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6c080269-4efb-4d66-9848-aa30a4bc38a4"
        },
        "item": {
          "id": "08cbdcce-be0a-42f3-92de-c1a91c1eb635",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "030a6517-5a12-4fb9-88e5-f9fde551bef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef92a44-90ae-4b43-ac9d-eeb254d7ec2c",
        "cursor": {
          "ref": "fc26690e-8b09-407c-a648-f67b0ca229c4",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d4fbcb27-0bbc-44ce-baa2-312536118266"
        },
        "item": {
          "id": "6ef92a44-90ae-4b43-ac9d-eeb254d7ec2c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "37e15fee-8ed1-4d9c-8634-9779c79b6d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef40485-de02-49a9-82cb-78630639568a",
        "cursor": {
          "ref": "a4aa5310-ad38-4807-b7c3-2b09dc2a2aac",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "28d237a4-3ab8-41f0-84c0-31acf92876ee"
        },
        "item": {
          "id": "0ef40485-de02-49a9-82cb-78630639568a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cfdfc219-fd29-41b7-846e-262e5ed326ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8397c932-8341-46e6-b78a-c7110e51af94",
        "cursor": {
          "ref": "924dd643-bb40-40fe-b101-c3517e54ccc4",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "95e07c4d-f35d-4e2d-860f-2849b23fabb6"
        },
        "item": {
          "id": "8397c932-8341-46e6-b78a-c7110e51af94",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "111c0dbd-f4e0-4929-834a-af3fa7b3b634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea71ece0-f252-4607-85a0-7b70f97b01a5",
        "cursor": {
          "ref": "afcba573-a12d-4fc1-9225-65b93f22949e",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3987def8-eb9a-4975-843a-6589a5e3d811"
        },
        "item": {
          "id": "ea71ece0-f252-4607-85a0-7b70f97b01a5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2ba67559-12b4-4658-a533-9356a0aa750b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d8e5ea-3939-459b-bf29-db1c214419af",
        "cursor": {
          "ref": "52cd5365-5e56-4ead-bfde-b1d12af73b4e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "27f16e75-9533-4c1b-8b21-d34ef4c2fc30"
        },
        "item": {
          "id": "c6d8e5ea-3939-459b-bf29-db1c214419af",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2b2de452-9b73-4276-9de9-296688dd9ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d88afa3-d756-4a82-b3cb-9cc9c4f4c6bc",
        "cursor": {
          "ref": "e00f5fb9-080a-4d9a-a85e-264eb648c7a3",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ef113243-1b01-43bf-9bf3-3b754128119d"
        },
        "item": {
          "id": "7d88afa3-d756-4a82-b3cb-9cc9c4f4c6bc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "04f78b75-bc1b-4df1-951c-4ad7dced0f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b768af-609b-48d9-b75c-4bd49f3e552f",
        "cursor": {
          "ref": "901e2755-a623-43d4-912f-579ea8fa6d16",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "803b0fb5-4120-4c82-a93a-a3b9a854f00d"
        },
        "item": {
          "id": "39b768af-609b-48d9-b75c-4bd49f3e552f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "80d05938-c016-43f4-8517-6503d4f96fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834465c4-90f9-4e8f-8b81-aa3ef0f89728",
        "cursor": {
          "ref": "e61ae5ea-ba11-47b3-b8e3-f4d856e3b877",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6d58e721-5764-403b-a5f8-c2be5492b3b1"
        },
        "item": {
          "id": "834465c4-90f9-4e8f-8b81-aa3ef0f89728",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8f835f33-2183-4b9e-a6b7-4b462ce50817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0088860-a4ca-464a-991f-a1a8471285b0",
        "cursor": {
          "ref": "351b0177-4238-4deb-b4c4-38891aa7e521",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b2fe4991-bd17-4ee3-8b34-9968fbf9b18f"
        },
        "item": {
          "id": "c0088860-a4ca-464a-991f-a1a8471285b0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "49d51544-b857-4299-b5b1-869adcd1d0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1147,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37655471-aff7-434f-b3df-3d2badf42536",
        "cursor": {
          "ref": "2cc959a0-d6f8-4241-8110-f7afe72fd800",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "db704fdd-6d8a-4bb7-8cf7-54bbcd7d827e"
        },
        "item": {
          "id": "37655471-aff7-434f-b3df-3d2badf42536",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "7d42e2e5-a863-4955-94aa-55c294ab691f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f42d4c-020c-413d-9027-f5e1603b1732",
        "cursor": {
          "ref": "5b188dce-8ff9-40c1-811d-3cf0933e0cb8",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "821f158b-4bf7-4778-bd2b-4aaebe1ced5a"
        },
        "item": {
          "id": "59f42d4c-020c-413d-9027-f5e1603b1732",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c829d76b-6f37-45dc-b942-8d0e625c6ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8c515e-cb47-4237-9cfd-b6e1d348474a",
        "cursor": {
          "ref": "697aef3e-ffc4-45ab-b4b7-6572441e92c2",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "782e0c29-2de2-4626-97e1-6b7916ae0090"
        },
        "item": {
          "id": "5c8c515e-cb47-4237-9cfd-b6e1d348474a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d215cb18-f51d-4a28-8a84-b9680f3ab389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3a7bb8-48bd-42aa-a85f-e5171057f097",
        "cursor": {
          "ref": "dd91928a-dddc-469f-a65c-7c4fe3ce03cd",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "48323bb5-f067-474d-a9ec-5e0577b6ce09"
        },
        "item": {
          "id": "4c3a7bb8-48bd-42aa-a85f-e5171057f097",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "32069925-7e3d-4aa9-95d9-54aeb49f0653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9864d76-3e37-4a8e-998b-b236708c8e24",
        "cursor": {
          "ref": "860a2ff9-5b80-4f9e-a2d0-e0fc74e78d42",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f7ea843c-0728-4190-80c1-06c735552039"
        },
        "item": {
          "id": "e9864d76-3e37-4a8e-998b-b236708c8e24",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b63c9457-7eb1-4254-84af-d22cf7145355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1c1d9d-fab5-49b2-9bd0-2da8a66174b4",
        "cursor": {
          "ref": "dda86a81-a336-4d65-bf3a-5a2f1561c2f6",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f7964834-5949-4069-a3e9-7681a8da4a41"
        },
        "item": {
          "id": "4f1c1d9d-fab5-49b2-9bd0-2da8a66174b4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a20f2a4b-ac83-41f2-a839-adc01a1f06ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa02d783-9a5d-4250-a286-5bf36220b195",
        "cursor": {
          "ref": "2e7a37af-9e41-4e5e-9c87-6b7976862893",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c53b9b6d-f104-47be-9e03-3fc3947eeefc"
        },
        "item": {
          "id": "fa02d783-9a5d-4250-a286-5bf36220b195",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "04fb626c-4237-4d22-a52c-33c2a1186d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfb9b99-109d-4c58-84fd-419e55bc7f11",
        "cursor": {
          "ref": "11f484ff-f8dc-4722-9e44-6eed8ec9a583",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b2a09c57-05ac-40e2-92f6-1405f5330419"
        },
        "item": {
          "id": "8cfb9b99-109d-4c58-84fd-419e55bc7f11",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0520c99b-043a-4f75-b5d2-a0be9839e49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fca273-4789-4139-8842-b883023fccfb",
        "cursor": {
          "ref": "ea3dbfbc-3d30-4b5d-a9cd-6c0a4a15a299",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c0e5809d-b184-48c1-a6ea-264fd7510073"
        },
        "item": {
          "id": "c7fca273-4789-4139-8842-b883023fccfb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d6dbef4a-86d7-40ac-b01a-9b9aac9f7987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e35b78-9e0d-4971-8888-709e39f42e4a",
        "cursor": {
          "ref": "9e55073a-9bfc-4fc1-a71d-e2cc557d5b67",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "62cfb893-0b53-4ea7-97aa-500ae09f628f"
        },
        "item": {
          "id": "f0e35b78-9e0d-4971-8888-709e39f42e4a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b1aa7926-12a5-4643-85cf-62ee061e05c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa78bbb-22db-4c1d-a9c5-df3cef5c07ad",
        "cursor": {
          "ref": "f1c39ef7-5fc8-4561-95fa-3254fdcd78be",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "706b8089-f73d-4da1-8240-74b655b66981"
        },
        "item": {
          "id": "faa78bbb-22db-4c1d-a9c5-df3cef5c07ad",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "82286ca3-ef8f-4f8f-b358-f9483947ca2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a6f978-aff5-4dc3-9501-694481a2d04f",
        "cursor": {
          "ref": "6d27509b-f1f3-48e0-9319-752f0622f4b7",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0cec13b6-3df0-4cf4-a1a7-bb0a63b203de"
        },
        "item": {
          "id": "32a6f978-aff5-4dc3-9501-694481a2d04f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c4346110-dfee-4a46-8106-ca3d986b16d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13879f3e-0daa-4f72-aa7f-ac06392fe4a2",
        "cursor": {
          "ref": "7f8d7c1f-3cc1-45eb-b454-dc3558624e46",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c5b6b334-0990-46a0-baee-a9114b17cfab"
        },
        "item": {
          "id": "13879f3e-0daa-4f72-aa7f-ac06392fe4a2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6ebdc2a5-30bc-4408-8411-085adc770ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e524439c-99e4-45b3-9a1d-95f8eccca896",
        "cursor": {
          "ref": "a12b4276-4fc5-435d-a393-dc37312a4c97",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1a2d1647-c774-4693-a6f7-91577636e9a9"
        },
        "item": {
          "id": "e524439c-99e4-45b3-9a1d-95f8eccca896",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "72f94d94-d53b-4857-a599-133ed265625b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1212c15-0d3b-4b34-bee1-25c2c6fe5b82",
        "cursor": {
          "ref": "9e6ab573-c4ca-4694-8209-dbcabcc4642c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2e83f875-ce50-41ce-a911-1bded4e96772"
        },
        "item": {
          "id": "b1212c15-0d3b-4b34-bee1-25c2c6fe5b82",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b17e4c8e-1028-4817-8f02-41ddfcac682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff0b7b9-4fbb-474c-a92c-ee2a9eacfddd",
        "cursor": {
          "ref": "c7ec121d-c1e0-411e-a954-792941157253",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6574b6da-4b75-44a5-ba85-687d55135480"
        },
        "item": {
          "id": "1ff0b7b9-4fbb-474c-a92c-ee2a9eacfddd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8a02bff1-9adf-4ca5-bdbd-8b0ad0a0d32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045caf85-5d42-4c62-801a-448f70b2b68c",
        "cursor": {
          "ref": "823053a4-04f5-43b6-a984-220cd7fdc0fe",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e7ef37b0-3f6c-4135-8784-6a4df5ecd0ae"
        },
        "item": {
          "id": "045caf85-5d42-4c62-801a-448f70b2b68c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "424d6ba9-70ac-4d80-8083-2088ab087ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67ac36d-7909-4f23-9dc6-a6ef56b35123",
        "cursor": {
          "ref": "2e8782a7-bb16-4b1d-a718-7cd019abf990",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "abe74c27-be34-45f8-932d-4992242c00b4"
        },
        "item": {
          "id": "a67ac36d-7909-4f23-9dc6-a6ef56b35123",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6a34ff4e-82ee-463a-a189-7c73211341f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d323d736-870d-4ae3-bfd1-d47e00c3a1d8",
        "cursor": {
          "ref": "bedb9134-65dd-4859-8b66-a518a726acbe",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3121bd93-7563-4f08-9569-371e6a322273"
        },
        "item": {
          "id": "d323d736-870d-4ae3-bfd1-d47e00c3a1d8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "58d6e6fb-e829-4d86-8c1c-a996bcfc8794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7cf6c7-5a51-46da-9437-a31beb282a6e",
        "cursor": {
          "ref": "1419d2d2-27aa-47a9-a1c3-0edd4c48910c",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "faddb244-e1d0-43e9-b894-71f0b5a9f3ed"
        },
        "item": {
          "id": "5e7cf6c7-5a51-46da-9437-a31beb282a6e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f97ead2f-1864-48ee-80c1-3a4be6d57108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4888c9c7-46f8-46de-9b15-83f8ec9ddd2e",
        "cursor": {
          "ref": "cfe8b734-4258-49f3-b973-9710355d4572",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "47606c9d-b91c-4a69-8cbb-7b72acc7f236"
        },
        "item": {
          "id": "4888c9c7-46f8-46de-9b15-83f8ec9ddd2e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "612a1c43-6b52-41eb-a719-c9ca3a326393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ef4e61-ce29-41b1-a007-c3ca2ad8ce7f",
        "cursor": {
          "ref": "8e9230f0-c3a5-4461-a325-e65713f5b668",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a20939fc-19f5-45bf-a886-76bfc1faf252"
        },
        "item": {
          "id": "98ef4e61-ce29-41b1-a007-c3ca2ad8ce7f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c235fdad-3cc5-4505-bcea-848474f54169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba49315-571b-4efe-8941-93831615da83",
        "cursor": {
          "ref": "6d52f2bf-6018-4c17-aaf9-e48aaf0384dd",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f68699cf-655d-44a1-b07c-703399491ff5"
        },
        "item": {
          "id": "9ba49315-571b-4efe-8941-93831615da83",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a48c4ba7-9c7f-4926-86e6-a63eb25ba6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a32541-42b0-4cff-9a9d-b658c98703c3",
        "cursor": {
          "ref": "fef46885-ea59-4d07-b560-159af4f08730",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "32f4912a-f7c2-4bcf-a9bd-4801d1acaba1"
        },
        "item": {
          "id": "b8a32541-42b0-4cff-9a9d-b658c98703c3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6ba2b7fc-e093-45b9-8bd3-4201f37284e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8150bd7-1eba-4c83-a348-727b11fc9ebf",
        "cursor": {
          "ref": "38978d66-6c75-47c8-9e14-1819df353c23",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "13b992a3-30ed-4011-aa26-c1ba095b76c2"
        },
        "item": {
          "id": "c8150bd7-1eba-4c83-a348-727b11fc9ebf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "076e945e-7284-40e4-ae90-c6b9e9144247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c1da3e-a5d9-4ab3-bae0-38316aca37c3",
        "cursor": {
          "ref": "4c73e631-005a-4cc1-8109-8c14a59cab13",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a278b189-5040-4ed6-b717-e9d6c84e523f"
        },
        "item": {
          "id": "e8c1da3e-a5d9-4ab3-bae0-38316aca37c3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "28758af6-d500-4582-81eb-953026addd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721a7a56-3765-4a15-92a3-13015e615620",
        "cursor": {
          "ref": "ce11486f-2e6f-4228-920f-23b037c48896",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "70e9de00-c509-4114-8bb8-ceb1b9161c3f"
        },
        "item": {
          "id": "721a7a56-3765-4a15-92a3-13015e615620",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "42bfa72c-5bd3-4700-81d1-7915c9f9568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71dee1f-7bf0-4241-b0d5-0577a4a1b582",
        "cursor": {
          "ref": "2487c7f3-0743-4cf9-b6b7-3df71ed55d9c",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8be16503-ad3f-4564-be6a-46346e4e405e"
        },
        "item": {
          "id": "e71dee1f-7bf0-4241-b0d5-0577a4a1b582",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6449e8a8-3b9d-42ef-baef-4c5ad116c025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f2fb5b-3287-4616-b1c8-efeb1ec2569c",
        "cursor": {
          "ref": "76bcb9c9-081f-46d8-ac36-fa8b6adc8865",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f6955905-6b73-41f8-b44d-3d74579fcd60"
        },
        "item": {
          "id": "99f2fb5b-3287-4616-b1c8-efeb1ec2569c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "464f1220-e20f-4afa-9a08-8931abf17e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cf5b47-4050-4ad6-94ab-549131b657bb",
        "cursor": {
          "ref": "0aef2895-cf4e-4f47-bfc9-a6732c7afdde",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "460b5ff3-471c-4259-bd18-2ac53ffe4c77"
        },
        "item": {
          "id": "67cf5b47-4050-4ad6-94ab-549131b657bb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bc3f0254-ff81-4901-8864-d90962794c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafdbbd2-16dd-4b2c-a3d3-f033b2e2a56c",
        "cursor": {
          "ref": "1c2893e2-149f-47a0-8d41-5f2b3c8a2b2b",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "995b51e2-076d-4eb9-93d2-34010daa53d2"
        },
        "item": {
          "id": "cafdbbd2-16dd-4b2c-a3d3-f033b2e2a56c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c2a8a44c-7248-4749-a8ec-13fd641c972d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f573128-849a-4d4f-9ad7-20ee09ecdf91",
        "cursor": {
          "ref": "c9696d97-df0c-4334-89b7-579edc9636a4",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "16c41e69-f6cf-40bb-be13-ea43753180b4"
        },
        "item": {
          "id": "4f573128-849a-4d4f-9ad7-20ee09ecdf91",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3bfbb471-1757-41b5-9d65-fae575f96175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93133381-0598-4117-b781-f93f1b31365b",
        "cursor": {
          "ref": "29b7a37b-e9da-4253-803b-032443002339",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eac0139d-dea3-46f5-bd5e-34b78bb84244"
        },
        "item": {
          "id": "93133381-0598-4117-b781-f93f1b31365b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "424bc566-7de8-4587-b017-0b833825d826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dbc125-fc0f-4bfe-b2a4-b931b08a09f1",
        "cursor": {
          "ref": "9aa0a8d5-2e68-4687-93dd-c84f9a3baf14",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8e46d57f-3530-4bb2-b126-e0d95a275289"
        },
        "item": {
          "id": "e3dbc125-fc0f-4bfe-b2a4-b931b08a09f1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6f933ae2-fe5d-4d2d-b1b0-73f5748442d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7890ba14-d5ec-4079-bab1-8e73ce064a01",
        "cursor": {
          "ref": "3d61ba45-7e1b-4b7d-b906-4ebb3f2fe71d",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "86b110c1-e51b-4787-a089-e1066d52953c"
        },
        "item": {
          "id": "7890ba14-d5ec-4079-bab1-8e73ce064a01",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2ffdb07d-1197-4813-9e94-f9eacefe9087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34720a92-1a6b-4ad8-83c8-c58c6422af8e",
        "cursor": {
          "ref": "5e50c3fa-bc24-4576-a96e-ac29e34a664f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c87e435c-6c89-4cd8-98e4-a6350eecb1af"
        },
        "item": {
          "id": "34720a92-1a6b-4ad8-83c8-c58c6422af8e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9e6b86a9-8752-4e8c-9503-8ef5cb5a7ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0754948f-0b6f-4425-9856-7ba6484592a3",
        "cursor": {
          "ref": "6aa8ef91-35e4-41f4-9a35-0ca951a03bc2",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9d048a87-ced1-4097-86d7-159d9a1aa84c"
        },
        "item": {
          "id": "0754948f-0b6f-4425-9856-7ba6484592a3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e8740bda-4db3-46ca-8a56-41bcbb7e051f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f428ba6-2f6f-415f-84c5-a1d8316a4892",
        "cursor": {
          "ref": "c981f1df-62b9-47f6-b468-14d365b8b18a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "70ee1641-6acf-4e9d-b8da-f25de5ceab43"
        },
        "item": {
          "id": "5f428ba6-2f6f-415f-84c5-a1d8316a4892",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1d7e1501-16b9-434c-8cd0-cf68c2f3b3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15ac82a-be61-465b-8a96-3b314c98d711",
        "cursor": {
          "ref": "11c17888-2b11-4bbe-836b-8558032da7b8",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6c96e76d-40d6-4ae0-a288-765044a42272"
        },
        "item": {
          "id": "d15ac82a-be61-465b-8a96-3b314c98d711",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "465f6794-7eb7-455f-914d-1b71bd917642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09553bc9-7c97-4704-a9b7-4047bad20655",
        "cursor": {
          "ref": "0e858c0e-5f63-4d76-9700-e97cfdbc5bcb",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "05918ee5-b2a9-4e85-824a-42a1edd1e8c6"
        },
        "item": {
          "id": "09553bc9-7c97-4704-a9b7-4047bad20655",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8cfce803-4ad6-44f8-b895-10e7069268c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90294451-51c1-4fd1-9596-f510c1d50ac8",
        "cursor": {
          "ref": "8a34a9d1-1fd2-4764-b186-05fcc024bb89",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "10bf4238-6b67-4994-889a-d1423f0de3ce"
        },
        "item": {
          "id": "90294451-51c1-4fd1-9596-f510c1d50ac8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b2ee46ac-0eb0-46ea-89d7-702abc15d793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc6ef24-7a43-429b-b146-674adf680be6",
        "cursor": {
          "ref": "b5d43c59-d0b6-4ea0-bd46-609e6581b6c3",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9def4eb4-d1a6-44f4-a8bf-9a06eeaa85ac"
        },
        "item": {
          "id": "2dc6ef24-7a43-429b-b146-674adf680be6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e73e5dc1-9f68-4eef-be94-86f345d82e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9200b37f-e869-4757-bdc5-8e83c4ae8633",
        "cursor": {
          "ref": "2fa54b11-c726-4c7e-8c33-ed34242223d8",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bde10b5d-5863-4bf4-a8bd-e8bcb6a4e90c"
        },
        "item": {
          "id": "9200b37f-e869-4757-bdc5-8e83c4ae8633",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "22cde7c5-96ca-4b67-8466-900b17669b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43253c1e-5beb-445a-a05d-3d433f122af8",
        "cursor": {
          "ref": "7b064123-6f16-46fe-911a-201dc614209a",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9035fa53-ff04-4cb0-bd83-11284a1113f4"
        },
        "item": {
          "id": "43253c1e-5beb-445a-a05d-3d433f122af8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0fcde3ca-96da-49e0-a9a1-12f496c56f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc4bb2b-6ffe-427c-bc55-755950fb2bd3",
        "cursor": {
          "ref": "c14291cb-8eb2-48e5-882e-1875aa2cea28",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8b6e5139-79a8-43cb-8a8b-4b2047d6d9b5"
        },
        "item": {
          "id": "cfc4bb2b-6ffe-427c-bc55-755950fb2bd3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9294c95f-77aa-47c9-bff3-3f37764352ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724edbe7-83d2-403a-b657-3a92f657c168",
        "cursor": {
          "ref": "63ed6483-d8c8-4585-9d01-b32eab1aa99e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "591f6a97-04fd-4fff-8649-86f19a43d5b1"
        },
        "item": {
          "id": "724edbe7-83d2-403a-b657-3a92f657c168",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b715250e-8c01-4c9b-8106-65c44b593a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaea04ec-e9a2-45e1-aec7-560762fd5d76",
        "cursor": {
          "ref": "721aeaa1-ef64-483a-9d83-e2f116cf69d1",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c690b6f1-786f-4c15-8e71-f09d6dcd850c"
        },
        "item": {
          "id": "eaea04ec-e9a2-45e1-aec7-560762fd5d76",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "62bbbaf0-da98-44a6-abfc-1e0eab90e16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8620c8-eb08-44b9-9882-75a59385444f",
        "cursor": {
          "ref": "1f8e2993-41bc-4be8-89cb-ee22fec16d3b",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ea67b397-cc30-411c-8068-4bcdf4bb2b3e"
        },
        "item": {
          "id": "8f8620c8-eb08-44b9-9882-75a59385444f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5ea17c25-cb70-402c-b8d1-4016fe5a729b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8970222-35ba-4ef9-a6b8-8f8915edc446",
        "cursor": {
          "ref": "8d596550-a6f3-45be-a147-acf0215c2017",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e300efda-e326-4976-8d75-7abf2686f6cc"
        },
        "item": {
          "id": "b8970222-35ba-4ef9-a6b8-8f8915edc446",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "46e30550-a6e0-4628-88d7-07fee68d5766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd16745-ba4f-495e-8a9f-e42ddd2cd7a0",
        "cursor": {
          "ref": "11ff61d1-991d-4c8d-a1c5-f6d9085771c5",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dcd117fb-cbe5-4d43-bef2-dcbc6ea88ae4"
        },
        "item": {
          "id": "8fd16745-ba4f-495e-8a9f-e42ddd2cd7a0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b389a029-c012-47f1-9b94-5ba79fedc843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1121,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e269977-c24a-4413-82f9-2e3a16c58204",
        "cursor": {
          "ref": "34ff4727-f7c8-4eeb-ad35-aaf43372b65f",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "768bf866-275e-4cdb-ad10-808624a2ca21"
        },
        "item": {
          "id": "3e269977-c24a-4413-82f9-2e3a16c58204",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6ae4373f-613b-46ea-a98c-39fbec1650fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd24d32-452d-430d-b5b3-6e1e326215cc",
        "cursor": {
          "ref": "93dd54cd-c26e-43c6-a7ef-f45ef3679d12",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eedf1550-a7f5-405f-b29c-4b17ea290c26"
        },
        "item": {
          "id": "8cd24d32-452d-430d-b5b3-6e1e326215cc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c104e1d5-0dfd-4285-b1e9-59029739ee1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 959,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a0590d-df58-4942-ace0-d4154c5fd6ec",
        "cursor": {
          "ref": "3c556e4c-0559-4d96-8200-4596ea2235b4",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bd31d464-6b8a-4400-9499-ba77c9765200"
        },
        "item": {
          "id": "67a0590d-df58-4942-ace0-d4154c5fd6ec",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b8ec15f0-b034-4944-a492-8e7049a22614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c0b63d-2e17-4703-aab9-e2e75ef47c75",
        "cursor": {
          "ref": "22557a45-50cd-4487-937a-b22b6d759192",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f84a9330-3864-4a9a-a3a8-3a777060a99f"
        },
        "item": {
          "id": "a3c0b63d-2e17-4703-aab9-e2e75ef47c75",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "23429b04-b7ad-4b9e-bf96-38a3c70df90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361c982d-56c2-4e5a-932f-6874e2a97a10",
        "cursor": {
          "ref": "ecc8a9b6-9e6e-4e99-9731-c67e02900f4b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "47afe786-a260-4d23-ae36-3ef29e4132ed"
        },
        "item": {
          "id": "361c982d-56c2-4e5a-932f-6874e2a97a10",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c93d721b-bfde-4ca1-b5bf-15eaa390b8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fe7e49-795e-4db2-b60e-3f4cd0b61ceb",
        "cursor": {
          "ref": "6a8b4300-9d4d-48a4-a840-f714bc6e28f5",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "11a12607-a9ff-421d-b55c-14995f70804e"
        },
        "item": {
          "id": "42fe7e49-795e-4db2-b60e-3f4cd0b61ceb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5ef01299-4e02-43d4-8c7c-1dec73849bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2031f9d4-88c5-4ad2-882a-5aa0cc2ba481",
        "cursor": {
          "ref": "9b1a28d2-32b0-4ee0-a209-3159436d795c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b5632175-48d1-4bbb-8a7c-b0a702b30094"
        },
        "item": {
          "id": "2031f9d4-88c5-4ad2-882a-5aa0cc2ba481",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1003e148-f18c-44cb-b95d-980873c214ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46adf914-4333-4251-b68b-0c88c9ffbc22",
        "cursor": {
          "ref": "e0dcd997-66f2-4ab8-9ff7-2a353af96715",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cc4e7a68-93af-47fa-a392-75972a62d2c4"
        },
        "item": {
          "id": "46adf914-4333-4251-b68b-0c88c9ffbc22",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4d6a8f60-71ed-45f4-810f-8854d4aad869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec4d991-b5d0-4d4e-be74-b3cc1753bfd9",
        "cursor": {
          "ref": "893a6e8b-9043-459d-b89d-8e104c62944d",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d3870519-d852-4de4-92f3-203747e83236"
        },
        "item": {
          "id": "aec4d991-b5d0-4d4e-be74-b3cc1753bfd9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3343f4e7-089e-4afe-a238-ce81e5639c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62feca08-b0aa-4c20-848c-ae0fba456595",
        "cursor": {
          "ref": "d3770832-4b33-4e50-864c-c7a1f6410ec5",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "21d76ddd-d70f-45fb-993f-575403e55f91"
        },
        "item": {
          "id": "62feca08-b0aa-4c20-848c-ae0fba456595",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f9658007-b7e2-42b8-aec6-88da751b2a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003a2572-cf14-4489-a218-75d3a244283e",
        "cursor": {
          "ref": "e64b5cbc-e0aa-4233-920a-7dc0c4888ba0",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6d0ce222-a4ad-4e79-9250-ad61c400c417"
        },
        "item": {
          "id": "003a2572-cf14-4489-a218-75d3a244283e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "10636d6d-a934-4923-bad7-4095839fdd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb841aa-66b0-4e39-b39c-7d98c85a48d2",
        "cursor": {
          "ref": "110a23f8-8ec9-48ce-ae08-5a48dc284ccd",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3a97bb7a-b6ab-4143-9ff9-7edd2e24322f"
        },
        "item": {
          "id": "3bb841aa-66b0-4e39-b39c-7d98c85a48d2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "834b7c9c-9045-4444-9d90-1f36d2eab18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d0103b-24da-4598-80ba-78d6035c7990",
        "cursor": {
          "ref": "aa070a07-6ad6-4df4-8353-ebedfef53851",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "afd5c8ca-4e2b-4f63-8937-d829c65254c0"
        },
        "item": {
          "id": "63d0103b-24da-4598-80ba-78d6035c7990",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "290a0481-09a0-443e-a0f9-31d1062083e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b09656b-544a-4d2f-bd53-469164f33c55",
        "cursor": {
          "ref": "b05be1a5-af94-4650-80b2-76f4cb1375eb",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ef6b2405-eeeb-4b36-800c-8eb194ed5a1c"
        },
        "item": {
          "id": "9b09656b-544a-4d2f-bd53-469164f33c55",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f6a84117-cb7c-4061-94d1-3a7fe9bffda1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 509,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0f7cd6-2a66-48a5-98b3-ff396de53971",
        "cursor": {
          "ref": "e2bd0e23-c6af-46fe-b3e8-b9d90594bf7c",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0881eeda-a515-4fef-a549-efb690718f0b"
        },
        "item": {
          "id": "0c0f7cd6-2a66-48a5-98b3-ff396de53971",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0b78e359-cb6f-4185-88ca-7a6be9630e7f",
          "status": "OK",
          "code": 200,
          "responseTime": 547,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfdc541-0a3e-4771-9702-0063d05462d8",
        "cursor": {
          "ref": "7eb41004-df72-44ab-b49c-97df55703d1c",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "58b4641d-d9ac-4804-9d4c-f272ea7fe702"
        },
        "item": {
          "id": "bbfdc541-0a3e-4771-9702-0063d05462d8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "231f5b21-289c-4345-a936-fa925c623ef0",
          "status": "OK",
          "code": 200,
          "responseTime": 2026,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac997d39-75fe-44b4-a37a-3721a22d5fac",
        "cursor": {
          "ref": "32df1a2a-d915-41bd-b678-6d43f04d71d5",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "744cec8e-8758-4050-bc7c-feebeaa375ca"
        },
        "item": {
          "id": "ac997d39-75fe-44b4-a37a-3721a22d5fac",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "93f38063-77e9-4724-b39a-39062315f300",
          "status": "OK",
          "code": 200,
          "responseTime": 2040,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d2a010-1c84-4270-8521-9e22d721cb69",
        "cursor": {
          "ref": "a09aa454-49e5-4557-8c47-d8fd8452af95",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8aec702a-c3c8-48c9-b8c3-6113573a8f44"
        },
        "item": {
          "id": "54d2a010-1c84-4270-8521-9e22d721cb69",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86018079-5a5b-4d87-a1f5-de537ab341cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d2a010-1c84-4270-8521-9e22d721cb69",
        "cursor": {
          "ref": "a09aa454-49e5-4557-8c47-d8fd8452af95",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8aec702a-c3c8-48c9-b8c3-6113573a8f44"
        },
        "item": {
          "id": "54d2a010-1c84-4270-8521-9e22d721cb69",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86018079-5a5b-4d87-a1f5-de537ab341cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d2a010-1c84-4270-8521-9e22d721cb69",
        "cursor": {
          "ref": "a09aa454-49e5-4557-8c47-d8fd8452af95",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8aec702a-c3c8-48c9-b8c3-6113573a8f44"
        },
        "item": {
          "id": "54d2a010-1c84-4270-8521-9e22d721cb69",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "86018079-5a5b-4d87-a1f5-de537ab341cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be28bf8c-adf5-4b78-9cd1-ad4a72c85a16",
        "cursor": {
          "ref": "389dbb53-19fa-453a-86a0-0eb3c8429138",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "64f86d12-b927-4b1c-b355-73475f291cea"
        },
        "item": {
          "id": "be28bf8c-adf5-4b78-9cd1-ad4a72c85a16",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9eb49dc1-d57a-4c63-bc58-d29287aa649c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 556,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1549989e-ac69-4403-bedb-40db2f60b282",
        "cursor": {
          "ref": "feae6638-976f-492e-8aaa-1ce918949cf9",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "27d88661-79bb-40b1-85e5-df3f4bee3588"
        },
        "item": {
          "id": "1549989e-ac69-4403-bedb-40db2f60b282",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8a16c8c6-68bd-4513-b43e-edbeb62ae1dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1549989e-ac69-4403-bedb-40db2f60b282",
        "cursor": {
          "ref": "feae6638-976f-492e-8aaa-1ce918949cf9",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "27d88661-79bb-40b1-85e5-df3f4bee3588"
        },
        "item": {
          "id": "1549989e-ac69-4403-bedb-40db2f60b282",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8a16c8c6-68bd-4513-b43e-edbeb62ae1dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe98ef2-03a5-47f7-acb4-c4efa1dcb1ab",
        "cursor": {
          "ref": "2e2d184f-1af4-4ae2-a688-e6b9e44a3850",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bf378f7b-1eeb-444c-a953-64016c259988"
        },
        "item": {
          "id": "7fe98ef2-03a5-47f7-acb4-c4efa1dcb1ab",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "6407f4a3-6f6e-4116-bbea-c2e9132553c3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 763,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813150d2-ae6f-4870-818b-dabae04ae0ea",
        "cursor": {
          "ref": "f778cae3-085c-448a-89cf-b228c9847cef",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cc0e9c94-cd9d-4592-a056-645a1fefbd33"
        },
        "item": {
          "id": "813150d2-ae6f-4870-818b-dabae04ae0ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dac8636b-5fed-44a3-bc2a-6ac62ed8ecb1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813150d2-ae6f-4870-818b-dabae04ae0ea",
        "cursor": {
          "ref": "f778cae3-085c-448a-89cf-b228c9847cef",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cc0e9c94-cd9d-4592-a056-645a1fefbd33"
        },
        "item": {
          "id": "813150d2-ae6f-4870-818b-dabae04ae0ea",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dac8636b-5fed-44a3-bc2a-6ac62ed8ecb1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5421c0-2c24-4b35-bfbc-61b4b0e91a6f",
        "cursor": {
          "ref": "416da2e2-9be8-4f09-8e4d-b8419a946bbc",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d6bd0405-8cb4-4660-ab72-833fcdde235c"
        },
        "item": {
          "id": "ef5421c0-2c24-4b35-bfbc-61b4b0e91a6f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "64737251-e27d-4dda-8bf4-a7faba2660b1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 729,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}