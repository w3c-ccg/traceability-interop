{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f268fc73-ae34-4698-9108-49c4f35819ff",
        "name": "Clear Cache",
        "item": [
          {
            "id": "eafc5f21-c70b-424d-817c-b6762e2eb29c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55cee228-4d73-4ff0-addc-f4695863b47e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "86bc7c75-6165-4f5a-8ad4-1fb20880d0ae"
                }
              }
            ]
          },
          {
            "id": "dca5fe22-dfde-4bf8-9481-e43cbb2d397a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae407647-55ef-4cf1-bc1a-c5390e282b05",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2bc21c70-a865-45b3-91d5-0b41c933725e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e0b8ec02-a8e4-47cc-adb6-4e9d72f9e25b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "aa08479e-015b-49e7-8cd8-1fde9988560e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "632345ff-1504-4ee6-a26f-62f19a9b9e03",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2f971d5-cfe9-4e93-98ab-6ae9dc1f91b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "534e01ec-4b5d-416d-9be8-bc3013a3b8f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "afbd95f7-c4e1-4a3a-97b3-94af513b980f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf3ebee3-239f-425a-9fd8-c3fc70219c06"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "35267261-e90a-404d-b82a-75de6287870f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b9d2c54-45b9-4950-ae30-badca5bdef78"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75cdf34c-b316-4791-905b-65220dc6bb51",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ac287bcc-fb7e-46c1-8fab-78ffc00e1d29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b14f8446-fb79-4e2e-8136-263b34e6cb67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65b37fbf-4a25-418d-b480-b42046c2bbaf"
            }
          }
        ]
      },
      {
        "id": "6fe4f1ea-121b-4756-99f7-51de6968257a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c4298077-d25c-4aa9-a095-b5e447119adf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e54851e0-ff98-42ab-ad11-516c9cf9c305",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d199e6f4-b480-4f93-a5d5-a6427a6dc7c3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379f0c9d-7efb-4368-89d0-4dacc8d2631f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06a17812-a76c-48a5-ae2a-bb0524269bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17706fc2-4728-4bdd-87a7-47c249343577",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2c098-da50-4b93-9011-0262152f6adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc364234-8380-4cd0-88dd-7c45b03c1dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f1a5de-4f82-4785-b94a-579cf3d661e2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c433c7b7-dffd-4864-a3ab-081797d7a5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0a93aa0-2da0-4caf-9497-1e4158cafcdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "15d7054a-e54a-40b2-89c7-06c403bebe3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6bda3ce-94a1-44b5-af0f-48e134e4233f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd275e09-e664-46ca-82ba-8c5e889dc4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0513c16-1954-4339-a0a6-64b4364e5c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b96ce4-a7e4-47a3-9015-c6b62ebf3714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20add1f-4a8a-4a73-bb9e-d375870653b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d32f1a-8321-4cc6-8752-072f6abf06ac",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6d7037-3348-4510-a294-3eea34afd662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bbd2670-e909-4467-b48e-6c6457cea195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7644b471-f47f-4e28-80ad-302d96ae013d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e911f3d6-ec63-4f92-bc39-515114a3a405"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "73e4b8c2-7c8d-48b7-80c8-8db4363c319d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb674203-eb1e-496d-9aa8-10e27a858caa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bc75316-12da-4baa-bae6-b76779351d29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "81bcd7b9-2bde-43e8-bfdd-b0e6a8085874"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78b80f85-2b5b-4cd1-9589-35ec0e56fbec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1f968851-7c9c-4216-9b05-b13d7f5fbce9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "700df119-93ee-41d8-8a67-0ede60edf6a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "232c40bc-2511-4fd9-ac67-b06fd99a4de4"
            }
          }
        ]
      },
      {
        "id": "ea37bc64-4be3-42c4-a813-94a1647ffa0e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b065ddec-bb12-44f1-8bad-a64fb3e94b23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21173c28-08f3-41fa-9365-8e13e1e57923",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "032eb867-a312-495f-9626-cbe124ff56db",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9cd09f-21ae-41e9-9ad7-f34c7e58ab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77724d1-2fd5-4cd2-ba68-f6b2a96168ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef612fe1-3f16-4238-800f-6110b96ab663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28488b02-9f89-470e-9456-45d6ce3eb74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72208b5-332b-4992-b2a6-a4a2021d673c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65361a1-1da3-4393-8ad6-7dfaf030e28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce417157-0a7f-4950-baa2-f3ad08f455b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57006e29-affd-4729-aefe-653bead4a172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f41c2dea-c057-480f-b5f7-daf833e5146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4766dfd4-3db4-48ce-a202-6eb21ab8b6a0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35ec646-c10d-49e8-81a7-1af60f2ef9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef9dace-f122-4aed-9ae2-9a536e4503a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614f7341-6454-4efc-bc80-8471e555b003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4fc2b06-1e6e-4118-9736-7d488204ddeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc125229-14a6-4d8a-b46a-56420734013d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac48390-da17-4b8b-a173-79425e55cb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4649ed-00e7-4f9a-ba4c-814865e13714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccdee86-1350-4a40-8739-2750a4a1a095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ccb19cb-c084-4035-a5ae-d3562a6232d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824b0acc-24dc-47ee-9784-838ac24deb8d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6459f7-2d39-48f9-84ce-737b35fbd5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5daa9b-9507-449c-bd37-2146ec654f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604de9df-9c8f-40e9-8ab7-09aaad010549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c18f74aa-7c14-4dc0-a499-1f8e09d7d2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9f0300-3952-4e6f-bbbc-3e6e98859a63",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d048e677-8ea2-4061-ba83-aad8df990cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efb1960-34f1-4293-ad36-10d69112452f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61aa940e-59d8-4a22-93d3-c2a69f877961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1e06298-c460-4dd4-8563-b4813e9bd0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e432f5-5773-4066-8525-ceddfdccec44",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0027ca43-f9d4-4124-b70e-8f796002236f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d9e9fa-5216-472e-923d-d12fba7936ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cadfbce-66c9-4e17-bd0d-c0041171dc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f32e4fd-10b9-46c3-8c00-1a1f239235bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f220bc-2316-40f6-83c3-54e01eddd2ff",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d7f7f6-16c0-444a-a293-865b56a6f807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4f3ef7-55e9-4101-b0e2-573390719fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24d2ee6-c225-4038-ab81-12b8dd33b788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e1b28fc-70ba-462d-b32d-997739663c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae0b380-52ad-429b-a334-c5a546f20037",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ce2d50-d0a4-4040-9036-fd0e770010e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a12582-08b3-4d9b-aa0a-ed420f5be63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6c6bff-6e8d-4df4-82bb-f15192235974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a526522b-8325-4592-b1ff-4b64df70591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6fe8a7-7382-4682-9305-ae3d714e3af3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d80a25d-366f-40e4-a054-26eda554f257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204410ae-0e7a-4da6-bf08-4e61e6afb243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b660b0-5895-469f-b83a-dde9fbae73f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc71f802-2487-447e-8375-0a096e8feb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616d840b-6629-4b3e-bae3-fdf9e02274ab",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e282c14-09b9-4000-88ea-54243007eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b67959-0aaf-4a30-b6f1-c5a8459c0750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca135d4-ec7c-4e00-bc6a-d6c9f6e3439d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bff9f9ea-795a-4cd1-bc41-66ae0fb92f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a38a13-2977-46d5-bce5-951f7dcc4f9a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1345cd0f-cf4d-40de-93e4-b1c7ee3bfa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a443e297-b839-425a-91ee-ba47e07fb258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eb19d7-d54b-492a-b886-0cc76d586dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c2eb523-1069-478d-a06a-826e1e78e241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158542b0-ffe3-4baa-b695-bcecf64c1ce3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70575a1f-50e1-4933-b12b-443dba27c0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb19074-dbf9-4a6c-9b89-5ea07e5ffc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516e079d-c7bd-417d-b6f9-fa838c131bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da696bde-ff54-45bd-a1e6-3619fac3d5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd839168-6360-4fef-938f-8b5028368c2a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af41a127-e065-4c0d-94a2-e933a7e4937e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dfea104-1e1b-4703-a4f3-c246a36ebab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f976561a-aa12-4565-bc8f-9408b93a7eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b22d9e9-d29b-4b67-afff-3b352f86aa4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3978a1de-b71b-45d2-91c4-7cd2bbd14ce9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1f7db3-9ae4-4db3-8bac-07a93bddde9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e40e5e-11c9-45ab-9db4-25b5af02c5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8663a48e-e985-459c-a90b-8b859f92f40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9ebac9a-4de7-4665-9a82-630bde2153da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d81e24-dbaa-4c98-a0b8-3fc6dd9248c7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dce9f16-3fb9-4aa7-a59c-8b330f59c127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72241ba-b5d0-4789-8e9c-ff677f69657f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85426da-0e3f-446d-b986-e0d193d0e0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "578e06c8-214a-44cd-b070-107fd2ba1c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3addee77-09d7-4436-85fe-8b3f69fcf7ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4508555c-2cf7-43bb-af8f-1f5edd634a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283c06ce-e0b2-418d-9fdd-2f4b10453e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb883fdd-b855-429e-bbbf-540ada0c0c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acd1d88f-6c3e-40e8-9458-f74207ec7739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82a5978-c420-4ff0-aa81-dac7d8cb6c36",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcc93b0-97b5-4d28-b1e8-ea901aee563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ef01f7-4a83-4a55-8b61-5a59e4be6572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a00d7e-8228-4b0c-888a-d1a86a713a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "94b69857-cf1e-474a-8fad-e98faa73648b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1b460e-d0a1-46d8-a4ef-9a36a32e56cf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb11623-176a-4b0e-978e-b1f4abb0d0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7396ad-c24c-43e5-a44c-0a1653c838cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1b4066-e559-45ea-8f7f-f6e8ed981cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1204b7-fb56-44d7-ade1-7349440d867b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5760961-d346-438a-b6de-71f4a2083286",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0715c7-70ec-4e30-8612-bd465525b5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3c1ab0-7308-410d-bde1-b8fcf053b5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3cd114-406b-4a91-bf4d-1d1c47004469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7891e1bb-34bf-42ba-803b-187dc8e5d284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32210af4-ce38-4def-bac5-73e69a31ab27",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d5ed33-5f5a-4f94-bfa7-97126a4dad2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f133e6-785a-4bbe-96ed-bd5a44761221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6630b2b8-551a-4aa4-a83e-2caa5bbb6ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4acd2fe3-45a1-4ac1-9671-3a3598239994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c8197f-50ab-4801-9e11-8dee0a51c611",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b88b74-a5d7-4f0f-87e8-73e455a8e5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d3150b-7f1a-4c68-a567-bc149a4452d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c388b33-782f-4734-ba70-b4d2f7acf7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4cdef1-6b23-4757-9a35-af8585ac2b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365b1e57-7798-4004-b415-efddd1bef1a7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23beb097-e0be-47b9-9671-3f0a636da7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0ee413-3f09-4d58-9205-103233f0631a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecaaed9-8e34-45c4-bef1-ec6518fdc6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b529990-a169-495b-9a55-cd5c40363c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec617133-ed40-4456-a69d-2a82d4b87cc6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c89cac-7830-4e9d-97ce-5c4ac1d2f4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c79850-72c1-4bcd-bfa1-e6cb87be34f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58407878-5d2f-460c-9a11-da1b25d283e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "787e35ef-cf84-462e-8fc9-f463641afced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3018c75-c4ad-4432-b2eb-a39f93732dbd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbe7b2b-b983-44ac-b114-be516f4a70e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d78a09e-52df-40eb-8531-9fab0f18394e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51c10b1-8e06-4547-985b-49752eef027c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "988aa6bb-7d94-489f-8f03-61610de06825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458cdddb-7067-40bf-b05e-b1dd7166d99b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52887c7-80b8-4e56-9de8-4303167d086d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255c7361-eeda-4ac3-8988-5284ee1b676a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47182bea-f259-4e63-ae44-2cf3133bef6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6127271b-8731-414c-9307-00307bb8a201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e460c81-7b2f-4a4a-8ce6-e79c3114a2d1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e860f6-94c6-44fd-995b-f0b2b2d3f770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d7059c-960d-4a01-ac09-7e3b75c7e35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc85d1d3-e34f-4f00-bf38-4a7e7c5a265f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd99e98-6464-42cb-9753-bde9577572b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ef6cf4-6ffb-46d4-a107-1869aa76b704",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c1b15a-b718-4393-902d-672e1e46829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f21a17-2162-4767-bc3c-95b401eec481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf83019-e1bc-4686-a4e9-9e8123c51b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d809e970-a57e-419a-bb21-ac4a698d3d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40720888-d97a-4ca7-8c6c-5f2c13ae915f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312c4baa-5f6d-43f3-a4b1-9467dc924ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f5662e-e01d-42fa-b3b2-af5e7b8656c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7518c28-ac09-4581-8b8f-02afefd4057d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d993e0d5-9219-44d9-9094-4307be798d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f97e10-eb03-4ef1-be05-efef4bc5a09c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348aa35f-db40-47f3-93cc-41f7bc7b4f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03a8c54-7549-4ee4-a790-4632fed32e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d85863f-d04f-40ea-a94d-a2e9e1a3ee9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2bc05b-6842-4e54-b05b-9e6e33c2f366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0776fb-a94d-425d-9ec0-fa24ae9ebb72",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca30bdcb-9a00-4bd6-85ef-edd42183af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df023450-9792-462e-940b-8c691479ce31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e2fa73-b232-4c83-ada7-3034af0c2590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcc09e9-84c4-458a-a35f-5e373451b53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df5839f-b7f2-4c85-a228-2386f36f0ef9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986fb889-ee00-4e3a-be68-8b367e0cd8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d65119-a66a-4107-9bfa-a9a0c40bd110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111c3368-7fae-4ba1-afe7-6787ce4e2ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3795adf8-b5b8-4159-96b4-66c339f3d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed185bb-c47d-4dac-8490-687d83aadaf1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e34a54-c28d-466c-aaa5-396e72c3b0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c1033d-ab16-4dd8-a4bd-eec4c03484ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1b5464-9d3b-494a-bf41-327b50bca859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00ba4e1f-5a58-48c8-9b2c-35ecdc0874c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4139c5-e6c3-45a3-b269-39b8ed36ba4c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51df6390-1939-4520-a78c-7b175b3086e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa24713e-5e8e-4ce0-ac4b-69b3caa9ebac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f7c742-9e2c-4061-82d9-826bc7c4131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "737e7d5d-eb69-4cc1-88b6-39dc6bb0d735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945858ad-d9cc-4c70-979a-4283f1d73dab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79888739-6c40-480c-b97c-e555472e2598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28037b5-6a36-4b1f-8ba1-a9c0eaecfdf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d9404-900a-40b3-8417-44dfb01d54aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf218a6-c2eb-4694-81bd-a7d5d9ad8581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be636937-1b4f-4c93-8df2-5a0f924aa0d4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d264876-227e-47f1-85aa-c6ff7ff3724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8abb36b3-4993-4c78-83c1-420f79490e08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba81ec4-e1e0-48e5-9e67-f0236369d20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "60955219-182f-495e-a9eb-cedb8b000ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445b1aba-7d05-4d22-bfb2-645a35340eeb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055d2752-0a00-4e4c-a183-aca6ee71edb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdccf46a-ecbe-4b1e-b325-3cc67678dc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c81742-1a79-468a-8a9f-747999bcceaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "684703e3-0222-461e-8990-6d810a936c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363295d8-cfed-406c-943f-82f64cf5cf84",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da86ca2-2578-4233-ab0e-ce0e6d8a1b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4139562e-0959-41c5-8be7-fc3fbdb19655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2541983f-0aa0-45d9-9578-1a54be3df6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8576f4b-5bf1-420e-a845-549a6d711142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380fe124-3ab5-45f2-987f-f16d5cdbf84c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcf44a6-85e7-403c-88ca-ed687b8043a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d572a9-8e2f-4ed9-ac7e-bdc41372237d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e48896-2886-4e9e-ba92-630a23f636b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7678d37d-d5fd-4ce4-b126-1f0fb4615cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d546a82-2ba5-4f4b-955a-a3cdf17c75a9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1121611-5712-4081-9ada-e981604dc8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591ec7ca-f866-4b4b-8eb5-2dd726259195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826a8a08-a46e-4da7-8eb2-675b0635572d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3582dde8-9cb3-41a7-a5cc-e503d6c1b9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f84799f-7b4e-4581-93b6-d8f4d7fe6b51",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d5c3f-e9a7-48b9-874c-9a881c237fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe79237-28ef-4b65-9c70-e1c9240e8736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f0cbb1-1eb4-4ec3-bc09-298bb5fb2d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e49fa06-b7aa-4922-a95b-f0ba19ceb5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcdb9ca-63aa-4b65-9490-9d5d4431cdf5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea52114b-48ea-4a2c-9371-2f0563e0cf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91a8344c-449f-4b1a-9b72-c7ec2be502ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b1bb82-0509-4ded-ba58-c41b9102817b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eeebebe9-3b15-46e1-b6eb-a22aff9771dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd46bb3a-ec1f-45c9-adf1-2d6093facfe4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37420b67-0613-4ff7-8c74-081fe9475f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2878b87-7985-4982-ac6b-0fc1b6188ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d510536-0a1a-477b-8020-096a4b353a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7fe2bed-4add-4341-86cd-c5cd01139b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449efbe8-4e53-450f-ab3e-468515d4ffc7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8849b6d1-e24a-4735-8b34-df8381451a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf5303f-9597-4d88-bc75-6d23d0655206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14b1ae6-62dc-470f-a14f-df97eb8a9e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "65a1b620-67b2-4b2f-9bbb-76293814dddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28a451c-77ed-436e-a54d-d010e90f9f12",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecd46e2-204a-45b1-91ca-81cb5782677f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdda776-d998-4f1d-8ec5-933f68d2cc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156a77ee-dc6e-461c-aa92-03a177ffbfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f372c27a-955d-4588-9ded-9f8b2c941c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280cbd09-8f00-44db-b68a-a1c4f1d557a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e464f23-7c6b-4246-9758-2e66ff19b32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b372c72d-18e0-41d8-8776-319b714ba1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06b070a-d3d9-46f0-aa96-1ec98a0e1d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "001d62af-f152-4a1a-b313-fcdc3b44f009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e87dc5b-7978-4127-90eb-a1d7e516348b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b43d0f-8043-4c18-91a3-9c439a261499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ddc1a55-ef48-4622-829a-cf4e87b3abb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67c0dec-c6da-47eb-bc2a-54453b43de23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03437171-a9bd-4a3a-b35b-d40e769f50f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca13b02-416c-4480-8b0f-2077bca3e4b1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538b5915-dd36-45db-b3b2-1391f57195f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47296831-1a70-4a57-a398-a99d679125c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2fa91d-ed75-4979-8de8-3d2520458904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15bb0b8e-a026-4cec-8329-86ff4dd5a396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44adb04e-437a-4a54-b9b3-31b3743f1d24",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3e4443-db74-4570-976b-b04d0bc7f301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d806e66-c6f0-49b1-b74e-8aab6cb0bad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d7c94a-e99a-4592-bb3e-e2b29ea2abf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1da5586-609e-4bb2-8629-6fc99a357110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5f8d29-61df-4a21-aeae-0b48cc0d5244",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdbf0ca-fed8-4d21-9e94-7208feb3a260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778c7490-a0fe-4ba8-8396-cbbcfc6a68f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49cb688-3b9c-4387-a489-4fd2057b2e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39885c9d-858c-4e06-aedf-215d1d08b7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc40aab-b12e-4ba1-8a16-6520df4f4107",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f252da-162d-4044-88c3-4bfa602d678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81ee582-c6d3-443b-a86e-572e896d52e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59a9614-c03a-428d-b8f4-fc84a3dce415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf8aa49-da00-48b6-9e91-b33a987c6d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17635d65-ca22-43a3-9c7a-6c3e19463d03",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248761dd-91b8-4120-8c09-58d69cad7f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5643576e-1423-4436-8ad7-d4409d3be8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffd6696-6aaf-4854-b946-faa521d44b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb1dc94-ac60-40b7-8ca7-42b4917d785b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8722667-9ab1-48ed-8e76-ec29e50c22a2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3018f06-7ccf-4fff-9a8a-bb44e082b9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d39173f-54c4-454c-add8-459a29c86119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b681df88-3a8f-48da-8d8c-a9cbf77573e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fe4e39-758a-4ad2-91e4-262b1c2667e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1928fa19-c4d3-435d-b157-aaac329d53b0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ed6253-6a06-458b-8857-d6f6334e7760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713344da-e0d6-43cc-9dc2-c063e01df273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d37608-91e2-4d97-96b1-ee809a93269e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c41ccf5-19b4-4c20-9692-b9ae8b6361a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01198080-a811-4793-9e7a-7e5fc90cb9d0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afab250d-c783-4cea-ad43-19722f5b9afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6a4d41-d63d-4894-938d-28c4c6577c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0814cd60-719b-4179-9b77-5944083519f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "755c28f7-5df3-4178-98a5-b7b1f09e52af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669357ce-b6eb-4f0b-9620-c102ce67c513",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea6867d-1e49-4151-bb44-ae8a27424b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e908ad-e552-4199-8cb3-9ae35e268b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6d30ed-f128-47e3-b02a-7da5d71b67bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3168b0-d4fa-4c88-b71f-c110ae3545d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f83d69-17d2-406f-9a8b-1fc154b20dd5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5b2868-4af4-42e7-bebc-09b46ee21981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497a4917-eac3-4c2a-8bbe-5e4a67f4effc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27f287e-07bf-476d-aa79-022af31902a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b209e4-e89a-4ac1-9956-73bc909c376e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceb54ec-f2c1-4064-a3f1-649842539e12",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c34dd4d-6d5f-4591-8097-9015b0af7ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d0b66f-2baa-42d1-be4e-c39fd28878ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab6ffab-fabf-49b3-8a04-0c4a274ee5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57bc10d2-f81f-4151-8204-b18ac7996568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac46130-c8b9-448e-82fc-e01e0ed6dd34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a462e55-113c-4f2d-ba69-910be6134a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f80b7b-22a4-455a-8596-7807991f48a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852d0a73-99f8-48d9-ad0f-e24ded16b4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "564d9064-bb9f-4155-b263-0d0c7eb93664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4812956-867e-4f8f-9b1b-4e772706e170",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de79b90-7e56-4f3a-888c-c97e9a72ed36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c323e67-fa4d-44c1-99ef-7cea97d636e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62add8a4-6391-40be-93fc-7e1744f741d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c04f55f3-6070-4e86-8472-e41b026c3f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b7bb6f-b738-4fa3-bffa-d5dc8b4b8d2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24da4d75-1755-4439-98ff-dfbfae40df79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfec4ff-ee0b-4cf1-a10f-2a3aaed0dcd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74c1634-4821-464d-ab4b-d6cdcee181bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8be5209-c6c8-4e35-967c-e0fcc2fe1d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21621e7-7b09-4903-9790-0551d82b0b8d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c593b3-a3f6-4e3b-81dc-239cee574742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a0cf6a-d22c-465c-8d2c-a0b32fad9b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a008177c-e74d-4d71-a902-76efbd38611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28491d3a-816f-41c1-9e53-a62353a73659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f2bbc0-5248-4822-8c90-43b86efec3b5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013dc4df-ff3b-49c8-9941-b184aedead45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde49c6d-5915-4004-baf7-cd04c48fafe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2186f23-092a-444b-9a03-1b09c5d808ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5992264d-1f59-45f1-9182-1b82372cce6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2291262d-e420-4c42-9bd4-ffbf0729177c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d333cc58-c025-426b-b677-e03ac3a1fcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5100d3b-d5e3-4a8f-bd85-ca1fc9ed0b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5f5a56-c426-4297-8cd1-3a8a1e0de1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eed554b-9abc-48d4-998b-cae810ffe4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a2b321-74d1-43fa-a180-780f41959d53",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39af8efe-50d6-439d-829b-ab397f41189f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b48bd24-1e75-4b99-9305-345908d5c88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651ff12c-641e-4aae-8f4a-0796d557d740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6765ad-30ed-4141-a965-29ce62a24051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf711a7c-0257-4ccc-8528-34b141e15c0a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1545a6e5-859a-48f7-b8d5-fc76c78e68af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeaa62d9-23a2-4668-b7c5-c132fbe3ce23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e5745e-a180-47b7-a202-91e94fc91a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e04e710-b0db-463b-9903-244b740f1540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b5e821-7fa6-40a1-897f-8048b190e3a3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99c36f3-b706-49d8-9326-725d02a9295a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ef8064-48a3-4b49-a4fb-a959af6170bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5c2514-4440-49ed-a94e-a9876a5d799f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62d99e30-1c43-4cd8-a6a8-7f2c051237e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3530c96-1306-45d2-8c96-cee20e3fb0d0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401c46f3-2a1d-4426-be29-0d12add78759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894946fa-6d66-4a38-8a72-b68f3179e79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87072e1-7a62-4301-abf4-2a92adf6bb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29c24c6-50bd-40d1-89eb-a3f8ab1f099e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f93edad-e8f5-4b5b-b51b-5f48bce186ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389074ac-f46b-4eba-8eee-1fb214309f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7da86c-30ab-4c17-be8b-6494a0195696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe3eac1-0456-40ca-8eeb-198c8b3a142e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "325fd22e-d882-4a5a-b390-7104e08eec5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33e0b3d-a087-4563-bd8c-31ea819bc810",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1158e460-a3fd-4ce4-ab95-70f5c27593e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1496e116-072a-45c1-9d68-22311cf575a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e063fa-57e5-4540-a902-a1f7d724b17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0f05dff-b4b3-4b92-a0e8-887272f8a21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6395cf94-bca1-461d-859e-c3b0eb7745fc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58950610-fc4e-4e45-8501-35757ef3fb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1345f4-e9e5-455b-8fff-6e315d2feba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7ad60c-70aa-4618-a74d-209d0bfbc7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92337a82-60fb-4a6c-819a-6f2fd56ae6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e55907-f5cf-4599-b863-a2545ac17d61",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bfc8dd-a2d6-4e90-a8a5-202891860502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09f59be-29ff-462e-ad83-2a788c530261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee8584f-c7d4-43d4-adda-32eef34dbf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d696fa56-5cbb-45e8-931d-11fbc87b6e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8f5ab5-2545-4632-b92e-f3ba0fa3a5d3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a860be-f798-4b8d-b6f6-3972aaf4de72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546e95be-7959-4ade-87e0-69083880a799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c56ad3-01eb-4daa-adae-b43d2bdeefdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c76666-e924-40e7-8c58-2d6c85cb8720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd32b343-869f-4fb2-bea9-6d13a21cf099",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b18bee-6916-4255-9f09-5a895376dc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acaa3e3-a25e-48a6-ba99-1bec2f78fadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed285e1e-50ee-45d1-add3-c46c2fd3ffcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4fa77e-c810-4dba-a601-778f586377c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dc2a14-c202-47b9-8cb3-77432e29353c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9becdb25-aaaf-47fc-a7f6-6dcba9312303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14de36c-8dce-48bf-a0ad-61b7c0de022c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee52622a-4d11-4370-9481-cde8772af149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "734a0968-547f-47cb-97f4-b3f194c98a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa95678-37d9-40b5-919d-84b0d5480c77",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2553f8d1-b83b-4251-a4bb-6403d6874750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653a68f7-2822-440b-928e-c1dcad5e753f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24ee384-e221-440f-be35-551b37638641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5034ad91-9411-4d6c-be41-4b4fcbf6c09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7234c21-0a63-4b04-a73f-b8bf24f784cc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e76927a-a49e-48dd-ba29-96176b82064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aeadce7-1dd9-4ed5-b6c0-42a102745ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa09b079-46c7-42ef-8eef-c10252a67a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "199a10b5-4f47-4a69-a433-2e0033db2bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f194b7-46b9-4405-b839-c2725a613b1c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ca7177-b22f-423d-8b28-9b6f65195f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3f6dbe-6478-4ac5-a68e-0e933bd08998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7768075-6397-493b-bc50-b35b5cb2c256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eddcfad-c679-43d7-9bbb-fd7a6708750f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009253af-3c1c-4bdb-ab30-5dd2f0d3ea38",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaf1076-ab5f-4ef9-b0e3-27dedc0c37d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5810f2b1-9141-4efc-bba4-d69817767025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7482bc1-fa71-44f0-bc08-8f315802654f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d18bfcd-c7e7-4f0b-9261-794ace7f54ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bc305c-d11f-48b1-a25b-c939477b8dc9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ae8d6b-354c-42f4-9321-f260174672f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5617484a-f8d9-4d01-9edb-5ccd73905c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf1429f-1cde-476f-abe7-4716a4557515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0f9f55-8527-41c1-97cb-4bff2f4dae5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d3112b-1cec-443f-abda-9d3044a74c62",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d0019e-9335-4d99-be94-1ba79ac13ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0822c393-142d-4944-a93a-348c32596ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc5e803-f4aa-42f9-a0eb-e160a1c6330c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "602c256e-136f-4d35-bf6d-768316fa5478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1534bed-3f8b-4e75-a631-a9bd463c166d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c6c8bf-20a4-4892-be75-60bc253b2dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c6e8bd-6c74-4271-b00b-d3a480a7bb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5336bb4b-d091-4fcf-bcff-7ae170f4009c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18305e3f-6528-4fd6-b2ad-36582545a28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f769cf6-506b-4802-8d29-39d24e16cfc4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff61563-ac80-45d3-a577-f65e5f2f0925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d558b717-f607-4cd2-b723-9a3a4bc71d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39917fc2-42f9-4b99-b2de-8feac0801534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe2fcb2-5e98-4f87-86a2-6cb1433ebc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6b0707-e0d0-4014-99bc-fa1129ec7520",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed5b2ce-1955-4a24-8cb1-6e02264c461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d781f84a-06e7-4969-bd6b-3656f361a1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bf6500-3405-40ea-bada-71ace8756155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc669f4-427b-49f8-a9c1-2d8a01da026e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fcb6af-37f6-47bb-84c2-c678ce76a79c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afede326-0fec-4534-8207-49af8b5131fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64e2fba-f806-4784-b090-5d94f1b01f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba51aa19-1203-4f74-bd0d-7299cfb2cc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7650f5-7a31-43e4-b56c-811751c6898a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aeb38af-ada4-4c91-a284-4acf55c9b606",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ef5deb-490e-47be-85c0-d51419368d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ebb43c-d0bd-4bc4-a3ff-af0b942aab6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4a2aca-3d69-491b-ae6c-a83af21beb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7819905-83ce-457b-a1ae-832bee7c8c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3883e3f4-1ca2-4d3d-8a6f-743761a68b9a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3221dd76-f3d0-4f7b-966c-c351607b640f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6212b3f2-6197-49a9-b942-4c039fb7f064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd1659f-0465-45d6-81b2-3fd077cb074e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86b9f756-bbe4-48d7-a587-235340b3eda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2aae0d6-1e8e-4ca2-94f4-f307fa3e96fe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c63249-599a-4664-b41b-868fd1c883d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e114ad50-ef02-4ef7-8fc8-8488ba3ffd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e20d7f-44d3-41b1-8430-1e7cdbc0fdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dca90130-5239-4ae3-91e9-759dcb7d44d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6a7da9-b784-4810-b6cd-051557fc7d55",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b3aac3-696e-435d-b2fe-57d11e02938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306db72d-9ab6-4267-b606-0139086c0876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f81381-d46e-4d2a-925c-7a573a4d3df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "941fb1c8-1c90-47f7-9b78-64cc92cb2a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238cd141-c3c9-47f5-a2cb-74fb09be1f0f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34d71a0-352e-4671-8f25-dae24ceea97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b042653-2003-4b06-9eaf-73bf991ef462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692a4349-4e4a-4e2a-b150-0067896d940e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "05681dd1-3e9a-426d-81af-6037500c565d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203be423-aa01-40d1-93de-6a62d4f99060",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878a48b9-d3d4-4dae-aa20-4db719202a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e0cae9-ff29-4162-903b-a45331ad374f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb2e44a-4ae7-4520-aa5e-1ab85f94a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "adba9721-69a4-4a8a-8dca-1f846cedd92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92f7cd8-b5c8-4d8b-8761-4100cfba3935",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286d2c56-abca-49d9-b0b5-12f66d0a822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1ac99f16-89ea-4d2d-9134-885f9dff9fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639c0ead-aa8e-4d57-841e-50128caafa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e59c51a-493b-44a4-b31f-b1824db94b5d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ce38312-c337-4780-a437-a28c22cedbbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40d31467-5bce-4272-b37c-eb923e253f3d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d981fca-4dee-4a6b-9ed0-4f8e37247753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "406fd5a9-a9d2-4275-b92c-1ae37dd67175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3b23f7-09c1-4bdd-ab94-42a5fb412cfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bea35299-e768-430f-b55c-e9303c961eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47368efb-c6f2-418f-b0b8-180c695990d5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666eb9f7-ff5b-4419-a3fd-9bc743ce2407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d62d190-d133-4e4f-b355-46c815d13618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c7ed61-8b2a-4614-8a32-d5a1954942be",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6afe2e61-b87b-4a04-8c93-1b421c65b314"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d8e4a9a-26d2-46cb-a7ee-6f455ffbc5a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebff7992-6617-420d-9e5a-e9360c86736a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c354d63-c004-4641-94e4-b208012db4b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54a60058-5990-4851-a09f-e33e58db5f51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77696711-af18-4052-8874-2fb626d0dfcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3272f9c1-6e1b-48ac-be90-7f6688815d83"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d566470f-401b-4999-9057-80796d8df324",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35c8047a-011f-419f-94d2-941dfd4c051e"
                }
              }
            ]
          },
          {
            "id": "18c72c19-72c5-46a7-98e7-bdeb3de2622a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00a85ce0-77d2-47fd-b72c-b4f774a13ad1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0be55ed8-c1fb-4009-a77e-ae590684fc52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83ee87b9-e172-40ca-8f13-04f0ef5f07e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a765345-18f3-41b0-90e3-d2a5c0817190",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ecb73668-cb19-4840-b95c-8780cc35afb1"
                    }
                  }
                ]
              },
              {
                "id": "1d974fb3-a086-4b3e-a981-f9b8541765b5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ebe263a-fd9c-4a86-a888-ed1d8a60256f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2e93365-2d15-489a-93d2-f168b67fa314"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a78f0a4a-5345-44ee-a00b-7ac4ab591c7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b0f3730-fcd0-426f-a379-056fb211d4a7"
                    }
                  }
                ]
              },
              {
                "id": "30afb0a0-46b9-4418-8ebc-8ac3fb711cc1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "017cb735-b450-4aa2-a620-a694b032b0c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74c2fa66-4153-4e44-8d47-55593f08ec53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad35effb-20f3-4e22-8c6a-cb0ae623fa16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0aa0dc7f-f2f1-4baf-88e7-18a6e3a30cff"
                    }
                  }
                ]
              },
              {
                "id": "00856752-f13f-4996-9763-ab3267f70433",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9762e4da-fef0-4659-b5d5-5b11fcb81ce9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d21a6526-b7ae-465d-84f2-c83d3ba7c790"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79b6a694-8daa-40b1-858f-cca00440e8fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d8fd45ed-9723-4300-8f6c-0c94e1331165"
                    }
                  }
                ]
              },
              {
                "id": "06a607e2-7912-4a8b-8d5a-b8c12f5c3b75",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3afc024c-51da-49aa-86d3-ba65523b400e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6eb9fbe6-80f5-4c8e-aa7b-73c1030c3163"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "505a60f2-15be-4e38-aa82-0311f7d5380f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6ece2736-bf94-4454-9f95-4f07c3951451"
                    }
                  }
                ]
              },
              {
                "id": "aa8589a1-b922-4d87-b070-d5715892f69f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7e8d035-3ebb-4118-a12a-4579ead94456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11cfcad5-d87f-480c-bef9-1799d9f9d127"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbdb90b1-6e13-4daa-bb53-6911c920e3ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e431f72d-fa16-44db-9c1d-ea2e21b57adc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09ec2bcc-9962-43be-908c-d54ab7447920",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7480aaf-7dbb-4aba-9772-f9bf17ec146a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "631feb26-0b34-45ef-aee3-f4909cdb3416",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac46aa84-9a4f-426e-b3b2-a1941d689a34"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "723ec55b-587a-441c-865d-c82f7c401155",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "81b8b589-3ac0-4d01-b8fb-6fe4179433c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83ce3c14-c328-4c07-8d5f-ec6577fcccb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3425698b-de39-4696-9f89-246d0f1e2d89"
            }
          }
        ]
      },
      {
        "id": "8096a9cb-adb2-40be-bc4f-b4d192d8ed57",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3e3abf6e-a4df-42c5-813e-0aa2bae74d47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99b3e736-8c6b-431e-89a4-9618a2e9d30d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "97d7521e-5257-459a-9315-0d0f719f08fb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9742ab2-3b12-4699-9543-93fc60f294ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d2e88f-9d10-4651-b394-68fa7902450f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905df885-4aed-4d56-908b-939c816b690e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b07fde5a-4977-46b6-8a43-7b013e41a3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53849867-1ff3-48a9-be5f-c0c56079362d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184fe38f-1b53-44cc-91ad-dbd008992393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94347b63-420d-4fe9-9ca1-1a148ff9c2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ef7c04-d31e-4ae6-99cf-9b3dd0839330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5646b3-05af-4578-8c80-098a57c0c8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5de3fc2-dc36-4c69-8688-74e47adf9228",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15bd4ec-3c02-44d8-9280-94e344dbc0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d20390-4391-48f4-b24e-409125dbbf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0b2990-dd16-4462-add7-96ef4e89c730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a6a278-80d5-498e-ba58-e11d28a3a31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d503761-1cc9-4b16-bbad-a75310bb8c2a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd48879-cb31-4296-b9b9-bb2aaa13a21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d114c13e-0a03-40d5-872c-024b56c215b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814319ce-f5f0-40c8-b1d1-a37730273ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2114f4-6ef5-4b96-8755-abf94f2d4ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677b3f36-c698-4d3c-8e15-8f759641008d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe8a101-b4e7-4f98-aa47-87282df1834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef87565-f3d4-4964-be67-79d4750b2ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4104756a-9227-4502-a436-7d6cbc1b76c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61912020-9a47-4366-b741-f49a853d2db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea5cca3-5261-4268-a046-bb3054b9f36c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3a75b1-102b-4eb8-a83a-ff54d11c80ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9456d1-b1c9-46af-99fb-7c6f3df05174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1854cbe-6beb-4c4d-b9dd-8d4af4c19ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53205276-fcfb-4103-a0df-b1f8adbb993b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417b6920-2b1d-4d10-a6a6-22cfab5581dc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37baa2c-0043-4c6c-ad95-baa3fb30f4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a27a21d-f961-43b1-b37c-5bf67123ec46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adee355-8312-4482-94aa-b7b14e8e36eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6fdb61-bc01-4943-b5b0-cadd7db41e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4836202-09f9-4b14-bc4e-9bf528b874da",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0940ba-acda-479c-b7ca-82d3529325a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "295f6746-4472-4c80-a582-b639068284cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34528149-2842-4380-a345-44eb10138843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7528a0d6-c0dd-483d-a2a0-fda69dc8fe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc68817c-f09b-4ad7-9ad7-e225c4263982",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c15db3-0911-4550-945b-730f63fdb551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845de18e-42c5-49bd-a380-10366bd828b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc1818f-6b94-440b-8595-974f0002a2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f166d063-66b2-45bd-941e-a1a77c96b547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7406fd4c-a8d0-4cc5-9012-c963c38aa34e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e95bbdf-c2ec-4b5c-a830-599459bd2388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84a9beb-3bb9-41b6-9439-a017125b16be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c4a290-fa08-4665-8ef1-9ac93ddd45e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11bac0ff-38e9-42c7-8c5e-c541269a270a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c28a40c-3335-47b7-a7b0-43dff006ebf9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe6ba02-29d0-48f0-bc2a-d6eade44d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48439b2-6e6e-4237-9825-68928fa0c616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeffb4a-ac9f-4272-8bb1-47bdb7b7b0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b67bd4-6499-4c51-b500-1628837d4adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2261d1b0-e2b6-40ee-a2e0-e52d4f8c677f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dc31fd-5608-4274-9b9f-264371d29a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e71740c-6cec-4dd2-8985-ba956059755e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedf76ab-3dca-4230-8866-f3c959aa2a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83924103-ff3c-4aad-b76f-308d8e49085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cca79a-5c7d-407e-9cec-2c6de6d226b0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b744930-2461-4643-ac8d-680559316b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155c079c-c35f-4508-a44f-bc1d1e4a07ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22608d60-ffb3-4577-ac03-15c3ce77dced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5817c560-6c41-4d21-84a6-8868125c4c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1705b9dc-ddb4-477b-9743-8b50ee607100",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3efc171-b246-4f40-a91a-075451a8b465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb7c16b7-b49e-4fe0-a59b-44e3c8801945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414bd4b2-8fac-4921-b20c-5ff364305595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4713df7-1d4e-45bc-bc6c-577f8574ae0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b04ca1e-35ed-4546-b88c-3c47ce2dd7aa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0de4db-4cc9-44e5-a176-4853a4f497af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d4ddb1-0886-4f0c-ae40-a14135e1aaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74976669-f62c-49ca-9d3d-41ec19be6ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2703ee6-6159-48de-9285-7f8d7a5ca955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e32b38d-0f63-42d8-bac5-a6f02b65ba4b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fbd274-6e85-47fa-a8b4-995e5c4f277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d9dbb2-29f7-48c1-856c-05aab5a5348b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5f290e-ccc2-4510-bdb4-d3b842161277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c7e4f5-8c8e-41d6-ad7f-c3cd9788b80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297e67b3-afae-4262-8115-f3b718dac812",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afda6bcf-1dab-4b66-92eb-cd8308eb643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3675d3bd-4e80-4ed3-8903-26e94d6d6a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fb3112-802a-45b6-9283-12c6f9022ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4e4bad-ce8f-46ad-8304-01c2df578835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e359964-74f1-48db-b799-7b5f896dc58a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc20c9a7-5614-465e-9f05-112fafcbface",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55d33e7-6587-4aef-92eb-45fb8b68d81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d535e81b-0f87-429f-a934-4e719b44dba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "220d6128-b73c-44b4-b2cf-ad321c0ac7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9535c4-f241-42be-a3d3-06243cd2ebc4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75a437d-3acb-4adf-84b0-97d82d02048b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971f4416-7606-4e7a-b8b5-27b0c59c2034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03cfe02-a2f8-49c5-b522-de8322472609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2722c1-f2dd-483f-8311-768c51ca3368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494f39d6-3d0d-45f7-99e2-3c759f260897",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfcbcd4-e279-4924-8b7f-dfc0dc5aea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58340594-0c36-4572-a92a-8be2051696cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7492c482-b920-43cf-aecb-f7fc2a3769cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e652ec-8015-4d57-ae19-392bce9c7689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10684453-e1d1-40e5-a461-73e17bcf9554",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf06015-6310-4e69-87e1-64de5912b56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6921557-261c-4dd9-9705-df118e6cf00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb40ad3-b913-43fb-aee0-43672f8a7ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e647237-89c8-41e4-9998-39fe9c60050a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b3053b-84dd-471a-b2b9-ace663f0cd86",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a23ca4-3250-46f3-bc32-c6c17ba46acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e73bff-5282-4e12-b35e-777e4aa253c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45672c93-6f39-4327-acf8-e083e085fe8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c535b7-9921-4994-ab95-a7181bd34e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2940b3cb-2de7-412d-af2a-80b0273ca3bd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15ea3c0-b499-475d-96ed-af00451d55b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120ffa14-c0c5-4e2b-baa7-f2e405cfb546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0146126d-92e7-4586-9bd2-06303f1a0d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "154f5444-89e9-48dd-8d1f-5be8ea6ef07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee391379-ce54-4479-90a6-ba67c7598ca2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e296de95-8fec-4012-9915-7592ee2b1e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2956b7-7f08-4bfa-9807-3ab430a56340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2bfcda-82cf-4e40-b6ca-820e76474edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99bb2bb-5e79-448f-b25b-f2b7e2ed231f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8d640f-efda-4deb-99ec-90a7420a7f5e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52654460-9491-4ac2-bdb0-22e77a92d828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937a06d7-66bf-4b99-88d8-fd5216831ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb416b6-bdd5-4299-926a-4dc1eeed8a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fd3cfa-bba8-4c16-b88c-ba5e36470714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5041fd1d-47bb-4876-87f9-1d9c8773752c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b323a965-d2c3-448b-9f55-916c313c8154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973a18a1-121f-44ae-8685-d9a4f1e36561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba81f2e-d62e-412a-ad49-7542e05a49b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd453da-743b-46ff-999f-2903e85e211e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef76515a-205b-44a2-b100-ac7a65cb7d1c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5cc63b-7e19-4f57-b9e7-f78af54aa0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22141ea0-9584-4997-bbfe-8bb592a790c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a824a9f5-8171-41da-a9e5-7ea9a4ee1a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed02413f-ce66-4221-93d5-178854e3f066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15ffddb-2024-4ec9-bdfa-df562137366f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8f04af-b55a-4e19-92b0-b1481e089f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a4dc19-4e86-441a-8b34-2c746673036b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf95e66-3c77-4816-967d-670b11900b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63e20e0f-fddc-46a9-805a-f92707f12a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7ee9f9-e2dc-41e0-9efe-0c367e0a956c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797b9219-518b-4445-b67e-fdaa3a3b486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264366dd-bb3c-418d-9b1e-5baa1919d95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7517f10d-0926-4986-b83a-fc7584ef83e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aca0e13-0486-4443-bb59-5095ea1c9424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08330be-bfa2-45c7-ade9-2196db29c0b1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783ad66e-a202-4c50-aaa5-9d4da46ccf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743601ef-4c96-4f71-b8e6-96bc911dd9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eab0a14-632c-408e-844b-7513a2d4b4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c751ec-db88-45a9-ae35-1be506049acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a217b3-209c-4c04-9501-23ca756303a0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7efb42b-134a-4947-8824-c2de599dd08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9aa9175-7632-415f-bfe4-17f45793ec94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f4e8ce-11c4-47d8-a301-eb3a831a12f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78aca65-356a-42de-b148-ff4e9585f3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942c5806-de44-4eae-90bb-7ae6c4529a20",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee4ef8-7665-456d-aed1-172bd91c7c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b6727a-80d8-45e0-8b9e-da48f2c78e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed1061-03c7-454b-968a-6926e7d0426b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef195ad-584f-4a19-ab59-b34d65f3b92c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1b323b18-135f-4db8-8c3f-0de4ba3bc49a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a28b6e26-2cb4-4f83-86a1-bf0a5a899640",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234c71d9-2bb4-4356-92c9-45af0d3ea365",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e32cea45-427c-4183-986a-908da22efa32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4816e3-b808-44a2-9de2-82da3fa0ea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f3c1c58-7e7f-4237-bad8-ccd101490de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272cc642-8c25-45bb-aaf4-6a6444e0d6dd",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52013c57-619e-4f47-9636-1157f9661e22",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4417f45e-7536-4159-994b-1b94a8a8c8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2eacc3-1733-40a8-8699-c39ae8ef2866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cfcc336-b01d-4909-8cca-41e63b16221c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3308690-9f7f-4336-b62f-b7f3445340f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "812c08d0-dcaf-43f2-b6e8-76cca4b7fa51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dcdd484-90d0-4474-be72-f92d6ff8c0de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4675224c-a885-4c44-af76-d42578b3eb01"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65a9d926-09c9-44ef-bcb5-e93944163290",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06a62af3-0f12-4865-97aa-b4479e51c66c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ccb2b2e-1519-457d-9429-1da39776725a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c9b012e-3f5e-43ff-8061-0d72c10f05b9"
            }
          }
        ]
      },
      {
        "id": "da3a591b-2b7f-48ec-a6bf-7a606e44e74b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0ab37abb-a41e-45f0-95fe-bc2e58266558",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29a927d3-9b8c-4e9e-a117-536388b80350",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c7bd98a-ef3c-4b0e-bbd5-18a7a007c4c6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38129ac6-851b-40db-8136-e9281e28ca65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ff9ba4-c623-4264-9a76-3b02f7275b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7ab55a-009e-4fbd-ab69-d78ddbfa00d8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcb6766-654b-4cc5-af58-e61709d6fdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f285b39-2725-4be0-b7ff-9e0300c2ad65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c919905c-13ef-4089-ab22-de722e66f1f7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c09757c-3bf2-47e9-86fd-3f66361df93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf173b0-8310-4f13-a332-6f35cd5ecb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e2395d-1273-4006-91ed-066fd994f688",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376ec5a9-8180-4d64-a912-662dcc5f6e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646c53ee-152e-4ad0-8e4a-fa4a7fe7e915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450b50b0-f77d-4283-a8f1-2133feca0d84",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d287c4-85d8-43e7-98d4-8b817b11347a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3fd8b5-43ad-4a41-bf6c-a2fe67dee14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f28e85-bae6-4ced-8bc4-74b2c47bc9e9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1ebd85-60f8-46b3-b6c3-726194628c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d463651-9ffa-45a9-b829-651a0ef6840b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f850760-9497-4d79-b381-fa76d5f895b1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d371721d-d868-4eab-827c-58050b274050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60424152-c593-4eff-bfee-b25e8c2747f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cba56b6-b8af-41f5-9285-07f5decc11a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f799d5e-a1db-45bf-81fe-5b8cdb34ae1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9090a2b-5a9c-4a0f-8a89-982ec464f29e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73330c3c-81c0-4583-af32-a4e5bf673fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad406f7-6319-4c40-ac62-5fdaf33225ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f67d29-7064-445d-a14a-078b07786fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c21e01-7f30-4cf3-be2e-4ced4f3fe2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58251ddc-b669-47d9-9671-aab8e4dc5ebb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94361c0f-7c0d-4a9d-8960-291717f979ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787bcfb6-db83-454d-8d27-74e6f70012f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e39222-1c91-4ef2-bb2d-3be3741cf0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69420e78-8128-49a1-8370-03d02e8bfe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e35514-7d3f-479e-aac1-2f2eb54e09d7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5a078e-c232-4ff7-a830-5f1c2e0e714e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e215810-5b12-4a0e-87f0-b381f117ad39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2fe977-1567-4c47-99b7-f8feb1ea1698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2da9fb0-fafc-4412-bfad-be0fbfa0a3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4686edd-68f5-4772-97ff-bdcdbb400636",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e69259b-beb7-471d-9419-d2adb5fa5be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f22ded2-3bf8-47b5-a3aa-1646e4679572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89239a0-c440-4074-a894-416c7ce61221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a350ba6e-a037-4777-8928-361e5d202405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774c1576-8d60-40fd-b224-20e0f244bce5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57568d5-b5b7-4e7b-b025-af17df334c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff087cc-0127-4588-97b0-0808c0b83aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbd9936-cf7e-4ef5-a345-985041781432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8800f7bd-8bb8-4038-b847-f2c2eeb4ab55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22eadf9-9400-455e-a0c6-2b561a54b5ea",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c1980d-2d67-447a-b941-97ca0b901139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3659ccf5-0581-44fe-98cb-2cd404fd8567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306e2a80-12c5-490b-b187-0e5cff817356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8383983-fbe8-4ecb-b966-4f7cd5e59947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9248f3cf-ef08-4a79-a276-bb05af6ca44c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f308f64e-ea40-4f9b-8636-245e0a5dd850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd24775f-d729-4bdf-a9e6-1ddbe3bb34e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d093ef42-5cef-4808-9c50-cbcc155616b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c964edc9-4e4c-4e9f-8bf7-247a9621649a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeb08c7-cf65-4375-a618-c69487b91dd0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4941d8a1-fe0d-4c63-9b15-accf157b0f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db21c7fd-882b-4579-878f-bb2404c3eb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555a1a5f-8c32-4cc0-9765-f13519918bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c403bf96-b2dc-4fbd-9600-eb1b57c3784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3daf5d-9e8b-4d36-a15d-fe76f1239747",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de81be31-c5b8-4e4a-86e1-c6d975ddb784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c794290-8226-48da-818f-3c8d7bc44b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b227fb09-537d-41b7-aa7a-7b868f00900a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba9034e-7501-40cd-b094-7c621e91cdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7213b66f-2384-4f21-b9c9-c33797f060a0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1e83c-d648-4818-996f-5ba436d7b9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecd145f-f47d-41e8-9963-ed3ad1032f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0314d237-e59c-4e44-9f54-bd39504b7556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fe5718-6b3a-411f-9576-208524da2028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84287a11-b42b-4933-8fec-2a3644c14295",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1aef3e-aaa9-49ea-a712-59a1411575f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77aaf0b7-9d5c-447a-a94e-2900f5f1ec32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e6c604-efdc-4edf-b208-c48773a200de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02cec9f4-e08f-415e-852b-bd0926ad0a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8547e913-f1ab-42de-87bb-c50c1885c3e6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685b0e44-ea1a-42bb-bda8-e7832aaabc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5a95c1-812b-4c41-a61d-fcb409718107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a389a9f6-89ff-4cf5-aa9b-466254a0e1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bacfb1-9a9e-4a60-ba3d-5846450960e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef31bff-3d2a-46bf-bf25-90ce0ad27763",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528c59fd-ab6c-4378-b5e9-dc0e67174fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718a0b64-acbe-4318-b6f3-d27b4393f6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837b073f-2104-40f6-a369-b22079e4adad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609c60d9-9307-4467-b745-af1859af2f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f55560-4151-4183-b83a-0eb03a1a4d5e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddd6194-8ca2-4000-bebc-1d09ccf7ceac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d243bb8-37ae-40e0-aaf8-e4addf27a0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a565768a-1abc-4a92-bfe1-035f884078e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "680151a8-0a3b-44a8-8737-38c786e0fd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee5a304-af8a-494c-99dd-385b7f49f087",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd64864-bd38-49ee-bca3-c8880075c6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d770aa-4f40-4a71-8565-bcd7c11bbfd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13d4ac7-e02e-4efe-8a36-0f7dfef17d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5b1a34-89b7-45b1-8856-80591d610916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf0384e-42be-4631-b025-3b9159ddeb05",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2946cbf5-73b1-4654-8eed-12f21b5ceba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc5b3b2-286d-4292-bc69-899a7f9d7ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bfdb0b-69ee-4fd4-926c-7fbf4fdc6847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965aba6c-7043-4c82-a945-8c3948b48fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b9577b-d8d4-4c97-a0de-4950759a6116",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0878dabb-a248-4ca5-8be9-000ff60a1db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5621e327-baf7-4fa5-8dbd-db18c52e499b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ffd827-c06c-4e75-9cef-173c56b61c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc710dbc-6773-4bae-925a-f4106466ba60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19784c37-b0de-4f3f-9a58-ffceaee54eb3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359e64eb-11f9-4619-9b84-337d70792844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8817e190-bc58-4de7-ad5d-7a2f637d638b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73936c2-e270-4a24-9609-1382ae4bf453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d369463a-4117-441e-b150-cfed80ac7e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4ac612-2c73-4f9f-a932-70a14ad8852a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8844d8ca-6252-4c6d-91f0-6997ce4e32dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa3b644e-bfa9-41e6-b206-a305cb559db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4594604c-c2d0-46a3-8471-e5f1e1dfa0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec67f682-336f-4cd7-b3da-a7e444cf9534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462cab2a-b966-4491-b05c-96ddd36b373b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a71306-abe8-4ff3-854b-a3ea80c9daa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400adb88-1c65-4041-8014-39ea3ad0b9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287a9d00-75b8-406e-8f83-13fca5a91576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d64138-a8e0-4310-a318-6f2de9fb5ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f5a11f-fd05-4129-ae1e-5d62f28e6b2e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2ea6af-e9eb-49e1-9fa0-a3e63d441a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661fba69-a9d2-47bd-80bd-23886a95b0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cadcf8-485b-41f9-8fbe-4e95b6617c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d87b433-f0ad-4f62-ae6f-b6b43cbc58b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f669720-cb1a-465e-8f03-9ea0fed7b7b7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b025b2f0-0122-4e83-bc73-fcc969e14847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3a4e86-f8bd-45f6-9032-c8b766bd9396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2930add6-90f9-4b82-a03f-22c76c1b6e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f50728-8af9-4b0a-b427-028b1a359762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69021cae-838e-4d69-957a-1f569725aee9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb1717b-f611-4cf0-b5b4-d0e850a15ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c98ec304-9bce-47c8-9a1c-0721577a3434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c827e288-0f60-4341-8596-84c7ef6314e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8908054-b222-4883-8ff7-df2d119a6e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80615e2b-04b7-4338-978c-dd20a3f6e9df",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c020de7a-8d06-4614-bf7a-d2fb9b69ab39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d5750b-3989-4870-9e25-920faa114ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51166e28-7d26-4b7e-9ed0-9a53a8baeb52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc49e177-3c9b-4edd-81b3-b2709ee0f742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf882bd-6799-4e0a-b272-ce98d031321c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f58ad9b-9d2f-4fe1-85ab-f810b6a1e646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc4381a-46a8-4748-a0a9-a57aa371f400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4a76dc-372b-4bbc-bf4a-5f72c3d2e8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da633e2-df97-4076-b899-6557d21ee8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088ebc08-86f3-406f-820c-c2c947048cdc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e9bcd4-3d6a-4f77-b551-2256040a682b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6a2ae0f-f4d3-4121-b939-d28c11ebcb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6367ac-79fe-4fbb-af8a-0d7e248433ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31d29b8-3d11-4a6f-b062-82bcb2de7796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0d01e0-904d-481e-89b5-efaf26451611",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569fc4a1-8a19-4d03-a9b5-b612cdd54579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40436ca-a144-4cea-8629-17b4871a0023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b6a154-6c61-41f2-a31f-d6edb10d68b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4b8865-91d8-4295-b233-77bf6b48b2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b16efe2-2f83-4ed0-b19b-be5b5eebe6c8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148fc448-64ee-4348-93ff-c83dfb27b398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbce9107-a9e2-44de-be9d-8e965820eedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b41cf09-ac6c-4416-8eeb-5e4aa0c7a520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17191ac7-a3c4-4961-87df-8b4003151657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2004f8-54e8-4e88-9aa7-cc82f271e69a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a21fbd-6848-4ed0-99f5-e0ddec714a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3543a5e2-d01b-4151-9e47-fa94750c8487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90f1fe3-1545-4d83-894f-f4b46ef4f89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6503ed94-9343-463c-a3d2-5c4bfcfdccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ae5259-fb74-487a-8cd7-7af53ad1953e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccc07b2-fe36-4948-887d-5ede507cc417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa5f680-301a-4304-8768-453e7739a55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2b7ae9-da09-49fd-9659-1c12f14d868d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117b6db0-92fc-44c4-b49c-3f771a7fc03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2f8450-707b-45f7-a67a-456d83b62301",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95ff10a-bb02-41c7-af56-f5938aef87ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8d72b4-705f-4854-bd33-69b0a8fe1d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335c0f7e-ed12-4217-8b4b-60c2cb2b7571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce304e3d-7db4-4f20-ac11-017231ba970f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92704fdf-a3f4-4e26-8bda-9a9f0543a891",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06649085-287d-4e66-9c60-6f91bb326218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902df0cb-4432-4f6d-8d52-f66e83e0849a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb1c328-45bc-445f-b95d-4944b4a105ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9f115c-351c-4be8-acfc-2fd9e7e2e878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b08ec-2470-4ff0-bd29-e6bb6728bfd7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0219e0a6-77c5-4f02-83a3-f06dda952316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92153e6b-682e-4d53-a1b0-68eb8e248558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be35363-3f91-4d4c-8d5d-97cc5262a7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4479514-f028-466f-b2e9-43ccc1059a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2efa2d9-c9c5-48fa-a062-cc61de3c3a7d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08550390-8102-466a-b408-9f248d535c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58f8b98-3957-4ce5-bae5-607183e27995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d078832f-7e18-40b5-acb7-dce5abf790f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbcdbf6-b833-4f5f-8fac-1feece34f068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a171619-3f3d-4173-b8b1-f179da723403",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e7426b2-37ef-49aa-9da9-9d6ffd517d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573d62ef-2c07-4e84-bf43-bed1071ff0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a895157-35f9-4d92-a84a-bd55916a2a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8ceb61-21cb-4b9e-ad8a-d1069d756fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcd97da-e9f0-4d1f-86f0-08605c37867e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60677ad8-15d0-4b6e-a496-92cab342809b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a434195-3fc0-400e-9a6d-927a2e92f5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dc2bc1-7751-4d38-8895-89e4c620435d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9616f96a-a0a9-401f-998c-f752863ed14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9c4eaf-80ad-4b2f-b368-bd1dbee8d3dd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93538215-e277-4297-ac80-9beb16eb39b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c33b9c0-6e94-4994-ae05-2d28d74a4760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18d5a0c-ee9e-4887-94db-2a7420884388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c893d0a7-9f3b-48fe-9aab-188eaf2f9aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fd1289-0903-4adb-bf62-497926b1f5d7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af71848a-0a4a-465b-8d32-a789095be0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0195ee-fa0c-4680-8e6e-d43976ce3494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c3246c-280a-4d4a-bc81-a309a00a0726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41dc8c31-0c77-463b-b4b6-ad60fee8d663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f8ca3a-3057-4de2-94d2-a54e8501bf61",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9f5a32-dc25-48e7-8f84-c2f91919eaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90be513-3b4e-4977-9e67-df25e86c43d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a2c4fa-87a2-42b2-8605-eb53426360cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b68816-89e7-4897-922c-7f652ea4c39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6071f8f6-4cc1-4163-8e8f-6c0732181751",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e242b838-833d-4b8c-b9a8-89a092ff8c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef535982-5a5c-4661-ad54-959bb7c05461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeceb53-2576-4d86-b866-c520ecfb5411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de1a936-1681-40e4-ac47-96978ede3008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f7518b-9101-47f9-b1fb-dd131bd9dd14",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bb6881-ca32-4358-91a7-bdd64318bba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec01ae1d-244c-49ae-95ca-6330b74ed2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c7127e-bd75-4e19-9128-d5bb4c51a614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2dee42-8d54-47f3-b2bd-c3d72de99808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bae4f99-43ce-4b2f-8f6b-cc807202aeca",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08300791-c87e-4b55-8bfa-49cb67639bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c475c995-8ec0-4bff-be1b-440e9dc5de46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41895d30-7768-4bfd-b31b-b0fb86b7b501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6790e58-07c9-4a0d-9c9e-cb1edd97b2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbb279e-27d0-4a1b-9d18-f025993d19d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbef3549-bae0-4b2f-abff-7fb2d1f6123d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd6409a-e778-49e8-be69-b0e1ef5218e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade30e8a-09d7-432c-baf0-f13c95f0c352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629d6dc5-857a-4f62-856a-6790b1f7aa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ba5ec2-a407-49e5-a133-d70467670fe9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d3824a-9851-47aa-9f1c-208a262a6f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6775a84-7c40-40f2-9e87-af337c126c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fd803a-7c40-4a7e-b858-b9394044865c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788d200a-663e-4225-8716-d5107003047c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa8eed9-3aec-4821-9948-e48786bded99",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9c127a-bc45-47b6-93c3-b2a4b66c107c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b7cc54-4896-4ce6-aafd-dd24a79ccd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bcccba-e987-4b80-a0dd-3df66e09a8c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50da9c81-bf60-451e-acdf-b50831d86200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72374a60-8048-48f5-8c7b-891d28fad502",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6201e115-3ed8-4a9d-9762-7765fdddbcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c265e8a-8283-42d5-bc60-85f0f388cef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e616440-e17a-4340-91eb-48fdffc444d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4c3422-8365-4c9d-86df-b229f2c39c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919ab1ba-1c24-4e1e-820a-46d190d28559",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33cd321-43b4-489e-a319-bcf16b0a5434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2271de-0790-4c5f-b055-a70e14d18e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b92258c-c034-4dd5-9be3-55ba64baa0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f74bafe-ac7a-4c02-858b-659f8f6c360b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24bbe5c-2095-42f5-a052-c1bfb40d67c6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c60d62-b0d9-49cd-ba27-acc471bc3548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a85af31-57c3-45f3-8321-97fc21a9fb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65900e4e-be5e-4763-9c29-4e3824b1bd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417ad0e8-ef11-48b7-ae66-98b2166d3af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec6e0d1-c9c8-4b51-ab74-241d7c93d28f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39505e57-ec07-4f4a-88d7-6fdfd7f16ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bfb855-3396-4a11-8734-1b6fcb96e1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068f9ade-c42e-4d27-9602-53e5b2ce5969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f81888-29e6-45eb-a5b1-f287a0f7d31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7817c6-9463-4e00-9662-b0bc19bbd4a0",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269b3eaa-32e3-46f6-977d-37bbd464a739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911f31a5-327e-4a26-bace-f0a7b354638b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027382a6-4c13-4073-a9fa-075bd10c2aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1bb15b-36f4-4086-8e66-ae5ad518eeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002eb0ef-9d9b-4685-bd3b-800453038d6c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4398bc4c-2bc5-48e0-bb74-6d63fc96b497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e1a6b8-5a00-4a93-8930-12672984b3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9323cd-a2a3-4932-adf4-01022ae6674a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a866cc-ded2-4c65-9a77-a74cb64cb385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e34988e-6037-4b24-86de-5b78113079a7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8388d885-693f-4709-b1db-f6a73916534b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084ae62e-3083-43ad-9b9f-cb90900549bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e60f17-fe40-4293-8af7-96a8262ce2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4256d1d7-7fec-41ea-a5e3-5ca2d3f7b02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c933c3d0-64f0-4ab3-9217-21634c84ce00",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fdd07b-770f-4257-aedb-f3c8e5666af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6459dc49-7f1b-4db1-9d42-f871a2a7ec9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65419e5-2c03-4752-9e2c-25c079c48ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5d205d-8012-4723-82cd-78571dd17313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bc582e-7001-42df-86a3-2befb33f3395",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc97514e-f6df-4790-8012-949088ed03c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40fc28f-5620-421f-a33a-09d5c8121f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb1b6d3-7e47-4b31-a6da-3eafc5bf876a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8187a649-e29d-4346-aebf-5360bd05d983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643e9eda-1efd-4358-8c4c-2b1352834d02",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d654900-4037-45e0-92d1-ffcdcc6b76ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9effb3-11da-45ea-9f91-3452c4254d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c391c8-6be2-4086-b899-ce3dedfaa4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e05bf1-5b06-4b67-a158-1f16b2a89e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86345292-aa5a-4ded-ad12-e551b93b0b64",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61993adc-c1aa-4fde-8146-492c4028dab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5d1be6-d20d-40fc-8602-7ecf794453e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc66c42e-5508-456c-94b6-3d822c8e2034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c8a43d-fa25-473c-815e-76b5adb7c33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9969354c-370b-4c8b-87c2-66d217194de3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918bf932-250f-4f82-97a4-c3b5e1d8a9df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ed3bbc-588c-4d45-8850-2db769321346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8203030d-1e81-4132-9939-b714fca41fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac8215c-9256-420f-beb9-029817db0f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755880ea-ed30-4594-afc6-330172e51d67",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa8ec04-dbdb-4f8f-9089-1fdf3b76f62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f092140-271b-4087-939b-bda7c4511465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a5e94c-7b03-44bb-952f-01bd73d992e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7428b653-1527-4863-b13e-51afc5831028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6d6089-9c24-4161-9a16-8543a2e26c8d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9cae13-d24e-489a-b12d-5bec757b5785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c1eeac0-81c4-4afb-bec3-e4cc296544fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b9bad3-02ae-40f4-ad19-5d83d72df82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c2adbc-5ec3-475a-97c3-44a8168edf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9298e6-861c-4770-94ba-7f57acd4b604",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a617f6a-2d69-4e52-b133-f57a6d0ff48e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e466e59-624f-40d3-9a4e-6130450c3105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26dba81-e86d-4627-9890-b7ee7d674933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0b1a65-a300-41d1-8588-b187bba97897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230d26a9-f7d0-4013-b472-32d339376646",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67d56d3-6de6-4477-86ce-e09c1938403e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "678e7176-c286-44b5-87ad-96e294e474ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9682581f-5821-47fa-a71d-737e528a924a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5d07171-e574-4b0d-bb6f-c9bf681944fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1dcfd6-54a2-4aa9-bc97-1b090704cce8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b9c898-3230-4340-8250-13ced81e06aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c986b98-751b-4094-9770-7d3334124dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11765885-0dda-4d13-8c97-9051152c2faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac93c86a-8daa-4d94-a948-84041b73571e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c841f5e0-b8dd-4adf-a701-fe245aa671ea",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6c8388-343a-4bc0-868b-2abae2a07599",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a54e9d-1e84-403b-9cc3-2a755ffcbc21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8adfd02-f74a-4ca9-92e6-37f29451f11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "765ef67d-e81e-4484-9285-ddab303d2111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbce55b-72ac-4102-851b-1f954046d125",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d705e6-917f-47fc-a1c4-0b5415062a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "536bf21d-d890-4e8d-a3f6-208fdeaf0ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3199fe51-c202-443b-90a2-3afe329f989b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104fddb6-68ae-4d1b-9ded-ce892db3c4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8ba502-41a3-419d-96e7-5356c213573b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4320f2-3e9d-4233-a4d2-e46b30e3fe72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa023fd-4633-4e70-8367-db21a9c8eb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd71e067-8dc2-4720-8a9d-a35d8ebecb5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89bf4f7-b4ba-4946-8e30-a3f80f664586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c06a04-47d7-4b09-ae42-5739b647027c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa87252-6037-405f-9c27-0c207650db9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "388cd73a-64d3-4028-9bf5-3bbe8f5649ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b06c0f5-99ed-46b7-90d2-0d1c58819ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973775dd-fa21-413a-aecb-1c6347643619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79695e5b-201c-4b5c-b11f-1b56ea728037",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a586533d-8b69-448a-a67d-1aeec8b3a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db9bb42-cdc4-437f-91d9-b3c2c8adab8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a874b23-02d6-44cc-8ef9-1837330a3027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4eae3e2-6e15-4409-84a8-56abccc02bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4940d1b-0bbf-40a7-89a0-f409fd8b3f40",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4946537b-a62f-4be1-a7f8-b519814d11a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a2a3e91-02b5-4b11-aa69-1afb4cd3b6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014317c2-2f0f-4923-bded-0446e07d2e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78237133-cc55-4e26-9724-cb2eb3ae719b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef33cdc8-c725-4b68-88fb-70c6da1b049b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6ed2c2-961d-4f13-874e-2af30ebd6bd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42705036-d7e9-416a-9cea-9699a97746bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a375dba-ce59-475e-be7a-1d88f556b5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d73050d-6537-4039-8936-297d1339bfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb922c2-9f4c-4451-9a41-9c8c89c050d6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3600912-cd3d-4ca6-a5e2-8d762b9de764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d76a0da5-bc25-4896-89c1-b397296ec368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c5cc21-040d-4804-916d-a18ef5aeccd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2b55a9-7ce9-412f-bd4b-7cf4c24ec232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2421c04a-427b-45ce-93ba-1e8cf9f702f6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a6ed8d-8636-4b3b-8851-8f421e63dc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6cfd038-00e0-4137-887a-738a2410c21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254529fd-3a82-451d-b0da-aaefe53a3a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74184610-dcc1-491a-94e9-cb15299ab373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d90a4f9-76c1-4b59-84c5-fed5748fe8b5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f64fb2-0a84-485e-8fd2-ad181270aaad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a57d00f-3163-4b8a-9e39-d359f8ecd592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663057cb-da4c-4cf9-94b9-e21a18ca1a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2ec793-9041-438a-b5d7-588d858a2927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b4b85e-8833-444e-a126-18060c178a77",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f02452-6056-43c9-af83-c774efa8b1f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb9e6dd7-3e99-4bde-bdda-a26caa9924a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f748fd-33da-424b-be4a-681f705236ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f542c96b-e9f9-4d45-af10-102b3973f57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3da04f-d57b-46fc-916b-1a983f1fc1df",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b376fae-e52d-4d66-92dd-fcefba827244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4e30e57-62df-4c90-97d7-ef2ceaea8667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ca820c-7dac-4dac-9a44-53e38c21d057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec31ad82-8e18-4718-a41e-37c77f8fac1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a20ee9-acfc-4972-a14c-ce340dcd5615",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d195c98b-2587-4fa1-83e0-72036e62edc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91676b5a-e6f1-4533-97ec-a87cbc6aeacb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc67cbc-816a-44b2-937a-7d6a2d38a36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4f8643-6dad-4e6c-9f7a-7362c7eb3964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f74284-ca07-4c37-9ec3-a7e279b1e633",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef014073-05de-4a89-8f99-37d699d09d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e215ab9-fdd1-42e0-b493-52d7d1c3eed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87421cdf-c048-4f5f-bed4-f18be876aa87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6746521-b28b-4078-8ac5-afbce2a552b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c30645e-f327-4159-895f-38a72e59e358",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc07c24-9adc-496a-83fb-dcefb6a0470d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64ec6a4-b8bc-4612-95e7-ba5992748041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbac0f87-bbcf-4afc-a5be-d45fcfcad461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d07194e-11e0-48a8-870f-7863a2ddaf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96b6c08-3142-4c45-a747-3a38c0d6254a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c2b7a0-9971-4b99-99c3-84b7901ab483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "766bc404-edaa-4ba6-9655-8c6cda30e29c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b1490d-8389-46de-94d0-20a33798bc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d695a135-5b68-40c1-9430-0bd2a24eaecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb3e969-5329-4c0f-87a3-65e2b1744afe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6935e07e-d46a-42ea-8b05-e9eeadd3526f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2ee366-54d2-4775-9b90-20a1e89d4e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8236dac-34ba-4ec3-870d-78e052c47105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a363dc-8956-4063-9123-2079755dc33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e79da56-bec1-4084-97e9-b4e0d85f9dc0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a85f419-4e75-452d-ac47-2eae8aa2fd98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82da90e-37f3-4582-8056-878a9a97d6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31406b72-1c30-40c4-9f7f-92b3fddd57a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473f7fdb-3fe2-4967-8c79-331724f45cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e3a5b8-0157-48da-a33b-d11d965d4b5d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76ce6b6-43a3-4cba-ae98-6dcab1da5d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddfe7421-9896-4a56-8a4f-0dfdeaa407b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf528fd-a03b-4bd0-9d64-5b54c226fb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ec4961-3c46-4a98-b057-0f44f542d5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbda19e-f0a4-431c-b34b-9bc18472dd0d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6a5e36-50c8-4206-88d5-7971943bf7b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd4f130-9033-4023-b37c-e4ff09c6c4bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87317291-a40b-4c97-970e-122f5cdafc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12462c6-e95f-460d-9639-dfdb770ed07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9892e5-2cec-4767-842a-d6a698a5a378",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dedcc1-ba36-48ef-b597-a02919240051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1428c275-98d3-4c4f-bdb4-8ebd3bd347f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a32d4f2-a290-40a1-960e-56e2954d4742",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc905e6d-229a-4338-9992-31ddba2721dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a449791-32c8-434f-b7ee-7d5642c3f02e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24238e5-8f2d-4de7-b9df-e0021de7c1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "874f33b4-ca25-4047-a24e-9523e5445e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e754c541-1b6e-40b4-96e6-8effa968aea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b9db4d-8a86-4dd9-875c-c82739638d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31759bb5-7153-42c2-8b72-3ee1c001b1b4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fd29b7-afce-4da2-945b-78aa92e85338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "274d812b-af3e-44d7-b8a3-49646889e617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e333702-dc23-4962-b731-f02379a4d852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1420a0-4c83-499f-8174-42f02557ff19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baac62a6-af45-4985-a756-6ecafd9b957e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5f7a20-ee40-4d63-b964-aa00e330e44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eed172b-b1a1-4f54-a603-15d9910f6fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7d251e-d928-456f-b44c-4f09176c5295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77922fad-2666-4b34-b551-1ce3a69cb181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc1f514-acc9-43b9-a991-dd87e7a96104",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c146728-d69f-4c2b-87b3-e38ff56a713f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84873edc-82d5-49dc-a363-337de3a7ac39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36c284c-7a49-449a-8095-bb4e4fe8b2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3353652-c1a7-4f68-a85c-8ec442bc0c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042402bd-7b61-4b27-b55f-140e80d90aae",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234f7a71-aada-4f47-b8d3-fed9aba48bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789d7dd8-8996-414d-b9c0-07f92f55f507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334e4580-e375-43ac-88b4-2869575a3e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0630dd86-678c-45bb-bd2f-61b6eda83925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819a8288-5567-4aa7-b54f-eef2d5a7b83e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9062e375-dcb6-456c-98d3-abffc3f43d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b113c95a-749a-4725-bcd4-204f4e0155f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e452471-94aa-4b43-a573-0e56c4278f4e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a30aef-7a6e-4eee-892b-6f9d0456321a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e26f463-5bbd-4e85-808a-9b05252e9602",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11071cd-a01e-4720-866d-a5e664e1038a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b11d9875-cd3d-4774-8475-7dc3e6b8f068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9aab6b-47e7-486f-93dc-1eef0419c676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd0f2b7-7230-4282-a4f9-74784847c4ef"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9378a244-6375-4d19-b6bf-90cf2c121027",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce5c8c53-c175-4a30-a9a7-7e78cae7d8c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f732696c-6e48-4451-b81e-af12f75a9155",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14828290-7983-495e-9fa8-27c5d1da89eb"
                    }
                  }
                ]
              },
              {
                "id": "075386a4-35fa-4ad9-a921-649480addbae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5753bbeb-680f-4b8a-9ca2-8a1f89452960",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bd29c1-2e72-4451-bcd5-7558f2d1aa5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b603fe45-355d-4a89-8d50-029dad762f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bcab74-3f3e-4df9-9ab3-96cc3a76a52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14ba713e-7b05-404f-873f-13f4d2a49511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48446e1-e0cc-4a82-bf55-0dab94fc6d16",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6e8b3d-8861-4112-9e4b-ced70cd2740e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "98595bb8-ca81-4f61-b3cf-f0203e769019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f3853d-493c-40ac-b2b1-05d41ba2cb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d6424fe-1bb4-4611-a025-a4879caebf30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45e6dc6b-7402-47b0-8296-3a12e2c4f282",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bb1a507-e674-4d52-821f-b014db7e6e56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bad4349-47f4-4210-8b28-894647b247de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "338c1934-086c-42df-9610-21aa95c5aa60"
                    }
                  }
                ]
              },
              {
                "id": "0319ec74-d08b-48fa-a5a6-7fc1f6a2ca67",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c37c7d86-47ad-4c0f-8ce0-48666fa93280",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af562c00-960f-49f6-89db-e7c1e58781cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7d532a6c-0d82-4e8f-9cb3-e8fee9d414c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0e2000-6701-46f6-ba6d-550646741727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60615f1-fbfa-429a-b667-928c6eecd789"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a35d7737-3a84-4e8c-be68-9b0ac28bb11f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8577843a-cab1-4493-875a-0f3c07420151",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4d913d2-b203-413b-97d5-59be63d83d0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "38e0ecff-af94-4edf-938c-c44b6416ba35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9129cb8f-05b3-4ed5-b56f-26d6aade50e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2491553d-fa9d-486c-aac1-aa62490d6e16"
                    }
                  }
                ]
              },
              {
                "id": "defb498d-e56e-4e9e-bd1a-d9c6c7089ab7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab88eb07-cdf3-4cb0-b19e-be745d93614f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "442d81a9-40f8-45fe-b2db-4a61b2a4aa31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdf9bf8e-5ca0-42d4-9b3e-17652a56a89b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6aaea22-0462-4d1b-b570-b2d2e6ec019b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7872554-2853-4c8d-833b-b2bc60945a07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aa1a337c-4524-4ca9-9815-0b318c838804"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5799c96-be8a-40f9-bcdd-c9ecc8889904",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1729efb6-b707-400d-9463-cde7cb537f40"
            }
          }
        ]
      },
      {
        "id": "9ff7d043-a0a8-432e-9fe4-db7192efd29e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "69078ead-8277-4c38-b5de-6437ccad8234",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1e18934-26e8-45bb-9a49-c915a0b68fb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d59005be-eae9-42f7-b3ee-afd526e325ce",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6246c358-0e27-4c4a-82df-344601af8acd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "23b1ba37-36d0-47e1-acb7-b3154c9d460d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e4ec5a-2e8a-436d-9bd5-904b9ba28d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79f27437-ec1f-455f-be7e-def08d69f380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8d9809-77ac-4d75-9ba9-97d30ebb24b1",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e80cde-e84a-4c6c-ad4e-4da4d20cb517",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b52613d8-e44b-4967-98a0-6646dbce875b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2af805e-74c9-4490-bf01-696065ab5722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22f5bb02-97a0-49e7-a37b-6744ee467fa7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31c979dc-b0a7-46db-8fb7-52ece5438e0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bf759c8-9447-435e-acca-d82946a57bc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e713ae83-01e2-4998-a3a1-732e9890c64a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4a01827-892a-4e7e-a986-9add1eb83ad2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6698a69-caa3-4c82-991f-4dddb7f0a3e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e494adc5-aacc-48a3-a069-0e2c0398ef6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8a0cd86-136d-4dc4-b40c-88762b013fb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f32c610-5da1-4ca2-a22a-38b74bd7024a"
            }
          }
        ]
      },
      {
        "id": "53891307-cf67-49f5-a997-b8e06103152f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b816a2cc-95d4-4c3a-896c-23ff434e5ec5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d575107-3b9b-46b6-87f3-89822b3ac020",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c88440f-e71c-482a-80c9-65278cb999df",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb7e0bd-4f85-47fb-b9eb-c953dd24c84f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5f4b479-32d5-4d03-b4ef-24616f1cac93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b0c114-6af7-4620-90a5-c55a7a1482c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eafc0dc6-4991-4424-b2b8-c17c67024d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deae3f7-fb69-443e-a5d5-8a197dcdaf41",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b65276-bcbc-477b-9733-9f4fbf491484",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2990e7d8-805b-4a17-8735-68be1d83ac8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80f4d50-cf91-4377-9050-a8a48b5d549d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48a1323d-1727-4969-8d7e-8a0773a49990"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9478c95d-dd45-42e8-9fe1-3faa2becc0cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59b18e7a-4cbc-48cb-ba2b-48a6bf715afc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d01f2666-c138-41ea-a83b-b0668910c827",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8186b1c7-5dd7-4641-8f5c-763728662634"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c1f4d71-b971-46d3-9b3e-c565854ceb6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5e94c51-0739-4cae-881b-6c6a62fb6d90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3110942-18b1-497c-b316-dd9d892a2783",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0f6e2be-b9f8-49d1-8c2d-e4ed64f3ea41"
            }
          }
        ]
      },
      {
        "id": "4d203bf3-4229-44fa-b25a-2988530754ba",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd30f9fd-db71-4b9e-9c97-2f8347be70f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87c3c90d-bd19-4dc7-aab7-43f3e9cddebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58e03256-2c2a-4f47-b674-3944af132c1f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa6a4b6-ff3d-45b0-818b-458157342838",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67bb7e45-27b8-4cc2-8b48-365797bed10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2861222a-4ae4-4f16-8c7d-6b9f48341d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89644cb1-ad55-43ea-813e-4da2971d25e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b24f8ab-288b-42a5-b387-f4f9639c9b5c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b05b280-6128-4c68-9c2d-af90ea5865c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9516d66-4da4-414a-9a2a-1922f8352e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63359cec-342d-4b1a-8280-44d1e42e3b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d814b9e8-daca-476b-9642-3bd483acf696"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b56034c4-5239-4241-9c8c-9afaa511aae8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2b148a3-44cd-4bbf-abeb-256de4418f30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eee658e-7e6f-421a-ab41-afee04b57d61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58737bce-07db-4204-a239-79b957a4e19b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8741eca7-9d9b-4b3c-9e40-7c219875f8c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e551d1a7-61d6-49cd-b932-d877fb2fcb51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2547fc8-e281-4a13-96ec-bb7ac81e23dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92b98476-8d59-4a04-a28e-0490ee67b50a"
            }
          }
        ]
      },
      {
        "id": "86048d53-9edd-4b7e-8217-a6c386405f82",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0aca0a49-51f5-45ff-be61-1a8e15ede587",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fce8e170-a532-4b79-b320-ad285f5b11a9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "23d9a437-bdda-4bd3-97a6-154fdf1159f4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51794abc-8fe7-45a2-9e42-3acf5ced0323",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "042a1e3e-87f7-4ddf-b056-db03fa00254c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 56.926923076923075,
      "responseMin": 20,
      "responseMax": 432,
      "responseSd": 37.59734092164891,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683419921184,
      "completed": 1683419946487
    },
    "executions": [
      {
        "id": "eafc5f21-c70b-424d-817c-b6762e2eb29c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "210c9911-2bb6-42c7-88d8-98a81a003260",
          "httpRequestId": "1adb0081-4954-4e37-9741-f14f840e0f7d"
        },
        "item": {
          "id": "eafc5f21-c70b-424d-817c-b6762e2eb29c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9fe425dd-cc5d-458f-ac1e-c970590d30e6",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 0
        }
      },
      {
        "id": "dca5fe22-dfde-4bf8-9481-e43cbb2d397a",
        "cursor": {
          "ref": "5c985d71-996c-4cf1-9ae2-e190799637db",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "20707430-a39d-4681-ac8e-49a5c98436ff"
        },
        "item": {
          "id": "dca5fe22-dfde-4bf8-9481-e43cbb2d397a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c07fc985-5dfa-4db2-970a-9b723a5468cc",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "632345ff-1504-4ee6-a26f-62f19a9b9e03",
        "cursor": {
          "ref": "278c6c37-c701-4dfb-a807-53db29b8a6eb",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a6fce55a-44ea-4781-aba3-c9e1b86b84d2"
        },
        "item": {
          "id": "632345ff-1504-4ee6-a26f-62f19a9b9e03",
          "name": "did_json"
        },
        "response": {
          "id": "dfa1b40b-6f42-4749-ad69-b7a581c9187c",
          "status": "OK",
          "code": 200,
          "responseTime": 432,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d199e6f4-b480-4f93-a5d5-a6427a6dc7c3",
        "cursor": {
          "ref": "0ce674a2-1509-4b10-a67d-3297d8cf5deb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d95bd34-acf5-46e2-aaac-38318276f2e3"
        },
        "item": {
          "id": "d199e6f4-b480-4f93-a5d5-a6427a6dc7c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "c6ea2525-09f7-45ad-8281-fb0dcdeeabe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d199e6f4-b480-4f93-a5d5-a6427a6dc7c3",
        "cursor": {
          "ref": "0ce674a2-1509-4b10-a67d-3297d8cf5deb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1d95bd34-acf5-46e2-aaac-38318276f2e3"
        },
        "item": {
          "id": "d199e6f4-b480-4f93-a5d5-a6427a6dc7c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "c6ea2525-09f7-45ad-8281-fb0dcdeeabe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17706fc2-4728-4bdd-87a7-47c249343577",
        "cursor": {
          "ref": "85bdd19e-2c48-47a0-80a9-7c74afeb3f06",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c7dd16d5-3859-41c2-8755-e6e69175b9dd"
        },
        "item": {
          "id": "17706fc2-4728-4bdd-87a7-47c249343577",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "47899d6b-9e21-434e-91a3-aaada57e9ea9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 148,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f1a5de-4f82-4785-b94a-579cf3d661e2",
        "cursor": {
          "ref": "8af3ca46-8f8f-43ef-a97a-169d8d15441e",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2454d809-ac7c-4e2e-8f50-ec4ce609c7b3"
        },
        "item": {
          "id": "21f1a5de-4f82-4785-b94a-579cf3d661e2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "85bd2fd7-13d4-4061-b1f5-93aa1b0b44a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bda3ce-94a1-44b5-af0f-48e134e4233f",
        "cursor": {
          "ref": "d77a0a24-7281-451b-b0dc-d8c9ee74dc26",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3fd00334-fba5-4c1a-94bf-697b0d0f71f4"
        },
        "item": {
          "id": "c6bda3ce-94a1-44b5-af0f-48e134e4233f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b5624451-afb8-43b9-a4a8-54299e32e841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d32f1a-8321-4cc6-8752-072f6abf06ac",
        "cursor": {
          "ref": "957c5edd-6a80-4479-bda0-a46e6e86cdb7",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b6909cbc-0ac5-414e-87f8-1a012dce6863"
        },
        "item": {
          "id": "44d32f1a-8321-4cc6-8752-072f6abf06ac",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bfcd3fe0-2809-4d4d-804d-294d47046d81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d32f1a-8321-4cc6-8752-072f6abf06ac",
        "cursor": {
          "ref": "957c5edd-6a80-4479-bda0-a46e6e86cdb7",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b6909cbc-0ac5-414e-87f8-1a012dce6863"
        },
        "item": {
          "id": "44d32f1a-8321-4cc6-8752-072f6abf06ac",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bfcd3fe0-2809-4d4d-804d-294d47046d81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb674203-eb1e-496d-9aa8-10e27a858caa",
        "cursor": {
          "ref": "0b388341-f038-4734-ad61-538c3adfde10",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4ac2f06c-419e-48f2-ae8b-0e7826e1f82f"
        },
        "item": {
          "id": "bb674203-eb1e-496d-9aa8-10e27a858caa",
          "name": "identifiers"
        },
        "response": {
          "id": "9220b528-1233-4e32-98b8-c966d889ef36",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032eb867-a312-495f-9626-cbe124ff56db",
        "cursor": {
          "ref": "caed1649-524a-4b60-b3b5-9dd58386fbb7",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac6e940a-3449-4b37-97dc-0e0a957f8aa4"
        },
        "item": {
          "id": "032eb867-a312-495f-9626-cbe124ff56db",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e19ab31d-7651-406f-ac73-cad30ecb90d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032eb867-a312-495f-9626-cbe124ff56db",
        "cursor": {
          "ref": "caed1649-524a-4b60-b3b5-9dd58386fbb7",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac6e940a-3449-4b37-97dc-0e0a957f8aa4"
        },
        "item": {
          "id": "032eb867-a312-495f-9626-cbe124ff56db",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e19ab31d-7651-406f-ac73-cad30ecb90d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72208b5-332b-4992-b2a6-a4a2021d673c",
        "cursor": {
          "ref": "9bffb183-0161-4747-a7b6-298ba736c774",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8aba389c-e9fe-41bf-8d95-322c35dd941b"
        },
        "item": {
          "id": "e72208b5-332b-4992-b2a6-a4a2021d673c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ba62d837-0189-4db7-9630-f93f0edd15a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4766dfd4-3db4-48ce-a202-6eb21ab8b6a0",
        "cursor": {
          "ref": "c373f0bb-8429-4563-a21f-5325c1e6f935",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "55ae510a-26f1-4ab3-839f-ab8d00f394cd"
        },
        "item": {
          "id": "4766dfd4-3db4-48ce-a202-6eb21ab8b6a0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5a246016-630c-4c6c-a60d-1a3389e05b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc125229-14a6-4d8a-b46a-56420734013d",
        "cursor": {
          "ref": "0ccf609d-b304-4fe8-99f8-b253f798d802",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "259d2570-efb4-4aa9-a80e-700a8f085877"
        },
        "item": {
          "id": "bc125229-14a6-4d8a-b46a-56420734013d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e520fbd8-d45d-464e-a79a-e71f6435f0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824b0acc-24dc-47ee-9784-838ac24deb8d",
        "cursor": {
          "ref": "c4c270b6-8f88-4190-85bb-a84778338337",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5c2017e9-936e-49c3-9564-1e869591df5f"
        },
        "item": {
          "id": "824b0acc-24dc-47ee-9784-838ac24deb8d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1affeeca-fae3-4956-81f7-8fd18b1e74ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9f0300-3952-4e6f-bbbc-3e6e98859a63",
        "cursor": {
          "ref": "2453d165-0b11-4e59-aaf7-bf502c11ee14",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "596bb043-f5ad-4c24-bd30-b736949615f3"
        },
        "item": {
          "id": "1e9f0300-3952-4e6f-bbbc-3e6e98859a63",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7971ac76-1642-4177-9fa9-77f60d89618a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e432f5-5773-4066-8525-ceddfdccec44",
        "cursor": {
          "ref": "97f15aed-24ed-4979-b6f2-807c67cf8d9c",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5330c822-992e-4810-adf1-205bf80dfb68"
        },
        "item": {
          "id": "a8e432f5-5773-4066-8525-ceddfdccec44",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f31b2f21-eca7-4fa8-8b59-a30e329f179b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f220bc-2316-40f6-83c3-54e01eddd2ff",
        "cursor": {
          "ref": "8017053b-99b4-4452-a7a2-00aa52a4d477",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ba2633c2-7ce3-4269-b3f6-d18cb67a1115"
        },
        "item": {
          "id": "16f220bc-2316-40f6-83c3-54e01eddd2ff",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1bb7ba6d-5fda-4ebd-9ff7-bda4c869c6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae0b380-52ad-429b-a334-c5a546f20037",
        "cursor": {
          "ref": "068beb69-9d8e-469d-b998-1b2ad278f528",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "03438cda-a1c4-44e9-8e73-b8183bbbb852"
        },
        "item": {
          "id": "3ae0b380-52ad-429b-a334-c5a546f20037",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "37866638-5fdc-42e8-a9f9-540673990b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6fe8a7-7382-4682-9305-ae3d714e3af3",
        "cursor": {
          "ref": "0ac9327d-660f-4511-beec-02a1d10a18c2",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e922b238-d064-4f5a-a795-89a3ee62b269"
        },
        "item": {
          "id": "fb6fe8a7-7382-4682-9305-ae3d714e3af3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "521ec1ed-1b9b-4d2d-9207-8c90baff74ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616d840b-6629-4b3e-bae3-fdf9e02274ab",
        "cursor": {
          "ref": "a10bec16-819f-49db-88fd-26d6104f42c7",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "01dcd79a-d907-4983-bf57-28b04dd895f5"
        },
        "item": {
          "id": "616d840b-6629-4b3e-bae3-fdf9e02274ab",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2b3025a8-e10a-41af-b253-ab1151b05fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a38a13-2977-46d5-bce5-951f7dcc4f9a",
        "cursor": {
          "ref": "31bc06b0-0411-4bff-aaea-8f925f3c5e31",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f5045559-6156-48e9-960f-7c35ea534c63"
        },
        "item": {
          "id": "f9a38a13-2977-46d5-bce5-951f7dcc4f9a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "32439ba2-9839-4777-ba28-678806dfe884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158542b0-ffe3-4baa-b695-bcecf64c1ce3",
        "cursor": {
          "ref": "dd1d7a8d-92d4-46fb-809e-cab89127fd10",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8f7512ce-f742-4739-858a-9fdb961880ca"
        },
        "item": {
          "id": "158542b0-ffe3-4baa-b695-bcecf64c1ce3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "92219ce6-d875-46fa-a4af-9d822a2ff2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd839168-6360-4fef-938f-8b5028368c2a",
        "cursor": {
          "ref": "16c6b0c7-a0c7-44ca-a373-366e6ed9bc80",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7784ceaf-2ae5-4ea5-af48-f935f047bddd"
        },
        "item": {
          "id": "dd839168-6360-4fef-938f-8b5028368c2a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ea01056f-dd25-4c45-a976-69f9faf4f7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3978a1de-b71b-45d2-91c4-7cd2bbd14ce9",
        "cursor": {
          "ref": "c8d2ea1a-9c04-4ee2-9195-585ce731751e",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7fade9d2-af09-4915-9e89-92a97fd3323d"
        },
        "item": {
          "id": "3978a1de-b71b-45d2-91c4-7cd2bbd14ce9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6e3fbba8-3bc3-43fb-81d2-8cd1476d4d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d81e24-dbaa-4c98-a0b8-3fc6dd9248c7",
        "cursor": {
          "ref": "802f759b-9e4f-4f24-bcac-656723f101f0",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ffe48677-0f37-4752-a251-d2fae82f743e"
        },
        "item": {
          "id": "97d81e24-dbaa-4c98-a0b8-3fc6dd9248c7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bd25081e-05fe-4152-8f09-1ba622035556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3addee77-09d7-4436-85fe-8b3f69fcf7ea",
        "cursor": {
          "ref": "d711b557-0d3e-4cad-822a-7245885b9bf7",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "82b3c93c-062a-4e17-bf57-1d481d3f6799"
        },
        "item": {
          "id": "3addee77-09d7-4436-85fe-8b3f69fcf7ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "97ecf1cc-8dd0-4033-827b-c400bda79311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82a5978-c420-4ff0-aa81-dac7d8cb6c36",
        "cursor": {
          "ref": "282765c4-ee91-496c-b9d7-e3cac16072c2",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c42dd7d3-a155-4b7c-9b9e-2b86dd41e2f5"
        },
        "item": {
          "id": "d82a5978-c420-4ff0-aa81-dac7d8cb6c36",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9c3ec5d0-a9ec-4c50-ade8-fecbb1ede1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1b460e-d0a1-46d8-a4ef-9a36a32e56cf",
        "cursor": {
          "ref": "fa38fdc5-ecc3-4d87-82dc-2cf28f5b5d3f",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b14a2f47-a852-46a1-9311-07c65e3f2eb3"
        },
        "item": {
          "id": "1a1b460e-d0a1-46d8-a4ef-9a36a32e56cf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4a5edc98-08ce-437d-837b-b58a829008a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5760961-d346-438a-b6de-71f4a2083286",
        "cursor": {
          "ref": "35b4ecab-4bf5-40b7-b546-2912e294ab32",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5f47a696-254a-4969-9bf3-8105059fe82f"
        },
        "item": {
          "id": "e5760961-d346-438a-b6de-71f4a2083286",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f7cc2f98-e2ab-4bfe-8102-645282d885c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32210af4-ce38-4def-bac5-73e69a31ab27",
        "cursor": {
          "ref": "f4f200c5-5722-497e-8391-4bff8432470e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "659ba110-f68e-4454-a1d9-f4fb190a37e7"
        },
        "item": {
          "id": "32210af4-ce38-4def-bac5-73e69a31ab27",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9679e7a0-aa10-4669-b2b7-b0f9fc5dd348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c8197f-50ab-4801-9e11-8dee0a51c611",
        "cursor": {
          "ref": "a1e73e69-7b7a-438c-bb3a-693176792d05",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7849c618-c528-4798-8eb5-6bfa738be579"
        },
        "item": {
          "id": "00c8197f-50ab-4801-9e11-8dee0a51c611",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4d44ad94-c3ea-4ad3-a0db-6a5aa70fedb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365b1e57-7798-4004-b415-efddd1bef1a7",
        "cursor": {
          "ref": "51e9851f-201c-45ff-a15f-4cc51f1ef2fd",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "89f7acdd-d3fe-4615-8746-e88e4a61aca2"
        },
        "item": {
          "id": "365b1e57-7798-4004-b415-efddd1bef1a7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ac072cfb-9a18-43df-8525-871dc57e5016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec617133-ed40-4456-a69d-2a82d4b87cc6",
        "cursor": {
          "ref": "2c53f41d-3ad3-40c0-823f-9fd163409b88",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1698a06e-8972-438a-916a-74d08271dd78"
        },
        "item": {
          "id": "ec617133-ed40-4456-a69d-2a82d4b87cc6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dc9569d5-8659-4575-b8ef-ade2a5a43c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3018c75-c4ad-4432-b2eb-a39f93732dbd",
        "cursor": {
          "ref": "b72733dc-f855-42b5-a111-3f86ca2f0da2",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "06984524-b17e-4b30-85dc-118d4c25a1c4"
        },
        "item": {
          "id": "b3018c75-c4ad-4432-b2eb-a39f93732dbd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b136a54e-0a41-4c46-a034-e60e96e902d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458cdddb-7067-40bf-b05e-b1dd7166d99b",
        "cursor": {
          "ref": "43b4cd07-a0ed-4bfd-8be1-5795859f84f2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e2cc8bf3-6a0c-42cf-ac9c-4e4f776a91d1"
        },
        "item": {
          "id": "458cdddb-7067-40bf-b05e-b1dd7166d99b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d50a08ee-928a-4949-b6ff-3807b21bedc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e460c81-7b2f-4a4a-8ce6-e79c3114a2d1",
        "cursor": {
          "ref": "66899d95-2fe9-416a-ace2-b61d8f41b4ad",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d85c6702-88b1-4d6a-90cc-594c967f5e31"
        },
        "item": {
          "id": "6e460c81-7b2f-4a4a-8ce6-e79c3114a2d1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cdb23025-7f72-4baa-b924-717a0deba0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ef6cf4-6ffb-46d4-a107-1869aa76b704",
        "cursor": {
          "ref": "23d7d525-f46f-45b9-a12a-fe8593f1fb49",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "975f6230-8329-4a18-badc-14c60be96a72"
        },
        "item": {
          "id": "43ef6cf4-6ffb-46d4-a107-1869aa76b704",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5537a793-eb81-41ff-8f7b-59cbcd077be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40720888-d97a-4ca7-8c6c-5f2c13ae915f",
        "cursor": {
          "ref": "87084616-4761-4908-b205-a8ca3ff71557",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5aaf2069-54d1-4cef-ae1e-4c7e217de695"
        },
        "item": {
          "id": "40720888-d97a-4ca7-8c6c-5f2c13ae915f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "54339191-45de-47fe-8500-bb146174a5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f97e10-eb03-4ef1-be05-efef4bc5a09c",
        "cursor": {
          "ref": "6ee03773-682d-41b4-9e3f-41cb77bb3f79",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5c87f20f-356c-40b5-bcfd-eff4b4e14faf"
        },
        "item": {
          "id": "16f97e10-eb03-4ef1-be05-efef4bc5a09c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2d8ce480-9af0-4ab8-a82b-b1a656cdf0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0776fb-a94d-425d-9ec0-fa24ae9ebb72",
        "cursor": {
          "ref": "60b78889-4c98-4e59-835e-70941e000334",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "62b55bf5-4bb1-4895-a772-8cf1845b434e"
        },
        "item": {
          "id": "fb0776fb-a94d-425d-9ec0-fa24ae9ebb72",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a1e69298-df78-4cf5-a864-4f7a6638c75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df5839f-b7f2-4c85-a228-2386f36f0ef9",
        "cursor": {
          "ref": "c33f5b84-5514-4416-802a-ceff0269738e",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "16b632b8-c530-4c18-a3c8-917f34328d21"
        },
        "item": {
          "id": "6df5839f-b7f2-4c85-a228-2386f36f0ef9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ba9b97fd-22c1-4a8c-8d5f-cbb2eb39f652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed185bb-c47d-4dac-8490-687d83aadaf1",
        "cursor": {
          "ref": "d1104ac8-472c-47ca-8a3e-6ebff170e7cd",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5ac191c9-f973-4c0a-9f73-978bf7e16543"
        },
        "item": {
          "id": "3ed185bb-c47d-4dac-8490-687d83aadaf1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e0e2e399-676c-485f-8e1b-812934328527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4139c5-e6c3-45a3-b269-39b8ed36ba4c",
        "cursor": {
          "ref": "b69bf3ce-9be0-4d56-90bd-d3e9d6b0f40b",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d6cded34-141d-43e8-932e-1e2f304ce889"
        },
        "item": {
          "id": "5b4139c5-e6c3-45a3-b269-39b8ed36ba4c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "08144314-03b0-4cfa-a7e6-209f8b8702a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945858ad-d9cc-4c70-979a-4283f1d73dab",
        "cursor": {
          "ref": "fd02b428-97c3-432b-b022-ed3eb7b25c3f",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7c78c678-78f7-4977-9e65-50671bbbb023"
        },
        "item": {
          "id": "945858ad-d9cc-4c70-979a-4283f1d73dab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "15b5a157-f5f8-4744-9c9f-546c370bec9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be636937-1b4f-4c93-8df2-5a0f924aa0d4",
        "cursor": {
          "ref": "336924d5-2960-48b3-bb65-f78a83256137",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a9461a89-6824-4fbf-b21d-2c8dc1a1d813"
        },
        "item": {
          "id": "be636937-1b4f-4c93-8df2-5a0f924aa0d4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7c7b82fe-eb95-4de8-9ad8-efef0b2d711c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 62,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445b1aba-7d05-4d22-bfb2-645a35340eeb",
        "cursor": {
          "ref": "fb602f87-774f-48de-b584-575763787065",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "965a9246-84c8-4892-a39e-e4209df5261e"
        },
        "item": {
          "id": "445b1aba-7d05-4d22-bfb2-645a35340eeb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b0d24cf6-9279-4c15-9165-7441682632c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363295d8-cfed-406c-943f-82f64cf5cf84",
        "cursor": {
          "ref": "4752993b-0ffb-46dc-bcd1-84b170ed0528",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eb089412-135e-48d7-894d-43cfd7d9d5c5"
        },
        "item": {
          "id": "363295d8-cfed-406c-943f-82f64cf5cf84",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ea4e7225-709c-47ef-95fd-c87f140c11cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380fe124-3ab5-45f2-987f-f16d5cdbf84c",
        "cursor": {
          "ref": "ce8a861f-19b9-4775-aa6e-844e5628a30f",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ed617d9e-3c98-4f75-9633-2d18e19eadcb"
        },
        "item": {
          "id": "380fe124-3ab5-45f2-987f-f16d5cdbf84c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1da51947-36e6-420b-971a-291bb0257e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d546a82-2ba5-4f4b-955a-a3cdf17c75a9",
        "cursor": {
          "ref": "76367c1b-b445-43a4-b715-dc83f5b9877a",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8d604127-ed07-4c71-8e69-57a2051a058e"
        },
        "item": {
          "id": "2d546a82-2ba5-4f4b-955a-a3cdf17c75a9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b0db765c-980a-4999-aefc-af81533fd13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f84799f-7b4e-4581-93b6-d8f4d7fe6b51",
        "cursor": {
          "ref": "2c58966b-4339-4636-80e2-3c39fe133022",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7f59510d-1dad-41fc-902d-ea0f957c0359"
        },
        "item": {
          "id": "5f84799f-7b4e-4581-93b6-d8f4d7fe6b51",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f64c9697-4593-46c4-a229-536aef6625d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcdb9ca-63aa-4b65-9490-9d5d4431cdf5",
        "cursor": {
          "ref": "e6b6e7fc-5e9f-4e3f-9aa3-4ce7662ccf86",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2a845794-c596-459b-a650-74172e468de4"
        },
        "item": {
          "id": "cdcdb9ca-63aa-4b65-9490-9d5d4431cdf5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "01e397af-511a-409d-ba49-ada2511e55f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd46bb3a-ec1f-45c9-adf1-2d6093facfe4",
        "cursor": {
          "ref": "bc7a38d6-c65c-47bb-9a3a-b614ee6bf91c",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "43aaf942-25a4-4ea3-8dc1-b5fa677088cc"
        },
        "item": {
          "id": "bd46bb3a-ec1f-45c9-adf1-2d6093facfe4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2f18655f-1c38-4e76-b19b-50640720e55b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 58,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449efbe8-4e53-450f-ab3e-468515d4ffc7",
        "cursor": {
          "ref": "e7395c3f-53b8-4cf8-90f0-3990b388f969",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8907687c-70bd-45fa-abe1-0b2c5d4c5f6a"
        },
        "item": {
          "id": "449efbe8-4e53-450f-ab3e-468515d4ffc7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "15bd8556-1899-47d4-985e-187941fbc536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28a451c-77ed-436e-a54d-d010e90f9f12",
        "cursor": {
          "ref": "cb5d56d4-0f20-47d8-bfc9-fc134efdd982",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5debe764-262c-471a-973e-39fd01e7efac"
        },
        "item": {
          "id": "d28a451c-77ed-436e-a54d-d010e90f9f12",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "42dcfd90-957b-473c-871a-cec5d60113fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280cbd09-8f00-44db-b68a-a1c4f1d557a2",
        "cursor": {
          "ref": "5772e762-5b02-49bf-bc6d-488dc6807e47",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "89a2efc1-86cc-4f78-a86c-e0d6c427cc1f"
        },
        "item": {
          "id": "280cbd09-8f00-44db-b68a-a1c4f1d557a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aa93aabc-5093-4d90-a32e-9f06df7327e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e87dc5b-7978-4127-90eb-a1d7e516348b",
        "cursor": {
          "ref": "17011df2-41cd-4622-b117-3c00af81cd86",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ce8fa909-8559-4d20-bceb-8391de5352e6"
        },
        "item": {
          "id": "2e87dc5b-7978-4127-90eb-a1d7e516348b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "47a890e6-4cc9-46b2-97fa-e1cc75f27c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca13b02-416c-4480-8b0f-2077bca3e4b1",
        "cursor": {
          "ref": "2675f13d-0448-4d31-9b1c-2355d551cdfa",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7f052591-1242-4261-8cb9-8ff54fb7d99f"
        },
        "item": {
          "id": "3ca13b02-416c-4480-8b0f-2077bca3e4b1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2acb3279-83d7-4d80-beba-90ed68636d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44adb04e-437a-4a54-b9b3-31b3743f1d24",
        "cursor": {
          "ref": "23b516c8-72b9-4c08-9980-36b487dc51d4",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "765201d3-a395-457d-b317-d489a8430da4"
        },
        "item": {
          "id": "44adb04e-437a-4a54-b9b3-31b3743f1d24",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0354f660-6aec-427c-ac85-4110201e1289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5f8d29-61df-4a21-aeae-0b48cc0d5244",
        "cursor": {
          "ref": "68adc772-9417-4d82-9d59-7db43f4cfebd",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d3ea8fad-ba28-46b3-9e50-fa92967d70b1"
        },
        "item": {
          "id": "4d5f8d29-61df-4a21-aeae-0b48cc0d5244",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2dc22aea-136f-4eee-83fe-76e5b6775682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc40aab-b12e-4ba1-8a16-6520df4f4107",
        "cursor": {
          "ref": "b83db41c-34ac-45fd-bd6f-c7fd6874aae5",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5aac6cc7-79cd-4c00-8dd9-681faedf5e05"
        },
        "item": {
          "id": "1cc40aab-b12e-4ba1-8a16-6520df4f4107",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ed55569b-c866-4633-a7ae-7d4248edf2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17635d65-ca22-43a3-9c7a-6c3e19463d03",
        "cursor": {
          "ref": "c30c90c7-fc33-498d-a2ad-b398edac15ef",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b6fddfd3-86a3-48ba-8b4c-533d95a9ac48"
        },
        "item": {
          "id": "17635d65-ca22-43a3-9c7a-6c3e19463d03",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2cc4a10a-9936-436e-955b-df33016a420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8722667-9ab1-48ed-8e76-ec29e50c22a2",
        "cursor": {
          "ref": "32587f74-4650-4de3-b7a5-6051dc227e93",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "258f5745-140f-48ae-a370-6c1c7df6c963"
        },
        "item": {
          "id": "d8722667-9ab1-48ed-8e76-ec29e50c22a2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2fd5c727-9ad7-4016-908b-abb899c84ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1928fa19-c4d3-435d-b157-aaac329d53b0",
        "cursor": {
          "ref": "45dfdfc6-6b65-49d8-8b26-30749cc6bc96",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "25b7d030-9f55-49fa-9f4e-196975d31999"
        },
        "item": {
          "id": "1928fa19-c4d3-435d-b157-aaac329d53b0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1c30d7bd-a74a-4774-ad8f-0550d768b0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01198080-a811-4793-9e7a-7e5fc90cb9d0",
        "cursor": {
          "ref": "37e50671-202c-4705-965e-89d224092382",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e568b165-7030-4043-8f9c-548575df80c4"
        },
        "item": {
          "id": "01198080-a811-4793-9e7a-7e5fc90cb9d0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "429fbf56-7dc4-414e-92c6-916788c967c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669357ce-b6eb-4f0b-9620-c102ce67c513",
        "cursor": {
          "ref": "9aaa134f-e17b-490c-b55c-8aabcb9b7fe4",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ccb42252-9537-49f4-80b6-8730ea363f7d"
        },
        "item": {
          "id": "669357ce-b6eb-4f0b-9620-c102ce67c513",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "558d962f-a376-492c-b899-9c59f711b824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f83d69-17d2-406f-9a8b-1fc154b20dd5",
        "cursor": {
          "ref": "26633112-1ddf-4e33-870f-7b1366ad36c0",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c0710f1e-9ddf-4234-b67e-4c98f674975a"
        },
        "item": {
          "id": "e0f83d69-17d2-406f-9a8b-1fc154b20dd5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f478be4a-0410-4b4a-9e05-ebaa7a330181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceb54ec-f2c1-4064-a3f1-649842539e12",
        "cursor": {
          "ref": "722da767-4cd2-431e-ba82-71605d2078d4",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f38c16c2-3b72-4b52-ab88-3ccb188ff188"
        },
        "item": {
          "id": "0ceb54ec-f2c1-4064-a3f1-649842539e12",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "feda0583-3188-459d-8ae4-9845343bc55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac46130-c8b9-448e-82fc-e01e0ed6dd34",
        "cursor": {
          "ref": "1492dd73-f5fd-470d-aa3d-b89e610fcb96",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "aa882de5-e103-4e56-9df9-4da13b311924"
        },
        "item": {
          "id": "eac46130-c8b9-448e-82fc-e01e0ed6dd34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e56e18b2-3dc3-474a-bc31-5d35fcfacfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4812956-867e-4f8f-9b1b-4e772706e170",
        "cursor": {
          "ref": "f2013e0c-722a-48ce-bee9-cc3bb8aa4030",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "256225b3-bc08-4b41-a2ee-3e9d8e273583"
        },
        "item": {
          "id": "d4812956-867e-4f8f-9b1b-4e772706e170",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c89830ac-4248-46af-9451-a7b71bae5a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b7bb6f-b738-4fa3-bffa-d5dc8b4b8d2a",
        "cursor": {
          "ref": "1f8d4bc7-ca92-4d63-8dcf-6f47838bf9a8",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "402ffb59-3368-49d7-b7e0-adb8bd17d03b"
        },
        "item": {
          "id": "25b7bb6f-b738-4fa3-bffa-d5dc8b4b8d2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e6dd6285-7ea2-438b-b7c2-8363a90e2b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21621e7-7b09-4903-9790-0551d82b0b8d",
        "cursor": {
          "ref": "dc14da42-9489-40f7-b0d7-33e9e47ba430",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1d6b67d8-2406-4a54-b19d-339e469093d7"
        },
        "item": {
          "id": "e21621e7-7b09-4903-9790-0551d82b0b8d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9a661e3f-c3e3-4a71-8fce-c6187eef3723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f2bbc0-5248-4822-8c90-43b86efec3b5",
        "cursor": {
          "ref": "8813cfbb-7fe0-4761-b925-841cc04fc3fc",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "45592571-503f-427e-9417-04ae34b7c0ca"
        },
        "item": {
          "id": "34f2bbc0-5248-4822-8c90-43b86efec3b5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9965a6c3-3270-439c-9e67-76fce166a842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2291262d-e420-4c42-9bd4-ffbf0729177c",
        "cursor": {
          "ref": "08c7e6e8-dc0a-4046-a503-c2b4312780f0",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f0761323-8435-4e5d-968d-acae854d5b91"
        },
        "item": {
          "id": "2291262d-e420-4c42-9bd4-ffbf0729177c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5ba46fcb-745b-43f5-b60f-cf3ddef9aecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a2b321-74d1-43fa-a180-780f41959d53",
        "cursor": {
          "ref": "044c639c-194a-48e1-aa24-ebe271eed837",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0232570c-d469-462c-b791-e08aff73c7a1"
        },
        "item": {
          "id": "94a2b321-74d1-43fa-a180-780f41959d53",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fd24670c-bab5-42be-8e23-db6143590c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf711a7c-0257-4ccc-8528-34b141e15c0a",
        "cursor": {
          "ref": "b6956c21-1692-4eed-89e2-601048237494",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "48e90c3d-eefd-4b1d-9066-8e139cf685c4"
        },
        "item": {
          "id": "cf711a7c-0257-4ccc-8528-34b141e15c0a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ccc2e9ea-3452-461e-838a-b2ccaa587082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b5e821-7fa6-40a1-897f-8048b190e3a3",
        "cursor": {
          "ref": "f4c467ea-d034-49e4-bbdf-bd86d93367ef",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9007cfad-5f36-492d-8ec0-77879f9971c4"
        },
        "item": {
          "id": "77b5e821-7fa6-40a1-897f-8048b190e3a3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "316eef99-414a-4ee4-b4de-96f91bce9f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3530c96-1306-45d2-8c96-cee20e3fb0d0",
        "cursor": {
          "ref": "2ba70537-3097-4401-b528-b279203781f5",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bdd466f0-fd50-48c9-b5db-1399064de524"
        },
        "item": {
          "id": "f3530c96-1306-45d2-8c96-cee20e3fb0d0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5580c21b-f60d-4886-83df-453898b57881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f93edad-e8f5-4b5b-b51b-5f48bce186ef",
        "cursor": {
          "ref": "9f589d04-86f7-4ea9-9caa-37d9c41b4b13",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "156cb853-887e-4b1d-9349-8ad75d474a65"
        },
        "item": {
          "id": "5f93edad-e8f5-4b5b-b51b-5f48bce186ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f31a0717-bb47-4c01-b399-4eeea359c63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33e0b3d-a087-4563-bd8c-31ea819bc810",
        "cursor": {
          "ref": "b2941e7d-cfb3-400d-badb-3cb29650f6e4",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c7173922-f330-4aeb-9883-2acfed78033c"
        },
        "item": {
          "id": "c33e0b3d-a087-4563-bd8c-31ea819bc810",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "705575fa-61f9-4f09-8bdc-72555aaabc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6395cf94-bca1-461d-859e-c3b0eb7745fc",
        "cursor": {
          "ref": "87b2dc3a-a690-49cf-a89e-c0e4451d5327",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ac22045a-d603-40fd-b79c-5676423e7acb"
        },
        "item": {
          "id": "6395cf94-bca1-461d-859e-c3b0eb7745fc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e476e10d-e9c4-4f4a-a95c-4402298a0254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e55907-f5cf-4599-b863-a2545ac17d61",
        "cursor": {
          "ref": "b05c49dc-680e-42ae-974c-17c327dedbcb",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "94ba686e-17a8-45c4-a420-e3a1fce08045"
        },
        "item": {
          "id": "34e55907-f5cf-4599-b863-a2545ac17d61",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "624f9903-141e-4ae6-ba23-0339e9c0539c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8f5ab5-2545-4632-b92e-f3ba0fa3a5d3",
        "cursor": {
          "ref": "6d00c208-9cf1-4e7c-88f3-57cf27c90199",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a1b7082c-9b3f-494b-83dc-31c7bb441650"
        },
        "item": {
          "id": "1d8f5ab5-2545-4632-b92e-f3ba0fa3a5d3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "987a5450-2a8a-4320-9fd0-b97c276552f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd32b343-869f-4fb2-bea9-6d13a21cf099",
        "cursor": {
          "ref": "52957b69-aa9d-4a0d-b69b-a576ac89f146",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2563a3f4-4987-449a-91fa-eafc4afcdf2e"
        },
        "item": {
          "id": "dd32b343-869f-4fb2-bea9-6d13a21cf099",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0721053d-42b0-44b8-904a-c763898dd829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dc2a14-c202-47b9-8cb3-77432e29353c",
        "cursor": {
          "ref": "3a207c13-63df-448f-b3e4-30c5657d4feb",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "898d9447-6208-4715-8d3c-2a9af50d5599"
        },
        "item": {
          "id": "15dc2a14-c202-47b9-8cb3-77432e29353c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a4a7ac6e-bf34-443d-b060-a20e9a7d91ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa95678-37d9-40b5-919d-84b0d5480c77",
        "cursor": {
          "ref": "b26c87bf-3868-4ac3-81c3-2301e60a6ee0",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0bc6590e-2537-458b-84ef-c3b8ef54ff89"
        },
        "item": {
          "id": "6fa95678-37d9-40b5-919d-84b0d5480c77",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "08447608-1bc6-4734-b678-691c0b444a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7234c21-0a63-4b04-a73f-b8bf24f784cc",
        "cursor": {
          "ref": "fd6ad488-74dc-4c82-9f44-193f3aac8674",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dcdbe04a-3af5-46b2-adc9-da78bf043b8a"
        },
        "item": {
          "id": "a7234c21-0a63-4b04-a73f-b8bf24f784cc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bc837e76-0f89-4eb9-87eb-c25f66a1607e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f194b7-46b9-4405-b839-c2725a613b1c",
        "cursor": {
          "ref": "36a70e9c-5002-4528-9fc6-fa06bcaa4402",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e0aacedd-324a-4db6-b5d6-cca0fca4024d"
        },
        "item": {
          "id": "56f194b7-46b9-4405-b839-c2725a613b1c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0e7a4c59-c9f4-47ab-b3ad-175802f4ad95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009253af-3c1c-4bdb-ab30-5dd2f0d3ea38",
        "cursor": {
          "ref": "91fe1252-c95a-42e5-9917-263e4a2f881c",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a6e8eedf-23a5-4a8c-8e1c-8f7be2407ce9"
        },
        "item": {
          "id": "009253af-3c1c-4bdb-ab30-5dd2f0d3ea38",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8372401b-b315-41c5-9887-c1469d455eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bc305c-d11f-48b1-a25b-c939477b8dc9",
        "cursor": {
          "ref": "1d539212-c194-4ab4-bd1d-611c75fb5556",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "556056e2-4b40-48a7-9e3d-28573d2dfe99"
        },
        "item": {
          "id": "e6bc305c-d11f-48b1-a25b-c939477b8dc9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "be0bd8b3-53c7-4d4c-9061-1d5be13c7a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d3112b-1cec-443f-abda-9d3044a74c62",
        "cursor": {
          "ref": "49131d2b-5c80-4d2a-83bf-18ba9ee7dbd4",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d507f26a-002f-4b54-8879-0b60e6f3d30f"
        },
        "item": {
          "id": "b7d3112b-1cec-443f-abda-9d3044a74c62",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a130dffa-034b-447b-84ce-e1ac601c8256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1534bed-3f8b-4e75-a631-a9bd463c166d",
        "cursor": {
          "ref": "ffb3573c-68c9-47f7-867a-f96551dd1e8f",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f43a3891-9a07-4890-955f-09aeb4a0b3bf"
        },
        "item": {
          "id": "a1534bed-3f8b-4e75-a631-a9bd463c166d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f67831ca-2b98-4873-af40-a182600cd931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f769cf6-506b-4802-8d29-39d24e16cfc4",
        "cursor": {
          "ref": "9bcf3ef9-a1ba-4425-8e60-6a370ac1922e",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "75118d70-5107-4f38-a806-e9a9e4e73fa8"
        },
        "item": {
          "id": "1f769cf6-506b-4802-8d29-39d24e16cfc4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4d25b87d-9b6b-4dd5-9142-d03f43a15040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6b0707-e0d0-4014-99bc-fa1129ec7520",
        "cursor": {
          "ref": "1ea34e6e-ad0c-4996-87e6-667b4cc7222b",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "39cbb51f-eaee-4def-91d0-2bdc04ec5e7f"
        },
        "item": {
          "id": "9b6b0707-e0d0-4014-99bc-fa1129ec7520",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "308d6822-5cbb-4f94-a67d-f7f6b465687d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fcb6af-37f6-47bb-84c2-c678ce76a79c",
        "cursor": {
          "ref": "c286b88c-dac3-4d66-bfb8-7587e7f4d67b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "326ed0db-b8cd-459b-8165-1d03661afe4d"
        },
        "item": {
          "id": "22fcb6af-37f6-47bb-84c2-c678ce76a79c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "105f535a-e934-4e27-adc8-51532bf8bed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeb38af-ada4-4c91-a284-4acf55c9b606",
        "cursor": {
          "ref": "5fa247e4-25de-4637-921e-0157cf3ba446",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "003471a7-df96-4cc9-954b-ff7a0e88e0f3"
        },
        "item": {
          "id": "3aeb38af-ada4-4c91-a284-4acf55c9b606",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "462da5ab-e0f7-4d06-82df-bf11dcbee8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3883e3f4-1ca2-4d3d-8a6f-743761a68b9a",
        "cursor": {
          "ref": "47fe904c-940f-4b3e-94a7-0aed5cad8cdc",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0ef9033c-8222-411d-a368-15b7a3551e84"
        },
        "item": {
          "id": "3883e3f4-1ca2-4d3d-8a6f-743761a68b9a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "74d637bd-64ed-48d6-8e91-13d83cf975ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2aae0d6-1e8e-4ca2-94f4-f307fa3e96fe",
        "cursor": {
          "ref": "2b580ca6-bff1-4b88-98a8-db8e166d4fae",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "04c85df4-7a7d-4d73-ae4f-137c0066a9b8"
        },
        "item": {
          "id": "d2aae0d6-1e8e-4ca2-94f4-f307fa3e96fe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "21fe560a-24dd-49d0-b979-3ee2d457b5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6a7da9-b784-4810-b6cd-051557fc7d55",
        "cursor": {
          "ref": "67d2e050-fabf-4fef-bf03-2ff1546b9cd1",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6f322f51-3f6d-490f-8322-273c51bc6f37"
        },
        "item": {
          "id": "9e6a7da9-b784-4810-b6cd-051557fc7d55",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6454dc9b-a9b8-4133-ad07-e3ee1c255f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238cd141-c3c9-47f5-a2cb-74fb09be1f0f",
        "cursor": {
          "ref": "2684d888-5bed-4e46-a0fe-d88688db1595",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b2809ef5-9e6e-442b-8f1e-d2355b111762"
        },
        "item": {
          "id": "238cd141-c3c9-47f5-a2cb-74fb09be1f0f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "52ecb6da-2d5c-4815-afe4-8b82b6a1d60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203be423-aa01-40d1-93de-6a62d4f99060",
        "cursor": {
          "ref": "da987a38-e770-4cc1-908e-5a9e69a4d906",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "58fe4868-d947-499f-ad18-e1372d0e9d9d"
        },
        "item": {
          "id": "203be423-aa01-40d1-93de-6a62d4f99060",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2c7b3e1a-6a1d-46e7-984a-e06b5cdc1cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92f7cd8-b5c8-4d8b-8761-4100cfba3935",
        "cursor": {
          "ref": "79122f53-119a-4cfb-8899-66f642897725",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "18247f46-0239-454b-9217-6afe85c434a1"
        },
        "item": {
          "id": "c92f7cd8-b5c8-4d8b-8761-4100cfba3935",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9d0a15e6-a032-4e1a-a54e-297bf8868b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d31467-5bce-4272-b37c-eb923e253f3d",
        "cursor": {
          "ref": "a735bffb-619f-41e8-b0bc-ee55d507bc23",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f4899d1c-93ee-4319-b4ac-e10081a6ece4"
        },
        "item": {
          "id": "40d31467-5bce-4272-b37c-eb923e253f3d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8c8fc2e1-96b2-4b06-a5fb-a09a6780e6d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47368efb-c6f2-418f-b0b8-180c695990d5",
        "cursor": {
          "ref": "f8bffd09-99b7-4b64-8c15-c0ca2e7f7635",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dea72d34-590a-4524-a169-5a8436cb7605"
        },
        "item": {
          "id": "47368efb-c6f2-418f-b0b8-180c695990d5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "99a704bd-7d16-4fe7-93d4-ef3caf5b90c2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 149,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a85ce0-77d2-47fd-b72c-b4f774a13ad1",
        "cursor": {
          "ref": "2c4469e1-22ac-416c-854f-248ccc124bb0",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "56ec5d5c-778e-4233-b277-1276bdaf1818"
        },
        "item": {
          "id": "00a85ce0-77d2-47fd-b72c-b4f774a13ad1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "990b663f-76c6-43b6-8d50-799f434adbb4",
          "status": "Created",
          "code": 201,
          "responseTime": 101,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d974fb3-a086-4b3e-a981-f9b8541765b5",
        "cursor": {
          "ref": "a7c0c2b1-d82f-49fe-bdb9-af4eae255bb9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a99d1e81-eb99-46ec-a60b-b47cd28fec43"
        },
        "item": {
          "id": "1d974fb3-a086-4b3e-a981-f9b8541765b5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1671be16-f4a2-494d-ba96-c8b37d90a124",
          "status": "Created",
          "code": 201,
          "responseTime": 72,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30afb0a0-46b9-4418-8ebc-8ac3fb711cc1",
        "cursor": {
          "ref": "a05577ba-6d75-4f69-b8d8-8d1be0206755",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3b3445ee-dd08-4b3e-bd3f-d76fe9e17c30"
        },
        "item": {
          "id": "30afb0a0-46b9-4418-8ebc-8ac3fb711cc1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "419da324-8fc6-41a2-85df-ea828b0935a0",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "00856752-f13f-4996-9763-ab3267f70433",
        "cursor": {
          "ref": "e44f2513-b777-448f-b892-62c67d92e730",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9d643513-1509-4277-8b94-bf0c658ee30d"
        },
        "item": {
          "id": "00856752-f13f-4996-9763-ab3267f70433",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "35c81616-cf13-4dd8-9777-c2188f205cd5",
          "status": "Created",
          "code": 201,
          "responseTime": 65,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a607e2-7912-4a8b-8d5a-b8c12f5c3b75",
        "cursor": {
          "ref": "88ed295f-3af6-494e-b579-d9402283be79",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "104f6f86-5a47-446f-b790-8ec24fe79036"
        },
        "item": {
          "id": "06a607e2-7912-4a8b-8d5a-b8c12f5c3b75",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6215d50b-e114-429a-bdaa-afd4662bacde",
          "status": "Created",
          "code": 201,
          "responseTime": 70,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8589a1-b922-4d87-b070-d5715892f69f",
        "cursor": {
          "ref": "dacac6a5-d376-4be9-ba3a-50cdc106463b",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2869c263-5694-4346-a9de-d29e47d54ea9"
        },
        "item": {
          "id": "aa8589a1-b922-4d87-b070-d5715892f69f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0ef503a3-da2c-4672-b920-d50512a6ec22",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d7521e-5257-459a-9315-0d0f719f08fb",
        "cursor": {
          "ref": "f0864374-5c8c-4598-8016-3d57c1793e02",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1d312c96-20ea-4bda-a499-67f3ea59e4be"
        },
        "item": {
          "id": "97d7521e-5257-459a-9315-0d0f719f08fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4913bdc7-8202-4882-ae0e-209a35bef176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d7521e-5257-459a-9315-0d0f719f08fb",
        "cursor": {
          "ref": "f0864374-5c8c-4598-8016-3d57c1793e02",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1d312c96-20ea-4bda-a499-67f3ea59e4be"
        },
        "item": {
          "id": "97d7521e-5257-459a-9315-0d0f719f08fb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4913bdc7-8202-4882-ae0e-209a35bef176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53849867-1ff3-48a9-be5f-c0c56079362d",
        "cursor": {
          "ref": "f7ab0a4e-6306-4abb-a5be-b491bbc8e863",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "51d2a084-59c5-4cb3-8dac-e61f9d7cec49"
        },
        "item": {
          "id": "53849867-1ff3-48a9-be5f-c0c56079362d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc74692e-baca-4923-87ca-a8ecbbda222b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5de3fc2-dc36-4c69-8688-74e47adf9228",
        "cursor": {
          "ref": "0ae325ff-fbb0-4593-94fd-f182a273efdd",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e0354b3a-737b-4ab7-9c70-918ab27a2994"
        },
        "item": {
          "id": "e5de3fc2-dc36-4c69-8688-74e47adf9228",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "52600485-be3d-468f-80d0-4a48afef8e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d503761-1cc9-4b16-bbad-a75310bb8c2a",
        "cursor": {
          "ref": "c76eaa4a-6391-4bd4-94f3-35dd1a818657",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5d815eaa-8eb4-476b-a891-0685fe81457a"
        },
        "item": {
          "id": "6d503761-1cc9-4b16-bbad-a75310bb8c2a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "850a3b2b-32d5-4d82-a7fc-5833198ade80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677b3f36-c698-4d3c-8e15-8f759641008d",
        "cursor": {
          "ref": "6f703a01-bc0b-49c2-9646-1ddb8dc992d6",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "514f79e1-d3b8-495a-b8a9-26c3be6ceb1a"
        },
        "item": {
          "id": "677b3f36-c698-4d3c-8e15-8f759641008d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90f57fd6-6fe2-4003-8b67-4839cb7d4b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea5cca3-5261-4268-a046-bb3054b9f36c",
        "cursor": {
          "ref": "0925cd5a-7512-4a86-9e73-15ad09742cea",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7116d546-2bd1-4f37-a469-5aa6e350ab06"
        },
        "item": {
          "id": "bea5cca3-5261-4268-a046-bb3054b9f36c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f604ffcd-c39f-4f29-b7cc-802af5efc7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417b6920-2b1d-4d10-a6a6-22cfab5581dc",
        "cursor": {
          "ref": "e63a9f83-e92d-48fa-b4b9-4cf13f1989ae",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7390a285-579d-41a1-a4ee-39c0b8943458"
        },
        "item": {
          "id": "417b6920-2b1d-4d10-a6a6-22cfab5581dc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e14a5677-32d3-46bc-8334-6e0a2049ac5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4836202-09f9-4b14-bc4e-9bf528b874da",
        "cursor": {
          "ref": "b7fb1a28-8554-4ea9-b4b2-f2c9426de67f",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0b3d22d0-9de7-4b2a-9ae1-2cc6bd7a8105"
        },
        "item": {
          "id": "f4836202-09f9-4b14-bc4e-9bf528b874da",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c2a31c99-9cae-437a-b69d-8065c6b2f14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc68817c-f09b-4ad7-9ad7-e225c4263982",
        "cursor": {
          "ref": "a55ae151-3f1b-47f1-87a2-784a2fba3c77",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cfe4c5d9-9767-4158-b6e7-1ff105c8ff60"
        },
        "item": {
          "id": "bc68817c-f09b-4ad7-9ad7-e225c4263982",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "48fdb1d8-06cc-4d15-acaa-e80004619b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7406fd4c-a8d0-4cc5-9012-c963c38aa34e",
        "cursor": {
          "ref": "cc7817b7-78f9-4e5c-a4ec-08d4260220a9",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "05145573-716e-4f04-b0ce-07b5ce0c3192"
        },
        "item": {
          "id": "7406fd4c-a8d0-4cc5-9012-c963c38aa34e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4dbe38a3-2a7e-406b-abec-0d09073bd659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c28a40c-3335-47b7-a7b0-43dff006ebf9",
        "cursor": {
          "ref": "0f012ed3-88fe-414f-9e03-09d1aeaf0557",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "04950594-bf50-4c84-ad4f-ec4b76acdf3c"
        },
        "item": {
          "id": "3c28a40c-3335-47b7-a7b0-43dff006ebf9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ea458db-6e60-4efd-90d6-f3f0fa040914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2261d1b0-e2b6-40ee-a2e0-e52d4f8c677f",
        "cursor": {
          "ref": "6a1228c5-ee0b-4d1a-a9c2-127d595b5baa",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "74c293d5-e7ec-4756-8a51-7c29cf05874c"
        },
        "item": {
          "id": "2261d1b0-e2b6-40ee-a2e0-e52d4f8c677f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3967c80-b07c-4ba9-a6a9-d77dbbbe0521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cca79a-5c7d-407e-9cec-2c6de6d226b0",
        "cursor": {
          "ref": "532e796c-4f8c-453c-a9aa-e91267f632a8",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e43bbd33-875a-4273-9e6d-8b4c82654d58"
        },
        "item": {
          "id": "d8cca79a-5c7d-407e-9cec-2c6de6d226b0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6d6023b2-b924-4322-9ed3-9e392bbecac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1705b9dc-ddb4-477b-9743-8b50ee607100",
        "cursor": {
          "ref": "775bd17a-bb48-4426-bce3-49986a2e66f2",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "459f71b8-78a4-4d63-99f3-ee78ffab411c"
        },
        "item": {
          "id": "1705b9dc-ddb4-477b-9743-8b50ee607100",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "588eb2c4-eacf-495c-a3e9-c766d53370b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b04ca1e-35ed-4546-b88c-3c47ce2dd7aa",
        "cursor": {
          "ref": "22b6d7cf-a24e-4d68-b880-338b63cf5b39",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "11ee6bf2-70e7-483b-a055-4d245e81ef74"
        },
        "item": {
          "id": "4b04ca1e-35ed-4546-b88c-3c47ce2dd7aa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9cd57b4e-1b2c-4ef6-9f76-ac2c34289c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e32b38d-0f63-42d8-bac5-a6f02b65ba4b",
        "cursor": {
          "ref": "471c8daa-4420-48d5-b86f-41d6114db11a",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ff1b89b5-5afe-4d84-afb8-bf71b7e28b11"
        },
        "item": {
          "id": "5e32b38d-0f63-42d8-bac5-a6f02b65ba4b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "52e7494e-768b-40df-b3d4-f1b096417ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297e67b3-afae-4262-8115-f3b718dac812",
        "cursor": {
          "ref": "aa9d5c28-44da-4e5b-8b45-5a30173722c0",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e7907b60-144c-444a-9aed-f2f3cf40fa83"
        },
        "item": {
          "id": "297e67b3-afae-4262-8115-f3b718dac812",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8e1d521-929f-4d0d-8778-eca6899659d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e359964-74f1-48db-b799-7b5f896dc58a",
        "cursor": {
          "ref": "9a69e365-456b-4ee1-84ed-612e5db931ba",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0d1b9ca1-217a-4fa6-afec-2d977d0553b6"
        },
        "item": {
          "id": "9e359964-74f1-48db-b799-7b5f896dc58a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fd5aafd3-8931-4d79-bc89-44ed4638ee15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9535c4-f241-42be-a3d3-06243cd2ebc4",
        "cursor": {
          "ref": "078c3e19-44f1-4d75-b936-cff262ab179b",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b5858621-b3b6-414d-b50e-270c6965a747"
        },
        "item": {
          "id": "ab9535c4-f241-42be-a3d3-06243cd2ebc4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "471c8be3-8d43-423c-9b47-e8d5a515c481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494f39d6-3d0d-45f7-99e2-3c759f260897",
        "cursor": {
          "ref": "02428424-6099-482f-940b-174dde9516d1",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6072337d-6a00-4ef9-9074-affd20c92d65"
        },
        "item": {
          "id": "494f39d6-3d0d-45f7-99e2-3c759f260897",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "049a7003-c1e6-4eff-9790-45d693b16eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10684453-e1d1-40e5-a461-73e17bcf9554",
        "cursor": {
          "ref": "a1740ebb-1755-4519-aca2-393207898adb",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "97da20e5-45bd-4c60-8859-69c9da9c311b"
        },
        "item": {
          "id": "10684453-e1d1-40e5-a461-73e17bcf9554",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1de0f38d-1bee-41b4-97d5-116acef3c52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b3053b-84dd-471a-b2b9-ace663f0cd86",
        "cursor": {
          "ref": "44ff2ad5-329c-4dbd-a924-82433cee2193",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2729ed41-262d-4c59-8885-12b5f4a1d058"
        },
        "item": {
          "id": "a8b3053b-84dd-471a-b2b9-ace663f0cd86",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d828bf35-cad6-458c-b598-04e73b8e0fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2940b3cb-2de7-412d-af2a-80b0273ca3bd",
        "cursor": {
          "ref": "c111eec9-e49a-4f52-afc1-969f7ec22e7f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cf80e61f-f2d1-416b-a4e4-abe17f262d11"
        },
        "item": {
          "id": "2940b3cb-2de7-412d-af2a-80b0273ca3bd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "94c14870-9a1d-4411-ab8b-ea4a40d401c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee391379-ce54-4479-90a6-ba67c7598ca2",
        "cursor": {
          "ref": "980b6300-96fa-4935-8173-a6cedd842982",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7e38b48d-c322-4e9d-bb2e-5ee9cdf4f261"
        },
        "item": {
          "id": "ee391379-ce54-4479-90a6-ba67c7598ca2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a31d752a-8bdf-46b7-a379-7198eea49b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8d640f-efda-4deb-99ec-90a7420a7f5e",
        "cursor": {
          "ref": "4cf03fb9-f82c-4522-96b3-d44f9bcdfcbe",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f137cb30-d450-4cd7-b88b-16248e6d8984"
        },
        "item": {
          "id": "6a8d640f-efda-4deb-99ec-90a7420a7f5e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1b155107-38a1-497d-b653-371cdc1df04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5041fd1d-47bb-4876-87f9-1d9c8773752c",
        "cursor": {
          "ref": "125e3fcf-1e77-49ab-b4ad-37fc29c390b7",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9b09d86a-4640-46b1-8b13-319bfea89d42"
        },
        "item": {
          "id": "5041fd1d-47bb-4876-87f9-1d9c8773752c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cdbae56c-5ca9-4360-bec1-18e4fdb33f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef76515a-205b-44a2-b100-ac7a65cb7d1c",
        "cursor": {
          "ref": "b6ff62e3-351f-4ea2-b7b8-c3041b04a9ec",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "877a8a72-0fb4-42f9-ba14-280c949fb1ac"
        },
        "item": {
          "id": "ef76515a-205b-44a2-b100-ac7a65cb7d1c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "06caf15f-ac2e-430d-b850-6e234ff1ec54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15ffddb-2024-4ec9-bdfa-df562137366f",
        "cursor": {
          "ref": "57625a10-d227-4fa9-ab1d-76d585571c35",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2402e806-5bde-4fa3-93a7-cf1bbe307a8f"
        },
        "item": {
          "id": "c15ffddb-2024-4ec9-bdfa-df562137366f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0c484e70-c870-464e-a943-2d0d8c480caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7ee9f9-e2dc-41e0-9efe-0c367e0a956c",
        "cursor": {
          "ref": "229807f8-3aa8-4961-9a9c-7b8beb9da88e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8fd4ac39-0f1e-4753-b689-41ef02db7065"
        },
        "item": {
          "id": "7e7ee9f9-e2dc-41e0-9efe-0c367e0a956c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a325fc9a-983c-4bb5-bb58-400399855760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08330be-bfa2-45c7-ade9-2196db29c0b1",
        "cursor": {
          "ref": "d6d4835c-771e-4079-8127-84afc8de8555",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5cce47e8-3f74-42e5-b03d-40ad7380e78b"
        },
        "item": {
          "id": "e08330be-bfa2-45c7-ade9-2196db29c0b1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "54fdc801-9f09-42eb-a00d-d51fd253d2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a217b3-209c-4c04-9501-23ca756303a0",
        "cursor": {
          "ref": "43650be1-67db-430b-8c4a-66e73557c2ba",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "efb1f43a-f7af-471d-9302-bdfc40bb0094"
        },
        "item": {
          "id": "15a217b3-209c-4c04-9501-23ca756303a0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bd5d3b85-d3c1-42dc-bcc7-d0240932e096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942c5806-de44-4eae-90bb-7ae6c4529a20",
        "cursor": {
          "ref": "4e7a8d16-eacc-4f68-b1c6-061bfb6686d9",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2770113a-38de-48e7-8317-a43d525f69cd"
        },
        "item": {
          "id": "942c5806-de44-4eae-90bb-7ae6c4529a20",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7c92e848-6928-474e-a296-16032b9819f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28b6e26-2cb4-4f83-86a1-bf0a5a899640",
        "cursor": {
          "ref": "81037c1a-a91f-4b2b-be36-74dae7bca4dd",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6e228413-1012-4017-a5b9-7186dc900b48"
        },
        "item": {
          "id": "a28b6e26-2cb4-4f83-86a1-bf0a5a899640",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f0af5102-3a2d-4a85-9853-27e5b0c719af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272cc642-8c25-45bb-aaf4-6a6444e0d6dd",
        "cursor": {
          "ref": "6ac54ae1-997f-4330-a003-21d5c6a083c1",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c6b53c17-9a2d-4dc2-850f-c658bf0cf829"
        },
        "item": {
          "id": "272cc642-8c25-45bb-aaf4-6a6444e0d6dd",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "360f0d55-9c72-4cc5-a5ea-23f162a6ac37",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7bd98a-ef3c-4b0e-bbd5-18a7a007c4c6",
        "cursor": {
          "ref": "a732766d-917f-4c6b-a57e-35225f249303",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c4cee9a3-c482-40c4-9511-ab83dfcce952"
        },
        "item": {
          "id": "1c7bd98a-ef3c-4b0e-bbd5-18a7a007c4c6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "87ec841d-3665-46c0-939d-a19b0530fcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7bd98a-ef3c-4b0e-bbd5-18a7a007c4c6",
        "cursor": {
          "ref": "a732766d-917f-4c6b-a57e-35225f249303",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c4cee9a3-c482-40c4-9511-ab83dfcce952"
        },
        "item": {
          "id": "1c7bd98a-ef3c-4b0e-bbd5-18a7a007c4c6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "87ec841d-3665-46c0-939d-a19b0530fcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7ab55a-009e-4fbd-ab69-d78ddbfa00d8",
        "cursor": {
          "ref": "53ca6900-fed0-4a8e-9be4-08759cc3b94a",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ddb9d98a-a40f-447e-b6af-3fdc946da82c"
        },
        "item": {
          "id": "3f7ab55a-009e-4fbd-ab69-d78ddbfa00d8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0da8cd48-3411-4be1-86a1-fe8e7e69423d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c919905c-13ef-4089-ab22-de722e66f1f7",
        "cursor": {
          "ref": "1f9cf795-396b-4113-86b9-b5bbe4dca83b",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c6200f38-ac27-4da7-826c-9c60baad89a4"
        },
        "item": {
          "id": "c919905c-13ef-4089-ab22-de722e66f1f7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2267338e-8777-41c2-8bbd-fd329950cfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e2395d-1273-4006-91ed-066fd994f688",
        "cursor": {
          "ref": "38dfb571-60df-4c5c-b841-95bf622fd402",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9e5e5700-9614-4139-a2c6-cb7fc723efce"
        },
        "item": {
          "id": "95e2395d-1273-4006-91ed-066fd994f688",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0ea388a8-4830-43f5-b929-e42b9ef78743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450b50b0-f77d-4283-a8f1-2133feca0d84",
        "cursor": {
          "ref": "3699cd16-58ea-45e7-9a8d-0c0d8cf4ba30",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6bfeecd1-e3bb-41cd-a930-c1d830a7b25f"
        },
        "item": {
          "id": "450b50b0-f77d-4283-a8f1-2133feca0d84",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a73b741-7a84-47c4-815a-bbd97b222c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f28e85-bae6-4ced-8bc4-74b2c47bc9e9",
        "cursor": {
          "ref": "1bd0ebfc-8442-4972-ae4a-7c216b7daeb4",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "600365dc-252f-4303-85da-62e0a6d99ded"
        },
        "item": {
          "id": "c6f28e85-bae6-4ced-8bc4-74b2c47bc9e9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "939e5d3a-8c84-4087-bf7c-73a642e8b051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f850760-9497-4d79-b381-fa76d5f895b1",
        "cursor": {
          "ref": "6c955637-d4c6-4628-877a-fcc46bf0eb1d",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b0cedaff-74c7-44c0-81b9-97b38027ae11"
        },
        "item": {
          "id": "3f850760-9497-4d79-b381-fa76d5f895b1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1ddf3dbe-0fd6-427c-a6c9-d39efb29ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9090a2b-5a9c-4a0f-8a89-982ec464f29e",
        "cursor": {
          "ref": "e1fc6d68-ac06-4218-a85a-50442a423423",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2ffea36b-bf58-42d7-9b06-98bb37405649"
        },
        "item": {
          "id": "d9090a2b-5a9c-4a0f-8a89-982ec464f29e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3f071b3e-6ff6-460b-8420-38edc6a04776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58251ddc-b669-47d9-9671-aab8e4dc5ebb",
        "cursor": {
          "ref": "b6d98e34-b1f3-4f61-a507-94ae093053d2",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d86fa27f-dbef-4906-9d57-37d39dc9641b"
        },
        "item": {
          "id": "58251ddc-b669-47d9-9671-aab8e4dc5ebb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7e289bb8-19d1-4919-9263-540262d781fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e35514-7d3f-479e-aac1-2f2eb54e09d7",
        "cursor": {
          "ref": "c87408db-f0d4-4035-83f2-4b238c540feb",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "83da2d14-c5c9-4a66-92fc-d3b39f70d57c"
        },
        "item": {
          "id": "66e35514-7d3f-479e-aac1-2f2eb54e09d7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b5bdf740-170f-4fb1-93e5-519241559aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4686edd-68f5-4772-97ff-bdcdbb400636",
        "cursor": {
          "ref": "e2171895-2738-406c-adb6-13e4af6cf404",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c21070a7-e155-4120-b836-42f7b54df487"
        },
        "item": {
          "id": "b4686edd-68f5-4772-97ff-bdcdbb400636",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a41e6014-6103-4dfc-89c2-e99abce53071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774c1576-8d60-40fd-b224-20e0f244bce5",
        "cursor": {
          "ref": "b269c939-512a-4790-8ced-97f4acccf872",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "85d3adf2-bd24-45b3-a8fd-e055bc2f39ce"
        },
        "item": {
          "id": "774c1576-8d60-40fd-b224-20e0f244bce5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "638f6fa2-f862-41ca-af83-f575348a7cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22eadf9-9400-455e-a0c6-2b561a54b5ea",
        "cursor": {
          "ref": "c41319fd-644e-4222-b1c9-c152a32c51c5",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7a958c17-4c5f-4190-af43-60cf843b2da6"
        },
        "item": {
          "id": "e22eadf9-9400-455e-a0c6-2b561a54b5ea",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9b71f55a-b09c-46b0-a128-ccb50eb40489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9248f3cf-ef08-4a79-a276-bb05af6ca44c",
        "cursor": {
          "ref": "ca344e8f-0162-43e6-880d-784f11501dad",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c197cef1-a242-4967-b270-ac05671b75bb"
        },
        "item": {
          "id": "9248f3cf-ef08-4a79-a276-bb05af6ca44c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7f26f88d-0e86-443a-9561-8713a5695269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeb08c7-cf65-4375-a618-c69487b91dd0",
        "cursor": {
          "ref": "abfe7775-4992-450f-9f40-83cb70d8344a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6f7bdf69-ac43-477e-8ee2-375a9256abfc"
        },
        "item": {
          "id": "aeeb08c7-cf65-4375-a618-c69487b91dd0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9ca7b545-c03b-410b-95a0-f775218699f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3daf5d-9e8b-4d36-a15d-fe76f1239747",
        "cursor": {
          "ref": "d028dd7e-7cac-43f5-a2a5-fd41bad8b0c5",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6b101700-e566-40b9-b577-1fbb0a559557"
        },
        "item": {
          "id": "3f3daf5d-9e8b-4d36-a15d-fe76f1239747",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e1f43020-6daf-480f-b514-bae20ebb9ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7213b66f-2384-4f21-b9c9-c33797f060a0",
        "cursor": {
          "ref": "060e2d9c-9ef6-416d-b2ea-31fe7ca00314",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0c09454e-b1da-4383-838e-eaa05cfc1892"
        },
        "item": {
          "id": "7213b66f-2384-4f21-b9c9-c33797f060a0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e0601c73-3e6d-4fad-9230-bc73fa980dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84287a11-b42b-4933-8fec-2a3644c14295",
        "cursor": {
          "ref": "cf078a13-5685-41c9-9728-59c0ffb23f94",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d7b1d728-fb7d-4264-ae9c-4c4963effa5f"
        },
        "item": {
          "id": "84287a11-b42b-4933-8fec-2a3644c14295",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a9eb8448-d25f-4418-8878-5b02953714da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8547e913-f1ab-42de-87bb-c50c1885c3e6",
        "cursor": {
          "ref": "32b1f8db-3ff3-45d2-af43-13c642b61db3",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "53c1f274-747c-4d4b-95f6-9febc1765f1a"
        },
        "item": {
          "id": "8547e913-f1ab-42de-87bb-c50c1885c3e6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ff4e96fb-da2a-4037-afa6-88a7161c40c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef31bff-3d2a-46bf-bf25-90ce0ad27763",
        "cursor": {
          "ref": "9709c09f-1693-4870-a270-bc11dd249544",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "18a2157b-71ec-4c65-8554-6cfcd05fec9d"
        },
        "item": {
          "id": "6ef31bff-3d2a-46bf-bf25-90ce0ad27763",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b06a27a6-5b91-42e6-9ea5-ebd25b28a645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f55560-4151-4183-b83a-0eb03a1a4d5e",
        "cursor": {
          "ref": "47508111-5383-41e9-aaf8-a8a96a1c0451",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "58a1c4c9-d6a4-4b33-a5c4-1cd3c5cb1802"
        },
        "item": {
          "id": "07f55560-4151-4183-b83a-0eb03a1a4d5e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8b7fb372-dbf1-4b93-aacd-d632eb506683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee5a304-af8a-494c-99dd-385b7f49f087",
        "cursor": {
          "ref": "84dc3133-be06-4792-b163-27acf0a35331",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9c2fcf48-4ed1-467b-a516-6f6b48af3506"
        },
        "item": {
          "id": "dee5a304-af8a-494c-99dd-385b7f49f087",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "28d32057-c29e-4c32-b254-30bf1dd39a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf0384e-42be-4631-b025-3b9159ddeb05",
        "cursor": {
          "ref": "be58f09c-e605-4496-beb9-6053f8612eb1",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f9911dc1-4d9f-4a5c-8720-81a16023a2ba"
        },
        "item": {
          "id": "dbf0384e-42be-4631-b025-3b9159ddeb05",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1b6a5555-1877-480f-bfdd-2454ea6e1248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b9577b-d8d4-4c97-a0de-4950759a6116",
        "cursor": {
          "ref": "532b0a30-e78a-43e7-8d32-963beee3ad95",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "36e02326-b4f5-481a-8f9b-9b0f8900b536"
        },
        "item": {
          "id": "b3b9577b-d8d4-4c97-a0de-4950759a6116",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e1ae6e51-b9d5-4e8c-84b2-800d5891891d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19784c37-b0de-4f3f-9a58-ffceaee54eb3",
        "cursor": {
          "ref": "42e38806-d376-46aa-bffa-82c86c4aa44a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4c6f938b-c1c5-4acf-85ec-af3b8eb9d474"
        },
        "item": {
          "id": "19784c37-b0de-4f3f-9a58-ffceaee54eb3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2306f459-337e-42f3-be7a-8ecd137850d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4ac612-2c73-4f9f-a932-70a14ad8852a",
        "cursor": {
          "ref": "c4367862-020b-46ce-b308-6d6f6fd2eb4e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "661dd94f-24b8-438d-abb4-4c8fcb560cb0"
        },
        "item": {
          "id": "3e4ac612-2c73-4f9f-a932-70a14ad8852a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e071633d-49f8-471d-bc7e-eebbe2125dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462cab2a-b966-4491-b05c-96ddd36b373b",
        "cursor": {
          "ref": "d3acbb77-e7fc-42e2-acd5-f48ce3d0ac80",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7eef02ab-afbf-4424-bfdf-6d9a0407b462"
        },
        "item": {
          "id": "462cab2a-b966-4491-b05c-96ddd36b373b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "53e9d73f-38cf-4dff-9783-cafc35a10220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f5a11f-fd05-4129-ae1e-5d62f28e6b2e",
        "cursor": {
          "ref": "73de9822-4349-4c17-b3b1-4b3ad2a6946f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5e98894f-1ff1-4f02-9169-c49567082540"
        },
        "item": {
          "id": "c1f5a11f-fd05-4129-ae1e-5d62f28e6b2e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fbb65dfe-9384-496b-bd3d-9eabcdb9846d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f669720-cb1a-465e-8f03-9ea0fed7b7b7",
        "cursor": {
          "ref": "4d0d66ff-4c5f-48cf-93c0-c1dffd058b76",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d30f289f-b649-4796-9606-45074638d4e7"
        },
        "item": {
          "id": "3f669720-cb1a-465e-8f03-9ea0fed7b7b7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ed610698-3339-46a5-96c3-9a673b4c1b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69021cae-838e-4d69-957a-1f569725aee9",
        "cursor": {
          "ref": "44e559d3-57f0-4904-a504-ec50068e09bf",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bc277b8e-1993-4051-9949-6c21a0f5dd8f"
        },
        "item": {
          "id": "69021cae-838e-4d69-957a-1f569725aee9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2a2db18d-a766-4737-b385-6f7c14371fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80615e2b-04b7-4338-978c-dd20a3f6e9df",
        "cursor": {
          "ref": "590273fe-28ac-4d39-9976-f28497569f63",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "db750527-9c74-4a0e-8547-8825d1a244a2"
        },
        "item": {
          "id": "80615e2b-04b7-4338-978c-dd20a3f6e9df",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b4258218-e1d4-49f8-b76a-3b39a3be4cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf882bd-6799-4e0a-b272-ce98d031321c",
        "cursor": {
          "ref": "352d2f02-6d22-4ce2-a222-356531ef2cd2",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c2122388-3c01-4a25-bfa8-6381dd432854"
        },
        "item": {
          "id": "daf882bd-6799-4e0a-b272-ce98d031321c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7ee1477b-d42f-4bf7-ad12-d15fe04683ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088ebc08-86f3-406f-820c-c2c947048cdc",
        "cursor": {
          "ref": "60a2cf03-727a-4ba4-ade5-cb5b29bf5ece",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "25e75f62-30c1-4403-a5df-3e9d96c8917b"
        },
        "item": {
          "id": "088ebc08-86f3-406f-820c-c2c947048cdc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d6e08244-ed1f-4be7-b8f9-489f349711f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0d01e0-904d-481e-89b5-efaf26451611",
        "cursor": {
          "ref": "78fa8e57-016a-4253-8959-d287566022df",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8d8bd1f3-d59d-4fb3-b45f-d38d65efce91"
        },
        "item": {
          "id": "4f0d01e0-904d-481e-89b5-efaf26451611",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ac919ba3-5c4b-4006-993d-8149bbce3da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b16efe2-2f83-4ed0-b19b-be5b5eebe6c8",
        "cursor": {
          "ref": "0ffa061d-6ab0-42d7-a679-24e3faff3e67",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d4ebcbdb-c98f-4716-826f-7047d00a0bc8"
        },
        "item": {
          "id": "4b16efe2-2f83-4ed0-b19b-be5b5eebe6c8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f32a3ab3-dc65-43f8-8e79-2dff9b405bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2004f8-54e8-4e88-9aa7-cc82f271e69a",
        "cursor": {
          "ref": "3d52ec91-0671-4441-a74b-9580bb736192",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1f11c629-3917-49ce-8c6e-9cb879fa7934"
        },
        "item": {
          "id": "9e2004f8-54e8-4e88-9aa7-cc82f271e69a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e5ae494e-f4a7-4612-9392-4a6a10146a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ae5259-fb74-487a-8cd7-7af53ad1953e",
        "cursor": {
          "ref": "fae0e2c7-9450-4a75-b495-5ca1b71433e3",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "37a10927-b46f-445d-9b12-9de18ac26c7a"
        },
        "item": {
          "id": "c8ae5259-fb74-487a-8cd7-7af53ad1953e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "050ba143-5422-4e32-83ef-5b73f9bcf3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2f8450-707b-45f7-a67a-456d83b62301",
        "cursor": {
          "ref": "0f86cd59-199b-4c70-896a-600c93420863",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "51c1a8dd-3aee-4dad-86eb-e105241a8e72"
        },
        "item": {
          "id": "3d2f8450-707b-45f7-a67a-456d83b62301",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6e23f5ad-1bdc-4e59-a7a5-4b6090dd24d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92704fdf-a3f4-4e26-8bda-9a9f0543a891",
        "cursor": {
          "ref": "2312eee3-940a-47f9-884d-7027d2883961",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9deea30d-f665-4629-ae84-4d1f265bc2c1"
        },
        "item": {
          "id": "92704fdf-a3f4-4e26-8bda-9a9f0543a891",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a94e5d9-88ef-4d5d-8853-89dbea23c4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b08ec-2470-4ff0-bd29-e6bb6728bfd7",
        "cursor": {
          "ref": "d991793e-1e10-4928-a28f-e4ea8f0626ea",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "98934c81-7f2e-469d-a828-2edb07cdb42f"
        },
        "item": {
          "id": "d33b08ec-2470-4ff0-bd29-e6bb6728bfd7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "834a3d9d-d217-4ad3-b27a-c893f8bbecc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2efa2d9-c9c5-48fa-a062-cc61de3c3a7d",
        "cursor": {
          "ref": "690a64d1-b28a-41e1-8c7b-b2fc1dbfb958",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "69cea981-c7b8-459f-a5d3-ba69a511f838"
        },
        "item": {
          "id": "b2efa2d9-c9c5-48fa-a062-cc61de3c3a7d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1d61f57a-94cb-4c4b-822e-e2c8b7167c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a171619-3f3d-4173-b8b1-f179da723403",
        "cursor": {
          "ref": "ce7283d8-97bf-46d7-9bc5-f8b9395d576f",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b501487c-7405-4eb3-91cd-c253037e1a37"
        },
        "item": {
          "id": "5a171619-3f3d-4173-b8b1-f179da723403",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0c17555c-c94b-4336-b968-fb18ba58fdfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcd97da-e9f0-4d1f-86f0-08605c37867e",
        "cursor": {
          "ref": "955e8ad6-cac5-4b09-9e5d-13124753e541",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1a557f9e-0d78-442b-8ea3-1beb13e36aaa"
        },
        "item": {
          "id": "6dcd97da-e9f0-4d1f-86f0-08605c37867e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fe467e0e-9a9d-4c66-a4c9-e4b1bb69dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9c4eaf-80ad-4b2f-b368-bd1dbee8d3dd",
        "cursor": {
          "ref": "56720183-92ef-4ccb-8cbe-98a5850f8072",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ff7dfc57-ac62-4e11-a2db-81173229af88"
        },
        "item": {
          "id": "0e9c4eaf-80ad-4b2f-b368-bd1dbee8d3dd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cded6105-34f5-4ddf-ba62-f0621ca37e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fd1289-0903-4adb-bf62-497926b1f5d7",
        "cursor": {
          "ref": "a6a19ceb-7931-47c6-b20a-207845af060e",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a0313f70-57cb-4ff4-adba-95409e13c89e"
        },
        "item": {
          "id": "c4fd1289-0903-4adb-bf62-497926b1f5d7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0a50668f-8569-4be2-8bed-68c66eb6039b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f8ca3a-3057-4de2-94d2-a54e8501bf61",
        "cursor": {
          "ref": "9e86eb57-4272-4503-8cc4-b3bffb2cd1ca",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5ec952bb-7cce-45ba-a854-5985cbb9b8a9"
        },
        "item": {
          "id": "91f8ca3a-3057-4de2-94d2-a54e8501bf61",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1ec31d77-9f42-4aec-9f6f-7e5ab7e1439c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6071f8f6-4cc1-4163-8e8f-6c0732181751",
        "cursor": {
          "ref": "5edf74f1-1c07-45a8-836b-3c80d98aab0c",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7978e602-90b5-4bc3-86cd-36046ce5929f"
        },
        "item": {
          "id": "6071f8f6-4cc1-4163-8e8f-6c0732181751",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d1de5faa-6d6f-4a90-9e0b-3d6a38147f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f7518b-9101-47f9-b1fb-dd131bd9dd14",
        "cursor": {
          "ref": "da7130ec-4eb2-471e-895a-a56228ef261c",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f0effa41-6d52-4389-be49-a803b2d38477"
        },
        "item": {
          "id": "a5f7518b-9101-47f9-b1fb-dd131bd9dd14",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "be082377-86f4-4df0-b6db-1acec5c4e990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bae4f99-43ce-4b2f-8f6b-cc807202aeca",
        "cursor": {
          "ref": "72510e7b-bcad-4af6-a16e-532fec51c0fe",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "239121d2-0994-4543-adac-2b44a10b4217"
        },
        "item": {
          "id": "0bae4f99-43ce-4b2f-8f6b-cc807202aeca",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8fa810d6-1a31-41d3-bd29-75ec12b230fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbb279e-27d0-4a1b-9d18-f025993d19d3",
        "cursor": {
          "ref": "8c25d507-0087-450c-84b6-e2e492b695f1",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "71b57c2f-d9ea-4d38-9bfd-64a377f82c24"
        },
        "item": {
          "id": "ffbb279e-27d0-4a1b-9d18-f025993d19d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8f13f821-f645-4ddd-9857-ac6181c77c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ba5ec2-a407-49e5-a133-d70467670fe9",
        "cursor": {
          "ref": "825eef3b-d8fe-44e9-a83b-89a3a8a7fafc",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3379f44f-131c-4d11-b8db-6bf36cf43996"
        },
        "item": {
          "id": "70ba5ec2-a407-49e5-a133-d70467670fe9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7ee6cbb4-d149-40f7-85f9-8b024f0b8622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa8eed9-3aec-4821-9948-e48786bded99",
        "cursor": {
          "ref": "b2f33d66-5492-4269-8b04-146dac6a2c41",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cecde34b-927f-40d4-949a-d87514d8dc14"
        },
        "item": {
          "id": "2aa8eed9-3aec-4821-9948-e48786bded99",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2af5d06c-9630-4d79-9c97-0e12fe94f266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72374a60-8048-48f5-8c7b-891d28fad502",
        "cursor": {
          "ref": "d8009df7-0f88-427e-a06a-639434e8fc8c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b9054c77-8065-40af-a8c2-2fa23fc9c6fd"
        },
        "item": {
          "id": "72374a60-8048-48f5-8c7b-891d28fad502",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ac1932d-e940-412d-b2a7-e4aba1aac470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919ab1ba-1c24-4e1e-820a-46d190d28559",
        "cursor": {
          "ref": "398da054-d099-4cb1-9d5d-81bdcebdade5",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bd66a9da-4b11-4105-8918-df58a8bd3248"
        },
        "item": {
          "id": "919ab1ba-1c24-4e1e-820a-46d190d28559",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "51d321eb-2969-4798-ba26-1f44f1d0ded8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24bbe5c-2095-42f5-a052-c1bfb40d67c6",
        "cursor": {
          "ref": "8cb2b895-2145-48e8-b5ef-ed73efc66a37",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c331b4b-3f95-41ed-b2b8-3e9e8bf20de6"
        },
        "item": {
          "id": "c24bbe5c-2095-42f5-a052-c1bfb40d67c6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d3c08980-6046-4d93-a6c8-02f5a8d54cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec6e0d1-c9c8-4b51-ab74-241d7c93d28f",
        "cursor": {
          "ref": "daef0ef9-62b2-4675-b285-d17f5e2d2ca0",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "20761744-2567-4cd5-9b1e-a7457fbc57ae"
        },
        "item": {
          "id": "4ec6e0d1-c9c8-4b51-ab74-241d7c93d28f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8c4d2c4a-e5d0-41bb-a748-1c1a2068979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7817c6-9463-4e00-9662-b0bc19bbd4a0",
        "cursor": {
          "ref": "712c1a85-2d07-4bd9-b0fc-ce9b92276fbc",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f9dd80d1-ee93-46ac-bbaa-8cb319a06987"
        },
        "item": {
          "id": "7a7817c6-9463-4e00-9662-b0bc19bbd4a0",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fd65b9d3-b47f-40de-b388-22fc9fccf4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002eb0ef-9d9b-4685-bd3b-800453038d6c",
        "cursor": {
          "ref": "14dbc275-c199-4d29-9e77-b6860f24a506",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c5d8c4be-d300-469d-a163-bdee403c8327"
        },
        "item": {
          "id": "002eb0ef-9d9b-4685-bd3b-800453038d6c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0f8c45b6-b601-4c64-9525-4b95c198c620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e34988e-6037-4b24-86de-5b78113079a7",
        "cursor": {
          "ref": "b4ccae40-3186-49d2-b930-f5454bb32214",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "38f16207-83ef-4cae-807f-b7c9270fa871"
        },
        "item": {
          "id": "9e34988e-6037-4b24-86de-5b78113079a7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3432a4e8-09d4-4d89-b2f9-9197295a97a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c933c3d0-64f0-4ab3-9217-21634c84ce00",
        "cursor": {
          "ref": "1e930560-ebe7-4cc0-b88d-16084f2cad2d",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cbd1e084-0f75-4ec5-9825-bfcea8d456ef"
        },
        "item": {
          "id": "c933c3d0-64f0-4ab3-9217-21634c84ce00",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dc2119bd-aa09-4bde-8e2a-3ddf649866ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bc582e-7001-42df-86a3-2befb33f3395",
        "cursor": {
          "ref": "14b0c61c-acf1-46cf-bfac-ccaa00fa665f",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "36dc2c28-755c-4138-8397-bc57678906c9"
        },
        "item": {
          "id": "b0bc582e-7001-42df-86a3-2befb33f3395",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7dea2f37-6cdb-40c0-8bd3-7dfa99467d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643e9eda-1efd-4358-8c4c-2b1352834d02",
        "cursor": {
          "ref": "a495787a-a29d-4efb-8046-82c2639d874a",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d2f09acf-cde9-4b1f-98a4-2d821d6fe32d"
        },
        "item": {
          "id": "643e9eda-1efd-4358-8c4c-2b1352834d02",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2b663f9e-8808-44d6-80a5-823a9c9b903e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86345292-aa5a-4ded-ad12-e551b93b0b64",
        "cursor": {
          "ref": "99558ff6-40b9-4833-b087-6dd218dfca99",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "60522230-eb0a-4815-9589-61dec9ed4963"
        },
        "item": {
          "id": "86345292-aa5a-4ded-ad12-e551b93b0b64",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dddefe2b-8f13-4248-bd62-515407777e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9969354c-370b-4c8b-87c2-66d217194de3",
        "cursor": {
          "ref": "3c0e4eda-93ad-4914-b916-2633f1a3e693",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6f1f63f9-309e-43da-9a62-7787a164dfd8"
        },
        "item": {
          "id": "9969354c-370b-4c8b-87c2-66d217194de3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "534d108c-bab2-4823-845a-69a175d7f2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755880ea-ed30-4594-afc6-330172e51d67",
        "cursor": {
          "ref": "326d0ebd-859f-4df0-bb71-cdaf7dd5ae59",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2635c922-dcec-4805-9682-3b544d67a7ba"
        },
        "item": {
          "id": "755880ea-ed30-4594-afc6-330172e51d67",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2dba527e-dc3e-4352-a8af-8d94bc8de04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6d6089-9c24-4161-9a16-8543a2e26c8d",
        "cursor": {
          "ref": "bb450201-62dd-495b-8c83-df883dbbca15",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3487c10d-aa4d-4347-8ca8-79e1811078fb"
        },
        "item": {
          "id": "2d6d6089-9c24-4161-9a16-8543a2e26c8d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d046581d-6e8c-4c1e-9d5d-ab3ac57e60d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9298e6-861c-4770-94ba-7f57acd4b604",
        "cursor": {
          "ref": "15d4aba6-e6fc-4cdb-a510-8c533b1074c7",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ffb534e-931c-45b5-827a-f5ea89f24d96"
        },
        "item": {
          "id": "8f9298e6-861c-4770-94ba-7f57acd4b604",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9d3b8a15-dc9d-4eb7-a821-93337cfbacfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230d26a9-f7d0-4013-b472-32d339376646",
        "cursor": {
          "ref": "18270a07-99ac-481f-8a70-09fcaf86304c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "161cd4c9-bb15-4148-b9ca-5fa7e3f3c903"
        },
        "item": {
          "id": "230d26a9-f7d0-4013-b472-32d339376646",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cb3bad1c-6dba-444d-9671-1ecad0ca2da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1dcfd6-54a2-4aa9-bc97-1b090704cce8",
        "cursor": {
          "ref": "72de74a1-403e-40ce-94a8-451cb044a381",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4b054f87-9474-4461-a817-5a7faff0637a"
        },
        "item": {
          "id": "0e1dcfd6-54a2-4aa9-bc97-1b090704cce8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "78ab7ebf-3a57-4374-8b6e-900041cfef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c841f5e0-b8dd-4adf-a701-fe245aa671ea",
        "cursor": {
          "ref": "db29f822-05db-458d-ae69-dbcd61a9cf97",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ad8da5a3-93de-4984-a784-b2e0f25d45b5"
        },
        "item": {
          "id": "c841f5e0-b8dd-4adf-a701-fe245aa671ea",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6baf7a13-7224-4aad-90c7-18596a563176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbce55b-72ac-4102-851b-1f954046d125",
        "cursor": {
          "ref": "b222ec0b-794c-4af6-8192-e6d831756cac",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "afcd7857-c8b8-4b57-ab4c-63a49d24be4a"
        },
        "item": {
          "id": "cfbce55b-72ac-4102-851b-1f954046d125",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "32ac7518-966e-4b4c-b3be-2dd541339934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8ba502-41a3-419d-96e7-5356c213573b",
        "cursor": {
          "ref": "25367ac4-907d-4a49-bfc0-125f324979c7",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c61dbc09-3787-4ff5-aa91-e7ab26da42c3"
        },
        "item": {
          "id": "ba8ba502-41a3-419d-96e7-5356c213573b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9c90775c-4064-4f8e-bcfd-d2b47658cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c06a04-47d7-4b09-ae42-5739b647027c",
        "cursor": {
          "ref": "11f35549-fe69-40e2-ac3a-5315c2d4db18",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5987c7b2-be75-4695-981e-735bf9d2d1db"
        },
        "item": {
          "id": "47c06a04-47d7-4b09-ae42-5739b647027c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b84ba09f-e8c1-4335-b6d3-555b8eb6a7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79695e5b-201c-4b5c-b11f-1b56ea728037",
        "cursor": {
          "ref": "8dc86b80-ac64-4b41-8c24-d99d3642e19d",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fd8aa4c1-66ab-427e-9a93-94fe8d52becb"
        },
        "item": {
          "id": "79695e5b-201c-4b5c-b11f-1b56ea728037",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4d6bff86-441d-4a44-a132-da45e1ab13b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4940d1b-0bbf-40a7-89a0-f409fd8b3f40",
        "cursor": {
          "ref": "1e5a6c75-f9ff-4d41-b6d0-49d7bf75925e",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "303bee4f-28d9-402b-808f-e39b00a4b954"
        },
        "item": {
          "id": "c4940d1b-0bbf-40a7-89a0-f409fd8b3f40",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f39301fc-f930-49f4-9dd6-5ce763cb60f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef33cdc8-c725-4b68-88fb-70c6da1b049b",
        "cursor": {
          "ref": "7c38a4f9-6d58-4e08-990d-ae779ecf5755",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f2ca0a19-aa01-420e-afb5-4c777f678996"
        },
        "item": {
          "id": "ef33cdc8-c725-4b68-88fb-70c6da1b049b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "532b4983-84c9-496c-8199-c5d6fb2053be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb922c2-9f4c-4451-9a41-9c8c89c050d6",
        "cursor": {
          "ref": "c484432a-a5a9-48a9-8d5f-3b2a5365b497",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fd38b803-4157-4c4c-a312-357ef98450fc"
        },
        "item": {
          "id": "ccb922c2-9f4c-4451-9a41-9c8c89c050d6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eea2b660-2225-487c-8eaa-3d8da687ee91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2421c04a-427b-45ce-93ba-1e8cf9f702f6",
        "cursor": {
          "ref": "26c930f8-5893-48de-81b2-c142a065570b",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8b4f3fcf-4860-4c70-b779-eed6f628cf71"
        },
        "item": {
          "id": "2421c04a-427b-45ce-93ba-1e8cf9f702f6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "725ddaf1-3093-4ded-858f-fc6262447814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d90a4f9-76c1-4b59-84c5-fed5748fe8b5",
        "cursor": {
          "ref": "3d303212-3221-47a2-84c6-0982b0575b5d",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4d1f2f16-e532-4154-8f5f-f66e94e1128f"
        },
        "item": {
          "id": "6d90a4f9-76c1-4b59-84c5-fed5748fe8b5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "91424897-1007-4f64-a6ad-6fb5aad3c133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b4b85e-8833-444e-a126-18060c178a77",
        "cursor": {
          "ref": "cc92eb7b-9054-4958-a203-ab433c11f4e9",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "12c4acb4-d797-4536-9b5f-9e283596e68b"
        },
        "item": {
          "id": "64b4b85e-8833-444e-a126-18060c178a77",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "56e24845-a595-4108-82bf-f6ff1feca980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3da04f-d57b-46fc-916b-1a983f1fc1df",
        "cursor": {
          "ref": "d755a3ee-843b-4b37-a5f6-071e4602e6c8",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ef383fde-bd8a-4a5c-ae91-b9c21f48b228"
        },
        "item": {
          "id": "ac3da04f-d57b-46fc-916b-1a983f1fc1df",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a4f46997-da77-4149-96fc-fc071e566efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a20ee9-acfc-4972-a14c-ce340dcd5615",
        "cursor": {
          "ref": "0eb4d441-d2a7-49d5-9800-f9175ce46eab",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "08d34afb-5a7c-4546-99ea-e9a6378fd61a"
        },
        "item": {
          "id": "a8a20ee9-acfc-4972-a14c-ce340dcd5615",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "76615ffb-48cc-43fd-8a4a-8c855a9a137a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f74284-ca07-4c37-9ec3-a7e279b1e633",
        "cursor": {
          "ref": "97317a48-ca96-4aa6-96dd-ae587eff7f6d",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "787bfbba-5eef-4150-a1be-f30bac24f831"
        },
        "item": {
          "id": "10f74284-ca07-4c37-9ec3-a7e279b1e633",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1ec6db7e-d3b9-453b-af11-21a221d273ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c30645e-f327-4159-895f-38a72e59e358",
        "cursor": {
          "ref": "976f7d71-5909-47a2-894f-07f96ef1521e",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9b9eeaca-c363-4956-bd0d-4294e73570f9"
        },
        "item": {
          "id": "3c30645e-f327-4159-895f-38a72e59e358",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f95ab9f4-07c3-468c-81bf-55240407ab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96b6c08-3142-4c45-a747-3a38c0d6254a",
        "cursor": {
          "ref": "de34518f-4c5d-44f7-ae13-5094af828aa8",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "262a445f-b166-484b-919d-16ea96657abe"
        },
        "item": {
          "id": "c96b6c08-3142-4c45-a747-3a38c0d6254a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1114df22-419b-4545-9ee1-c8cc4223d39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb3e969-5329-4c0f-87a3-65e2b1744afe",
        "cursor": {
          "ref": "29fa36db-05aa-4e24-b0b0-dd3ee506d5e5",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5f73f85c-5c5d-4aac-a0bd-b147470f91da"
        },
        "item": {
          "id": "1eb3e969-5329-4c0f-87a3-65e2b1744afe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "461586d4-09ff-4032-a469-d924d4cbc87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e79da56-bec1-4084-97e9-b4e0d85f9dc0",
        "cursor": {
          "ref": "f06bb17d-1c61-42f1-a7cc-e4055f3f74b1",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "634405e2-4d9e-4972-86d3-729f037eebca"
        },
        "item": {
          "id": "1e79da56-bec1-4084-97e9-b4e0d85f9dc0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1e83c07b-620c-49a8-b9e5-52ae95813b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e3a5b8-0157-48da-a33b-d11d965d4b5d",
        "cursor": {
          "ref": "95351636-c89e-4f3d-a802-d571a8f2fc3b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2ef4a9c7-5611-49e0-84f8-f98ea3c4dcc5"
        },
        "item": {
          "id": "c9e3a5b8-0157-48da-a33b-d11d965d4b5d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6219c0ba-d289-4aab-889b-116433f4c688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbda19e-f0a4-431c-b34b-9bc18472dd0d",
        "cursor": {
          "ref": "3f838502-6c77-462f-a065-480f1d7eacb5",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "db84361b-7a93-4a47-887a-139e68747ef8"
        },
        "item": {
          "id": "ccbda19e-f0a4-431c-b34b-9bc18472dd0d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5f36d839-36ef-44d2-ab89-3eb261a46fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9892e5-2cec-4767-842a-d6a698a5a378",
        "cursor": {
          "ref": "ee290a19-5352-4278-b1ab-07bc24566d4f",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8975d9a4-eb3c-48d4-95c6-45f16bc9f559"
        },
        "item": {
          "id": "da9892e5-2cec-4767-842a-d6a698a5a378",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2d915532-267a-4e29-b300-dc12e7758a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a449791-32c8-434f-b7ee-7d5642c3f02e",
        "cursor": {
          "ref": "dd5e03c0-a105-4fff-a50e-0d227df022c6",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "251bba3d-7061-4739-88a3-dc2d457d3fb5"
        },
        "item": {
          "id": "1a449791-32c8-434f-b7ee-7d5642c3f02e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6def86a5-362a-417a-8fc4-1ca1a257878f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31759bb5-7153-42c2-8b72-3ee1c001b1b4",
        "cursor": {
          "ref": "a41bb052-b0c4-4899-a26e-7abc739303f6",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6a60893d-86fa-4c85-84b5-7cbd1b955360"
        },
        "item": {
          "id": "31759bb5-7153-42c2-8b72-3ee1c001b1b4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "25f4d821-5e5b-4121-93a1-de278c993051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baac62a6-af45-4985-a756-6ecafd9b957e",
        "cursor": {
          "ref": "620fd436-af19-4e92-a69a-0b04fa4b0472",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "63fed02f-d13d-4369-83e0-39db95654641"
        },
        "item": {
          "id": "baac62a6-af45-4985-a756-6ecafd9b957e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d59583fc-b677-4348-8be4-f08688ce51b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc1f514-acc9-43b9-a991-dd87e7a96104",
        "cursor": {
          "ref": "4bfeda67-b8b7-4173-ba23-98ce8331d78a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "403c3ec6-bf58-44ec-984b-d22d6b1fc7d7"
        },
        "item": {
          "id": "abc1f514-acc9-43b9-a991-dd87e7a96104",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d116fde7-b4e3-4706-a5f3-cc0532138a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042402bd-7b61-4b27-b55f-140e80d90aae",
        "cursor": {
          "ref": "5bb4a183-d71d-4caa-a008-21548ff34843",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3a603faa-63c0-4f3a-af60-8fc465e8a4c2"
        },
        "item": {
          "id": "042402bd-7b61-4b27-b55f-140e80d90aae",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "689bfef2-0dca-4e20-b876-2af79e29497e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819a8288-5567-4aa7-b54f-eef2d5a7b83e",
        "cursor": {
          "ref": "3b34e1f9-9c6b-4c7e-afb8-de0fee94172b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b94c8cab-c9ba-4ee1-b519-7f1e64efb84f"
        },
        "item": {
          "id": "819a8288-5567-4aa7-b54f-eef2d5a7b83e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "17e04617-3bea-4e6e-b203-9bd5563d43db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e26f463-5bbd-4e85-808a-9b05252e9602",
        "cursor": {
          "ref": "e915a08a-7ae6-4868-a8f8-3b669dc678b6",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "232628b2-bac5-4188-8c27-1f070d2daa09"
        },
        "item": {
          "id": "9e26f463-5bbd-4e85-808a-9b05252e9602",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "58928860-67e3-4bac-93f4-bdeb699bdef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5753bbeb-680f-4b8a-9ca2-8a1f89452960",
        "cursor": {
          "ref": "8f397e41-de35-434d-8e4e-b7ab3a1a26be",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "96c176fc-9522-4375-8f54-1060ddb3362a"
        },
        "item": {
          "id": "5753bbeb-680f-4b8a-9ca2-8a1f89452960",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7eefc4da-6f32-4bb0-a090-0749ab14c7c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48446e1-e0cc-4a82-bf55-0dab94fc6d16",
        "cursor": {
          "ref": "384c9a85-54df-4feb-8a2c-3ece2203dfbe",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bb7da840-6f03-4a1a-a78a-8dfe352befc7"
        },
        "item": {
          "id": "f48446e1-e0cc-4a82-bf55-0dab94fc6d16",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "d6aa2f18-bd9b-4c57-b01e-7ca89629c646",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37c7d86-47ad-4c0f-8ce0-48666fa93280",
        "cursor": {
          "ref": "70a2de6e-b880-40de-b752-afe7d74d771b",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a6daa9ad-fb6d-440d-ad1f-c7874ef11c83"
        },
        "item": {
          "id": "c37c7d86-47ad-4c0f-8ce0-48666fa93280",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ffe1bc9e-609e-4dfa-9ecb-494aecc7c50b",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8577843a-cab1-4493-875a-0f3c07420151",
        "cursor": {
          "ref": "cbe4c043-8d42-472e-82b9-4076afb73c6c",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ea54b9f7-19cb-488c-bbb0-18ab7dfa1771"
        },
        "item": {
          "id": "8577843a-cab1-4493-875a-0f3c07420151",
          "name": "credentials_verify"
        },
        "response": {
          "id": "29647587-6ef7-4e8b-a4fd-bd7ccde0ecfb",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "defb498d-e56e-4e9e-bd1a-d9c6c7089ab7",
        "cursor": {
          "ref": "14bc6360-c530-4329-af8b-4b31e8ed2261",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e9a7f98e-a4dc-4365-bcdd-5a4b94ea5581"
        },
        "item": {
          "id": "defb498d-e56e-4e9e-bd1a-d9c6c7089ab7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c5535838-d8a0-41c4-9909-2ae3039fd818",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59005be-eae9-42f7-b3ee-afd526e325ce",
        "cursor": {
          "ref": "5e50f083-3f81-4ee0-bb77-f3b411b47f85",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7a8dd879-7da7-47cc-b2ce-42344beeaabc"
        },
        "item": {
          "id": "d59005be-eae9-42f7-b3ee-afd526e325ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e4653a2-09b9-4d1b-bbfa-d8d0a7f93425",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59005be-eae9-42f7-b3ee-afd526e325ce",
        "cursor": {
          "ref": "5e50f083-3f81-4ee0-bb77-f3b411b47f85",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7a8dd879-7da7-47cc-b2ce-42344beeaabc"
        },
        "item": {
          "id": "d59005be-eae9-42f7-b3ee-afd526e325ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e4653a2-09b9-4d1b-bbfa-d8d0a7f93425",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59005be-eae9-42f7-b3ee-afd526e325ce",
        "cursor": {
          "ref": "5e50f083-3f81-4ee0-bb77-f3b411b47f85",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7a8dd879-7da7-47cc-b2ce-42344beeaabc"
        },
        "item": {
          "id": "d59005be-eae9-42f7-b3ee-afd526e325ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e4653a2-09b9-4d1b-bbfa-d8d0a7f93425",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8d9809-77ac-4d75-9ba9-97d30ebb24b1",
        "cursor": {
          "ref": "38c1f96e-ecb2-49ff-9a60-f861df989e35",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "276ce174-c8c5-4ac1-9ffb-19402cff49df"
        },
        "item": {
          "id": "4a8d9809-77ac-4d75-9ba9-97d30ebb24b1",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "878d76bb-5b53-4941-a928-7c9d8525ee39",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c88440f-e71c-482a-80c9-65278cb999df",
        "cursor": {
          "ref": "e7739c72-a32e-460e-ada5-c17cf99b59bd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4c6f8931-04c3-42a8-9f7e-6ceefb4f0578"
        },
        "item": {
          "id": "6c88440f-e71c-482a-80c9-65278cb999df",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "864e521d-9854-4277-99b5-672b1b2e4716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c88440f-e71c-482a-80c9-65278cb999df",
        "cursor": {
          "ref": "e7739c72-a32e-460e-ada5-c17cf99b59bd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4c6f8931-04c3-42a8-9f7e-6ceefb4f0578"
        },
        "item": {
          "id": "6c88440f-e71c-482a-80c9-65278cb999df",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "864e521d-9854-4277-99b5-672b1b2e4716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deae3f7-fb69-443e-a5d5-8a197dcdaf41",
        "cursor": {
          "ref": "feec7c33-ad7e-4441-ae61-a83e5978ec61",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6f62eb01-e23e-4ea1-bca0-03628b5387b4"
        },
        "item": {
          "id": "2deae3f7-fb69-443e-a5d5-8a197dcdaf41",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "1c2efd89-e3bf-47f4-9908-3dd9b8420281",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e03256-2c2a-4f47-b674-3944af132c1f",
        "cursor": {
          "ref": "df303d85-c4fa-45d5-b595-9a02f1f48957",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4834eab4-8447-41ef-a98f-8e516227713d"
        },
        "item": {
          "id": "58e03256-2c2a-4f47-b674-3944af132c1f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a1287ff0-07d6-4e47-83bf-3b460ba8d5c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e03256-2c2a-4f47-b674-3944af132c1f",
        "cursor": {
          "ref": "df303d85-c4fa-45d5-b595-9a02f1f48957",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4834eab4-8447-41ef-a98f-8e516227713d"
        },
        "item": {
          "id": "58e03256-2c2a-4f47-b674-3944af132c1f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a1287ff0-07d6-4e47-83bf-3b460ba8d5c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b24f8ab-288b-42a5-b387-f4f9639c9b5c",
        "cursor": {
          "ref": "4f880360-9a5c-402f-b914-57314aa24559",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a69f0be8-729d-4f6a-aab6-2e614c927f4e"
        },
        "item": {
          "id": "7b24f8ab-288b-42a5-b387-f4f9639c9b5c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4bc033d2-2ca2-4b1d-bcfb-d42bacf25e45",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 48,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}