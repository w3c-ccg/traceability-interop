{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "28b837d2-ac2d-4b54-9ff0-3ba18a9d45ab",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6835a30a-5b09-4fbe-8e57-add7b8a38de7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9b1612c-ed0b-470c-8291-9887e25b5821",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f948b56c-9e9c-4fb4-af9d-b3a75fa38ba5"
                }
              }
            ]
          },
          {
            "id": "0bc40d13-17c9-4443-8b98-da357d10582c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d10c5ed3-eb51-4ccf-83dc-1d22fb38c6a0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "30287e80-a216-466e-be5a-17f3e389d352"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0ed18f52-8ce2-4530-a3d1-43e0dbcc6c18",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a6f7ec0-f42f-40d8-8d3d-ccc36bbf4cb9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "160636bc-bffc-41d4-b0d2-f0a02e00e1ba",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8c4efda-af93-42d8-80a3-a9e077b7cd4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06649398-33e5-47b3-a7aa-26a5dca48f6f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca45e479-742e-4c0c-9cc4-71f8057a44ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7428d9f-560b-4588-bdea-3dfca22cb9d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cc68927d-3feb-4f1e-b511-50f9f9f50de0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "746e82e8-0076-4c05-813e-5f25180bba97"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "104d515f-e0ed-4e75-b5b7-c970d4e69e6c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "189255bf-2bbf-45de-8578-e6b5f65512d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7cedabf-f9ea-4bc4-bfa4-4e4f27e88d1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44db8cff-ef21-47b0-a430-17b2d597d132"
            }
          }
        ]
      },
      {
        "id": "d16e6114-2d53-48e7-990f-aa620f89ac74",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4fd07795-5d21-4a23-a95f-7ef820735746",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1670513-183a-4a8f-8e87-ad9eb71ca781",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4e682644-e2a0-4071-ad2d-a3329628ffc5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e1a58a-32c8-4eda-8fe6-8e12cb760a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "487c940d-31a9-4143-adf0-09c39166685a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b1bc2f-fdf0-4717-aab8-4d1d52bbae17",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7a49d9-10b2-4915-92db-08c7884b5acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "135390cb-9f89-4554-b5e2-c3c9dae4389c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781e60d3-1846-41e6-8840-ae795c5d70eb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c790ad-774c-427f-8fd5-e303a9f6a199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0ba0183-90a7-47ba-9098-d1341102425f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "150de687-df7e-409d-8152-cbc752cf01e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcde54a1-aefe-4b37-b0ad-d14f2bd657c5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661f8cc5-aae5-44d9-9154-ab274594f7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0589f5b-8f00-4bd0-a85e-bb134e18bfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db08610-dc1b-425d-b0f1-ec3c80d2420c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26aad1f6-65d1-4d6e-8736-1ef78a7f9184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5120a3a7-0b51-45ef-9bb4-0681bb52d48d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72320a9-94d1-4a15-9679-805acaeb09f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dee3f0c-8bbb-4702-8797-4e08cef1c513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efaeebf-cc64-4ffd-8e72-33a7df507e4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8b851a9a-464f-4c78-8024-ac41abacafe3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7e8bb4b8-2c95-4aa7-9f99-3806d2c90817",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a85fb90b-b5e8-4882-9790-5a43318357dd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b50031d-f677-4fc1-8453-29b9b1199308",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b2bb2ff7-382a-46f8-bdae-d954d5acce8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d692950-cf83-40a8-bf84-b184375de01b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "cf0be00f-45c3-4b77-ae45-e4175c4dae1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9244b880-1eee-48a1-9048-d4b815f05f7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60a06d9f-05b5-480d-8fd8-ba2b42569a41"
            }
          }
        ]
      },
      {
        "id": "1737f092-454b-49ed-b5cb-ee8a7d9369f8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3d1a9fd5-e069-4200-8842-39f86329e182",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78410189-f8d4-4409-940a-5860934ea7a5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e80802b3-2b5a-493a-b694-cdc24e479396",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c033ac3-a815-487b-bf52-05e481e7a850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b2b2c6-ef5a-4db0-a6b4-f18ebc8cdc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f580eb45-208e-4f4a-ace0-e279834d91bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a29bde0-9992-40f6-af26-9500a10190b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257d3d74-24b0-4a76-9052-d54dbd479167",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29b51f3-0f0d-4d15-a931-d46851ad8492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efb7b64-64e6-4400-b11b-c57ced2c3edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2aa39d2-63b0-4416-b585-1723b2413535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87221d7b-5c8a-4086-8a9b-9651be4e5250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50742ce3-2f45-44a5-8e82-3ce7c18a846a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c26881-1e6b-429d-8fbe-df3130c28ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf370141-771c-41d5-97bb-8852ae766329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57af4d2f-7da9-4522-81ee-c67fae2a0aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0614de6-70fd-44d8-9dde-0d95d66abe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b59c208-797c-43b5-bc8c-7d5dc8732a7d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31744c8f-0b63-4fee-84db-8c545ebdc436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec210673-ecb5-41a6-b278-61065affde37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4f8f6a-aac0-4abe-9390-bb9fe48766eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fdac108-0132-45c3-8d34-ecbc5e83ad18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292a3d8f-c3cd-455a-87c5-c03e347cd6a0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae80bed6-2177-44c9-a66e-a68669c01dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c0f7f9-2c9c-46c7-9da5-32ae08784c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafcb0ae-dc11-457a-97ad-68083228995d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9cdcc45-aed7-4c0b-bbdc-dd3b516003d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7af3fb7-9242-4731-9e02-6e8e2daa93d2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4410c9bd-7165-4c27-82a6-9c996074efeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa69a625-55df-418d-8246-e212c1cb5d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27004632-df59-48e8-bcb3-7a69fd0d11d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d48ca841-4e63-44db-a4c1-0665b16de367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ceba53f-57a2-4a19-ba24-b837564d6abe",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1ec085-7335-4e52-b8df-50207a19adfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323b4d28-ceb2-407f-a887-5405fc0ac220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24095b7e-064d-497d-aeb5-d343a150ee04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8f31df3-ed8a-47a5-acc2-33b94b1d190e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc731cd2-071e-4904-baeb-766824775a8c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfff1868-cd99-4e16-8d3c-274bcc2e97e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c91a7e-6fa5-41a1-9bc8-74f5529973fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaa9c4c-e2d7-4bae-a83f-e5b43a7b7702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9a12586-fde4-44ee-9f23-b0f165f1eda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ecf65b-cc9e-4598-aefd-ec7b288164c6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c4fb54-fa94-43dd-b594-6a3167d37da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d2cf5b-2e90-483e-80a1-45909a86bc1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe5a074-6015-4519-a31c-7f615a4e2cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f687c513-fa05-4dce-9663-1d86945ac5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ff8f4b-464c-483f-8b11-58bc9a0d12f7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d946caab-4150-42e0-b2d7-a7174fa7101e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab60fcff-8f55-47ce-ad79-2eb1143bac8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0170fbe8-192e-408a-920c-ac8c304e5300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "350f217f-2e9b-4286-9b8f-ff20aed022b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25675e70-4000-4c42-92d5-21195dfe70fa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9de134-09af-416c-874b-7ea06d9fee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d64721-f8b0-4474-8a2b-aad07f512964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9886ba5e-ab4b-417c-808d-964a0a416ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f0b04f9-9851-4c8e-8cd6-f92121eb0ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce255fd-f703-4edc-8878-c97a91ed6f67",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab1cf7b-efb9-47f3-abaf-2f4889fb66b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1248745c-07b3-41c7-a360-2042960ad506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c1b072-30e5-4888-a266-27df672f637f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4de1177-008b-4543-bd1f-c77aea0ad4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b60706-840d-4024-91e6-b11d58b94953",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d8702c-9776-49f9-86fe-91edea96bcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1352b74-77fb-4b72-bfa8-e25da7a6fed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803acd3b-1376-489a-abf0-31024740a1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a585921-1426-4cdc-85af-f0aa01e4cc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622f7123-3f14-43fe-9587-56685f566c48",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca49794-24e4-4e17-be88-2b81ac9f08c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0fc6fb-ae2a-4826-a62d-1ffbc1051922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c046d94f-9ba4-420a-8b15-99c6ade3828e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9129892-f5f5-400d-8708-88658e4aacd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694dec03-6dd8-451c-9e69-218d20bcc21c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be3c497-76f3-4af5-ba66-9f62bfdab8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5021ba-3ec1-4458-999f-58f40ded5224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceacd35e-bedc-4cbf-a57a-f30c7d5467ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9b14cc2-815b-477d-9954-86445506372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f981a67-b674-41e0-9e1a-6682b95b2930",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d3c79a-352d-4749-a9dc-c0e3cf9cca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26981b50-ecca-432f-8e8c-5806811c03df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196dfad3-45a2-4eca-91a1-8b911d076b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96ddee09-8fd8-4dbd-9e60-c650a57fbbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cbd52c-88e6-493c-ab8b-6b6ec6d893bc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1aae361-8b27-4276-9cc8-a97754ca6c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf25734d-54b3-429f-9042-c6d34a60dd86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bdede8-cb1c-48a9-8692-8a3730407701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11c035d6-c963-4687-b2e2-44f94127583e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75efa88-bd7b-4f56-9c0b-8a403f83426a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff97b9d-2f9e-4739-9b4a-1c1fa6c02284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420b4566-1168-499d-9177-6d63adb71ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa0262d-9cea-4d6b-9599-33d4b2b7a203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b819b6c-c2a4-4416-b778-81c80179cbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a000fe4-1e81-42f5-bcc1-f5ba5687fd94",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885dcd8a-2474-4ae1-a6c4-aba9b15b1408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee37d19-42a3-4a2b-a954-1207f9020c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948b8ae8-0801-4e0c-9523-cc8cd751b308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8901d7fa-1986-4a83-b26c-562d5d740cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695839bc-5b32-4720-a59f-24bde8ff8f0f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62487c6c-3868-4d43-a531-4b5bb9956241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa0fa9d-d299-42ea-9ddd-8492bc7f460c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f4aac5-a612-47b8-b370-2a83aaab1efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b36b92-4133-4baa-920a-e90f6edeb21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b1c242-33d2-40b9-a433-7660d1506495",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbf1356-54b4-4e92-8304-793e454e6ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1319147-bc4b-44f2-a6ff-dfcdfe88bcee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168e1dc2-c529-41fb-8182-9dcfb7ed0dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b3c133-6274-43a8-bbea-2f956c81350e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cde671d-e8cb-4b11-9af6-af32f25a966e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f8f7b0-dfdc-493c-b9ad-f36bc8f9334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c9aa75-87d2-4c8d-9253-a4a101a6566b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3349b8-489f-4d57-8ea1-4aabcecc7c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a40baf49-7539-4b69-a313-5841eb31b21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a2cb72-750c-4529-9a98-056bf0f10262",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fcb46a-9974-4d48-9d26-68264cf67cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f8c08f-f4e2-461d-ae94-0a896af2e54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d723b8-41e4-4cc8-ab8a-995f036d8c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a429dd69-f589-4d58-b6e9-c7548ad40169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab56a9fa-7071-4dc7-a9b6-ec8a37d2c0bf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9062b418-a54a-476e-88ed-aa5275cb55af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aede1252-07b6-43f4-b5a7-ce959e588f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06abcf68-a7bf-4666-8d0b-a77203acd18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b4ea60-e6e4-4094-88ed-85d8fa34a41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5737a179-3edb-4b61-90ae-98c83e7f0c6b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffe5f73-1cff-479b-9941-142d6fec005c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af4755c-ee58-4837-9047-77846fdb87a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d6b5ac-bdf9-408f-a9be-002cd2c485e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "568c71d9-d89c-469a-bad8-fd2d645b0fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21584b71-e5e1-4ee5-aec6-6849ff99ecc9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f106a0c-5095-4e07-897c-275cbc891433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2269df11-8b04-46c1-9541-80a2b80cd2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247437c2-4182-44df-9e37-641b6fe61844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb398c93-b84f-4394-b617-b69e03f5a0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e69755-984f-483c-8edd-8c90ac1d23b5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9646966a-19d2-46c1-851d-cb9c47a1c001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df91b031-2a6c-4ae5-ade6-c707e661d871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749df845-8a4d-4937-8109-cbf1786ff9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39de7ce-f772-4d14-ba29-1e48222c662c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6348947-7bcc-4bae-a30f-c41c01449ed0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5194db0e-7d58-46d8-8ddb-8e18b47bd673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aef70e-cbbd-472c-a96b-1b191b8b8e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f423215-192d-46e7-b5ea-b9017ff2bd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2be142-a313-4fe4-a693-0510b11a7909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5d2bda-b355-4097-89a4-64476ce1795c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8693420-a275-4a3a-acf1-d2eb65efd1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1516fdfb-b375-43e7-b38b-b60e461e8411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5e4de2-4c43-4a8b-943f-ab5e2815ebcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abfb283-bbd6-4ac1-9a34-fe1270f72740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93806c0-39d5-440e-80c9-c128631b7285",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bb9ca0-dc56-425b-81e8-5b03d3d15a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb9b688-1c13-4a25-91ac-44daafe6c31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181bf0b8-51b1-4912-af87-51eaea299611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f95d5940-62ce-4fa7-a376-30a5ab11cb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf271d7-38be-42a0-a4bd-864f7f59c756",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4ea4be-24b4-475b-950f-07047781fd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008137d8-1123-4d6b-beda-734c68f0a1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63958d4-3701-45e4-90e0-9a73c1132d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbc7cc9-7886-46dc-bb17-2f394a4c1ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815f617d-6310-4a5f-a2b8-72a55ae1510a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765f37b1-9862-453e-8b84-343ce197aa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5feb69-421d-482e-b5df-4208e183ca36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb4cfc1-556a-4eb9-9533-6e187831f41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3376cd3c-1800-4c4a-a82d-ee06487c3d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4726e71-a947-43cf-8ab3-0bb70a5a91af",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0727ccec-d5ec-465a-ac5d-6c03a847fe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5180abf-678f-4647-aa35-b4e2052a2509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802188a9-8d10-4ae2-9769-910d38eeba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef999e0-602c-4367-be79-f31d91b9259b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0897c08b-aa77-4d80-ac63-b2aef4309b02",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2bb3bd-c437-4df4-8c8d-a10372e52f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271b5b7d-c64e-4cce-958a-68754632753a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928a73c5-c27c-4ba9-8440-88e961860e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfed0714-78cc-40db-aff3-5b647c1148a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654582c8-8363-473f-bbe5-d78c992c79cd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49a8239-6ff7-4a00-9353-7d4f2118a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87422c26-777c-4c5d-86a7-edb6a8690c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64b8de9-4a6c-4cdc-8251-0b4d6a10f6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f5a72f-fe75-4d7c-9241-d104c1c48555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a9ff03-1afe-4cd1-9e9f-2ca340da2c38",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92f8221-eb2e-4063-9f82-73d2f2a3e170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c4f5b84-ef1a-44e2-8a1e-ca60c7d79c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35d7b6c-fdcb-4d3a-bd72-fb904ab37365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c07b8db4-de32-4619-8496-438baeadd73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01052e74-541e-400a-ae5f-543e070dc941",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a415ad62-5f04-410e-a4ae-cc4b65e97e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b7208c-d529-4d30-bfff-cbfbb48d19c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f75809-83a7-40fe-a455-3844a939adb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "139e690f-65d6-40dd-8459-ffb138fcc160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f5d520-5e09-4253-ab61-4329642f3bc7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e9b627-5169-4b75-91c9-d0dbb47bb37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe934735-855e-406c-bbda-d4674a087c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a95a57-6c91-40bd-91f7-c58f27364bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a84b6655-d7dd-405e-acab-5b9b33b50c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df86d655-7ef7-4eb4-8921-236e7a632847",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9a96dd-962f-4cbb-959e-6f513d5db342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165e50bf-c7d0-410f-a6bf-42ce6e5f03e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3977461-db26-4644-96c0-a4e12e1122d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "248743a0-f1d8-4f0e-be72-b82be16503a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e59726-236f-486e-8ffa-2dd26fce825d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f362965-fe8c-4df9-8283-48a5ec45d39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45baa70-b569-4f73-bcc4-a5daf3874c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8affb043-ac71-4e03-a942-e0bd71bc6fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e873969-5044-41f9-ada2-a42d91768d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f724a4-c252-4c58-946e-f52a74429b71",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e49e6a1-7bcf-4a31-bb1e-452dd80dcb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe71d2b3-28c1-4342-af74-e7df244505f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6383fe-f006-40e7-873e-d6e9285a98be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7a8a80-4137-4cf5-bc70-ef0e526fab05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c74fa2-1baf-4ce9-aa30-fdcff0144190",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24127a01-8b58-4ea7-a191-74e9aa932776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da510542-a2b2-4ac1-8aaa-25bb4138a932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c536f193-8996-4c3b-a28b-dbc48c8466b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "19b0c4cc-0029-409d-bd18-b6484b672eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a627468-24df-4336-b2b3-3091eefd35bd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e50e192-e48c-4771-81ad-b601215b8451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b335e72-320e-4422-ba1f-ca0073d25649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452a4021-e745-4489-9bb5-b9d8b6a15d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1acaf05-022d-42e6-9855-ec3344c402a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdae09f6-5c77-4265-aeaf-9e7cc88a8615",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b90da5a-063b-4caf-9259-4147ed6f98ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec70f05-fe04-49f6-986c-b84a978fc1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7442e1f7-ed67-461c-9c66-618f7a4b1154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b0fad1-8c11-4575-98d1-a8157fbf40d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb754340-32a7-47f6-9b5a-6a9b69c786de",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a23937-1aba-413b-8d75-63c5e90f16e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb73fdb-3e39-43d4-b900-a027312db8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef15930-1c33-448b-8661-53d47c7a49e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43624d61-a0b4-40cc-97e2-57b456bf14d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371ac42a-3bec-47be-9759-c9aeddc0eb98",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b3da30-7b94-4ea4-9870-bac8fbd71d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3127f6f-9df2-4ee6-9bda-4878cbf71cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d7a32-e035-44f2-b697-00b697c36eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f97054c-d463-42e3-a900-c7dc290fbe21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdc2de5-1ceb-4cf9-b06c-ae489c743c0c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7053b549-04e6-4a1a-9ae6-bd72834e988a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c808a41d-bfd8-435b-8ef2-b946b09d09e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b9a2ab-ae1a-4667-95c3-484638b3bb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b242a5f-7879-4446-86b2-73b68f0ff7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b05d0b7-55ab-4b62-880d-8bea8d334ae5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab094bc-072f-4612-a3c0-3942c3b86a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38108884-a6ed-49b3-aa10-d86bab0c5664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b87e8c3-8af4-4e0e-ae8e-50928df5ca56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b01f2b3-6a3a-4791-8fae-da9cb9050c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffc77e4-f2ae-44e6-b3f9-60e8c110dbce",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a9589d-cf55-44af-91d1-443d42f829f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e2e5c3-31ab-4e94-8a2c-67c56b45b128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ad97d5-94fc-4145-9110-048a93dc96dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a278a79-3022-4aee-926e-3ab9f67a7557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445888b3-c66c-4ea4-8791-372143b09613",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d94a66d-5127-4277-8880-47783e52f1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62716423-d0c8-46d8-a364-d56f6d98a020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27ac87b-2ba9-475b-9012-62c533a847b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3279476-61dc-495a-9662-3563a869aefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db84f681-977e-4ff1-8d53-bbf5940705df",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1767ebed-d5f1-4005-89fb-bb146687a3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4340f0c1-7aab-42f7-bf19-967ba5e5c7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c67b5-1a60-4b73-a0ef-23586539c466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "50780d38-96c0-43c0-bddb-020af302f146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3487d97-5f1d-471b-bdc5-96ac3fc28a92",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3f9ab6-b1c4-4234-8f89-1ea132679b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bb2af9-188f-4ed6-9ed8-1f16dc4e642e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b0c577-cf2d-40db-bf05-e8760bef1123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c25687e-4fff-4f3b-ba36-498e32fc00b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59000fdb-821c-438f-853f-a1ea895f869a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8349b371-5892-4247-b3cb-1ee0c0c4694a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70ccd5e-23e3-4895-964c-890676450e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38b692d-63ba-4e11-938e-154b33feb67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2adde6f9-4ef2-4508-90ca-f5d4bdae703f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2fc55d-ba2f-460a-aa72-71cfa1b5d58e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaf2675-a96c-455c-bd31-4e408dd808a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26c8a1a-f43c-43e5-ad41-d6f1b2e41f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8ad9bb-2844-419d-8c44-14bb060dc22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1aca63-1d38-4335-9ac0-a9cb90479269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631e96e4-eeb5-493b-af13-795a8f6b91ac",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eaf621-82cd-450b-80bc-80dcd761321f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b21196a-9879-4e63-9663-37292098aae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e10f6e9-71c9-410e-8ecc-6cadc808b303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc78f2c-966b-4420-9055-dffccde478fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbdc0ae-0581-4565-89ad-1776c9a6950b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc9703b-945a-4675-a470-dcf5cd36a3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7a03a7-3ea8-4920-a3b1-6f3dc0354789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ea7f21-0781-4b1e-b65c-80918700638d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6e564f9d-a585-4570-ac4a-0345c7a0e80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9091f666-761b-45fb-879f-0b6b840f4d0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7976270a-5237-4ea9-ae62-164c7b4001b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89f17ea-269c-418e-af18-e053f770c0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398392cf-6755-4c06-9582-f39aa4979b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1bfadc-40fd-4fd8-a254-70d32ed39658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983b3e0a-03e1-4bcb-83d0-1bbe939daaf2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffc83d0-f59e-44ce-8a9f-ef85c9106419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575d9bdf-bd3d-42ae-9a4f-8cdcbe71eabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07967a64-b69e-4354-a7a3-8dc6ab770b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "041424d4-323e-486b-b971-8f8629f25820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316d2917-a71f-43df-8a16-4f5a34933055",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de35adb3-3060-401e-92be-c19703610362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188d63d4-86d7-4eef-abac-bcc6bce73464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfb8a6c-e423-4327-a1d0-3d5a3da6d4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12afeeba-9975-4513-96ad-afcea98f2a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6475d8a-ed9e-4d82-a316-00b117a82b86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696cd208-7e14-4c27-8d65-1dd9986396e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aee0d70-fa99-41c2-915f-871bb1c0fa76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32acf63b-5ffe-4dab-8e6d-b3deb6b11524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04cc5561-6469-4d06-a57c-6b66c4c2574f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3c595d-73df-4a32-bddc-659e21950bfe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e746ca1e-0d6f-4ee3-bb38-78a914fb395e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bef6d2-eda1-4ba8-b78a-c04dfbbe7fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d45022-cb4f-4de2-94cd-c2bdc1d8eac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a166b6a-b85e-4d99-822e-09c02c55f178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dab073f-305b-4d3e-98a1-f5c136539ba7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79d6053-8998-4262-af16-dab79ae328ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cab5bbb-362c-46e9-bc19-8f55ce562b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a662aa2-0b89-4a33-8cec-82de26ec2abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f80cdc4-8cb7-4792-a5b9-a5c3c45117aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52574087-517b-4b51-a9b4-f175c1b187ac",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a2ecc7-08df-4915-8f99-ecfd775b5d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69aca3cc-d981-4547-9f90-e3a8a85ac079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d8cb1f-754d-46a2-80c5-17d6b7c5966f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "632d9eea-c9b6-410b-b50d-e7742cc51baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e24f081-cf99-47f7-98e3-13be45b433e7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8bd72f-0f44-4619-946e-837c48670741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d107cf-99d7-4dd6-bdae-1d7c78717eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b47573d-83e2-44eb-90f1-030cd5f36f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "723845a7-bf8f-4550-9bcb-ce1f9892594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46edd4e-f181-4eb8-b8b8-f373eba23627",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ea11a8-1f2e-4a01-9346-bf814fec5bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95366db-a8b4-4ff9-a1bc-ca65f9ca6501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00ece0f-b1c3-4916-b716-51c4a228b69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18e77028-7afd-4e22-8f14-dc8fa21c41c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb8826e-59e6-45d4-9866-7a2f2d357513",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f50deb-0eff-4a88-8d0b-5367b37d7cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e1b1b0-f443-4058-91cf-d262b9c945e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c630cd-b386-4593-8a72-f2deee90817d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0c933c-98b1-4b64-8577-b88eeae7ba6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fffad6-8593-425a-91c9-45ff190316ee",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5712fa1-fb6b-4400-b0b0-c5f3f044ea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd3257b-8ae9-4d07-8573-936445dc129f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58d9f80-0319-4940-bf87-bdff5e2f43a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9faa0b38-0d70-46ec-a1b9-d90227718645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dd4980-78b3-426a-8a88-75a671886be5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ef21a4-c1e3-4e50-b585-586a0a51b4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beef5896-f997-4632-b929-3bc649df4f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e507e5-f912-466b-b2ee-54a23b751666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d97c006-7cea-4708-81c2-720170089a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aad01af-d5e2-402f-8ddd-b8e098dc5641",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d307a798-44a2-4d3b-820d-3c050cc2dfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ff8227-c3cb-4e68-92d4-b26bafb21643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03666db2-173d-4fc3-9bca-6b2b5a78dec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dddd938-7fea-4bcf-b468-45386849c462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aabce9-8bcc-4379-9460-d6308fb793af",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b408b349-c232-4454-9998-43f8453e7aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459c3df9-7f82-44ee-8ab2-1ff0846ff607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e39d73-26b3-42cb-aeef-31152cba9187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fad5d190-e975-41f1-a686-8a1fe7f4ca76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66278b61-e4c3-4da5-8243-6e899e4ee23c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390706d7-7cc6-4656-a445-9140502d7800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598a520c-1da3-47e4-895a-640f0ee40e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1454e2-f412-4362-ad35-e3c598c9a9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd27acbf-1216-4107-9bc3-ef7695e28dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011ab3f3-8457-4987-b102-40918e150db8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a5e3d3-e097-40d4-ae7e-0c048bbb63d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10bc14d-3b37-4e53-97c2-6a7765e3252a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb87497a-f1cf-4aad-becd-ffc050d722ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90615d24-7b7f-4423-9340-a2ca785bb6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f816cc4-02d1-4d6c-b814-f75f90d5f9c6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f146ec-700c-4a26-b888-995b76ff02da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47922a87-d554-442c-a2de-10a7dfd8f863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cb3111-ace4-47df-87de-521b42816d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee11252f-f9c3-4f5c-b97a-c685a29024e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e2fe58-9fe0-4ea4-bd08-969abc7ae816",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9c21d4-b290-49dc-8755-c95e9a41b659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41434aa-1a0a-421b-a537-5838c65b511c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4640c29f-14ec-4c67-af6d-c86753166202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "001378e6-773f-4c35-88a5-946e2ccab683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24fcfc6-b88b-4b8a-96eb-6632483ff442",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9d950d-bc72-4c6e-904a-d4e0ca8cabf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fb52d5-5167-4229-8b13-e355132880fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ff0509-afa8-4786-9f7b-1b1d46288495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab49ff4-3d5f-4628-8d2b-59a71e718afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0de66f4-f54c-4dcc-a75a-a33cfc793997",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c44496-077e-402a-96c1-f7b54053166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abed1fce-2d47-4019-88c6-255f081f1802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0c2126-4ac7-4db8-969c-adbe1aecd8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2de6b5e7-01c2-4179-a80c-7ab621e637e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665a7dd8-5599-4c56-9bdd-c1843e935ee9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e88df0-5834-4f6c-b42d-684a6e73218a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e5729d-55b8-4cbd-9ac6-241c7f0dc22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d004e60-6334-45e0-a512-c1eac1f0cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75d98610-9e75-4685-afbc-34c8caf27159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87edb02e-8d67-4f0a-a00e-ab3bfefd65bf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1adf2bc-cf1d-45bc-a70f-c1713b2dee0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e343592-396b-4e85-a845-3b982444bded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea88f181-8896-4588-ad67-6ea06ec38751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db29c7e0-ff7a-4e0c-a33f-93b0a18e4773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb08265-eb8b-4fda-8a33-00515721151d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0433027-c010-4dc6-adc4-84e31a002f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f66f3d-1129-46fc-9448-d702433b7068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2892b320-5f46-4b9d-b215-d20aacaf3a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18cdafc3-0258-4826-b1b1-6e2b129ed617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b82c35-2960-4e2e-b608-bd8cc094be20",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57865f44-f12a-4728-9042-a59421308154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bf480e-ea81-487b-80d8-0aef4efeebf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056c3969-4e94-49e9-956f-b81b310d7021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d124756-89a5-4f7c-b62a-1f52fb686af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0546de-65e3-45ce-93c3-f6b2112cfcd0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64e5f3d-862a-4e24-87c5-bf47a7baf600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8613cd-04d8-420c-b963-7dbdd2cba18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d2ca50-c6e4-400c-ab37-e5ec2b13da9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3117f2-d4f7-4e21-a9e0-12ef72a54d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566fff8c-c859-481e-9e58-abbf542a07d8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73bbc5f-1d4a-4ae7-beea-f5b56fa9a1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd458fda-20c5-4ffa-944d-25f4caa05445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b549d5c-2d4f-4663-a58e-9ea3f3e752bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7530857-908e-416a-955c-f1d38c924dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91741b3-e0bb-4d5f-b3dc-e314a926b86b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "315fbed3-33ed-4fb9-b1dd-8d9e41ab9ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0481ba4b-d747-472d-b357-62e8afb85f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a762ef9d-85e7-4e87-ace4-657df142493b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9846fd70-327d-415c-b086-61b00fcc5b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66649e8-aad8-4abe-a980-1c7a06bc2c86",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b2701b-3b46-4f5e-a852-ae075cfb7c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dbb6c3-4479-490c-a616-6d8218b13152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dc9451-ef52-4ce8-b7a1-0a2c42bacab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47abf9ce-1e0f-49b1-b281-1b123b33e9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486e717d-e078-4c79-a794-dffc4d78404f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779c23fc-5ff7-4613-8d5b-ba1995a4b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de3c36a-c6a2-455e-8d67-f0fb2245ef6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435177bd-6775-42ca-9dd3-dadb8c3502e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "554f06ea-3c8b-4100-acfa-29eba8be580a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e928ce3d-c913-4792-bbfe-2536ceb3eebf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6780b0-8532-419d-a7b2-03d3207aebce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128f379f-cd34-4f41-b50a-cb3f33928c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b22e72-fefe-4ce2-bd19-d3f63f2ba1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3170e9-7278-42e5-b65a-4611fba69edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bf3adb-8b1e-47cb-bbeb-887d8cd44975",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1fac29-5827-4715-abcb-4458eccce5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ee0cce-f676-4811-9932-924c3da35d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6419b9e7-396d-4d87-92f0-ea5a1c572552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe16a5f-57ee-4007-8c82-55657c5e58a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7accdf-8ca9-4ae0-8053-e003c7b8a945",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0be971-1d88-4aca-9e89-b4dcd571f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649fa103-bc1b-416f-ba86-0720e920a06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae269f3-767d-4dfc-a666-7ee130e0b8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "73ca140b-853a-4bfa-a669-972dd74ca73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f810e998-0738-47a4-ba72-93ebf0328db6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4578af2-c6ee-4ae7-b3d6-e2a8455af49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae7c6f5-98e4-4abf-96a4-71580d14d252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa9115a-4778-4d52-895a-d76c49678fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "922dee66-8979-401b-be77-a64ee8eb84af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4d8aa4-f66f-4ce4-b6b7-88e16fdfa98e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ca3fb3-dfca-465a-9755-8dd587bb982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bb82f8-ccef-4d2f-8da1-8954c1d54345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea8aab5-a7f0-4eeb-b3fb-01ba894a2a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd958548-c1f5-4da5-b6dc-a5f2215163e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8957b902-3c39-4d8f-abfb-520611a01b44",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7da7ea3-4b4d-4d71-bd3c-31361ef8a724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab400d5c-c254-4353-b8ee-4f1f4b66e08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec867651-ea48-4f6b-98f3-716acb80effe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d40643a-a0e6-4283-8496-0d3be5e29a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc35b29-8ee7-455d-9c55-ac37e9442c4f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946fbc0f-a2d3-4dc8-a061-f90571293e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "662ed758-5898-4882-9d0f-27d2c66189b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9ac584-bc99-4860-891e-10a4bab5d611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e251c6a7-3035-4e2d-b128-8522ce4be28b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99a284c4-dab4-46bd-a4fa-ce0e820f258d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ebd89ae-7b2f-423e-9f93-ff4d1e89faea",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd44d1e-15dc-49dd-85f5-09715e6185cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d45c87d1-8c35-42a2-bdda-c7e19c21fe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c666a289-ec60-408e-b195-0247389367b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "495d40f0-4c16-45c8-9e36-c5fd9b624eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b5e183-c53f-4853-8f8a-eb8dbb64f705",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c830507-16dd-470d-985a-27df2c8bb1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fec0640-7142-43b9-82a0-c91525ae7591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d20201-c906-4fdd-bc6d-1474833b0a92",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eef73b8-4d33-4b67-928c-4a783eb902fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "648c7192-5ab9-472e-92a4-e2fbb8f71641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b29c7a64-376a-48be-ba60-d05505bd4499"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f98dea1-9b22-48d1-8b45-25979e16da42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "861058b5-c962-4c26-ae86-369657b920fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eafa75ed-18a1-4c26-9b13-9c48111bc061",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c80ee68f-3b0c-4b94-ae40-29646209e2e3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "71f3688a-f416-419c-bc54-bf6d9fdf8aac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac7ff4b4-17be-45da-b8a0-373d1bd4761c"
                }
              }
            ]
          },
          {
            "id": "88f6bb3e-80fe-4ab9-8d12-aa04a474d31d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17dfa4d3-dbbc-48f4-8624-e01fd8c334d2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fc1d28e-8c0a-4eed-b9d8-9ef8135411e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c492b2e6-a93a-4887-b1df-d69c2baed9a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8982a64b-bbf0-47bf-95f0-70889b71628d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "27f6551e-a539-409c-bfd4-518528387ba2"
                    }
                  }
                ]
              },
              {
                "id": "181e7897-e328-4b20-be3a-0f9a2e5aa1a9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02775062-3e3d-4141-8076-30b8d15168d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cd9a0bb-8b66-45db-8e5b-6712673e2f5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d44e79c-a959-4fc4-a059-632990eeea9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d3e52ae-c0f9-4d4b-9f2b-06fbe96d3d30"
                    }
                  }
                ]
              },
              {
                "id": "ca0ba10c-b995-461a-9e54-99b9f01f7485",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e04dde6c-aab4-4deb-90c2-ea7af447d8f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17110463-6141-4661-a3a4-9aa9d61def0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbce3aa7-97d3-4437-802c-897eba4916ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fcbe134f-0042-4974-84f9-21a9f6db10d1"
                    }
                  }
                ]
              },
              {
                "id": "5a061c7a-d147-4ebc-a4dd-1e9f5b523937",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efb00d36-eeb8-47d0-948b-d80cd9fa8346",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36598738-b668-4822-b803-bff7a56a8085"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cbe0d1f-e5ba-41fb-8fe5-c40ac6b76a89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0437e590-8d1d-434a-9ea1-162df83294b9"
                    }
                  }
                ]
              },
              {
                "id": "1c144d9e-de48-4a13-b04c-c6f213713402",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ff4d80e-6a5b-4915-8e14-fef62e602740",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ea00b25-4ec9-4566-ad97-ad1683334fe7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5502e5ed-1328-41c2-a5bd-d890f66b8ede",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1c7b1a66-7d10-4319-80dd-f4a14d22d6c3"
                    }
                  }
                ]
              },
              {
                "id": "324f0434-210e-44fa-a9e3-cdc8cc6601f5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c2077d0-a674-43c1-85a4-ff8d806f7194",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5def7d9-c6f9-476d-9e88-20d6ced43b9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a31aa9a5-d47b-4f1b-9f90-229593c345c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b89fcd0-aedd-41e1-b8df-409a8623a165"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f020ce09-5756-40a7-9a73-61078a2ee22d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c95f64d1-72e9-421c-9be1-0e2967f05c61"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59ff29a0-4332-493b-9da7-6ddff012ebeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05be1590-4b40-45fc-af7c-6615028e24d0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a9a9556-10ca-421d-bee7-9af3777ea689",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b8b51c04-5157-4884-85a7-eaaa5475a471"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8872bac-0a3e-42ed-8136-aaf043964e78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c7048f7-14c3-4e81-8d3d-f130a833be48"
            }
          }
        ]
      },
      {
        "id": "6dd405d4-d5ec-46dc-8303-5fb9a796a68b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ddc3d828-d2db-4b78-ab58-0f977ac0c92d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "062b16a2-7af4-421d-a504-a2d333d8bdcf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34ffec06-e21d-4c36-97ff-9095634af706",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdf783f-4b96-48c7-aded-1fa197451aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b77355-79c4-4b63-9e44-eeb7cd286977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b1c04f-3fd8-4e68-bc38-96f1ff3929af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee47eae-58c5-4601-9fd8-6e51bf6d1fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2618e2e7-76bf-48f7-bba5-59bccf0ec5a7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc9588b-9524-4c09-b22a-1a79f6125506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca115dc-3cee-4f3a-b3ba-b76b2cca88e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd59a6e-6196-4227-8fcc-f0382357c9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2be70b-3dd8-43c7-80f2-11f141651265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26080444-3df5-410d-bcb8-7966e9a81d18",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b945dcd5-88ed-4d3c-b706-09e6a46567d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2619842-f235-4007-83bc-bb55677bb2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadab273-0acd-45b2-95f5-2fb744e0bfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "337b674a-f612-493b-86a5-8be0e7d21b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329a3917-1bed-4f92-95cf-39c0e23efa06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e737b8dc-177e-4d58-9e33-b200c35e7d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb409165-29c0-4b25-9c25-c45e0d96570d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095cc8c3-4841-4f0f-981d-2facfa6778a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d25a0f08-ba41-442c-a3ab-f05d5c5ba049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e36ad8-170e-49b0-ab57-8e0555d8cca3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04038a9-cb96-474e-8ee8-37470294ca73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351e773f-f3cd-4d78-8eba-168d980637e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9591f6ab-501d-4368-935f-dd719fd7c34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d0e2b1-335d-4fda-9033-b049314a0d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4082839-e9a3-4c19-95ce-3bf7cfbffb20",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09ef034-a656-436c-972f-82d597dd256c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc55525e-eac9-4361-be62-d2e0d9629007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd58377-77f3-4b7d-97f8-48d92b6d9c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8182ba19-97ad-41f3-9186-0b79587b8222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7c11db-f2d5-40d8-b296-3524605c24a4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dd3a68-0826-4e27-a601-78c908d809c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dafa209-2a67-4aca-b1cb-9f8a948d890a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe2b76f-5614-4a7f-85ff-f426dde87211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdfff3c-8e2c-4a41-88a0-f8092c072946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362ebe4b-0685-455c-9afd-85f13cb1d8b7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b046606c-8984-4ff3-9c7b-8388582fbb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b801e9a-a962-4e1d-80c1-9d5e01916234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ecbcec-dfe5-45be-b399-406ae7c7d564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf67992-ddcb-475c-93fa-9c3bb93e9bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e925db3a-40b7-430e-9a5d-2c36e87df48e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5563bff5-2e39-44d0-8c14-47a2ace8b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d01edc-8d8c-4456-a7d4-0977cfd8d82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c11f595-742c-4347-a638-0c2a94b8e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e299d5eb-6da6-40c1-965f-f30dc20d9f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c4c113-d656-4cab-b2a9-6095acdbe6c0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e82ecb9-1c86-41e4-8c6b-ea97672e1e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f14963-16d3-480d-a294-c618cbeaeeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c75547-cab4-409f-914b-e16e8d3185ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbbc158-240c-4b82-ac16-042571ac5177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7252cb-7803-4970-874c-9736ab59a82a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26b1bf8-88bf-4ab1-a93c-1ad1e655a524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408bf883-5ed2-4839-a811-d56fb06e634a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c16088-1d53-43fd-8257-2488814f56a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "066ea4ba-ecfa-4239-825d-cff994893d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0263967f-6523-4d73-936e-510cee07d5ad",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a622f07a-e593-46ff-9244-a0f943f43370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9527d701-f183-4292-acc2-f278127a858a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91a308f-5eda-4bf2-8d99-3de08a3a1989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdea3aab-64a3-4a3c-ad70-3d1d41e678d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af1ac8d-8cfc-4fcd-8dc3-e74d16410ead",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e700f2-467b-43ff-bc88-e853627509f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b50a820-dc13-4dba-aaa3-8262c005197a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86ce1fe-bab2-4866-b176-1c6c6e89a33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5315bc5c-29a1-4250-92ee-d62927ee32ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bc554b-ab62-43b9-ab86-34ffebee38fe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7ff58e-2021-4a0a-a101-5115bd402afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ebaea9-0f82-4209-939b-117247cbb5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb6d3bb-b2d9-481c-b85b-f0e1cc522b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b852a1d-18de-49e8-b45c-a777fc4c3cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69faca4-7788-49d8-8ef6-539a2700a728",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38444f1-ecf5-483a-8940-f841e1ca96f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a3c7a2-d7f9-41e3-8e13-863e8494de83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb1a49d-d4b3-4c32-acac-be4f93e2cb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc63d8ac-79d6-4103-b4f2-ce73da530033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edd71ff-dbff-4a74-a254-5338c56565d4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf2877c-9009-438d-873d-4663f0ad1646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a865c4-0851-4744-b038-968aa4b36504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe18304-2ffe-4d1b-b964-e66870f5770b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "646364e4-4655-42af-bb71-c6c552e5d8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28c6621-0336-454c-ad4f-54a38a1a44d6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72088d8a-862e-48bf-af9f-4520eff3038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac16d3d6-c83f-4002-9a31-d5c2b32cd183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72c18a7-2183-42e9-a4cb-cb21e7f0fad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca8a85c-a9f4-4a8f-9d00-8ba2ab54b61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f78138-3b95-4b3d-9493-8e2484cd36a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187faec9-f237-4ce0-ab81-731fa73b49c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecab8381-2f5b-4fe3-85ad-e6508df324f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526884f7-f3a4-4db9-9405-72758e132c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d9784b-afd0-4f87-978f-20b48977be02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51501d94-c78b-48f0-9b6b-a991fbd38363",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5152af23-eeaa-43dc-997e-beb69a1c846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71993f3-d878-4772-b4cd-59db0250fe7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5ee6f6-05cf-4499-8d72-b2a3a716e51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4280f242-4428-4837-b41f-4a76b5e27a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fb4e2f-d6d3-4350-ba9d-e63b3c51b51d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69063655-b57d-4c69-9aea-0274b9a14fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d417ee-0939-4d29-8404-899b152db98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fd847d-5a42-4534-8f91-b8a7def661b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9138ad-1db4-4bd7-a79a-fe5dd15effbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d39c31f-7e7f-4501-a227-5cebf45391c7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc882a2-3479-4cac-adcf-661170919677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2888fc5-3bd8-4ea8-99f8-cfe056778105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e12e650-fe0e-450a-a1f9-2015676a7587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6444ffa1-5c20-4f6d-85e2-0aea446f8525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c3cc05-b464-4335-91c2-2a688bb3d5af",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a42e3ec-2421-4b96-ab17-ec10d0047247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5655cb21-ddd6-4b68-b1ef-1c02c6d14135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00919f72-c407-4d36-afd8-7e37107da49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4eec91-ba7b-4e86-aeb4-fd47844cf789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2838c93c-6cfd-4518-b66b-02ffef6f4229",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3956d800-33d8-4abf-b7fe-110750b65dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798f0a7d-45c2-40ed-a704-ca24c60c9486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99a2406-aa37-4467-a1c6-f5f27413378f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fda8183-3a1d-4cf5-93a7-11cc612b3f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe546d67-778a-4fac-968d-a08d00e08d55",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4f16ad-c869-424e-aaa6-223afd855aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46dd5713-52ff-4a54-aa0a-10b859fe7d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90da2189-daa8-4214-be0b-d8e57dc5ab48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abb409e-9a52-4291-9c20-48f454956dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed2d983-015c-43d2-84a2-cc5fff8a2e35",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22400e9c-c977-4a50-b797-926f7e74b00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90bd02f-5bf2-4387-8168-7c143cf9ba22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480d3999-7169-4231-8ba8-cdbd60e620ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebbb584-29ab-48f8-a979-df3bf0dd12fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ac8411-26ff-4a14-8566-2132d1d5761a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d99e2c4-67b8-43d8-aa39-012e3a47ab9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc52d00-7ad9-463e-9225-803dbca60cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d5acb7-1baa-4a55-8bb4-611798fedcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f39106-5d6e-4a76-9c65-fbe3bfc6508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b319e7ba-7424-4f81-b956-7b22d3377dd1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd9e90e-dd51-40c8-b05b-f333f7e07498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3bd998-91b8-4547-b3f3-87ed0593863b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c184feec-025f-4037-b241-893820dc5b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6fa0f2-6b68-4ab0-9226-fecd19ab9554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91f03c0-7213-4fcb-ae75-2843aa63e3cc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4160418-fc60-4ae9-88d4-b34cd6d168a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2faa75e-bc82-4023-85f1-dcbf44bc5af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ae7da8-8caa-4f26-91d3-09ef4a0febe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00063c6-6913-422c-80ed-9deff4ec19ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e798ed91-9d79-4249-a10f-99c53332038d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690145df-4608-4829-9e7f-ea4a59dacab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab098b52-3343-481c-b512-cbb1d8dfc1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3723c51-5c33-4983-bfed-668c0c025ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92d4ff1-334c-4d69-aae1-92767fe28cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a14ee2-ff58-4f44-a661-45b78bd5af9c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9b4cb8-7799-43be-9177-99ec0466f3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd47d616-0971-4b09-8b0a-d4f1d44f8115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291fbe69-ceec-44a5-b39b-57003020fe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511b8f57-05ab-47fe-aacd-1e9a735f7d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6735d71-7091-47a2-bed6-b8d02a693f0f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a62d594-6519-47be-989a-68d61c5fee94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5520f9b-cde4-4040-94dd-8830e040eee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c745d97d-ea79-4ce6-8e93-9cfa2f3adca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d035b8ef-c62c-4289-b9a6-138c96d9c1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1ca49e-9ef5-414a-8052-7d217369c78f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cea1a86-1fcb-4a75-9111-9b4e478c7751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fab91c-34c8-45b2-a811-47b66a5a43a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb525424-6007-4694-97b7-8fbfc0c0eaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4dcbbdd-45e5-4f8d-a464-5e298b541e3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f65b1a29-16a4-405d-8241-0160504e3c52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e612724-bf78-4da6-9da6-a89d80f2e70c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3baae7e-6a3d-43e2-b1f0-a09efbd3f02c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f00db582-2c41-4c54-85c4-a3d590bf7a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acba41f7-2a58-4628-9bd9-6ab73a8ecbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3576df15-03ee-4dd4-971d-5e5baac9ed83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af8d848-e2ef-4f8f-955a-04de04cf3361",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ac8778-73f4-4e9d-8419-cec206a909fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5adaaa38-3dd4-4bf4-8617-70eb74971154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c704f74-663d-4e84-af32-23a719509cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "341fe998-690b-43ac-9520-6938c4942085"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "901a1f62-e9b5-4938-b261-8403268e8618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65224ac7-3852-4514-a635-f31ac572dc3f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d577bee-8397-4115-bcc4-0e3bf9129739",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c8a41ca-372b-42cf-8b4e-e17b1d1427d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce33c78a-3aad-4064-88d2-4bac7824237d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eee6f0df-9544-49e4-bf85-c5e4ffe1858d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18777e5d-1dda-471f-9057-75d950bbc8ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14718336-5a78-4442-afe0-a6aeffc8b338"
            }
          }
        ]
      },
      {
        "id": "84d2db59-8073-441a-b37f-a0492b62af6f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "743c3c09-368b-49f7-9b89-5223f259f47f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80d5f477-2782-427d-89a6-5a9b5607a22b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4dc2c841-9a71-4069-a426-ac6694cc95c3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ba767-70d4-4dfd-a5da-012448b650fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165d9eaf-2ba7-4055-88cf-9456f79bc38c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27596c1e-1b60-4020-9713-31bab45ff0d6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1dbb7f-ce0e-4617-bcc2-707f545fe96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c9d6b8-6030-44f9-bc2b-5b4209e8f523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc0caea-5af7-4a30-a0c8-b46c7e219197",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "927687ef-6c73-4c13-98bc-c86c6d11439e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a373d7a-e4c9-4959-a9a1-c533e8e36989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb49c58-3118-45f1-973e-9bc9a21cdbcb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da93c08-bebf-4ee7-b966-cab4b4544db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e536f50d-ad7b-4c99-9038-9ffd3c04256c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c63e865-d6c9-4656-ac5c-19b8ceb38061",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d338856-8be5-4760-bf8a-5300cbb8a166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9e8abb-8d7b-44ae-b3f3-4e0891af0150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e161d6-64cc-4c04-bd8d-b5a013951c15",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2812be87-7df4-49b3-ad5c-70c6d36986e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ea7b92-0508-4478-a336-edc3b80b5a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b568476-6fb6-48bf-8d8d-206f8ead6e82",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eff374c-b21b-442f-b086-5b31f577a957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e13342-2158-4c3c-aa6b-f2c15514e541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feea3408-edcf-40d1-b529-eb6122370498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4757e1b9-0f41-4915-8675-6d797e087baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c710ea28-3a1a-4258-b5fb-eda29307116d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a39a2ed-213b-4086-aef6-957cb0c43064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db54e28-b05f-4502-bed9-6d15f3d2d342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d85816e-c06f-4892-9376-e95ce7d70bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f01a7f2-3b56-446d-bc6f-0ec706c27a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e73ed6f-0a99-46bd-b132-1ca7799f1cad",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b11e8eb-5908-4e3a-99e6-a4f0e75fd826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfeefb4c-2c0c-4ce7-89de-e0205040e906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb6accb-e905-413c-a20e-1e699a3557e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b45037f-a267-406f-96c5-d7db2c08d67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d771a7ea-419b-4645-889a-6cbce8cb48b0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc73ae0-97da-41d2-b62e-66c3075bf4e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85625617-1702-4106-95db-3992685ae89c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec85fa1-18f2-430a-9d1e-06f54220434c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7687981-9e88-4205-be28-2d8620bb6cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bd1a7a-184c-4611-9aa8-8340f5b4a10e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e81d14-b00b-4f2b-a513-33de3ef17f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f51bf8-dc60-42a9-9b94-a5cfeef789a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79d09a4-3b08-4e9a-9d69-4305c931f48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b94152e-17d7-465a-948e-6fedd8fb5589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f01717-d721-4a68-903a-c26fe8b87581",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fd5cc6-0baf-4e12-ab17-363122598f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac446b8e-ea41-46ca-b2a5-6d722b45e45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf10998-1cc0-4796-8b35-03149e17b128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe76b9d-b535-473e-906d-e89564803cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055e965c-b7b3-4301-9701-65001c80bad9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83edc62-63a3-4ce9-b304-8e7b3b695f05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ecbb283-ffc4-4f5b-a7a4-b58fecff8de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6271ca06-1451-40fd-82c1-2b8c48e6b877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e5f535-1e30-43ff-8888-579676ef425e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21421c55-6494-49a7-9bd1-7dc28a625135",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b715fb3-c0c5-4b1c-afe8-cadbeb3d5351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a207287d-c036-471d-bca2-1ffa465e5c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b7f8ec-58d0-44f1-b6af-4c6f0086bb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad686623-72e4-4441-af3b-159514af5050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39336e13-d29b-4f5f-9e13-90b1aebf24a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d945d3-cd52-4e0e-a2ec-906b571a73d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6faadff8-4352-4e52-ab8d-72ccb514c489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a6fd4d-815c-4df4-a2ec-28a74f8528be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c8007d-df62-4f69-baf6-221e2f2625f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb61968-c1e8-443f-a902-e525c3afc04f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c635a6-3705-48ba-bde8-48632c333df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6461b3cb-9a82-40cb-8031-5e679a06ce73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a1b5df-8d0f-4d6f-a434-516a89572780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07943eec-941d-4345-a0d6-a5536d542922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea1d3ed-f621-4aa1-9170-0ecc87090ff4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4bc664-2b55-451c-97fe-b74b68edb759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ace9f54-637b-457e-8875-c42fffa1382d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1986d2f5-64ff-4ad4-9172-52c2ebec3db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b8fcaa-858d-467c-aa60-aec4cc588600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174d4c6a-3134-4a01-9fa8-9c93df2bb721",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47090987-c452-4703-9734-0585c8b6abaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd714613-7272-4fdb-9c30-da87e5547224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cac7e2-c4bc-4561-8630-6146cba0d07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d55f76d-a72b-4ce2-ac8e-f7f26fcae7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d145c83d-311f-482a-8d02-b4006af43540",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b554bd5-880d-42b1-ab7b-f7f703c207e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9657b11-6b1f-4384-a68d-f0cb0acb5dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de26eb0-be27-4de6-a33c-0b4cdd5aba21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e3a00e-0e37-4a73-b51a-22d6cac7ccf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157537ae-3d54-4f7b-84a8-1fe0701b809e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5a8ec9-2977-49ae-bb42-1a7f14a8c031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef412c5e-4c64-497a-a8b2-3c14eb3e8388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ea8435-0923-48f0-b272-697ebaf8925c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f273d08-89af-4f14-a36c-815d21648549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb2fb34-60d6-4875-a8b2-88c2c8935f3e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0340fa6f-9713-45c5-b711-5e3341e4e646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e8c3e5-f583-426a-ab98-830c3ce1e01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fb03d0-8ca4-4133-8af4-eda1a3e289cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661534bb-8b01-4add-aa2a-235f16585bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b318c5c5-3536-424d-ada9-eda500e51fa4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4a2a0b-705f-47e9-85dd-22072488d884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198460f6-bca4-4387-a053-993ec8753680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf41dae-5d07-4cbb-8c26-6346a6a36adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7d7b10-b8f0-4372-8fdf-bcd9c2d17c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e39a732-b9c2-4cc7-a017-5472151917cb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aadfeb-44c4-4be3-8148-8902bc39acfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b240ded-3fbb-4625-a969-50e72d1c8540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6922d8a1-670e-4f76-8e34-abc64c29c688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d282a1-54eb-46c3-8987-6d0d7ef42755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7666f5c2-9861-4737-8e4e-d5c3164d9679",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b87a4d-8601-4a6b-aad9-5c9f81d3f364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85e9e1f9-cbcd-400c-abcf-ba1af9b327f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d682da2-a910-4089-8f14-f7b5417b0d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b11a5c-9594-47d1-9bb6-e6612531ae68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1e075b-d18f-43c9-a07f-f01bc724b2a5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f4c28b-bfa7-4c34-9f8a-39f2e5e74ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282d7ada-c32c-45e6-991f-5793cbf9ae9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e99ca-1f28-41c3-8856-37991e04eda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb54d6f-fe3c-4f20-b7d3-6f2d18bc7f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a20c42-f41e-4cf4-ab4c-aac95141f489",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d88cf6-b95f-45d1-8956-651ea047a9b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a51537c8-0e04-40cb-b3a4-e167434a6a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666c9364-6ca6-402d-b06e-374690697699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103613c5-5ba1-4cdb-9f08-8ed9e2f9e12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d758538-3b8a-47de-aa6d-f15eb60ffb95",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7e89a5-ae04-40ec-9ee7-63d7a728d167",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84997241-a69b-4691-a192-f8075f1b755e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716fd477-a6df-4662-b7ed-7cd389ba9eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cff9d7-b32f-4f03-8e88-99b8fda5c27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8884ce77-d9b5-4576-b017-e539631ee9b0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af796db8-fe15-4a05-8567-a8539676b580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d058f02b-ce48-4cbf-8bc8-94c827431e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520b51db-bb49-4764-a36d-0c84d750878b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795745a5-8913-40ed-a5b7-ad50844a471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45dc0cf-ff3d-4d8a-9ae2-f77628236c6a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d77e852-57ab-47c3-b07b-53703a3577c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e4c4e1-9527-4f2e-88ea-87f9347ebd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf709b45-8558-45d5-9495-f26fb1cc220b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abaf6035-2561-4443-a7c0-4ccffe96fefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72b96c9-74f0-4d75-bc0f-a744cf904198",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33863431-d58d-461c-9f97-3c9b83a23fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b4a397-4c6b-4b25-8919-0cc4b2a234de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca59b634-d294-4f69-b9e8-c1066ea75fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41816eb-ca63-434f-9d37-b54d5e9a4719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94245ae-ce9f-4465-b739-21c36197915e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8f237b-1c57-4e74-af5f-3e72439862c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "468aa643-1974-47ff-b7ac-fbb6dda9ab0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f976e0a9-dbd9-4431-bdc0-f31157c53857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10e6e08-2e7a-4deb-8be0-39d8f23de768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de15e3c-f290-419c-82f2-93405c865a1b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab585305-57cd-422b-a4a0-46311a6a3cdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85eeca0c-6bb8-46c2-b75c-29977776462a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78108cab-7dcd-4e49-b36a-e8856cd0f284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08de0426-b5e0-4c13-94ed-b9259b49d169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c16d9d-9fef-4966-80ce-69e474509506",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160dab58-1fbe-4a57-b4f1-3594b8e08837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b7e43f2-bad4-40b5-8c4e-49258b93df45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87452c09-cdcc-400a-bc2f-766f13395727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eaf06d0-72d2-4e5f-b9a0-4bed075b4b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837db7a0-6e7c-4970-acd6-7794bdf9b944",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b26719-5f62-4667-8a3e-9b81af9d53f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf8f570-e1ba-413a-8f57-e1d26db18498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035a9cc3-1b20-4be9-beb6-77fe88de9c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19da670-c440-4aa4-9807-2c6f3974fda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b10919-1c2d-4b96-a465-b6cda32d531c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449f5653-fe5e-4568-8591-5d58fcf162a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bb1a97-e20a-4100-8c17-009fa25c7854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8beb36db-4ffd-4dd0-bf02-7be8a658412c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4142ebe-8036-4e60-95b3-67f93cbf19a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9210b3f4-69ae-48ce-a764-118ac2fdc71d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4faec65-758c-47db-93a8-ac933d971900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c2ab9c-aee2-41c3-b5e0-3d66eae4e6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da598a8-6b64-45c8-aafe-fb76443a59d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce55b58-301c-4478-af2a-2e82f6cec932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d27cc29-4730-41df-b2a4-a52aa2a8bbf0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324edf3d-a4ee-45fd-b9cc-88a7f577ff90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7678e85e-e50b-4979-8b9d-4f8605cdae1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508b20d5-30d6-4b79-bdb2-7fe4ef1a7ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044d1af7-0c97-46d6-bca3-b6a276e4c7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfeca3d-bb28-4949-b960-71196c6caacf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15235267-595f-492d-8375-952d20062636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320c70a2-ffe6-43df-b456-4cb3111f25d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63c4ecc-d356-4cdd-aad7-ce49fcb634c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a99985-12e6-4664-8f78-ab1e90f56a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de73d236-b43d-44b5-a01d-d972c2b146d5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010b29bb-d83e-4947-b0c5-a1a0701b17dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a25bb64-20a6-4e58-ace8-d9c2787742f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81098c47-641b-43f4-b07c-6c42ba6711a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "460e4d49-f8f3-4521-81c5-3907d0eddbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fd4c62-182a-4532-b777-e9af806520c9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f785eca-f71b-4fd3-908d-d6ccfe197884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93aa7381-7d75-49c7-964a-40ab0c3b0a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a08ed5a-f624-4790-82c2-022b549ef623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f67f09-e20a-4c3a-803e-ca7762d8e77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86aba81-c415-48a4-92c1-c5d559966943",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b4359c-4dfa-4080-a321-d7a5fb451e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719e10bb-bc15-4ac9-9786-792c8beacbb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400081b8-9036-4cca-b4ec-b57fddbe0009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e931c5-6a3c-4b8f-89b0-f4abe295a8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c8752e-922f-4cf0-b3df-03d76cf2c0a1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95c95a3-4709-459a-a1cf-18240f85465e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ac3911-a96c-4c62-b481-9a40aa9d1163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9c6e0e-540f-4668-ac34-faeaeeec0484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69759225-456c-4091-9934-e7b000294cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da26f704-a886-4aa5-89d7-84ec7b17564d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844fb232-ecea-493c-bd08-296358cb151f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0988bead-571e-4468-8861-df63c328f2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab3efa0-8a46-4e8f-9f12-089073558f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1d317f-0b24-4fa8-b3fd-aa68d8b849a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc90215f-b66b-468f-b0fd-53bf9fc4c539",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d5b5a7-da99-43a6-8bb8-5c01a0e7834a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b97d732-9122-4360-b5a5-2667504ba7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9f0429-7bb8-4787-a9f9-d0bc3561eeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995347d5-f440-47a2-9f5b-946057131bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d42558-b93b-4321-a48c-7de299387a2a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a37efc-d9fd-49aa-93c1-8ecd4181cb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10802b4c-3217-4a7b-9593-778f8bd23600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd9b908-0098-4c81-8271-c7dc7097ba14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611704d0-9e7c-4edd-bfbf-0662ea725d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ddb4c5-e16e-4d47-9ed5-1f1d06b962c3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2a74c6-49bc-4a36-93a9-a4f580121837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6401228e-aefe-4895-be74-f48976afb989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee04c2e-5071-4a71-b943-9e3f4d550cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fd3943-ca3c-4f2c-8734-49c51e52d5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ed6468-52da-47c6-87d5-c337fb05b978",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cbcd6d-4557-427b-b538-e0f80e8db1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9421d41-3b7e-4cec-b35b-79802685b03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e41d9d-bc42-4534-ae03-5b535d5d3757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5c7200-7cb1-4554-94bc-ffe0ec8736a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af961f6-3b86-4814-aba6-2a951b1b5cdd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a003c5-0b11-4637-8736-6f8bb34566ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b730c6-f7d3-416c-bb54-b88a07a9ba04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbede15b-d451-4360-9ab9-1c96d871e740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23170282-dc3f-4ac0-a9e0-13cf7ca04898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e96dbb9-73ce-4b7a-823d-2685eb56c84e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69982c7-4d52-47a8-8f0c-f62b42122f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04aa58c-87a7-4f8c-a040-ed4b6d841929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9d5e5a-a34c-44a0-adb4-7aaa32181589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f7f4cf-7e69-4c5e-97d2-ee51810c7a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4a6856-50c0-49d9-a63b-89fe7fba9f17",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef23518e-53a1-4675-8c63-7060ab2ff31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6af4d2e-92b2-4507-b02c-a366e62f5a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b6ea34-14a6-4855-aacf-010ce8947c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39912867-50e4-4495-b807-27dd1fffceae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6ab56e-f063-4098-9ff3-b02145c0ffdc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad2188f-41cc-454b-8f91-3d617f6762bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3070edbf-39f7-406f-9979-362b65272ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0a1e6e-3172-48d7-b0b5-f836caa2ca4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfc7541-66c9-4416-9da4-4f9f4df663d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec19796c-1cd8-4ec3-87b3-e03f51d583b2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6abc792-9769-49b4-92ed-c97e98a11a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189e373e-2176-4696-a602-c045a28ae577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39736411-2923-490e-96a3-97e8d85356fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8e7fa3-720c-496d-a858-9d84907156f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cf5c50-8661-4e7f-90d0-f7c259633920",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb13e00-0dcb-4fcb-80ea-54908ad8c7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5065733c-f338-44bd-91f4-de6dbc7dc5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc7d756-2919-4535-9b16-b866d663c738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf0923c-1531-4670-af91-7e992f61cae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227d9694-1b69-4511-a8d9-ec8e6de3ba96",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284705e9-afd5-4670-8bd4-8a06ae905ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2310616b-7794-4d17-9b63-c60320aeeb6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e545d1-6886-4a27-bbb6-b6b647ee82da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2fdaa3-d2b6-4523-8fc5-408bf6780180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c285c241-69a1-46bf-a259-78d6a57f47e5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d301e0-9943-428c-aecc-2b76a1b2de7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c93bf5-010f-4b58-a17c-5ea2f274e736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed6089-2c45-48e9-bbe3-acccb890dcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134f5708-7e8e-49b4-a790-1a874148a522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f53d46-d50a-411f-bc04-3ec8e2349c2b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e76d9c-16af-4d39-b362-126c5b2de02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f33ff33-7262-4286-a11b-9cbad0f0ee17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85577af5-1e71-4006-9e13-5a8a3f98337f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5216893-9428-4151-9d88-1486eaa512a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7c9d26-24ed-4109-b722-87f16252f6c5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b7f11a-9ca3-4150-b062-f9ed0ddc465f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33979f5-0558-4679-a3e1-bc1d8b24026a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af4d2ea-5f9a-4636-bc3f-279870ccf88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d2dd62-3512-4975-869e-9c06d49ac72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e3b5bf-28da-4783-9721-5bee0458673c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8d2796-9cd8-4144-9973-7143482c2f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757aabcf-5083-4dd1-9e05-6ad5c6d2ffb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683041df-b73e-4202-95d7-1c206c6705d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426c2bb4-dec5-40b1-8810-c3226fb075d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa85a9a3-4514-41f9-93cf-616af8570a2d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07ab45e-59c9-4168-9bee-9b2c09673e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2811ebb5-74b4-48e6-b2e8-59f28ba6790d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba81a68-43d9-491c-9103-f42e595e0e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5758c8f4-5724-490d-8b2d-3dde97c0829a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c398d8cb-6f6f-4942-911c-733e5b9ea159",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5be4c8-00e3-404d-835d-ef695fcfa8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d758833-34bc-438b-97e3-64a0d8bf8c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e489bbb-2a0d-41b5-8e7c-d522c8df887e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73da7ded-2588-43d9-a8d4-1a532a8235b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964f87b2-3e9d-4f26-9dee-bacb71640a64",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80632324-8a7a-429b-9a9d-d9fa630871ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689299e8-5e74-4762-9419-3669704e0126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c24732-ad70-4c70-9dd9-dc6645567df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87e9757-2bae-44c9-88a6-4d904ec44a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2132a5ff-533d-4587-8df8-23ac59a191cd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39c33dd-4785-4610-a697-36d0db95dd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25cadf5a-9500-4b90-8da7-79bd24e62b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ed93ac-31bd-4ad6-b4c2-bb13b942841d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7422382e-9deb-46ce-978b-4de6ed21ed6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbc5b1b-a4ad-41ba-af87-317b85f0b326",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d15d3f1-a593-4663-899d-6626aa5cf672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4deb50ad-46f4-49f2-ac35-be401dbc67a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4841cd55-82d9-41c1-89f7-cc2128567535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff97acb4-c5cd-4b5d-8854-4e3f6c1cfb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee0f054-7ff4-445b-98c9-986cb382c8c0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801ef64d-a653-4c12-a497-8ee538149b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ade408-4776-4656-bbd5-6adf2e23fc4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50080c5d-8ae6-4e3b-8005-eaa767ee6900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd777f0e-a79c-4a26-ae49-cab415e6abe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d296685-8392-4ef4-a0f5-5e46018116ba",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4ba63e-d690-47d6-9cb1-3ec2b06e60c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c10406-c45c-4647-8413-4ed44b79a8cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c353449-5b3b-4f4d-a4c5-081d85b8f3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539246a9-6a08-4fc9-b04e-217c202459f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fe80e7-d563-441e-b659-11bbc0ec0e6c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221ad6c-c1f3-4c58-98c4-c3b0d85d00e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967a270f-6d57-4637-b563-5de3971045a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e02457c-6222-49a7-a346-f5a385726139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4738bf9a-5f92-4b6a-98b7-b2a985836424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdc05ef-91bd-4fa6-9c44-9db1565aa3ec",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5eaf8d8-2d6b-4a28-aa80-ceb875a78293",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce10974-529b-41b8-a5bb-d3030107c718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea6e552-c1e8-4ed7-804a-f84093e8e790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528a9af1-d7a9-4884-aac1-1b5e90ade87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8c338d-a6b1-459d-a6e3-79f76dfe7494",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77e27b4-6e85-4b71-b901-94b3c8c2d0a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f624d826-db1b-428e-9b59-0b1e890c37e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd353e8d-c55c-4aae-8a21-32477236550f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d710a876-8188-4b4c-9148-ad48e43bdc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fcac2f-dfd1-4769-a4f8-4696aaab5c7b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc95f3fb-32b4-4fa2-af83-535bf405e129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e9dacc7-660d-48f1-ba34-3cf054e535ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5914ae-b26a-46d3-bdd4-6960129f5e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f448fbde-4a71-421c-afe3-144e2e2e4969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4241b6d-1a48-41af-ab39-0b51ba427fcc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c5e85f-38b1-4de1-a4e7-cb306d56f739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2959c0e9-162d-4fcb-9fc9-e0ed35fa6354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7d43c2-2500-4f9d-9c9b-d3730ded2db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fcadeb-dfc4-47d0-bd2b-4e593e17c04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215837ae-e3f7-46e2-aa32-7047f3bed321",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44ba7cb-15ee-4f07-8fd6-a4c8eb7ffc88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe01cdc0-c6cc-42a7-b36e-4800cd57c7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a5c23e-4c51-46a0-a2e5-c2ae57a7af8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480330e9-f62b-4561-84ca-76497e645cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae7def9-603b-4ba8-a741-0a85d542cb1a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43342dab-e62b-40d1-8cff-e390b993958b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d33571-1a36-41c0-8345-e17856323d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32e0f86-456d-4388-afcd-6416aac4d17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b59c58-19a8-4bbf-a4f9-1da56417c7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a888b72-65ac-4757-b0c0-ec614c31a1b6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cfa89e-d432-468e-b311-40eb7cc90866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b010590-83d4-4a45-a64a-bfd0d10f91d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa527a05-36b6-465c-a776-3d83b7fbbb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef80c65-738c-48d1-9bc4-ca428b4b4e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97f7f52-85f8-4c51-9940-8b77f7a9f738",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef079d0-ea6e-4a69-b8fa-e79a88606323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d898715c-32ef-48c8-9ae6-174a9d891c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19a5116-48ac-47a4-8087-4ba4645b0fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bb6abb-8c34-4bcf-a56b-70391b872da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6368e559-0060-4500-9536-ebd19686ad6b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4367229c-2183-4185-80e8-93b5457003cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafa1d05-1e99-4634-b35a-83174c1a660a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0dfb1d-a101-46ba-ae68-38cec2836f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed34c27-ffd5-416b-ba05-fd63f5661a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c788cf3-6b3a-43ee-b8c6-c723340918c3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5484a1-a7e8-463e-9e53-9aa674deafbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236edf32-d0a2-4341-88ba-53c5f591a8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "636670f5-c974-4c89-b179-7c48d3753788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d928f375-f525-4706-bd6a-f2a39929edc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc3d32d-6433-4d73-9a56-87577b642fef",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f7c091-74c0-4fac-ae9c-24665771b193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4525d9ff-ada4-4a16-afdb-b45dc806bc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec2a553-0ae6-41ee-a413-df14a92691eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9c6a70-8018-47c0-8513-0a8817d3ce9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf95f4b-4155-4864-b9d9-1bc419ef6ed7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3063050-dd6e-4912-a736-ab1a519f7484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2cdc23-aa32-45ec-8f26-bd0c701c596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676039e0-18fe-47b9-bc4d-aa25cc4ce56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b10b1a7-2468-4754-a8f3-db050ae08b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e48fe8c-03fb-420e-ac26-337373297762",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3a13db-12e4-4c87-b421-c426dcbb5f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbfca7c8-7d66-4aec-84f4-b2c071ed2b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dc6a7a-a245-47bb-80dd-a5c85f6cbad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e796a904-97f0-4c40-9543-8c64cb398678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84df48a1-4ab7-49b7-b7a0-27c3a130516e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5659359a-4758-43fa-8086-cf82f1611ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e212216a-f89a-4c9d-b3d7-ac5197b14483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac960700-a6c1-4f69-8c84-af914a74c490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd06d3d9-4d5b-4066-9ead-93a4f9b6dabd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87c90f6-6f6e-4c56-821f-ff3c52dbfa05",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8596cd-5601-4ab5-bb0c-e5ea82913778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f814b56-d713-4312-bde3-367b89008f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbdc6c7-6100-4e2c-bc48-02fd0d76ec37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c58b2c-0d9a-45a8-843d-17c93c2159e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd474e8-be37-47b3-8631-44eb493a5efa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bf0d8a-f524-4c18-92c4-e980e7c2cea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19ddeae-12ba-4680-8a96-406f74013d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1049e6-ec62-4cd1-8aa6-67de39b691d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b2439f-f6f7-4383-bae4-659d08309035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b8708f-098f-4ff3-84d7-db535fb6a2ee",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cbabf5-5821-44bd-8809-3b424a8d9aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38e45825-1204-45aa-a30c-dd626f54b4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "780a1629-8efd-4948-8d56-060506366c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb996ad-0faa-4e95-82fc-1379a626645f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c7e7a0-8bc8-4063-a96f-60771eb9b359",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40db69a-ba68-44dd-83c7-a00ee23997ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d9af8a-e037-4b74-aa35-f29b90bf77ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf355a9-9bf6-44d5-a7c1-5397db5c7cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fdc343-4c69-4c8f-a41b-3f6f89c05ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21289bae-d154-4cf1-be8c-c11131e138b2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecba4e8-ee24-4afe-b021-37193ad73a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b306b67d-7ae2-4ec0-86f8-764639f8dbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73de335f-d386-4f09-90bd-499b0a40f1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6fe13b-9ef2-4c14-b025-09762ed4d97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5df998-f336-4b9d-b5aa-c7d814f3b917",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d49d01-7d59-4a05-90d6-a9a4ef814858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "877ddaf1-4fe4-4ab5-af0e-24350d573a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a8404eb-5ede-40d4-9edb-cb85df1bc927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44edbfaa-0461-4342-afe8-25744ded9439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5aa305-8796-4fb5-94fc-beca38042b0e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed540ee7-f782-4fd6-8590-4c3bebee7214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba30b7fc-9c8c-4ebe-ae54-cfe1d8b6ea80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cf360e-7e06-4e10-a7a3-3be8e20666f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd841db8-6c9f-42de-bb5b-a62cf65031ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c637822f-251b-43b9-8f90-da67acbf85c7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d2aaf9-6c20-4a17-a145-00c5a5503669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5bb127f-f40b-45f7-a1a4-39d3a27bc991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b671da5-73b6-4673-a1b5-9ada5d64b6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921de43a-fd24-4450-a98c-b734e9943779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65bae87-69c1-4309-bda6-9e78d7e4493e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d407c23e-ab98-4b20-8855-ac4787dc7000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6ea97d-8054-48b6-9057-93d2ef7d58f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fed1bc-eb3d-4f3a-a630-35b22fab9c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ace4e3-a0c2-44bd-b4a4-fec9e70d3629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e098aa90-b531-4eed-8bd2-50964e91a623",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5216d7-d15b-4794-aa1d-b3bcdc9b63f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3b5fdb-f5d9-4dbc-a8ae-4544630c51aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae50bb3e-1eb2-441b-9b6e-8a3f85e371bd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da03a3c8-635c-4e73-afbe-2e55c649201d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94b3f71-820e-4b36-bf43-20add98af204",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adae9f29-3c43-48b7-9a1c-fbefb0bcc660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78150ebd-8350-4abe-8720-f5d4e998efd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bee9e9-aa7d-4eb8-9ccb-ace6e84855ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70641fb7-eaaf-4534-9b4d-a78d35d154cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7352e35-24eb-4ae1-aa52-1f8c0047f868",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80850b76-f79d-438c-9939-f62941f322bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a340a9ee-a655-418c-9020-929d11bc50ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ce2f53-b621-44e7-b967-0e1259ed1c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ef51ea-967e-43cb-8830-0d10f6dda178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7324514c-b739-444a-94cf-9443ae3b6c0e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a31c1d-8af4-48fd-996d-d240d6e16209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c0a986-d8e9-47e8-b2ee-a11d647137dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d5622c-8be2-4b99-a0c0-5f35d6ddb1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5a3829-21d5-46d7-a39f-99bd269dfe7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67d3586-6e64-4051-9ece-dc99a6928b4f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f7a7cd-a06d-4bae-9538-6daa0e5c1ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b7cb73-486d-42e3-9143-64c43cf60e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3efc98-fceb-47f7-92a6-ca2c562ad8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ae2305-a659-4c4f-8815-a28b3c34604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949bd9f4-6204-4b14-9edf-678bd0687027",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c63977-9b7b-4bcf-8ab6-6288ed4d79e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "926b9a78-3c0f-4593-9fa1-790df0a4ad12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5f5624-8893-4d22-91a0-1583ff662ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef6377b-7f18-4deb-b40b-2801e5391fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2156a60-9b12-4b48-90de-29501865775a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17ea1f6-5a19-4d5a-839c-2095249884cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e92788e4-c30f-436e-a2eb-bfdc1831913a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107e29da-482f-47be-8621-023672f17181",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf10266-126e-4c6a-87f2-ccf644f54812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c3252f-f5f4-4688-998f-0269cd773d4e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964c5d7d-233c-4cc7-8e92-9fccd6c28778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e153534-ad41-45ec-b69c-3755bd2602e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e206fcd-5608-44c1-a6d3-e0dda84b265f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4690d048-7e48-4b0a-b5c2-8a09b6e70184"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2526b81-a137-4243-9043-e634186cb203",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6f88b7a-3e14-411f-9e30-b99a7661e6bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f63757b8-603d-48cb-b11b-e03230b48455",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15306ff0-0692-4ab1-bbbb-1223c6bcffbc"
                    }
                  }
                ]
              },
              {
                "id": "282ba258-70c9-4162-8fb9-b0637fbb101b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c16cf705-198d-44d7-ad08-28f8de76be46",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa1c3e0-9f92-40f9-b3f4-00cba4e9a81c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "585e087e-a2e6-4c9d-8435-ad46206e8f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bb391d-6499-4e7b-b7eb-9b3e50de09a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f11be09-233b-45fc-92be-c6b038ad81b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8b5865-1a2b-49c6-b55b-ac18b5b7d89c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b26b05-c396-4a9b-9c2e-f624b929d6b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4d93e6eb-1fa4-42b3-b256-e53742f293d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f1e832-35c2-4bca-998d-f19874ba2862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "211b94ba-ce7a-47fb-829e-3812bb4811af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0a6fd46-e706-49db-99f1-6e41ecc6e7b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "436d1534-6473-4f48-baed-9ab5a86dcb2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2b5fd0c-fa9e-49d3-b7d1-5467f038ad87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "795636ef-9c69-4101-8864-254e2a16fd61"
                    }
                  }
                ]
              },
              {
                "id": "03edb763-7789-422d-8655-9b4d666aed69",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "be713789-8c6c-4a81-8152-d86f6835a565",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595084cb-5aee-4fd6-b3c1-ef7e12bb46bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "21da5644-72a2-4fbf-87f3-be973d25afd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a2c0e8-2731-45e1-aeae-15f2ab050837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835980c6-f199-4c7e-b491-d0ffe58210bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0cf00adb-df1d-4fc3-b479-d3de0ef3c274",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a617242a-c8bd-4f63-94ed-530a852ef7f7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2db7372-b3fb-429b-a599-7bf171512317",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "81061bc9-eb62-43c5-b268-1b425ee1536b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4bd9851-7ad6-4393-8fe7-aa0c3384e5df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1516b85b-74f5-413e-8ec8-2b5aa42f25be"
                    }
                  }
                ]
              },
              {
                "id": "63cffcaf-c38c-4d65-a45b-e9c59434bbf8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e353403a-f2ef-4b6e-95bc-cd37d1a957c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "361de8bb-3f61-459b-860c-05d1946ecb75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29c26294-5e34-40dd-ae9d-c467df4f1db6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa757872-a6b7-48e2-a39f-3fc388dd500d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68c81fce-7b12-4052-8e52-0518c107af62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8e8db13e-e0ce-4f6a-b9b7-e9d0993c4ea6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfb117e0-3ebd-49cc-94a5-7a5beb1c608e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b9c66f00-36c5-4f4c-9fcb-afe9e3af1aa9"
            }
          }
        ]
      },
      {
        "id": "a8f54891-0ea5-4c46-9546-c0af348b6f97",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "635e535a-b73d-47b0-b262-375b6c6d10df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86efb8fc-cfed-4525-9238-cce9bf83ce43",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cc36bac-7f7e-4a87-98cb-a774d3e4108f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd35c47b-e010-4afd-a9a6-a6a58643485c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b2b370de-3c2b-4138-9500-8e017c4f8c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b07dc7a-c7a3-4585-890d-457fe15338e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd9e06bf-4b13-4813-a8ea-9c4f4da75551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2374b9-cc0f-4724-acb3-56c9bddabcd9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1d2528-c74e-47b3-85f6-2df687b52945",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f0d8d392-1f3a-4280-b0f6-cc1c156031c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c66063-8b63-4301-ae87-b0f3062c771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8de63f8b-b55d-4522-ad23-c68ab098e6c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0997d852-1d23-434b-9aa3-c1140e456d84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2577d51e-f16d-40b2-833b-d2d1eb7fd906"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "baeb7dd5-c7c1-4d1b-982a-9f95ff875ae4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96100854-2ad6-472d-b94b-d3e045f9c19d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aecb4f8c-a01b-4410-80f6-24023401b2b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1dd85b0d-3786-4f61-af77-df9e9eeb7846"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e2f22ff-ec12-4782-8d2b-c6a88730ed88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aea3ce47-e329-4602-8eb9-402347705816"
            }
          }
        ]
      },
      {
        "id": "ca394253-e2c1-448e-845e-58f9022abaeb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7f6c6301-fd6e-46f0-9467-df12d67eb189",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6454d29-d512-42cb-a394-3f3d1bacc10f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7e652b0-8dec-492f-ae2f-d1db3a0fb73f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca6c42f-36b9-427e-8c68-e2435f079be9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e57bfab-342b-4b06-857e-8d9b4011cf94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0308d7-95dd-4c74-8b2f-d7f4c842c22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07706b6b-62af-48d0-a40c-90e5d9d78728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbdd45c9-3b85-4579-b33a-dd484c63fe50",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad52eeba-5192-4ab3-b0b1-4c5b40b837dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e52e1daf-c478-44be-a3eb-2a9bb089a44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be0699c-7106-4fb8-b4c6-987f8290335a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d245b2ae-cc6c-43ff-92c5-c28c3c5e2d5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "828e2bdc-ffc8-4d09-8ae1-c9527deabdec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba1c943a-de98-47d5-bf52-cd791d35c657"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7306a56b-997b-4df9-baa3-03edacebda10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bc2aba1-28be-4392-9228-5b51b5fbc309"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a27fa36-443f-44b0-a153-789425357640",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bdb55ea1-4624-427a-a6e5-8e7255c8b6ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4a9b55c-b226-40bf-86c8-76b9282e5e68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6d519ff-2694-4d1f-a58f-782ee054317c"
            }
          }
        ]
      },
      {
        "id": "6f5d50ea-8e1e-40da-9fa3-a4e93344d7be",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6e4833b8-2b7f-4847-962b-c8b5ce941717",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93faef06-74f7-4ca0-a8f2-0794524d4832",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8242461-5ed8-4c0c-bb08-1b05a1c939a6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dadb172-fff0-41e6-b5dc-4888279e2974",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dc5ce32-e32e-4da5-b66a-80efea39ba48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe366cbd-9739-4397-84ac-e50a94cb0edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "217f06da-5055-4c36-b301-1b4a02c4e8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6f8a8e-bef6-4373-a77f-2132e06ffcfa",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437d44df-c85a-4622-bbf1-04014acb379b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "306e5604-98f0-48b6-abe3-9e1635c8a28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0bc4b0-d752-465b-8101-2d6e6eff3e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad589ed4-eb1a-49d7-aa5a-4dafc633d4fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2efda019-0a1a-4016-ba16-5ff2ba51d707",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35b2fc14-e3e4-4d38-816f-443afcdef661"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74850c6e-3001-4894-8435-dab2c9948fe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c0bdaa5-695b-4ad8-9206-ce06a8140efb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1130c5c-b0cf-4161-b138-b40602128b52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ca41bcc-30cd-4bce-829e-6bc1ad5c157a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "309544b7-0d48-4f66-a01e-a3545457c95a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f3132c3-4d18-46bb-8e00-48b728941905"
            }
          }
        ]
      },
      {
        "id": "9b55628a-e756-4d8a-94a2-ca913952f58c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e78eeaf6-e876-490f-9e83-f19f7d7fa177",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "843ad82e-23c8-4b8b-a39c-7da6f8c61c3c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ac152a6a-2e7c-49a6-adb5-c5162d0598d3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55ec51ff-0b17-4439-9e2b-26d75770498f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cbf4fe9-ff9d-43ee-9dab-896e2819f26b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.39230769230772,
      "responseMin": 8,
      "responseMax": 357,
      "responseSd": 30.44894747551816,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679359057996,
      "completed": 1679359091169
    },
    "executions": [
      {
        "id": "6835a30a-5b09-4fbe-8e57-add7b8a38de7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a70c32fa-e997-45a9-b7b2-f1510283cd16",
          "httpRequestId": "c35db5e8-b7fd-4be2-9baf-172cd541bb3d"
        },
        "item": {
          "id": "6835a30a-5b09-4fbe-8e57-add7b8a38de7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "47e761f5-d3df-41d1-a298-45a91904b7c2",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 0
        }
      },
      {
        "id": "0bc40d13-17c9-4443-8b98-da357d10582c",
        "cursor": {
          "ref": "080eccfc-7ced-4b9e-bce6-6c470e58c580",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1324a5a4-9950-4e3e-bd34-c28bb6f8ccc1"
        },
        "item": {
          "id": "0bc40d13-17c9-4443-8b98-da357d10582c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8a71a1c8-2a39-4d3b-8664-352b96cce806",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "160636bc-bffc-41d4-b0d2-f0a02e00e1ba",
        "cursor": {
          "ref": "10e77cde-fdbd-4655-aaee-c9c161650bc5",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ae5f069a-b21d-4ea7-bb88-8c308183e6de"
        },
        "item": {
          "id": "160636bc-bffc-41d4-b0d2-f0a02e00e1ba",
          "name": "did_json"
        },
        "response": {
          "id": "13c53ca7-9e86-466c-943c-c01181cc0b7e",
          "status": "OK",
          "code": 200,
          "responseTime": 210,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e682644-e2a0-4071-ad2d-a3329628ffc5",
        "cursor": {
          "ref": "0d55b711-7276-4325-bb6c-b86d1d5b670e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6307f5a6-da7b-490f-8ead-d71478b47e6d"
        },
        "item": {
          "id": "4e682644-e2a0-4071-ad2d-a3329628ffc5",
          "name": "did:invalid"
        },
        "response": {
          "id": "953f65cb-165f-4710-a7da-35a1f32f9ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e682644-e2a0-4071-ad2d-a3329628ffc5",
        "cursor": {
          "ref": "0d55b711-7276-4325-bb6c-b86d1d5b670e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6307f5a6-da7b-490f-8ead-d71478b47e6d"
        },
        "item": {
          "id": "4e682644-e2a0-4071-ad2d-a3329628ffc5",
          "name": "did:invalid"
        },
        "response": {
          "id": "953f65cb-165f-4710-a7da-35a1f32f9ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b1bc2f-fdf0-4717-aab8-4d1d52bbae17",
        "cursor": {
          "ref": "e14b564d-b00f-4204-a767-192418ee894b",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6e22c069-5fec-4a73-975e-0d4cd5936ed4"
        },
        "item": {
          "id": "85b1bc2f-fdf0-4717-aab8-4d1d52bbae17",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4c482c7b-26f8-4223-a7d7-2885c954dc86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 120,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781e60d3-1846-41e6-8840-ae795c5d70eb",
        "cursor": {
          "ref": "c5d8a230-cab2-4eaa-9147-9e6c63a025d1",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ba229700-147e-46b6-a4b2-9de57a626190"
        },
        "item": {
          "id": "781e60d3-1846-41e6-8840-ae795c5d70eb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1c06b63d-f7b2-440d-a799-ea3232d9cbaf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcde54a1-aefe-4b37-b0ad-d14f2bd657c5",
        "cursor": {
          "ref": "3a20ff45-2f98-403d-bf90-66fa94f319a2",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e365358f-683c-4768-9044-50c698b000e2"
        },
        "item": {
          "id": "fcde54a1-aefe-4b37-b0ad-d14f2bd657c5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "64d66749-91aa-4b83-8109-0e9b94097a5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5120a3a7-0b51-45ef-9bb4-0681bb52d48d",
        "cursor": {
          "ref": "751b39b5-d620-4c9f-b7f7-270ba5f33c35",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e47cc94-8392-413d-a612-25f30310635e"
        },
        "item": {
          "id": "5120a3a7-0b51-45ef-9bb4-0681bb52d48d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f2d1e60b-e1be-44b9-bceb-233625c4d33e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5120a3a7-0b51-45ef-9bb4-0681bb52d48d",
        "cursor": {
          "ref": "751b39b5-d620-4c9f-b7f7-270ba5f33c35",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e47cc94-8392-413d-a612-25f30310635e"
        },
        "item": {
          "id": "5120a3a7-0b51-45ef-9bb4-0681bb52d48d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "f2d1e60b-e1be-44b9-bceb-233625c4d33e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85fb90b-b5e8-4882-9790-5a43318357dd",
        "cursor": {
          "ref": "e4ab2a61-bfa6-4bbd-8ab5-d86a8b95b8ec",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fb019695-500f-444a-bc15-3359e11623c6"
        },
        "item": {
          "id": "a85fb90b-b5e8-4882-9790-5a43318357dd",
          "name": "identifiers"
        },
        "response": {
          "id": "7a500db2-8201-4849-bb31-4a3b100d5e9c",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80802b3-2b5a-493a-b694-cdc24e479396",
        "cursor": {
          "ref": "07795f07-17b9-4764-83ec-7038281f1d28",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8dbb7db5-8700-4890-89db-aa278397a65b"
        },
        "item": {
          "id": "e80802b3-2b5a-493a-b694-cdc24e479396",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a864dcc6-a88f-4cd8-ae57-9c8d868c99c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80802b3-2b5a-493a-b694-cdc24e479396",
        "cursor": {
          "ref": "07795f07-17b9-4764-83ec-7038281f1d28",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8dbb7db5-8700-4890-89db-aa278397a65b"
        },
        "item": {
          "id": "e80802b3-2b5a-493a-b694-cdc24e479396",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a864dcc6-a88f-4cd8-ae57-9c8d868c99c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257d3d74-24b0-4a76-9052-d54dbd479167",
        "cursor": {
          "ref": "fa6c82ad-87bc-407d-b9f3-fb4c84f8ad83",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c5c33e0e-b75d-418b-a1d0-700bc540a4f6"
        },
        "item": {
          "id": "257d3d74-24b0-4a76-9052-d54dbd479167",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b79438ce-0dd7-4754-b53d-2c802b778499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50742ce3-2f45-44a5-8e82-3ce7c18a846a",
        "cursor": {
          "ref": "e16ec11a-f57a-4d84-b675-3136b2c7697e",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d9b03ce3-706c-437c-a5c0-77cbe648444c"
        },
        "item": {
          "id": "50742ce3-2f45-44a5-8e82-3ce7c18a846a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "53674cc8-dd28-4515-8804-fb5118fc6bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b59c208-797c-43b5-bc8c-7d5dc8732a7d",
        "cursor": {
          "ref": "81026d7b-95fe-4ff1-a77d-0f9101b9e039",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2e1bca9f-ef78-4d5b-802e-7753800d710d"
        },
        "item": {
          "id": "5b59c208-797c-43b5-bc8c-7d5dc8732a7d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "eaf1f6d4-f041-4e4b-87af-dd4c028e1c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292a3d8f-c3cd-455a-87c5-c03e347cd6a0",
        "cursor": {
          "ref": "c88c7db4-c7ea-4ca6-aa13-9983df9e5c86",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fb7ac6e6-5ba9-4b0f-a740-0dcf26b4c508"
        },
        "item": {
          "id": "292a3d8f-c3cd-455a-87c5-c03e347cd6a0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d1cecdbe-2f8f-4f5d-b41b-59b25c56c7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7af3fb7-9242-4731-9e02-6e8e2daa93d2",
        "cursor": {
          "ref": "869c3e94-27cb-4864-acf8-0972f4ff2b13",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7925855d-73de-4580-9596-08f0d6e27662"
        },
        "item": {
          "id": "c7af3fb7-9242-4731-9e02-6e8e2daa93d2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fc43ccfd-83d4-45f3-835f-d49a2caf8fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ceba53f-57a2-4a19-ba24-b837564d6abe",
        "cursor": {
          "ref": "d4131f53-06e1-4f24-8a42-a4aec3cc16b4",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4167225e-35f6-4d6e-b989-c813141c6b29"
        },
        "item": {
          "id": "2ceba53f-57a2-4a19-ba24-b837564d6abe",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "58b432a0-88b2-4f10-8704-306fc2c61d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc731cd2-071e-4904-baeb-766824775a8c",
        "cursor": {
          "ref": "13bad346-f2f8-40f7-bf1c-5769be0324cc",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ab5ed37d-410b-42fb-865a-562b94261e35"
        },
        "item": {
          "id": "bc731cd2-071e-4904-baeb-766824775a8c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3807f679-4bc5-4798-a688-7ed8475b1b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ecf65b-cc9e-4598-aefd-ec7b288164c6",
        "cursor": {
          "ref": "7c70fdc1-9543-4480-b33d-1471cf21b3ce",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a2050bfa-803f-408a-b8e1-228cac344184"
        },
        "item": {
          "id": "a1ecf65b-cc9e-4598-aefd-ec7b288164c6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1495e2d6-b242-4bcd-9e4d-faf27eee8c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ff8f4b-464c-483f-8b11-58bc9a0d12f7",
        "cursor": {
          "ref": "02a0d493-886a-4ddc-8bc2-478cde9c132e",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "86b9ec65-1d4f-4b3d-86d4-2f50d8c2f78a"
        },
        "item": {
          "id": "f9ff8f4b-464c-483f-8b11-58bc9a0d12f7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5d8c8916-c32f-48bc-bf18-afd4d9c17712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25675e70-4000-4c42-92d5-21195dfe70fa",
        "cursor": {
          "ref": "75b9379d-5ada-44a0-b052-2cf2482396a8",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "32341f1f-36e4-4c16-9431-7983e8bf5bcf"
        },
        "item": {
          "id": "25675e70-4000-4c42-92d5-21195dfe70fa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d96b7f6d-2e8b-44de-ac9b-103fb85144fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce255fd-f703-4edc-8878-c97a91ed6f67",
        "cursor": {
          "ref": "5e5be23f-d9de-490b-83d4-20035579e21a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0824bfd0-e1c7-461c-9039-02b525fec97d"
        },
        "item": {
          "id": "fce255fd-f703-4edc-8878-c97a91ed6f67",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c794d38b-87a2-4602-ad65-5819120a2c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b60706-840d-4024-91e6-b11d58b94953",
        "cursor": {
          "ref": "41b4f1b5-aab9-43d7-b29d-ba7a789d0bca",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "823a7913-d144-4bc7-9348-c441775d700d"
        },
        "item": {
          "id": "23b60706-840d-4024-91e6-b11d58b94953",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2474b708-52a3-41b3-a704-09134fe89ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622f7123-3f14-43fe-9587-56685f566c48",
        "cursor": {
          "ref": "1a921ec8-8c56-42c1-b6f2-11aef87a5e5e",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4463ca2c-2230-49d0-9dbf-bac130479eb1"
        },
        "item": {
          "id": "622f7123-3f14-43fe-9587-56685f566c48",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "19fbf164-0cd3-4c44-afc0-1942714fb607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694dec03-6dd8-451c-9e69-218d20bcc21c",
        "cursor": {
          "ref": "1728c1f7-7ca6-481f-acb9-d3a361cecad0",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "43aea6a9-6bab-45e1-a3e5-4934ceb69ea8"
        },
        "item": {
          "id": "694dec03-6dd8-451c-9e69-218d20bcc21c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "376ce54c-37a7-40e8-a4fc-9624a5d9d7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f981a67-b674-41e0-9e1a-6682b95b2930",
        "cursor": {
          "ref": "61894d18-eb13-40f9-a6eb-be667b2ee124",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "eba4eddf-5fa6-4079-96fe-7f18a90b20e2"
        },
        "item": {
          "id": "5f981a67-b674-41e0-9e1a-6682b95b2930",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "de8ad613-1c6e-45d7-9ed9-088ca17cedb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cbd52c-88e6-493c-ab8b-6b6ec6d893bc",
        "cursor": {
          "ref": "15e0e2c7-73f8-46fb-acad-4b0b730cac82",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "86ecadc8-c5c4-4d04-b26f-e3d8a92e1ce5"
        },
        "item": {
          "id": "a4cbd52c-88e6-493c-ab8b-6b6ec6d893bc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "44c25e53-c2bb-40a0-bdd1-aaa6bab10634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75efa88-bd7b-4f56-9c0b-8a403f83426a",
        "cursor": {
          "ref": "a5914b84-c600-40fb-9f96-627c465727b4",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4713d3b5-73c5-47ab-8746-ee1ec2e022ac"
        },
        "item": {
          "id": "d75efa88-bd7b-4f56-9c0b-8a403f83426a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "120b5bd3-bd1d-42b7-9dcd-0946b6e1ff8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a000fe4-1e81-42f5-bcc1-f5ba5687fd94",
        "cursor": {
          "ref": "3a4a70bb-7f79-4377-a464-749cf2c03a0e",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "abb2f151-53e4-4139-872e-de72e49f9286"
        },
        "item": {
          "id": "3a000fe4-1e81-42f5-bcc1-f5ba5687fd94",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b87b2f84-d4bf-4d69-a6cd-242f0d55ecc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695839bc-5b32-4720-a59f-24bde8ff8f0f",
        "cursor": {
          "ref": "0a45d987-9979-4f71-ae98-512b6ce8d886",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9454b25c-c143-41ab-9be9-6ce7bb58c97b"
        },
        "item": {
          "id": "695839bc-5b32-4720-a59f-24bde8ff8f0f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1b6082ff-1b1f-4831-8e38-f8361204c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b1c242-33d2-40b9-a433-7660d1506495",
        "cursor": {
          "ref": "11138d21-29ad-4514-b4c2-c00b60400405",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2cf73dfc-8932-44b0-acd2-3b074a7b90b2"
        },
        "item": {
          "id": "21b1c242-33d2-40b9-a433-7660d1506495",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6dc00035-b688-4f4b-8e8f-7d154de9dce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cde671d-e8cb-4b11-9af6-af32f25a966e",
        "cursor": {
          "ref": "a6d233dd-1fb8-4cbc-8452-a38112b0f81f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7289f051-63f3-4364-99c0-7e3441dc11f8"
        },
        "item": {
          "id": "0cde671d-e8cb-4b11-9af6-af32f25a966e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "908a3754-201a-473a-9a4f-448f6025e1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a2cb72-750c-4529-9a98-056bf0f10262",
        "cursor": {
          "ref": "6fa8ecee-8814-475a-9b9d-0204f2c87828",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b988b68e-af5c-471b-8785-490a3b6b187c"
        },
        "item": {
          "id": "a6a2cb72-750c-4529-9a98-056bf0f10262",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0acfced2-2d6e-42a0-9a77-2dfe1b315887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab56a9fa-7071-4dc7-a9b6-ec8a37d2c0bf",
        "cursor": {
          "ref": "aacfc8ff-69e2-43b7-9b35-c52f98d8f3c1",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3b1d2e0f-9796-4ac8-b203-b88b984dab27"
        },
        "item": {
          "id": "ab56a9fa-7071-4dc7-a9b6-ec8a37d2c0bf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7ed952fc-ee89-410d-aec1-934fad2300d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5737a179-3edb-4b61-90ae-98c83e7f0c6b",
        "cursor": {
          "ref": "5a8ab909-60fd-435e-941d-9dd780c4ed1f",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "216b47b2-1a3f-426b-bad9-b6b5c93747db"
        },
        "item": {
          "id": "5737a179-3edb-4b61-90ae-98c83e7f0c6b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f83086d8-2271-481d-ae7b-4f710e02a88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21584b71-e5e1-4ee5-aec6-6849ff99ecc9",
        "cursor": {
          "ref": "9e11a4ce-e635-4223-8bf1-c028703fa9f4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "80579301-a118-49e0-a0ba-57ad8681649a"
        },
        "item": {
          "id": "21584b71-e5e1-4ee5-aec6-6849ff99ecc9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1fa52b73-52dc-4ba7-9bfc-9b7eb7cc1261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e69755-984f-483c-8edd-8c90ac1d23b5",
        "cursor": {
          "ref": "510ad797-8304-4eee-ac2d-bb0cb23b216b",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1d1e1b2e-5115-42bd-9566-8600c1ad4198"
        },
        "item": {
          "id": "21e69755-984f-483c-8edd-8c90ac1d23b5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "01d9a817-c726-4c24-a466-d82ce94c1474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6348947-7bcc-4bae-a30f-c41c01449ed0",
        "cursor": {
          "ref": "30827722-5184-4e53-bf38-172881ce1588",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "14e6f5d3-2962-423b-9dbc-4ba6de783bf6"
        },
        "item": {
          "id": "e6348947-7bcc-4bae-a30f-c41c01449ed0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "33c63258-a6ec-44a5-84d8-fd07fa87cd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5d2bda-b355-4097-89a4-64476ce1795c",
        "cursor": {
          "ref": "33677279-485a-4d21-b3bf-88205f95574c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3224b68f-1cd9-4a03-a647-bf326fb87231"
        },
        "item": {
          "id": "eb5d2bda-b355-4097-89a4-64476ce1795c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1b73f205-1b0d-486f-9851-851728ddc898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93806c0-39d5-440e-80c9-c128631b7285",
        "cursor": {
          "ref": "2bfacb49-b84e-4863-acaf-9bc574e8f112",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "106a96b5-cac1-497b-83c8-16e8a02fb001"
        },
        "item": {
          "id": "f93806c0-39d5-440e-80c9-c128631b7285",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9078711c-5861-4730-91a6-f052658f7473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf271d7-38be-42a0-a4bd-864f7f59c756",
        "cursor": {
          "ref": "c7dd646f-2e56-4054-ab27-7cb581f039f0",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "561ac0b4-b2fa-4b42-b3d1-061e4e3885c4"
        },
        "item": {
          "id": "9bf271d7-38be-42a0-a4bd-864f7f59c756",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5d4d1059-8da1-4b20-839c-1fa4dfa3bf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815f617d-6310-4a5f-a2b8-72a55ae1510a",
        "cursor": {
          "ref": "d6bd05c2-50c9-4328-9a53-92fdd51fe49f",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dfb59200-d42b-4bd0-b815-59c2af83b2c0"
        },
        "item": {
          "id": "815f617d-6310-4a5f-a2b8-72a55ae1510a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8a876a78-269e-43fa-82b4-1cf1ef3a5bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4726e71-a947-43cf-8ab3-0bb70a5a91af",
        "cursor": {
          "ref": "7d866942-c88c-44a7-b961-45e67fa17c8a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d21a1a4e-4d45-48fb-987a-cb49a7bf9548"
        },
        "item": {
          "id": "a4726e71-a947-43cf-8ab3-0bb70a5a91af",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3ec53905-af09-4131-b5fe-1a9d8c1d375e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0897c08b-aa77-4d80-ac63-b2aef4309b02",
        "cursor": {
          "ref": "428e91b5-4b04-4c37-9414-aa3363fde8d0",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "becf1625-5443-4dd1-be18-d2da09684e61"
        },
        "item": {
          "id": "0897c08b-aa77-4d80-ac63-b2aef4309b02",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7cda04de-3b49-4790-ac43-3eba2e5be97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654582c8-8363-473f-bbe5-d78c992c79cd",
        "cursor": {
          "ref": "e937398f-df4a-4554-9a94-35a63739340a",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1c51c98c-87b1-4be1-8e6d-232d74d50f2d"
        },
        "item": {
          "id": "654582c8-8363-473f-bbe5-d78c992c79cd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "41ae9be9-39b1-4860-971b-49c859c4a0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a9ff03-1afe-4cd1-9e9f-2ca340da2c38",
        "cursor": {
          "ref": "ec919acf-d4e7-409c-a0a3-1cfba90a042a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b7d4d961-74a5-4dc2-a88d-d9f5d58a2f9c"
        },
        "item": {
          "id": "c5a9ff03-1afe-4cd1-9e9f-2ca340da2c38",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2aa19451-5d4a-417a-ae8a-b492953bf7b4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01052e74-541e-400a-ae5f-543e070dc941",
        "cursor": {
          "ref": "37cc3e68-0570-4600-8ac9-e1e3ad31f67f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "786fca2e-409c-48a6-99b7-829ee31cb1f6"
        },
        "item": {
          "id": "01052e74-541e-400a-ae5f-543e070dc941",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5db2c5fd-8cf7-4fe0-a69d-83740023b12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f5d520-5e09-4253-ab61-4329642f3bc7",
        "cursor": {
          "ref": "2feef316-d46d-4dc8-98ab-31c287c9c35e",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3a4a0ec1-027c-4036-9837-82fd207ca9fd"
        },
        "item": {
          "id": "76f5d520-5e09-4253-ab61-4329642f3bc7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "958f5141-87d1-4503-a936-fdf81e9032c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df86d655-7ef7-4eb4-8921-236e7a632847",
        "cursor": {
          "ref": "3946686e-fcce-46cd-a269-1e3028a11a4a",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c1bf88fe-625e-4b1c-8009-140d5b99293e"
        },
        "item": {
          "id": "df86d655-7ef7-4eb4-8921-236e7a632847",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b8d6aef2-23a6-48b2-beef-67749145638f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e59726-236f-486e-8ffa-2dd26fce825d",
        "cursor": {
          "ref": "20489ea0-8380-4837-a2e3-8fd8eb1062f8",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "54d3a9c0-45f4-4566-9ce2-7b9636887567"
        },
        "item": {
          "id": "f4e59726-236f-486e-8ffa-2dd26fce825d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bf9d7b54-1c64-4951-92cb-26a7c1579098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f724a4-c252-4c58-946e-f52a74429b71",
        "cursor": {
          "ref": "d28d69e9-455a-4c74-b680-8cada777b796",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "33369fd8-e233-44db-8e38-f888cc0ae27c"
        },
        "item": {
          "id": "80f724a4-c252-4c58-946e-f52a74429b71",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f4d11dd0-9749-4263-83ce-85f610684906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c74fa2-1baf-4ce9-aa30-fdcff0144190",
        "cursor": {
          "ref": "2b5b7148-9a79-42d1-9655-3e691ce51aa0",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "239a0a7b-3e9f-494d-afb5-fd68183d346d"
        },
        "item": {
          "id": "b4c74fa2-1baf-4ce9-aa30-fdcff0144190",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fdaeb8e2-a6aa-4d68-9e45-0ca654b6c47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a627468-24df-4336-b2b3-3091eefd35bd",
        "cursor": {
          "ref": "bc176509-b694-4c99-9d9a-c866d73f6a58",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0ca8fb9d-0db5-4fb2-89a3-347d798b4362"
        },
        "item": {
          "id": "6a627468-24df-4336-b2b3-3091eefd35bd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2f752ceb-99f5-4f2e-82fd-541590857220",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdae09f6-5c77-4265-aeaf-9e7cc88a8615",
        "cursor": {
          "ref": "f333ac20-9f72-4a3a-b764-d6b4665662fc",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "96fee630-7b3e-41f8-8dfe-d58c70eb55e6"
        },
        "item": {
          "id": "bdae09f6-5c77-4265-aeaf-9e7cc88a8615",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "387c075a-bb18-4efe-a8de-809166be6be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb754340-32a7-47f6-9b5a-6a9b69c786de",
        "cursor": {
          "ref": "197821a8-e020-4126-98a2-affe659764f1",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f1a5e813-96ca-495b-8acc-64347d140149"
        },
        "item": {
          "id": "fb754340-32a7-47f6-9b5a-6a9b69c786de",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4bd9b6ae-2dcb-4110-8eef-55767eff6405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371ac42a-3bec-47be-9759-c9aeddc0eb98",
        "cursor": {
          "ref": "5f6c1c23-96a6-4ca2-a416-dea1fe7bd54d",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0483cc37-1ca6-44fc-aa55-eb52a386388c"
        },
        "item": {
          "id": "371ac42a-3bec-47be-9759-c9aeddc0eb98",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f98f35ba-e8a8-4471-8a8e-7b5a418d8164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdc2de5-1ceb-4cf9-b06c-ae489c743c0c",
        "cursor": {
          "ref": "03d2d745-c61e-49b2-96ad-509d27b77d0c",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7be75742-2e9e-4da5-aa0c-316a6db348cf"
        },
        "item": {
          "id": "dfdc2de5-1ceb-4cf9-b06c-ae489c743c0c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "eed7b2c7-a4c1-49ff-8d80-610117565dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b05d0b7-55ab-4b62-880d-8bea8d334ae5",
        "cursor": {
          "ref": "236f3689-45ca-4baf-bd18-013b0e2f8bbf",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7daaad8f-692f-4754-bf1f-4696bdbbf92c"
        },
        "item": {
          "id": "1b05d0b7-55ab-4b62-880d-8bea8d334ae5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bf09477d-f061-4022-bdc3-c6bff7fe0f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffc77e4-f2ae-44e6-b3f9-60e8c110dbce",
        "cursor": {
          "ref": "25c3fc05-f6d8-478e-8fff-d97fa7841820",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a79e270b-ee03-493f-8d82-0fad6686db42"
        },
        "item": {
          "id": "5ffc77e4-f2ae-44e6-b3f9-60e8c110dbce",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c07600dd-ca43-42b5-b213-3a49dae981c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445888b3-c66c-4ea4-8791-372143b09613",
        "cursor": {
          "ref": "5823128e-8daf-42e4-ac97-8c991f3652ea",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6545eaad-9789-4c73-bf61-7ee3d8d00a32"
        },
        "item": {
          "id": "445888b3-c66c-4ea4-8791-372143b09613",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "86c398ce-7c0f-4550-878b-a0a6c037ad6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db84f681-977e-4ff1-8d53-bbf5940705df",
        "cursor": {
          "ref": "526a5194-6c32-47c8-af32-90c43ca4bfa3",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a2b0a4b9-bd08-4200-91d2-65f238044db6"
        },
        "item": {
          "id": "db84f681-977e-4ff1-8d53-bbf5940705df",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "343575b9-01e2-4de3-a14c-35f52476781b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3487d97-5f1d-471b-bdc5-96ac3fc28a92",
        "cursor": {
          "ref": "0b705362-1962-4a13-886a-6723f4be347b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "897f9bfb-c46c-49f1-b9db-425a5641fa34"
        },
        "item": {
          "id": "f3487d97-5f1d-471b-bdc5-96ac3fc28a92",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eb838401-3499-4a0d-bcd6-588c3d3a1496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59000fdb-821c-438f-853f-a1ea895f869a",
        "cursor": {
          "ref": "f7862a90-d1e4-433a-96e7-b52f6b6fbe4b",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fe88da60-9a71-49da-bc32-fc5f53455954"
        },
        "item": {
          "id": "59000fdb-821c-438f-853f-a1ea895f869a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "feefc84f-96f2-4b90-83a5-18148d18bddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2fc55d-ba2f-460a-aa72-71cfa1b5d58e",
        "cursor": {
          "ref": "a922cc86-70d7-47d3-be0d-d0e323f6be39",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "15b3fe3c-c68e-47c1-acd3-fdc67a5087ca"
        },
        "item": {
          "id": "6f2fc55d-ba2f-460a-aa72-71cfa1b5d58e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a77639bb-0f25-458e-ae37-57a2343d5173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631e96e4-eeb5-493b-af13-795a8f6b91ac",
        "cursor": {
          "ref": "cb95c1ca-1cd1-4dac-93a6-60e50615cec2",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6ca9c5f4-d7e0-45b5-85ee-b117cb668d10"
        },
        "item": {
          "id": "631e96e4-eeb5-493b-af13-795a8f6b91ac",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f8d5ce66-1588-446f-b6cc-1f8ee5df492b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbdc0ae-0581-4565-89ad-1776c9a6950b",
        "cursor": {
          "ref": "0cd06f53-2418-4811-8d21-6166e35862f2",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "03123808-0cbc-4136-81bb-d64e3b487793"
        },
        "item": {
          "id": "dbbdc0ae-0581-4565-89ad-1776c9a6950b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f7d9c54c-6381-477c-a2c3-2925755bde8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9091f666-761b-45fb-879f-0b6b840f4d0a",
        "cursor": {
          "ref": "c892f1df-4227-4e24-a69a-36e000ce97be",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "895865b5-6b3f-42d6-aab4-79d553390c06"
        },
        "item": {
          "id": "9091f666-761b-45fb-879f-0b6b840f4d0a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a9689afe-5a37-4ed7-b6b4-dc9b09193e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983b3e0a-03e1-4bcb-83d0-1bbe939daaf2",
        "cursor": {
          "ref": "d6a17846-ce2e-4237-bb33-34dfdd322cd7",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "40d2a80b-f132-4b1b-b5e0-508487ac4b1c"
        },
        "item": {
          "id": "983b3e0a-03e1-4bcb-83d0-1bbe939daaf2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b5c552cd-4ad2-4126-9006-1a7852a9a673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316d2917-a71f-43df-8a16-4f5a34933055",
        "cursor": {
          "ref": "6980873e-d356-43c4-abd3-0a38d3c6b861",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "07d26ee6-c1cf-4c10-926c-39418bf4c64a"
        },
        "item": {
          "id": "316d2917-a71f-43df-8a16-4f5a34933055",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "16071f7f-eea4-4795-be59-364d13b5fd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6475d8a-ed9e-4d82-a316-00b117a82b86",
        "cursor": {
          "ref": "64854774-6e5c-4c6e-ab52-8b363e873079",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "eb45593d-835d-49a7-a733-033701242d4c"
        },
        "item": {
          "id": "c6475d8a-ed9e-4d82-a316-00b117a82b86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "018be114-21f6-464b-8b82-84b908f32c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3c595d-73df-4a32-bddc-659e21950bfe",
        "cursor": {
          "ref": "fe848e5d-dbf6-4143-bd27-4d3010f74bad",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2d87621d-2c0b-4283-ba32-f51003336852"
        },
        "item": {
          "id": "0a3c595d-73df-4a32-bddc-659e21950bfe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b9840590-f6f1-4f33-8882-4ebb07b31c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dab073f-305b-4d3e-98a1-f5c136539ba7",
        "cursor": {
          "ref": "61679cee-12e4-4250-a500-ea4c2a8e421d",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d9d63978-b189-4848-9e16-9a3542af4d05"
        },
        "item": {
          "id": "4dab073f-305b-4d3e-98a1-f5c136539ba7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8e7f9593-d029-40c9-b99d-b2073ce30c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52574087-517b-4b51-a9b4-f175c1b187ac",
        "cursor": {
          "ref": "1c5ba5d5-e2a7-44aa-88e0-146cf0363757",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "346533a4-450c-4486-99e2-bd2f9c289147"
        },
        "item": {
          "id": "52574087-517b-4b51-a9b4-f175c1b187ac",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "44d75087-12e3-4113-9ff1-801556758c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e24f081-cf99-47f7-98e3-13be45b433e7",
        "cursor": {
          "ref": "e8a6098a-7059-414f-be7a-8699cc2444fe",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "11d0ee45-b18e-40e8-9d31-4823df308693"
        },
        "item": {
          "id": "1e24f081-cf99-47f7-98e3-13be45b433e7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a491b45b-a47d-4711-8749-4396969de553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46edd4e-f181-4eb8-b8b8-f373eba23627",
        "cursor": {
          "ref": "9783129c-f7ae-4774-af06-1038034eab6d",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f0680ad7-852a-405f-8d30-53ddd59c21bb"
        },
        "item": {
          "id": "e46edd4e-f181-4eb8-b8b8-f373eba23627",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "755456ad-9c9f-481c-b843-236b736447f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb8826e-59e6-45d4-9866-7a2f2d357513",
        "cursor": {
          "ref": "7cb64a05-9fe3-4765-94dd-471167ab0742",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "010fe978-b786-4a01-8acd-87142aaee09d"
        },
        "item": {
          "id": "ddb8826e-59e6-45d4-9866-7a2f2d357513",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d2e94d50-b9d3-4026-acfc-81d8b538c1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fffad6-8593-425a-91c9-45ff190316ee",
        "cursor": {
          "ref": "0f0354f5-f0cc-4a01-b5d5-0a924c231b41",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "08627b10-4b4d-460b-9efd-abd12c2161a4"
        },
        "item": {
          "id": "c3fffad6-8593-425a-91c9-45ff190316ee",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d36a72c3-36f8-4bef-bbeb-05290dd55be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dd4980-78b3-426a-8a88-75a671886be5",
        "cursor": {
          "ref": "adb93cce-b7ed-4339-8576-a3a58c2e5822",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f87c8342-e655-4f96-8860-70278593c8c0"
        },
        "item": {
          "id": "54dd4980-78b3-426a-8a88-75a671886be5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1494e078-84a4-42fe-a52a-6295ae43568c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aad01af-d5e2-402f-8ddd-b8e098dc5641",
        "cursor": {
          "ref": "f9189f2b-b483-4427-92d0-871a780bbccb",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "71700848-f709-4975-a340-c430835b990d"
        },
        "item": {
          "id": "7aad01af-d5e2-402f-8ddd-b8e098dc5641",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f3330ee4-ed26-44ac-a75f-cdc724d15d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aabce9-8bcc-4379-9460-d6308fb793af",
        "cursor": {
          "ref": "15b356e8-250a-4fa4-a761-171ecf86a165",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4a1f994f-1809-48f5-81a1-833ee60e0e8d"
        },
        "item": {
          "id": "42aabce9-8bcc-4379-9460-d6308fb793af",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2cd47b9d-bfa1-4e9a-9124-b6abb3e97c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66278b61-e4c3-4da5-8243-6e899e4ee23c",
        "cursor": {
          "ref": "1b2926bb-c7ea-4d5e-a2be-d47e2b80597b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0f702c63-2257-4fb0-a7d3-2c0dea44f685"
        },
        "item": {
          "id": "66278b61-e4c3-4da5-8243-6e899e4ee23c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "19cb1f19-afb5-4c6d-8e99-1568b3d60a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011ab3f3-8457-4987-b102-40918e150db8",
        "cursor": {
          "ref": "c584f104-304e-4d89-8e6a-e4af93565abd",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a9e33848-d5db-4573-bcc9-435d6837837a"
        },
        "item": {
          "id": "011ab3f3-8457-4987-b102-40918e150db8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "69bbf9c9-573d-4e17-b59e-8a8d53456d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f816cc4-02d1-4d6c-b814-f75f90d5f9c6",
        "cursor": {
          "ref": "a047b5f8-5252-417a-be5e-f41920525cd2",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "49207760-8408-46a7-ac02-a3eb572f5a10"
        },
        "item": {
          "id": "7f816cc4-02d1-4d6c-b814-f75f90d5f9c6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fed0533b-e16f-4f67-9add-0938f7bace43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e2fe58-9fe0-4ea4-bd08-969abc7ae816",
        "cursor": {
          "ref": "5e46b7f9-6033-4a9e-a557-1736b826ecf1",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bb89fca1-f033-4236-99c7-fb4452e7339a"
        },
        "item": {
          "id": "09e2fe58-9fe0-4ea4-bd08-969abc7ae816",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "87a88712-6b37-4877-b93b-60dac3a1008f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24fcfc6-b88b-4b8a-96eb-6632483ff442",
        "cursor": {
          "ref": "1519d32d-8ed7-41f0-9efe-bd14f1131155",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8dd28f73-5761-41da-8128-7426147041cf"
        },
        "item": {
          "id": "d24fcfc6-b88b-4b8a-96eb-6632483ff442",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "93aea446-6460-4ab7-8e42-3688e92b6ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0de66f4-f54c-4dcc-a75a-a33cfc793997",
        "cursor": {
          "ref": "5da04b3c-ca82-4f52-835f-3de3c06009c9",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cb4a3c5f-80cb-4577-a8d4-9e9714e693e7"
        },
        "item": {
          "id": "a0de66f4-f54c-4dcc-a75a-a33cfc793997",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1e8a4567-277b-4995-913d-361b62a1d090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665a7dd8-5599-4c56-9bdd-c1843e935ee9",
        "cursor": {
          "ref": "6bfe3a5c-3266-42bc-aaa5-45ab920b7dff",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "51ea933f-4b08-4e11-b2c3-4cdf277c68b6"
        },
        "item": {
          "id": "665a7dd8-5599-4c56-9bdd-c1843e935ee9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "89d18e5e-8c36-4b33-ba14-0f24d24e1d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87edb02e-8d67-4f0a-a00e-ab3bfefd65bf",
        "cursor": {
          "ref": "837f5b58-5380-4227-adbf-231a75fe6741",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7284fb81-f27e-4ad3-8efc-527910c70da7"
        },
        "item": {
          "id": "87edb02e-8d67-4f0a-a00e-ab3bfefd65bf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "96dde4d7-441f-418d-a9a5-36b3b2934e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb08265-eb8b-4fda-8a33-00515721151d",
        "cursor": {
          "ref": "eb874368-1821-422a-a8be-85ad7f37ee15",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e0c5ee1f-9671-47f8-a920-54d8bc396a37"
        },
        "item": {
          "id": "ddb08265-eb8b-4fda-8a33-00515721151d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d3968a75-90ca-4d68-ad38-10ca92f901ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b82c35-2960-4e2e-b608-bd8cc094be20",
        "cursor": {
          "ref": "1cad68e5-6c0e-4208-8665-68f2910d4e28",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f9092655-e7b8-4b8d-b82b-b59f64a6a9e7"
        },
        "item": {
          "id": "d5b82c35-2960-4e2e-b608-bd8cc094be20",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ad3aa258-7d98-4a36-ba29-09862b46fc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0546de-65e3-45ce-93c3-f6b2112cfcd0",
        "cursor": {
          "ref": "e62528b9-24b9-4374-b819-dba454512f8b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "69a8d95d-6350-4fae-ac4c-c3592778fd68"
        },
        "item": {
          "id": "0b0546de-65e3-45ce-93c3-f6b2112cfcd0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "76fd520e-3a83-4df4-8f0c-394c7ac2a3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566fff8c-c859-481e-9e58-abbf542a07d8",
        "cursor": {
          "ref": "f02fe09e-a71f-424f-935b-0fd44f367822",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "400345ad-15bb-4c7d-b30d-e52b97f225e2"
        },
        "item": {
          "id": "566fff8c-c859-481e-9e58-abbf542a07d8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "46745df1-44d6-4fe2-acf0-fa9cec1282ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91741b3-e0bb-4d5f-b3dc-e314a926b86b",
        "cursor": {
          "ref": "8846ab5c-9c61-4149-b360-8d1347c70e7f",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fc8a39be-08f6-4716-9a26-a6bf738587a3"
        },
        "item": {
          "id": "c91741b3-e0bb-4d5f-b3dc-e314a926b86b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f42de467-48c9-4945-8f54-f6a0b65d6ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66649e8-aad8-4abe-a980-1c7a06bc2c86",
        "cursor": {
          "ref": "f4bc308d-7e01-4ed7-a814-afb396efafcb",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ff0ef0c9-0395-4caf-a59c-4f9565bd886b"
        },
        "item": {
          "id": "e66649e8-aad8-4abe-a980-1c7a06bc2c86",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f8501381-5346-4dba-904a-1ed2800057c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486e717d-e078-4c79-a794-dffc4d78404f",
        "cursor": {
          "ref": "82f974c4-36fb-4866-9200-0a4ce2116748",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ef242051-09c5-4c58-a35d-a0d1ef31c531"
        },
        "item": {
          "id": "486e717d-e078-4c79-a794-dffc4d78404f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f20fa4ef-6513-4fbf-a810-333fa71da961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e928ce3d-c913-4792-bbfe-2536ceb3eebf",
        "cursor": {
          "ref": "c969a948-e0f8-44da-b572-5ca145236792",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "44a282c2-e899-4730-a5b7-c7189ac40ab2"
        },
        "item": {
          "id": "e928ce3d-c913-4792-bbfe-2536ceb3eebf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c6477b18-ee7c-47eb-b7ef-004aa0b8700f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bf3adb-8b1e-47cb-bbeb-887d8cd44975",
        "cursor": {
          "ref": "a565cae9-2a38-45c5-9523-25a191834576",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0016ee54-31d5-4f17-9f7b-b4c101bbe672"
        },
        "item": {
          "id": "21bf3adb-8b1e-47cb-bbeb-887d8cd44975",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1ae2332c-ce55-470e-a319-21beef8dd6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7accdf-8ca9-4ae0-8053-e003c7b8a945",
        "cursor": {
          "ref": "818886a3-72fb-4006-b2ee-f4da927216e7",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e687ec6-e519-4374-8a54-a4277cd5aa5f"
        },
        "item": {
          "id": "9a7accdf-8ca9-4ae0-8053-e003c7b8a945",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b4836a14-83af-4065-a354-d4261284091a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f810e998-0738-47a4-ba72-93ebf0328db6",
        "cursor": {
          "ref": "90b54d1f-1519-48b5-8fa9-ef346a0d037d",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9c88b151-5b89-417d-8249-af890ee3ef78"
        },
        "item": {
          "id": "f810e998-0738-47a4-ba72-93ebf0328db6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "66d3ecb3-15f9-499d-8e02-63a03f3475f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4d8aa4-f66f-4ce4-b6b7-88e16fdfa98e",
        "cursor": {
          "ref": "fbeb9bc5-4faa-46ca-b93b-1d73497ea68e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dcb581c4-cf56-47b6-8315-4ad3597f1aab"
        },
        "item": {
          "id": "6a4d8aa4-f66f-4ce4-b6b7-88e16fdfa98e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d3b1f9a8-1cab-4424-b50b-27379e630542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8957b902-3c39-4d8f-abfb-520611a01b44",
        "cursor": {
          "ref": "82b010f1-3b9f-4e4e-a71c-04ab263aedf7",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3d6e29c6-454f-44f4-a1d9-9229250e0ed4"
        },
        "item": {
          "id": "8957b902-3c39-4d8f-abfb-520611a01b44",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7d344867-191e-44c0-9198-97354f42fb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc35b29-8ee7-455d-9c55-ac37e9442c4f",
        "cursor": {
          "ref": "aa10ff3b-cbce-4d61-b689-b157ffa1ba1b",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c9879d0b-3c8f-4e36-af73-296c76aa1e4d"
        },
        "item": {
          "id": "2cc35b29-8ee7-455d-9c55-ac37e9442c4f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "431441ea-007b-4cc0-8336-be1ed98f07d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebd89ae-7b2f-423e-9f93-ff4d1e89faea",
        "cursor": {
          "ref": "5d687612-2f4c-46e4-a0d4-ae257bb0f40c",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f0139cbf-4102-4c50-b1b9-f31fa0272093"
        },
        "item": {
          "id": "1ebd89ae-7b2f-423e-9f93-ff4d1e89faea",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "13b15daf-2a55-496c-9f2c-c660646a9dd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b5e183-c53f-4853-8f8a-eb8dbb64f705",
        "cursor": {
          "ref": "a1eb7f4d-57ad-46d3-a11d-2bd2c7911c52",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "98f1c9f6-9df4-4f1b-a92d-28b907064a12"
        },
        "item": {
          "id": "48b5e183-c53f-4853-8f8a-eb8dbb64f705",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "cfb37728-9e46-4f19-b8bb-36d9ba0b80ec",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 205,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dfa4d3-dbbc-48f4-8624-e01fd8c334d2",
        "cursor": {
          "ref": "f4d1e9a0-becb-4c1d-9fc2-018290af0890",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "92b6f83f-4801-435b-8d36-7cf909f496d0"
        },
        "item": {
          "id": "17dfa4d3-dbbc-48f4-8624-e01fd8c334d2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fbe84f80-0e92-4dbe-9069-0e2ca56b4ad5",
          "status": "Created",
          "code": 201,
          "responseTime": 125,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "181e7897-e328-4b20-be3a-0f9a2e5aa1a9",
        "cursor": {
          "ref": "841e67a9-030d-4bab-a3cd-1c89a8fecafa",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "62aaf953-c0d0-4f6d-afce-0079474fed46"
        },
        "item": {
          "id": "181e7897-e328-4b20-be3a-0f9a2e5aa1a9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1670bbf2-3179-489c-9301-24d058f8130f",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0ba10c-b995-461a-9e54-99b9f01f7485",
        "cursor": {
          "ref": "a5eab481-7088-4b3b-a2ce-807731737410",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dc72727e-98fa-4961-816a-04e3aa6a33db"
        },
        "item": {
          "id": "ca0ba10c-b995-461a-9e54-99b9f01f7485",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3cdc8d74-407d-41d2-a95d-161a4b007411",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a061c7a-d147-4ebc-a4dd-1e9f5b523937",
        "cursor": {
          "ref": "9165d06e-db65-41a7-8c57-44192cde42ad",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "182ecec1-8c08-429b-a8ad-01ac14b39c8b"
        },
        "item": {
          "id": "5a061c7a-d147-4ebc-a4dd-1e9f5b523937",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2c368c1a-9d5b-4419-9825-650a0f8bc384",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c144d9e-de48-4a13-b04c-c6f213713402",
        "cursor": {
          "ref": "e056e5b7-41db-4e69-a778-ac3f9e1cb5c9",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d504d4b3-27ec-44fa-b67e-07ca733c0ab2"
        },
        "item": {
          "id": "1c144d9e-de48-4a13-b04c-c6f213713402",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "52e5fcf8-2325-4ef8-996b-9797317fcfdc",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "324f0434-210e-44fa-a9e3-cdc8cc6601f5",
        "cursor": {
          "ref": "d90646cb-2741-44d7-a541-6ff36269af2d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6dcc0a45-9671-4d10-894c-8394ba097a28"
        },
        "item": {
          "id": "324f0434-210e-44fa-a9e3-cdc8cc6601f5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2f5efd76-2bc3-4ba9-8d09-aba774d61495",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ffec06-e21d-4c36-97ff-9095634af706",
        "cursor": {
          "ref": "fb31c972-94d0-4aee-a399-341261022441",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f40ee482-c2bf-4ce2-94d1-c94c2b41bb44"
        },
        "item": {
          "id": "34ffec06-e21d-4c36-97ff-9095634af706",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "459cbeee-fd91-4f12-b9ca-ee34d1655eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ffec06-e21d-4c36-97ff-9095634af706",
        "cursor": {
          "ref": "fb31c972-94d0-4aee-a399-341261022441",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f40ee482-c2bf-4ce2-94d1-c94c2b41bb44"
        },
        "item": {
          "id": "34ffec06-e21d-4c36-97ff-9095634af706",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "459cbeee-fd91-4f12-b9ca-ee34d1655eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2618e2e7-76bf-48f7-bba5-59bccf0ec5a7",
        "cursor": {
          "ref": "12c579d9-6364-48a0-83ae-e49b5ac99d6c",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "86f89203-d001-4d4f-a31f-dde629040205"
        },
        "item": {
          "id": "2618e2e7-76bf-48f7-bba5-59bccf0ec5a7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8052a554-bbcb-40df-8ee7-aff836a52b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26080444-3df5-410d-bcb8-7966e9a81d18",
        "cursor": {
          "ref": "d45e104a-4db0-4d33-8180-d7a87026d668",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d6b0ed59-c720-4196-a507-5e1fde92b9e1"
        },
        "item": {
          "id": "26080444-3df5-410d-bcb8-7966e9a81d18",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d6a6e640-f1c5-4103-8b1b-366fd532e44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329a3917-1bed-4f92-95cf-39c0e23efa06",
        "cursor": {
          "ref": "32bf2f20-d85a-4f27-b5cd-41d55c95cf4b",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2eb5c6e4-a910-4374-8333-65418bafec6e"
        },
        "item": {
          "id": "329a3917-1bed-4f92-95cf-39c0e23efa06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "74776ced-ac40-4a73-b3a8-de7ba1097591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e36ad8-170e-49b0-ab57-8e0555d8cca3",
        "cursor": {
          "ref": "b3eb7c07-ec69-4ac1-8c6f-7eff6f3b8be1",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6457a2bc-1363-4160-bfc5-f06888f0fb88"
        },
        "item": {
          "id": "87e36ad8-170e-49b0-ab57-8e0555d8cca3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "975212f9-bee6-4404-973a-11adefeb2253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4082839-e9a3-4c19-95ce-3bf7cfbffb20",
        "cursor": {
          "ref": "0ac417c9-d37c-496c-940d-a1b88582215f",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2d4fd92c-1a29-4fcf-985e-14312a13055c"
        },
        "item": {
          "id": "b4082839-e9a3-4c19-95ce-3bf7cfbffb20",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6620432f-abfd-4e3b-8c6c-27cb044a7421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7c11db-f2d5-40d8-b296-3524605c24a4",
        "cursor": {
          "ref": "9a291ae4-0757-4eb4-af19-2fa176242d2a",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6e3d3e0d-2e1e-4277-8374-5d5fde22b8fd"
        },
        "item": {
          "id": "6b7c11db-f2d5-40d8-b296-3524605c24a4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d95f3426-e9f4-474e-8de8-651cd4053d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362ebe4b-0685-455c-9afd-85f13cb1d8b7",
        "cursor": {
          "ref": "00c65de0-8ccf-4144-960d-9371124abf9d",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "72870882-e4c9-4e19-905f-c7e32456002e"
        },
        "item": {
          "id": "362ebe4b-0685-455c-9afd-85f13cb1d8b7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cc391582-9f96-4b20-ba91-3c226f98f85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e925db3a-40b7-430e-9a5d-2c36e87df48e",
        "cursor": {
          "ref": "5ffd613b-9ef6-4d22-a27d-770bd1b5d2bd",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8abc6e1f-3a01-4410-bca4-5e730ecce58f"
        },
        "item": {
          "id": "e925db3a-40b7-430e-9a5d-2c36e87df48e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ef9cc63b-e0df-43ce-83af-4e09d14144f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c4c113-d656-4cab-b2a9-6095acdbe6c0",
        "cursor": {
          "ref": "bbcde6c7-7b23-4892-a4c7-1faa50eeda39",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "102018b2-2640-4333-9038-6c2e1c9b3844"
        },
        "item": {
          "id": "75c4c113-d656-4cab-b2a9-6095acdbe6c0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "237dadc6-e915-4f1e-a0ab-1ee8dd7d9aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7252cb-7803-4970-874c-9736ab59a82a",
        "cursor": {
          "ref": "9f1a90d3-9131-4928-b3a9-aa397439be4d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e8b98fca-1eb4-4f4b-b99d-6a42822ed24a"
        },
        "item": {
          "id": "0c7252cb-7803-4970-874c-9736ab59a82a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5131e9fb-43c4-4130-98dd-973b7ced9c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0263967f-6523-4d73-936e-510cee07d5ad",
        "cursor": {
          "ref": "45fa13b4-d3f4-4ffb-91dd-ced420ab7b27",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ce8aebfd-0d58-4dfa-ba22-4be2b590a902"
        },
        "item": {
          "id": "0263967f-6523-4d73-936e-510cee07d5ad",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "56a2a2f7-c4db-4eeb-85b8-bc5a5200caa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af1ac8d-8cfc-4fcd-8dc3-e74d16410ead",
        "cursor": {
          "ref": "afec7a33-2bad-4939-9c97-496e5161a7d0",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a8c32202-4728-45fb-85f9-d0c6a8c64d6f"
        },
        "item": {
          "id": "4af1ac8d-8cfc-4fcd-8dc3-e74d16410ead",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cca3b255-4afe-4276-91da-ca10f302bf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bc554b-ab62-43b9-ab86-34ffebee38fe",
        "cursor": {
          "ref": "5d5b8e68-3411-41ee-9c02-e6231d6d3dad",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e8cb98bd-5cfd-4e00-a0be-6e3c54031e25"
        },
        "item": {
          "id": "e5bc554b-ab62-43b9-ab86-34ffebee38fe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0310b17c-a3dc-446e-b18a-c72afd848cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69faca4-7788-49d8-8ef6-539a2700a728",
        "cursor": {
          "ref": "49c4ec22-0834-4a58-8d59-6e6d0c18b42a",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "23cf6467-09e6-44ba-b509-301a7173740b"
        },
        "item": {
          "id": "b69faca4-7788-49d8-8ef6-539a2700a728",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2eba5588-4803-4d95-ba21-7c25609794f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edd71ff-dbff-4a74-a254-5338c56565d4",
        "cursor": {
          "ref": "582fd011-1c7e-483a-bcec-ea3d33732e7b",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "83ff8eda-2674-453a-a707-fca7e667b8cc"
        },
        "item": {
          "id": "9edd71ff-dbff-4a74-a254-5338c56565d4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a53fad76-e0ba-4ff8-af05-009c87a0e297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28c6621-0336-454c-ad4f-54a38a1a44d6",
        "cursor": {
          "ref": "34087ab2-e4f7-46ff-8dea-bac58d95dc28",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "46f651ac-6a6e-45b6-a4d7-e044055b45cd"
        },
        "item": {
          "id": "c28c6621-0336-454c-ad4f-54a38a1a44d6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9c48510d-fe60-456d-bec1-5f93e76dc3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f78138-3b95-4b3d-9493-8e2484cd36a6",
        "cursor": {
          "ref": "07d64b2d-55be-486a-961a-a8e40a5d35c7",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3d664044-55ef-41ac-bed7-5c491987bb21"
        },
        "item": {
          "id": "68f78138-3b95-4b3d-9493-8e2484cd36a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8de63ddf-a552-480b-8ca7-25603c363ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51501d94-c78b-48f0-9b6b-a991fbd38363",
        "cursor": {
          "ref": "63e82028-723f-4681-a9e0-7b6774c32b0d",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "73942dfe-10aa-4136-ad87-d7f4a9cfdffe"
        },
        "item": {
          "id": "51501d94-c78b-48f0-9b6b-a991fbd38363",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "751a0cc0-3bd1-45ca-8d97-d9d835ce702d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fb4e2f-d6d3-4350-ba9d-e63b3c51b51d",
        "cursor": {
          "ref": "48c404b7-8320-47fd-987a-1b83ca4b335a",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "79246250-ea8c-4026-a45d-a2f117976f19"
        },
        "item": {
          "id": "e9fb4e2f-d6d3-4350-ba9d-e63b3c51b51d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f1c40bff-cbf4-47dd-8a32-a475b1a3b0ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d39c31f-7e7f-4501-a227-5cebf45391c7",
        "cursor": {
          "ref": "2d039631-b5df-4f3f-ae6c-a697e4e7baad",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9f2ba967-57f3-48b0-8c65-73d16373147c"
        },
        "item": {
          "id": "5d39c31f-7e7f-4501-a227-5cebf45391c7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "72a182a6-2dad-4ce5-875f-68a623832afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c3cc05-b464-4335-91c2-2a688bb3d5af",
        "cursor": {
          "ref": "1a7c67b8-f59e-4193-ab0f-893af85e197f",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ce1dacf7-faac-4e27-8f1c-80b4a9dd8c14"
        },
        "item": {
          "id": "35c3cc05-b464-4335-91c2-2a688bb3d5af",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "41cad1b8-2d2c-40b6-af79-58e43983c80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2838c93c-6cfd-4518-b66b-02ffef6f4229",
        "cursor": {
          "ref": "f9b53902-654d-46da-be31-bf5eeb2d2425",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c8171db5-8b20-410d-8985-eb647ca55766"
        },
        "item": {
          "id": "2838c93c-6cfd-4518-b66b-02ffef6f4229",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a987243f-ca96-444f-aa0f-7cc821c96abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe546d67-778a-4fac-968d-a08d00e08d55",
        "cursor": {
          "ref": "826aa4d6-1a4f-4d75-8e3c-95d240558d97",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8c7c51e0-2149-4b45-a07d-4c8dc5ba9f7a"
        },
        "item": {
          "id": "fe546d67-778a-4fac-968d-a08d00e08d55",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f59f002f-8ea0-45b3-a5e4-11bee5cb7a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2d983-015c-43d2-84a2-cc5fff8a2e35",
        "cursor": {
          "ref": "c8201f2b-4e86-49fc-904b-e0351a1b26c7",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a41b4f70-596a-448b-9ddd-4075b39ab047"
        },
        "item": {
          "id": "5ed2d983-015c-43d2-84a2-cc5fff8a2e35",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "37d74590-4613-4ce2-a8d0-900ea8c75688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ac8411-26ff-4a14-8566-2132d1d5761a",
        "cursor": {
          "ref": "d12144da-482f-4bcb-975b-13d14f4ed0f8",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a32eb14c-99dc-431f-8226-e4e450ec6b9d"
        },
        "item": {
          "id": "46ac8411-26ff-4a14-8566-2132d1d5761a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b65b56bd-d762-45a7-8bbc-5e07a96063be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b319e7ba-7424-4f81-b956-7b22d3377dd1",
        "cursor": {
          "ref": "147174f8-399e-4961-baf6-830bed80cd5d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5a9889bd-c9e3-4391-98f9-88e7cfd177fa"
        },
        "item": {
          "id": "b319e7ba-7424-4f81-b956-7b22d3377dd1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1c5b7782-a917-4dee-b7d3-a8e91200b00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91f03c0-7213-4fcb-ae75-2843aa63e3cc",
        "cursor": {
          "ref": "75c4c978-5d45-4ac4-a398-069398a1b742",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1dcc8547-c43d-46f0-bf57-a9a3e553d021"
        },
        "item": {
          "id": "a91f03c0-7213-4fcb-ae75-2843aa63e3cc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "df702de6-8b23-482e-81c6-80d313cf811e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e798ed91-9d79-4249-a10f-99c53332038d",
        "cursor": {
          "ref": "9de60e77-7df2-4abe-b872-c04c8cd6eae3",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "60f3e35e-b34d-462c-ab62-f57342675a09"
        },
        "item": {
          "id": "e798ed91-9d79-4249-a10f-99c53332038d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "285de8b6-e5a0-41b4-be3c-fa4477daa296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a14ee2-ff58-4f44-a661-45b78bd5af9c",
        "cursor": {
          "ref": "d70a1f45-7980-41d6-9b38-82c311a74b76",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4b331334-2376-4935-b5f0-043e89ba7db6"
        },
        "item": {
          "id": "77a14ee2-ff58-4f44-a661-45b78bd5af9c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "77549202-3ecf-4327-8849-688957a743d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6735d71-7091-47a2-bed6-b8d02a693f0f",
        "cursor": {
          "ref": "5ca3faf2-6233-4852-bc31-4d38435aac7d",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc2f8912-1f57-41a7-b244-8f4a642a556b"
        },
        "item": {
          "id": "d6735d71-7091-47a2-bed6-b8d02a693f0f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fc118762-2339-4d8e-a293-e9776fd2ce0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1ca49e-9ef5-414a-8052-7d217369c78f",
        "cursor": {
          "ref": "f836db75-5581-4ad2-b3e8-025f54b7ce57",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "bdf20fc0-e3cf-4a07-ae05-b43b7c1b6fe8"
        },
        "item": {
          "id": "ef1ca49e-9ef5-414a-8052-7d217369c78f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7dea3f54-6514-49a1-b6e9-78abd7c7c870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e612724-bf78-4da6-9da6-a89d80f2e70c",
        "cursor": {
          "ref": "4ed3e2fa-c9f4-4f13-8112-39c52b790f4f",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bf0a6b75-d3fe-4ab5-9ee5-61980b4d2cf6"
        },
        "item": {
          "id": "5e612724-bf78-4da6-9da6-a89d80f2e70c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dfb88625-2c9a-4e7c-abdd-b55e265f5840",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af8d848-e2ef-4f8f-955a-04de04cf3361",
        "cursor": {
          "ref": "daf31ade-171a-4240-be03-3c1495c0e83e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "933dff54-327c-4620-a587-cc2d7703f1fd"
        },
        "item": {
          "id": "5af8d848-e2ef-4f8f-955a-04de04cf3361",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "026887a4-605d-46c8-8300-cbe858d6b3df",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc2c841-9a71-4069-a426-ac6694cc95c3",
        "cursor": {
          "ref": "b73eb62c-e195-4930-a6ef-3aacc4841935",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee76c404-74b0-41eb-9f69-d52ac12032d7"
        },
        "item": {
          "id": "4dc2c841-9a71-4069-a426-ac6694cc95c3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "98b81494-09f3-4bab-8db5-d6942be76269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc2c841-9a71-4069-a426-ac6694cc95c3",
        "cursor": {
          "ref": "b73eb62c-e195-4930-a6ef-3aacc4841935",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee76c404-74b0-41eb-9f69-d52ac12032d7"
        },
        "item": {
          "id": "4dc2c841-9a71-4069-a426-ac6694cc95c3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "98b81494-09f3-4bab-8db5-d6942be76269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27596c1e-1b60-4020-9713-31bab45ff0d6",
        "cursor": {
          "ref": "bccc0166-e77b-49e6-aa09-4a480612395b",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ea1143e8-4525-4a33-afb5-7073d7054b18"
        },
        "item": {
          "id": "27596c1e-1b60-4020-9713-31bab45ff0d6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1c3412c2-b3ed-4a99-bea3-171dc9658ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc0caea-5af7-4a30-a0c8-b46c7e219197",
        "cursor": {
          "ref": "33a0c895-5b9f-40fb-bb77-9dbc6360bc2f",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e85454f5-220e-4a59-8903-b488d56c0ba1"
        },
        "item": {
          "id": "8fc0caea-5af7-4a30-a0c8-b46c7e219197",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "44c93778-8d61-483e-a084-2d58c35de20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb49c58-3118-45f1-973e-9bc9a21cdbcb",
        "cursor": {
          "ref": "5ae69fad-8618-465a-9e91-b1fc45d5840b",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f0fb2be3-74db-4f34-9e5e-c9ae27bea786"
        },
        "item": {
          "id": "1cb49c58-3118-45f1-973e-9bc9a21cdbcb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3b5643fb-0ee5-4286-a703-16d5ed6c9c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c63e865-d6c9-4656-ac5c-19b8ceb38061",
        "cursor": {
          "ref": "c4e6bb89-dbe8-487e-8844-cace1d2478ce",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "99c703db-1340-4e9d-8f12-68d9d2e11b49"
        },
        "item": {
          "id": "3c63e865-d6c9-4656-ac5c-19b8ceb38061",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ce898846-e3a2-4d0d-becf-526fc96cc593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e161d6-64cc-4c04-bd8d-b5a013951c15",
        "cursor": {
          "ref": "15b28249-20b5-410c-89be-6f600778dc7e",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d02701a5-2534-4053-8a19-14a7b0c56b20"
        },
        "item": {
          "id": "45e161d6-64cc-4c04-bd8d-b5a013951c15",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b157d88f-ef8b-41e4-961f-9888cce92355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b568476-6fb6-48bf-8d8d-206f8ead6e82",
        "cursor": {
          "ref": "e6ffc447-3372-4ad0-8b26-6b463ac01291",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4234ae4e-e0f7-4e2f-85b2-a6b5729ee447"
        },
        "item": {
          "id": "4b568476-6fb6-48bf-8d8d-206f8ead6e82",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9f9f49dc-5b2b-4f12-8376-d06cda90e2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c710ea28-3a1a-4258-b5fb-eda29307116d",
        "cursor": {
          "ref": "befca71a-bc69-4afe-aa48-747e1e64ceb7",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0e753086-a655-499c-a7b7-2de975d49a1b"
        },
        "item": {
          "id": "c710ea28-3a1a-4258-b5fb-eda29307116d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9ae0d010-5b35-4c00-a6ff-9b0185046295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e73ed6f-0a99-46bd-b132-1ca7799f1cad",
        "cursor": {
          "ref": "57d728fe-c68f-4f24-bd99-d578b8a50ee6",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "35efef0f-6dc4-42f3-ad8a-9e7413be504a"
        },
        "item": {
          "id": "9e73ed6f-0a99-46bd-b132-1ca7799f1cad",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a362b632-f16d-411e-a7a4-8a7d82e6409c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d771a7ea-419b-4645-889a-6cbce8cb48b0",
        "cursor": {
          "ref": "f1dafd60-1d7b-495d-999c-4bba99590802",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "489833ce-5c8a-41eb-bdee-737dcb0b13bb"
        },
        "item": {
          "id": "d771a7ea-419b-4645-889a-6cbce8cb48b0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7e29279c-2ff3-4c52-b90e-9c5720cc6641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bd1a7a-184c-4611-9aa8-8340f5b4a10e",
        "cursor": {
          "ref": "094cde69-5676-4d01-b454-edb7c27006fc",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c6925cf5-ca41-48a0-ade9-0c51580ee233"
        },
        "item": {
          "id": "10bd1a7a-184c-4611-9aa8-8340f5b4a10e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a9612c71-26f9-40d4-b58c-c9f9ef2dc251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f01717-d721-4a68-903a-c26fe8b87581",
        "cursor": {
          "ref": "ad8fd5a4-c049-4c7c-965d-facf91938b65",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bea5984f-261d-4816-b26c-faf1cd1ef79b"
        },
        "item": {
          "id": "b1f01717-d721-4a68-903a-c26fe8b87581",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "80f5e157-b923-4bb2-a14b-ccd396d9b949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055e965c-b7b3-4301-9701-65001c80bad9",
        "cursor": {
          "ref": "0c2c1ad8-afe5-4421-8733-5b3acb76e57a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "82c01ba6-fac7-45e1-a1bb-132369d07558"
        },
        "item": {
          "id": "055e965c-b7b3-4301-9701-65001c80bad9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "be96053d-2857-4227-9df6-3c5f545d1b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21421c55-6494-49a7-9bd1-7dc28a625135",
        "cursor": {
          "ref": "ca4defc5-1a2e-4c9c-8e08-7758ee726a72",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "87f5cae4-7227-433e-9a38-af512cec732b"
        },
        "item": {
          "id": "21421c55-6494-49a7-9bd1-7dc28a625135",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "09639041-b90f-40e6-a35f-4053f3f6c8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39336e13-d29b-4f5f-9e13-90b1aebf24a4",
        "cursor": {
          "ref": "9a174722-a65c-4db9-bf12-ad495f63c112",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b1d212a5-5a4e-4e63-9b55-0a023f6a02fb"
        },
        "item": {
          "id": "39336e13-d29b-4f5f-9e13-90b1aebf24a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c47170ce-6987-4005-9aab-44d197abaf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb61968-c1e8-443f-a902-e525c3afc04f",
        "cursor": {
          "ref": "1be85e74-5a95-4426-85ed-db1d8bd34c5a",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c81da40b-3794-4c50-9211-341ab1826634"
        },
        "item": {
          "id": "7eb61968-c1e8-443f-a902-e525c3afc04f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "65425ba8-57b5-43af-805e-54c31aeae86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea1d3ed-f621-4aa1-9170-0ecc87090ff4",
        "cursor": {
          "ref": "47aade74-e9f2-4a24-99b5-d9933baf9364",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "abb7cfa5-3694-4f5c-97f5-dba5f25ba267"
        },
        "item": {
          "id": "fea1d3ed-f621-4aa1-9170-0ecc87090ff4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f8756733-fd7b-402e-a065-3de8d39c516d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174d4c6a-3134-4a01-9fa8-9c93df2bb721",
        "cursor": {
          "ref": "e80b5e1e-544d-4aa8-86cd-a8febbe9ecba",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "58ac53b0-66a4-4aca-814e-3060d0b454ef"
        },
        "item": {
          "id": "174d4c6a-3134-4a01-9fa8-9c93df2bb721",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1c688268-b245-4d69-9db6-cb6ce09d16eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d145c83d-311f-482a-8d02-b4006af43540",
        "cursor": {
          "ref": "739b628f-c23f-4e73-82c1-52d8b4983f67",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a30e6abb-7b74-40ff-86cd-20be10557b5c"
        },
        "item": {
          "id": "d145c83d-311f-482a-8d02-b4006af43540",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "47f4de38-b4f2-4450-b626-e9d4952f92d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157537ae-3d54-4f7b-84a8-1fe0701b809e",
        "cursor": {
          "ref": "bde99fb2-fe7e-44f4-887f-43c71ad42ce6",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1c5f0d2f-96a8-4de2-9707-bf9037ac135d"
        },
        "item": {
          "id": "157537ae-3d54-4f7b-84a8-1fe0701b809e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bd2c53cc-ccd0-4250-8317-a065ba01bc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb2fb34-60d6-4875-a8b2-88c2c8935f3e",
        "cursor": {
          "ref": "a720c007-260c-4a75-ae25-79c28b0d026f",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "db504b08-1dbb-42d3-b701-66319b51e6c5"
        },
        "item": {
          "id": "2eb2fb34-60d6-4875-a8b2-88c2c8935f3e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "11322e51-1ad8-4c59-aef7-d7ca79d45687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b318c5c5-3536-424d-ada9-eda500e51fa4",
        "cursor": {
          "ref": "6381336f-0696-4f34-913b-a4cc7023d0dd",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "58776282-dfa0-42a5-a3b0-d568c1b25619"
        },
        "item": {
          "id": "b318c5c5-3536-424d-ada9-eda500e51fa4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0f3ffe34-812c-4f01-a9e7-de63b5bc40ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e39a732-b9c2-4cc7-a017-5472151917cb",
        "cursor": {
          "ref": "db73525e-6c1e-4eeb-a654-b5c27cfd6095",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4e501b29-4b4f-4cb4-bdb5-974f18681748"
        },
        "item": {
          "id": "6e39a732-b9c2-4cc7-a017-5472151917cb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "36bef39e-ace8-4191-86cc-b8e5bee27cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7666f5c2-9861-4737-8e4e-d5c3164d9679",
        "cursor": {
          "ref": "530f529a-0e4e-4ab8-a7df-1b9d4f73ddcf",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5b3ad212-3884-4de6-afa1-fd867a277e82"
        },
        "item": {
          "id": "7666f5c2-9861-4737-8e4e-d5c3164d9679",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dbfee9ce-e3f6-4c28-82bd-8774b1b63a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1e075b-d18f-43c9-a07f-f01bc724b2a5",
        "cursor": {
          "ref": "7ab0904d-ef9d-4de8-af36-af38d5c43e8d",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b6c14db2-0383-42c3-b994-98652762d4af"
        },
        "item": {
          "id": "ef1e075b-d18f-43c9-a07f-f01bc724b2a5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e1166040-da20-435d-956f-d2f1ea0e9ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a20c42-f41e-4cf4-ab4c-aac95141f489",
        "cursor": {
          "ref": "5622735c-24ff-403c-8054-98984ee036f0",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d8c44424-d26c-438e-90e6-6e3c5b649a73"
        },
        "item": {
          "id": "92a20c42-f41e-4cf4-ab4c-aac95141f489",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8878ffe6-ae73-44ff-92dd-523aa245d902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d758538-3b8a-47de-aa6d-f15eb60ffb95",
        "cursor": {
          "ref": "ca0f79b3-b4c3-4bb2-b3d9-8b21999017cd",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f7a53dfc-e9f5-46a8-bfe2-0dc82677ece2"
        },
        "item": {
          "id": "8d758538-3b8a-47de-aa6d-f15eb60ffb95",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ac5fb21e-1fc1-4f58-8d03-99f65e9065f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8884ce77-d9b5-4576-b017-e539631ee9b0",
        "cursor": {
          "ref": "3c215cef-417f-4db5-a557-9fe9319ddb4d",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5a7ab163-fb27-4f18-a361-bdd8377cfbcc"
        },
        "item": {
          "id": "8884ce77-d9b5-4576-b017-e539631ee9b0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7f6b2b66-295d-40c2-9a11-2b616e459541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45dc0cf-ff3d-4d8a-9ae2-f77628236c6a",
        "cursor": {
          "ref": "98c92652-3557-432f-be7b-44d17facbb9d",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e0e4c1ec-af4a-4d08-a017-eacb12a2227f"
        },
        "item": {
          "id": "f45dc0cf-ff3d-4d8a-9ae2-f77628236c6a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b0c7117d-309b-4417-9641-4f7ba9dbe387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72b96c9-74f0-4d75-bc0f-a744cf904198",
        "cursor": {
          "ref": "d98df283-3c79-4618-b5e7-16f98f491464",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f12a8e7d-d9ba-4896-86fc-05ad4b8997c8"
        },
        "item": {
          "id": "e72b96c9-74f0-4d75-bc0f-a744cf904198",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "93c19083-016f-4ffb-b856-86d61ca97192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94245ae-ce9f-4465-b739-21c36197915e",
        "cursor": {
          "ref": "99e830db-581f-4e14-a024-b48892f849a5",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f0f20751-7048-4482-b3bd-be3da7b5d4b8"
        },
        "item": {
          "id": "c94245ae-ce9f-4465-b739-21c36197915e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cc4d13eb-bee7-4620-af7f-c2375cbb311b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de15e3c-f290-419c-82f2-93405c865a1b",
        "cursor": {
          "ref": "779f8b76-fc93-4884-b691-8046b950659e",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c67f4ab6-c018-4a86-a7f2-996eb470f5ec"
        },
        "item": {
          "id": "0de15e3c-f290-419c-82f2-93405c865a1b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3af63ad4-fc01-4737-9a96-e425c4ee4b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c16d9d-9fef-4966-80ce-69e474509506",
        "cursor": {
          "ref": "4c9e688a-e2d4-4920-a623-57f542e47ea1",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d05085f6-aef1-48e6-937d-a02eb7abfc37"
        },
        "item": {
          "id": "e0c16d9d-9fef-4966-80ce-69e474509506",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "29f4057b-0fe4-4c4c-9249-ccb1cb81b735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837db7a0-6e7c-4970-acd6-7794bdf9b944",
        "cursor": {
          "ref": "3caeece8-35cc-454c-aff3-d24f0c694546",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "82fabe21-6c3b-40ef-be1a-d3cf9451832d"
        },
        "item": {
          "id": "837db7a0-6e7c-4970-acd6-7794bdf9b944",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4132fe62-f461-4a5d-8d52-12bf323e7e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b10919-1c2d-4b96-a465-b6cda32d531c",
        "cursor": {
          "ref": "a1aa7bf5-e30e-4c01-b89b-e6bb374f40f7",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a12ed47a-8338-492c-be31-4883e33ba006"
        },
        "item": {
          "id": "25b10919-1c2d-4b96-a465-b6cda32d531c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "67cda641-f1b8-4047-b968-45f8447be909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9210b3f4-69ae-48ce-a764-118ac2fdc71d",
        "cursor": {
          "ref": "d670da66-21f0-49b6-930b-479ac616dd6f",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "41a75d27-4eac-45da-a812-7c5c51c3b636"
        },
        "item": {
          "id": "9210b3f4-69ae-48ce-a764-118ac2fdc71d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ab3448ca-e759-427b-a8bd-5abafc89d994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d27cc29-4730-41df-b2a4-a52aa2a8bbf0",
        "cursor": {
          "ref": "c9abf5b7-aee5-4047-95a7-b93a039ccf95",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "25fcf993-fa7c-4149-aa5c-8cf0ab277b18"
        },
        "item": {
          "id": "7d27cc29-4730-41df-b2a4-a52aa2a8bbf0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "578141e5-ce15-4a5e-adb3-9ea4ad63965e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfeca3d-bb28-4949-b960-71196c6caacf",
        "cursor": {
          "ref": "29142c69-8028-4771-aab0-1fa05a02accc",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "71082b9f-5aa3-4d61-a736-7a8f5a54c4d9"
        },
        "item": {
          "id": "edfeca3d-bb28-4949-b960-71196c6caacf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "030af8f6-3d0d-4c10-93e3-57a8b363d785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de73d236-b43d-44b5-a01d-d972c2b146d5",
        "cursor": {
          "ref": "4f685ada-df4d-4f8b-ac7a-4353564a1f19",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ad2779dc-a679-46aa-97ba-33a17d596bda"
        },
        "item": {
          "id": "de73d236-b43d-44b5-a01d-d972c2b146d5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "be2cfa14-51a9-4359-9a9e-8294dd50ac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fd4c62-182a-4532-b777-e9af806520c9",
        "cursor": {
          "ref": "74bb48f9-e309-43db-9d24-fea530da7457",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9d2b4e2f-3c5a-496b-9cd1-6150cf2ebce4"
        },
        "item": {
          "id": "23fd4c62-182a-4532-b777-e9af806520c9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6decab97-1b29-4909-9164-3127c2516d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86aba81-c415-48a4-92c1-c5d559966943",
        "cursor": {
          "ref": "db62c9ff-23fa-4043-9e29-38ad0bc66587",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "83c93eaa-92c4-46c4-a2a5-b2c9b78bd830"
        },
        "item": {
          "id": "e86aba81-c415-48a4-92c1-c5d559966943",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "41e33930-2213-4f3f-9e92-0ac1865c8c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c8752e-922f-4cf0-b3df-03d76cf2c0a1",
        "cursor": {
          "ref": "6c6a3f68-8ac3-4ea0-9407-2840149ae271",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "726ac213-6005-4221-bab5-52d11e8e6501"
        },
        "item": {
          "id": "01c8752e-922f-4cf0-b3df-03d76cf2c0a1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "124445df-1461-4cac-b308-0205dd211c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da26f704-a886-4aa5-89d7-84ec7b17564d",
        "cursor": {
          "ref": "77e0d79f-fb28-45a2-a18b-73c93c54dda9",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6fd255bc-40fc-4a08-9690-27fd92a7b940"
        },
        "item": {
          "id": "da26f704-a886-4aa5-89d7-84ec7b17564d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "66209ebd-8fba-4765-bfc4-13a9644d36ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc90215f-b66b-468f-b0fd-53bf9fc4c539",
        "cursor": {
          "ref": "2060e8a6-11cf-463b-8940-174b185f5b7c",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c7ae8a46-31bd-4575-ac55-7bbdfd222054"
        },
        "item": {
          "id": "fc90215f-b66b-468f-b0fd-53bf9fc4c539",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9d9eca91-bb3e-48f8-9b52-ece79741b520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d42558-b93b-4321-a48c-7de299387a2a",
        "cursor": {
          "ref": "979a3db8-cf5d-43ba-a53c-497b28cb8f19",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a89070de-3372-49b5-bb2a-8c855801c640"
        },
        "item": {
          "id": "46d42558-b93b-4321-a48c-7de299387a2a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f189ae52-8093-48e3-9a60-f71b1e32d3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ddb4c5-e16e-4d47-9ed5-1f1d06b962c3",
        "cursor": {
          "ref": "7110c4ba-12b4-4445-888a-05051941f434",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "93afc929-29ed-4bee-b69e-ddd1f44b263c"
        },
        "item": {
          "id": "84ddb4c5-e16e-4d47-9ed5-1f1d06b962c3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "eb97fc81-3be7-4c91-91a9-1ea430343c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ed6468-52da-47c6-87d5-c337fb05b978",
        "cursor": {
          "ref": "0fa16210-751f-4226-8263-a127fbced57b",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d51ec6ad-939e-43c0-becb-f785130dc6fb"
        },
        "item": {
          "id": "23ed6468-52da-47c6-87d5-c337fb05b978",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8b2e94ba-0620-41ea-9a14-bf4c88d68d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af961f6-3b86-4814-aba6-2a951b1b5cdd",
        "cursor": {
          "ref": "ec0ee7d8-e891-4514-a8c9-7a1b02d64664",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "400fefbd-e0f3-4622-b48c-1d46fbf97dba"
        },
        "item": {
          "id": "2af961f6-3b86-4814-aba6-2a951b1b5cdd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "11e8f130-4940-44c1-a229-67e267c14034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e96dbb9-73ce-4b7a-823d-2685eb56c84e",
        "cursor": {
          "ref": "456191e2-2b92-4a9e-90be-b888013bbac0",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "514fc113-065e-4f5e-995a-e948ee37d5d2"
        },
        "item": {
          "id": "7e96dbb9-73ce-4b7a-823d-2685eb56c84e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2748cd4f-06c1-4b54-b549-33eea048a51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4a6856-50c0-49d9-a63b-89fe7fba9f17",
        "cursor": {
          "ref": "30ef919f-bb14-48a0-835c-314b8a148933",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6b8540b3-dae1-42ee-aefb-d92763117649"
        },
        "item": {
          "id": "2d4a6856-50c0-49d9-a63b-89fe7fba9f17",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2d98d2de-cf0b-4c38-8742-eaea09e20a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6ab56e-f063-4098-9ff3-b02145c0ffdc",
        "cursor": {
          "ref": "dff8e509-e4d6-4e5f-b58c-41dbe4c1d313",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "492651cf-dd91-411c-b503-37614095abba"
        },
        "item": {
          "id": "ce6ab56e-f063-4098-9ff3-b02145c0ffdc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3d3865af-5e55-4182-824d-be9b1994cc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec19796c-1cd8-4ec3-87b3-e03f51d583b2",
        "cursor": {
          "ref": "08f9deaa-f197-4997-9537-39b9e942e145",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bd61824c-2c66-4a4b-bc1e-d23f54badb30"
        },
        "item": {
          "id": "ec19796c-1cd8-4ec3-87b3-e03f51d583b2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b9e57b7d-d1d7-4bfa-ae86-6eb89804517e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cf5c50-8661-4e7f-90d0-f7c259633920",
        "cursor": {
          "ref": "9de4cd99-ca00-4bf1-8061-10e363f1c65d",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c52555a4-ec6a-4bd9-8f58-78d9887660fc"
        },
        "item": {
          "id": "08cf5c50-8661-4e7f-90d0-f7c259633920",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a0c90877-ab7d-4648-bdb1-5c3c0e87e5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227d9694-1b69-4511-a8d9-ec8e6de3ba96",
        "cursor": {
          "ref": "8d1ad11d-5162-497e-8234-b220609c830f",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ad7aea0a-5699-4b9e-96ef-a780921418b6"
        },
        "item": {
          "id": "227d9694-1b69-4511-a8d9-ec8e6de3ba96",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7bd50ed7-34f0-4708-803f-8509469b173e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c285c241-69a1-46bf-a259-78d6a57f47e5",
        "cursor": {
          "ref": "f5009e16-d59c-436d-b6f7-b6ae2352e3f8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "938c250d-002b-4ee4-a14b-fe7014d303e0"
        },
        "item": {
          "id": "c285c241-69a1-46bf-a259-78d6a57f47e5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8b125f18-3cec-404c-a1b0-d3126e5cb4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f53d46-d50a-411f-bc04-3ec8e2349c2b",
        "cursor": {
          "ref": "e8db71df-6a92-404a-83cd-e22e77cfc6a7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "856d0bd3-d520-4f6b-a866-200d159824db"
        },
        "item": {
          "id": "31f53d46-d50a-411f-bc04-3ec8e2349c2b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "649e92f3-5215-482b-90db-8bafa79956eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7c9d26-24ed-4109-b722-87f16252f6c5",
        "cursor": {
          "ref": "6052374e-7c47-4330-bd78-6e5268bb221b",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d53f66e2-ce79-4654-a5da-4641e1a14a45"
        },
        "item": {
          "id": "5c7c9d26-24ed-4109-b722-87f16252f6c5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "220ea92f-a75a-43bf-bb74-fea34a290e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e3b5bf-28da-4783-9721-5bee0458673c",
        "cursor": {
          "ref": "ac692570-508e-41d6-b144-c722242d03d9",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "55209b84-96ee-4437-9f1a-d3a99f605960"
        },
        "item": {
          "id": "89e3b5bf-28da-4783-9721-5bee0458673c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e31081ea-7e57-4b8e-a35a-1472bae6e2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85a9a3-4514-41f9-93cf-616af8570a2d",
        "cursor": {
          "ref": "8ef0c4f9-c883-4b83-9e68-5771fd6fea9d",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1da36600-bc9d-4b65-a01e-14849551be8d"
        },
        "item": {
          "id": "fa85a9a3-4514-41f9-93cf-616af8570a2d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d59da96f-0fc8-4060-8b20-35d9f7cd5346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c398d8cb-6f6f-4942-911c-733e5b9ea159",
        "cursor": {
          "ref": "e4e2a942-936c-4074-93fc-e8ab6dbae739",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b9d6bf83-4974-43f6-94f0-0d01079c3ff0"
        },
        "item": {
          "id": "c398d8cb-6f6f-4942-911c-733e5b9ea159",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c66e85c3-0462-42b9-b924-5d23db0eb2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964f87b2-3e9d-4f26-9dee-bacb71640a64",
        "cursor": {
          "ref": "90f5fc8e-a000-4cdd-b8fc-22f690bf9864",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "41340f05-3533-41c2-92c9-9d734d0789b1"
        },
        "item": {
          "id": "964f87b2-3e9d-4f26-9dee-bacb71640a64",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d36f668d-66f0-4e65-9d9a-2056d0bb45ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2132a5ff-533d-4587-8df8-23ac59a191cd",
        "cursor": {
          "ref": "da76bce7-0a6e-48c6-8586-d3ec372cb1a3",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "64975656-61fa-4a67-ad82-932efd6f55b6"
        },
        "item": {
          "id": "2132a5ff-533d-4587-8df8-23ac59a191cd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "02fadaa3-0723-42be-8bab-fda31ef8fd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbc5b1b-a4ad-41ba-af87-317b85f0b326",
        "cursor": {
          "ref": "cc0cf39b-7a70-4806-bd6b-cb6d5f8099cc",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2419ad79-4538-4232-b0ab-5a9d6c266264"
        },
        "item": {
          "id": "cbbc5b1b-a4ad-41ba-af87-317b85f0b326",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9405eeee-aafa-46a4-8aa6-67e9c7c60300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee0f054-7ff4-445b-98c9-986cb382c8c0",
        "cursor": {
          "ref": "d9f0831a-5f96-4e96-8e33-2e7bb06c849f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "13984b9d-bf5e-40ca-8854-1be753562dd2"
        },
        "item": {
          "id": "fee0f054-7ff4-445b-98c9-986cb382c8c0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0dde7bda-459f-4699-951b-ee7b59e4b72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d296685-8392-4ef4-a0f5-5e46018116ba",
        "cursor": {
          "ref": "a8aca645-a2d9-487d-b7c5-82c46fef1a9e",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d785f7c1-46bd-442d-9327-8c5a669452b3"
        },
        "item": {
          "id": "8d296685-8392-4ef4-a0f5-5e46018116ba",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "abbb5a3f-e588-43e3-b861-dacc150902cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fe80e7-d563-441e-b659-11bbc0ec0e6c",
        "cursor": {
          "ref": "395fcfe6-568c-4eb2-bd09-6ed45209675a",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c241cdde-69f0-4ae5-a371-a575398cab41"
        },
        "item": {
          "id": "07fe80e7-d563-441e-b659-11bbc0ec0e6c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8316c1cd-0578-4ac2-a916-a15eb36f1615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdc05ef-91bd-4fa6-9c44-9db1565aa3ec",
        "cursor": {
          "ref": "5a998ae9-6925-4644-a04a-f413b637beb6",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "329c874e-cd0e-490a-896d-0ae27723a1b1"
        },
        "item": {
          "id": "1bdc05ef-91bd-4fa6-9c44-9db1565aa3ec",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "873f3cfa-93f1-45e5-b448-4dd43217ad02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8c338d-a6b1-459d-a6e3-79f76dfe7494",
        "cursor": {
          "ref": "70c1d8df-5021-4bbf-b609-ac4273a97140",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9ccf9939-0d2c-4463-8f5d-ab1718c14739"
        },
        "item": {
          "id": "5c8c338d-a6b1-459d-a6e3-79f76dfe7494",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f17ccd80-662d-4016-8980-41b782d90f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fcac2f-dfd1-4769-a4f8-4696aaab5c7b",
        "cursor": {
          "ref": "b2a77965-5cc7-4743-84d4-af41c7dee6cc",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "942093ed-d190-4361-8e0e-65395dffeaa6"
        },
        "item": {
          "id": "51fcac2f-dfd1-4769-a4f8-4696aaab5c7b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ca478b72-28f5-45df-9579-a23423122f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4241b6d-1a48-41af-ab39-0b51ba427fcc",
        "cursor": {
          "ref": "79c1d9fe-623c-4f64-ab6e-f1fc4deafe6c",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "253e64f1-c6fb-403b-911e-1023031ed315"
        },
        "item": {
          "id": "f4241b6d-1a48-41af-ab39-0b51ba427fcc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c1af4003-fcc0-40f5-baa5-4cc07d912d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215837ae-e3f7-46e2-aa32-7047f3bed321",
        "cursor": {
          "ref": "32903221-0052-429c-a9b9-08e29f7a427e",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dc62b3cf-97f2-4011-b31e-4408192db47f"
        },
        "item": {
          "id": "215837ae-e3f7-46e2-aa32-7047f3bed321",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b196ef18-e31f-4a8d-9860-304b79249c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae7def9-603b-4ba8-a741-0a85d542cb1a",
        "cursor": {
          "ref": "7a76bb44-6e22-4c24-ac36-bbafc4a6c6b3",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "58c99e09-3b89-4298-ac39-90db4454f7ae"
        },
        "item": {
          "id": "4ae7def9-603b-4ba8-a741-0a85d542cb1a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d34eeeac-c0db-4ff4-bdda-f01729111c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a888b72-65ac-4757-b0c0-ec614c31a1b6",
        "cursor": {
          "ref": "dbcddf82-f424-4e23-aed2-7f6edfe68637",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "75b5a169-df52-406e-9377-acfa9f2eef0a"
        },
        "item": {
          "id": "9a888b72-65ac-4757-b0c0-ec614c31a1b6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "348f04b2-07b1-4c6b-b24f-1a685bb220d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97f7f52-85f8-4c51-9940-8b77f7a9f738",
        "cursor": {
          "ref": "1a641a68-5bdb-4be5-8532-7539e6d87873",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e8bb6dc2-6b76-425b-87d4-e074ed4b2a50"
        },
        "item": {
          "id": "e97f7f52-85f8-4c51-9940-8b77f7a9f738",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f87add5b-5757-471c-9948-9ab5e9e8576c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6368e559-0060-4500-9536-ebd19686ad6b",
        "cursor": {
          "ref": "18d7c839-8815-48ef-9a7a-42b7dd8d12e3",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef570ee2-5d43-416f-85e4-9581f0dd371a"
        },
        "item": {
          "id": "6368e559-0060-4500-9536-ebd19686ad6b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "922dd066-3e9e-4ef2-85d4-f0bae4194e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c788cf3-6b3a-43ee-b8c6-c723340918c3",
        "cursor": {
          "ref": "d70e71c6-1cb8-4d62-b671-d08a9ade2377",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "952234ba-cffd-4cba-bc8a-1dba1248b74c"
        },
        "item": {
          "id": "7c788cf3-6b3a-43ee-b8c6-c723340918c3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b021405-95dd-4431-befb-3d80856ab534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc3d32d-6433-4d73-9a56-87577b642fef",
        "cursor": {
          "ref": "989e389c-4fd2-401a-9cae-c955df3f3c9e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1fc78fb0-0f5a-4490-a21d-0f637904abfb"
        },
        "item": {
          "id": "7bc3d32d-6433-4d73-9a56-87577b642fef",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8d1494ea-0d0d-4903-b2ca-405b2f13ce6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf95f4b-4155-4864-b9d9-1bc419ef6ed7",
        "cursor": {
          "ref": "78d6c0d9-257e-4bab-b5f2-6f0cc83bec50",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2773d07d-3c0a-490a-bd22-08174b2862c2"
        },
        "item": {
          "id": "2bf95f4b-4155-4864-b9d9-1bc419ef6ed7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "db1b25af-4e18-4833-9b13-45a228bb887f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e48fe8c-03fb-420e-ac26-337373297762",
        "cursor": {
          "ref": "1a44b0b1-6bc3-40c7-8761-1f6cbabe8d72",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5624357a-9940-4200-b8db-5a23b98a2003"
        },
        "item": {
          "id": "6e48fe8c-03fb-420e-ac26-337373297762",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "59b9cbc7-9d23-4c08-bd07-fbcfef7f6b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84df48a1-4ab7-49b7-b7a0-27c3a130516e",
        "cursor": {
          "ref": "b5dfc5a6-372e-4a62-ab0b-8d830cac99d9",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "65936d6a-18aa-48b3-8a12-6c5dc6cfa794"
        },
        "item": {
          "id": "84df48a1-4ab7-49b7-b7a0-27c3a130516e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "967c820e-63d1-4a67-b4fb-b1c901384e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87c90f6-6f6e-4c56-821f-ff3c52dbfa05",
        "cursor": {
          "ref": "50411d11-5f7a-4dbe-af78-27672e040be2",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "88d66033-2645-4335-8ad0-39d2cd8028f3"
        },
        "item": {
          "id": "f87c90f6-6f6e-4c56-821f-ff3c52dbfa05",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "77a38c9f-b550-41b9-ac20-5e5b9b30442f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd474e8-be37-47b3-8631-44eb493a5efa",
        "cursor": {
          "ref": "fbf364a2-d58e-49dd-8e46-841c238f2129",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3a16800d-2e2c-4df8-b499-084821b71139"
        },
        "item": {
          "id": "cbd474e8-be37-47b3-8631-44eb493a5efa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "00b74098-b3b4-4768-8214-8a2555164a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b8708f-098f-4ff3-84d7-db535fb6a2ee",
        "cursor": {
          "ref": "e3e29253-9418-4f36-8519-f12ac113c3ac",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4b6102dc-5764-42c7-bf62-19060c35c16d"
        },
        "item": {
          "id": "70b8708f-098f-4ff3-84d7-db535fb6a2ee",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0c07afed-8480-41fb-b947-1cbf5460d9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c7e7a0-8bc8-4063-a96f-60771eb9b359",
        "cursor": {
          "ref": "7aa575b8-d50c-4751-a675-6c727f5bc9e5",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d893566c-5880-429b-92e1-84f122a63a8b"
        },
        "item": {
          "id": "94c7e7a0-8bc8-4063-a96f-60771eb9b359",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "89f13462-d55f-415d-b9b7-d88b9fdc5155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21289bae-d154-4cf1-be8c-c11131e138b2",
        "cursor": {
          "ref": "281b4042-272e-4cbf-995e-b11e00d67968",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a3453bdf-4bb1-4f58-8278-1c7f971d4b04"
        },
        "item": {
          "id": "21289bae-d154-4cf1-be8c-c11131e138b2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cd04b0f1-2d36-4986-8786-5d03e6fcf31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5df998-f336-4b9d-b5aa-c7d814f3b917",
        "cursor": {
          "ref": "08d680c3-8064-4c31-9978-de8e32a5fa32",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "76a88241-f592-46fc-8563-f25bcdb9e02c"
        },
        "item": {
          "id": "3c5df998-f336-4b9d-b5aa-c7d814f3b917",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fc1e94c9-d661-4cff-a30d-0ba405e81c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5aa305-8796-4fb5-94fc-beca38042b0e",
        "cursor": {
          "ref": "08fc4303-8bbe-4479-99c4-c04554d5205e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2b1ac5ab-face-48eb-a611-6c1062e3e447"
        },
        "item": {
          "id": "dc5aa305-8796-4fb5-94fc-beca38042b0e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc39aa98-7c08-4499-8692-e8dedfa8e86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c637822f-251b-43b9-8f90-da67acbf85c7",
        "cursor": {
          "ref": "c11280a5-0cca-4418-93b8-74224a95d56b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1cd049ee-a716-4d91-90a3-8d69b102d49e"
        },
        "item": {
          "id": "c637822f-251b-43b9-8f90-da67acbf85c7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "49fd602d-bcaf-4941-a92d-a84581e22ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65bae87-69c1-4309-bda6-9e78d7e4493e",
        "cursor": {
          "ref": "115a28a2-8db2-404c-ad08-139e792cac64",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "66656fbe-80a7-4d54-af08-2a57acb2359c"
        },
        "item": {
          "id": "d65bae87-69c1-4309-bda6-9e78d7e4493e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "69bd4bb9-2dab-4e9e-ae5b-8e82331ee642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e098aa90-b531-4eed-8bd2-50964e91a623",
        "cursor": {
          "ref": "c90dbdb3-d783-4c99-bf39-a020bdaab427",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "25dfc802-bbfa-4244-8d58-c1b4def56d88"
        },
        "item": {
          "id": "e098aa90-b531-4eed-8bd2-50964e91a623",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9db8d7f9-bca6-424c-9d67-3e123deedbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94b3f71-820e-4b36-bf43-20add98af204",
        "cursor": {
          "ref": "37ef0bc4-c6a3-4500-aa5b-0024e333103a",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f1dcdadc-5906-4355-be16-c5618eff2ff5"
        },
        "item": {
          "id": "f94b3f71-820e-4b36-bf43-20add98af204",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "72376f4e-03fa-4516-a901-7ad2367b400e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7352e35-24eb-4ae1-aa52-1f8c0047f868",
        "cursor": {
          "ref": "3f9ca7a7-50cc-40f6-89a8-ac73236b6db5",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "81e98548-79a4-40f6-9b62-11f53b489a21"
        },
        "item": {
          "id": "e7352e35-24eb-4ae1-aa52-1f8c0047f868",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0a45a6c5-614a-4632-8221-f025dc3039cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7324514c-b739-444a-94cf-9443ae3b6c0e",
        "cursor": {
          "ref": "0c620531-8fd8-4f91-be67-5d5f310e7acb",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "cdbf9fbb-3923-491a-98ae-1f47d4c08b1f"
        },
        "item": {
          "id": "7324514c-b739-444a-94cf-9443ae3b6c0e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "26a120ee-dc90-47d4-8206-efe4d55dee6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67d3586-6e64-4051-9ece-dc99a6928b4f",
        "cursor": {
          "ref": "c2a72fa8-10d8-4c51-a4d2-dd285bf0e148",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2d59086a-209e-4cc1-9347-e377d8767a86"
        },
        "item": {
          "id": "d67d3586-6e64-4051-9ece-dc99a6928b4f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c867a767-e7e6-4a38-8c81-52edfbe0b30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949bd9f4-6204-4b14-9edf-678bd0687027",
        "cursor": {
          "ref": "7104324c-83ed-4143-a297-635837297b4e",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1b470028-2ae1-4be2-863a-b005dbf42e6d"
        },
        "item": {
          "id": "949bd9f4-6204-4b14-9edf-678bd0687027",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d81458b6-b1a5-4dff-969c-6c1bf5522095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2156a60-9b12-4b48-90de-29501865775a",
        "cursor": {
          "ref": "9d9154b4-73a4-4267-879d-67a3ab2a117d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e2201275-3997-4df3-adc9-438b817025b4"
        },
        "item": {
          "id": "d2156a60-9b12-4b48-90de-29501865775a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3a3d9463-2f86-43af-9b09-aec1e01dfce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c3252f-f5f4-4688-998f-0269cd773d4e",
        "cursor": {
          "ref": "f2a59beb-4010-4a3e-bfc1-8344471f436c",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "045b57ce-4fdc-4589-8ec1-81008baec819"
        },
        "item": {
          "id": "30c3252f-f5f4-4688-998f-0269cd773d4e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9fbdc961-4a2b-4b07-9a8e-45100cb24536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16cf705-198d-44d7-ad08-28f8de76be46",
        "cursor": {
          "ref": "db83b47d-5ab4-47eb-a7fe-0f0cb943cfa0",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "78286e41-6aac-4f99-81fc-4712627d8206"
        },
        "item": {
          "id": "c16cf705-198d-44d7-ad08-28f8de76be46",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bcad2641-e5d8-4e67-8328-6067e686016c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8b5865-1a2b-49c6-b55b-ac18b5b7d89c",
        "cursor": {
          "ref": "a00b1ed1-8562-407b-a045-dc225181874c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "451393d9-2196-4ee5-b657-842f5069495a"
        },
        "item": {
          "id": "de8b5865-1a2b-49c6-b55b-ac18b5b7d89c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "9fbdf09e-2ca5-4f84-839f-35e164d17e20",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be713789-8c6c-4a81-8152-d86f6835a565",
        "cursor": {
          "ref": "3b58026c-e43a-4e77-bdc0-a9772446b1f0",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8f9e6ab6-1e04-4de4-9fa0-24bef76f1d5f"
        },
        "item": {
          "id": "be713789-8c6c-4a81-8152-d86f6835a565",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d85550d2-fa65-4e3c-b9e7-8faff7aaa743",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a617242a-c8bd-4f63-94ed-530a852ef7f7",
        "cursor": {
          "ref": "3fa0a966-b17f-4056-a35d-adb6b6135db1",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d8922fea-b854-4099-83bd-81529bff1cc7"
        },
        "item": {
          "id": "a617242a-c8bd-4f63-94ed-530a852ef7f7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b5fe0fc0-fa16-4036-ba3c-fd8c4793eb9d",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cffcaf-c38c-4d65-a45b-e9c59434bbf8",
        "cursor": {
          "ref": "2897d5c8-e773-48f0-bfb4-443c3fb83d4d",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0e675cf5-106d-4bcf-9ddd-784a2d86646d"
        },
        "item": {
          "id": "63cffcaf-c38c-4d65-a45b-e9c59434bbf8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "84c0f159-3bee-404b-917c-c4ce4d48e030",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc36bac-7f7e-4a87-98cb-a774d3e4108f",
        "cursor": {
          "ref": "01a8fe0e-f22e-4eec-8de8-46e70151fc6d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dff8477b-8780-4a98-bbff-9d4a6784bc1f"
        },
        "item": {
          "id": "4cc36bac-7f7e-4a87-98cb-a774d3e4108f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8833add5-10f7-44d5-856b-2e7448a47dd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc36bac-7f7e-4a87-98cb-a774d3e4108f",
        "cursor": {
          "ref": "01a8fe0e-f22e-4eec-8de8-46e70151fc6d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dff8477b-8780-4a98-bbff-9d4a6784bc1f"
        },
        "item": {
          "id": "4cc36bac-7f7e-4a87-98cb-a774d3e4108f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8833add5-10f7-44d5-856b-2e7448a47dd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc36bac-7f7e-4a87-98cb-a774d3e4108f",
        "cursor": {
          "ref": "01a8fe0e-f22e-4eec-8de8-46e70151fc6d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dff8477b-8780-4a98-bbff-9d4a6784bc1f"
        },
        "item": {
          "id": "4cc36bac-7f7e-4a87-98cb-a774d3e4108f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8833add5-10f7-44d5-856b-2e7448a47dd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2374b9-cc0f-4724-acb3-56c9bddabcd9",
        "cursor": {
          "ref": "2ab04838-b7f1-4f93-a0a9-5777ad4c238f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cc6b8ef2-10eb-4b1b-93a0-d756cb148fad"
        },
        "item": {
          "id": "1f2374b9-cc0f-4724-acb3-56c9bddabcd9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c777db29-362c-4d08-833e-6c614fea1f33",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e652b0-8dec-492f-ae2f-d1db3a0fb73f",
        "cursor": {
          "ref": "428ce53e-2fab-44e6-b7bd-1f9bb1188933",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dd6bd743-8127-489c-b4a7-cdbe5b96355f"
        },
        "item": {
          "id": "f7e652b0-8dec-492f-ae2f-d1db3a0fb73f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9e6dfe53-5894-4201-abf2-6139985d7f43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e652b0-8dec-492f-ae2f-d1db3a0fb73f",
        "cursor": {
          "ref": "428ce53e-2fab-44e6-b7bd-1f9bb1188933",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dd6bd743-8127-489c-b4a7-cdbe5b96355f"
        },
        "item": {
          "id": "f7e652b0-8dec-492f-ae2f-d1db3a0fb73f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9e6dfe53-5894-4201-abf2-6139985d7f43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbdd45c9-3b85-4579-b33a-dd484c63fe50",
        "cursor": {
          "ref": "418a5920-eb40-4926-b715-b44ccd49adbe",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "faef42ad-c539-4068-b439-d0305d7840f2"
        },
        "item": {
          "id": "bbdd45c9-3b85-4579-b33a-dd484c63fe50",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "49005702-be46-4cf2-b147-7b081a7d4e25",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8242461-5ed8-4c0c-bb08-1b05a1c939a6",
        "cursor": {
          "ref": "96128cf2-da06-4ee6-9e0e-8815c6d0e90b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "75f7682f-74bf-46bd-9e0d-e47ec28f7cc0"
        },
        "item": {
          "id": "f8242461-5ed8-4c0c-bb08-1b05a1c939a6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7e7d0862-ca9b-4fa1-90a3-399bf211de6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8242461-5ed8-4c0c-bb08-1b05a1c939a6",
        "cursor": {
          "ref": "96128cf2-da06-4ee6-9e0e-8815c6d0e90b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "75f7682f-74bf-46bd-9e0d-e47ec28f7cc0"
        },
        "item": {
          "id": "f8242461-5ed8-4c0c-bb08-1b05a1c939a6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7e7d0862-ca9b-4fa1-90a3-399bf211de6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6f8a8e-bef6-4373-a77f-2132e06ffcfa",
        "cursor": {
          "ref": "2c899086-885c-4a7a-a801-392a77872ba0",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "900ae03e-94d8-4b8b-b46e-ee8ff8affad2"
        },
        "item": {
          "id": "4f6f8a8e-bef6-4373-a77f-2132e06ffcfa",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "66f84aa9-899d-4211-9e89-fc31fcab5e50",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}