{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9d98318c-13cf-453b-8adf-94ec6b24e396",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2fb92d22-1037-43f8-b2bf-830bb5512620",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c359f77-32b7-48bf-baad-23515d3c5efa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4f8c78d-63bb-4a0d-b317-bf68af0a4346"
                }
              }
            ]
          },
          {
            "id": "61ddb8c5-ac68-4322-83b9-05efefbdcd9c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1140d57-bb30-4d6a-8264-3439778b66f4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "83cdeca7-dea3-490b-94b7-a6b08872763d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bf41caf2-0361-4761-a4cc-8b08d8dca393",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8926a29b-24cf-4b83-9613-e18ad4e6f9f8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9609b4f2-bc5e-487c-b26f-fb52a7576631",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "332da2b4-4a41-4403-bd8e-1ec5d547a4d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99359e98-9b25-4ab4-a28f-17f189654388"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e42f032b-b1eb-4b61-8f91-5d3f51c5fb96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de1b2d8d-0f0a-4aa9-af7c-bd79f86e6a84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9569eb3a-67eb-4a3d-8d0f-d65333a430e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97af7ebd-2f57-45e8-afd7-80e3db2fff7e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "716f7e88-5311-49eb-aceb-4c099dc7f6cc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f2938799-500f-4de2-9093-d4c6368c76f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ff18f66-6604-431a-a590-c962d2891670",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f020fb3e-b194-4669-ae1c-06813b3f453e"
            }
          }
        ]
      },
      {
        "id": "19f0049c-5076-4369-80a4-acc89dc0382d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7b70b9a8-08e6-4dbc-9a17-379a6fd21509",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c4bc200-cd01-4962-9a3b-db3d430718d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ffde0cb-ed78-4968-894c-ed6d7b572456",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df2125e-c0f3-44a1-9ce5-8868c2d6b087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59f23437-3c8c-4a73-bebe-ca2fcd634147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7919cb7-bbc8-4149-8633-10cc34271d6a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f62668-f4db-4c43-92f0-7bd29d55eddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51a2c14f-4084-4fd0-a8ab-60b47bb00f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f2d3f9-66a1-4b80-acca-34b0c0d2b6df",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1df18d6-2b86-4667-91ea-fabcfb568ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a3d7c42-bea6-4e3b-8a33-b96121ad8c93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13aee555-3d50-473a-90e1-7d5e6c88804b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be2aa3b7-e94a-4231-ba58-a641ec5df781",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb9863-311e-42ca-84fd-942d0b3640e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c721ba7-4ae1-4f23-b208-9855417d25a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1afe02b-f8c1-4d08-afd8-062520885a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf0c391-0544-4344-b092-934f4c294c45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c7b9188f-06eb-492d-8d45-9bb2c2f7530d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a414e6a-3f90-46f8-9df3-4ac58cc24ff2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f519d29-4d64-4806-9c3b-936e59781768",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6fa1faab-7989-48af-aab8-bb37cea62377"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b467ed3b-85a5-45f9-8153-52eeada4d8f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f4a8b474-c74b-4183-85a1-3dd52962f1b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04924ff0-269e-40a0-9a6b-37ff7fdeab37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98f124da-8cfb-48bf-a1a7-e46e6b1f1a10"
            }
          }
        ]
      },
      {
        "id": "bba2b7a2-1f67-4dff-9f26-e119ea6af6bd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "10a18fd2-dca3-4a76-8d2d-ec6b33e8ffa4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ea2148b-861d-4b00-b66a-84bd584d1b60",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6187759a-a7b0-42c6-af25-b4bd6e3356b3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360a6f17-63e7-40ec-8e42-e2a6e6e2e11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400746c0-2369-4e78-ba77-6f9e440f2478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae95928c-ebec-451e-956a-5e49797df26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c48fc9df-ab03-4707-b59f-53786cbf6ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf8b353-bcba-4a2d-8d60-c9ef23a0b1e3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad0b2ef-8eff-4831-a533-2b3ad8c8ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb013a1-df78-44c8-995b-1e6e757221c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf9432a-c973-4d0d-bb84-5237b4e00dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79d43e3d-5498-4a51-b132-b7a8f0984778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf80edb2-4f3e-408c-9f3b-a5ea516c88d1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b8beee-0366-4563-98f2-73ce54d4c305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c89cc43-7b08-436d-890d-ddfd5fb51caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facc0c92-177c-4f67-945e-7f513ba46a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4577709-5b13-4794-a0de-52b44585840d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be2229e-294c-44e4-b079-5c61ea8f6e24",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab208f82-ef89-487f-9919-69af3423da8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d792da06-0d9d-4916-bbd4-184e88e0d98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d14d84e-97ea-4e31-bc17-9fd6230fb79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "676f8ecd-b1c3-403e-8cb4-bbb58a2221bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631152ca-5764-402d-81dc-bcc54abc626a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b094bd-4f87-41b0-abc9-aae4463d9e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c37913e-ace5-4acf-aeff-8710382754a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1e0139-4271-4b15-9d6b-ec23bd0bb2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af5634d7-40cc-47ea-98cb-b725fa34c218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6820c59a-45d1-41cb-8751-d0a7aacc878c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c746b58-bc3e-4746-8a3c-f24657e6ff52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdaf5f4b-7759-49a0-acbb-ac4555bd20e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abae3a41-2d8c-4bf5-b0da-3ff669a0dbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3c08608-519e-41c0-8d28-108cd54965ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b760f6-85dc-409f-8c0b-c9e013e6dab5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50e29ad-e048-400a-b660-a99e55c95434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64e2985-3d67-4e1d-9a26-767faff9f826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e178b9-b93a-41f2-a3bf-c566dbdd351f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2174573c-e6b2-4962-9bd8-0e1b8bd9ca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f31037-23a9-4988-bbd2-e6fadd7c18da",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9adbfb6e-e58d-482a-9d0c-d551061c4006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832c5b92-8a61-4448-9936-d46c3e3e76cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57973ce6-e205-48f5-b363-ffd4d8e7fece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16aa7c11-b861-45b7-b73f-7a3b14f0885a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f0841d-1d4c-4320-be3d-437fabd5b796",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5376febe-5f41-42ae-b3e6-988a3764fd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5539c3-feca-4af1-bccd-29d329a41748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397a6341-8f7a-4b8e-928a-731e451d325c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc916869-4191-407f-8275-8a80f4d7ff7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d60e097-895c-4f96-9541-55dadcda503f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e722e7-8877-46cf-859d-84d0ec02cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41ebc19-0b57-4542-a567-ca778297c23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108b01d0-0ed2-4f6c-9252-12ff087d5f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "484b6bb2-8dcf-4421-8e34-0c156604bc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416fec1c-2f71-4348-b6e8-0a75824614e5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5b0945-6b5e-4195-bb6f-5cff8392d877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c56e9e-d4a6-4ca2-ac11-8e19c9a1d1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf8e139-f3cf-4bed-b4d0-4ab7a2da02c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03a7f9dc-4665-4309-8fcb-559401bb0b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc4d4cc-f23d-4d02-a6f1-d25a9f64c31a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d212721a-dadd-4d4d-a66f-7abf99fccacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960a91f6-4e68-4467-975e-65855060468b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0341ae00-7c08-4bb4-b5f3-1c859a8c4f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1be7f68-5198-4430-b460-f6cd84ecc506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1527e260-7f7f-4d17-85b2-7d5185291858",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbac5ccc-a464-4a37-b33c-84616742aa1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa4690b-ec90-459f-9a74-7744fe58dd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f93765-f76d-412c-a440-5d0a6ee6da4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "827b50c9-31f3-4558-a153-901c5c11045b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21d0f98-5cb7-4ccb-b9bd-3a632c7aca0e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab444de-3751-4edb-8df3-5a38a48fd9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67148415-8809-4345-a9d2-936e1508fd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3654d3ed-eaff-4329-b3e8-3a92df4535ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bffa2984-cb97-4df0-9b4c-f391489ac01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a2fbc6-ced3-4b5d-b3f3-f1771a359c4b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791e7d43-ac65-4f6f-aeca-24ddff6f19aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b7c1ca-3796-4117-8fb3-0da0f34a685f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d447e729-8161-452a-896e-caae8940b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10e5efa3-b691-48d5-b577-f109de6d74e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7ba253-44be-4f69-b09a-629281d129ef",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca71dc9-4731-463a-9999-86de11c4bb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea0ee97-2e68-4b88-9a6e-a596f01e146d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee7ba3d-98c7-47c1-9dfc-d7332b7ce305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e87fc226-5126-4f3d-8675-63ce5cc39837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f22aa0d-ad00-459c-8a74-69ab18e679ba",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8d0a5e-e676-476b-adbe-7123972adcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0468171-887a-420c-8566-147c64cf40a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10281e48-568c-4c6e-8292-c824255d3d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a438faec-3ac7-42c5-a5c7-6edcc2643aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e703e2d-f272-4e25-b761-9e7f033359f7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b218fb4a-0acd-4c18-ac1e-a14ad85c59e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb99de1-cd8f-4753-9adf-4620aed9808e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85765a4c-6c7a-49e5-af8c-e01269c808b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d847be63-a048-4ae6-a04a-768817836b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333a37ac-f547-4626-8f26-93cbe53653ea",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700d759c-712d-4f1b-b902-fb1af71df610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9d5305-93c4-4566-bb02-052338c6f9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b08645-5d90-42e3-b566-db9c16d250bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7643a648-2ddb-456c-a6e5-647e9905d24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca3cc2c-40f3-478a-b3e6-57ad662732f5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ef5a3b-40b3-4425-93c0-788adbcb3fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edb34b0-954a-48bb-8303-26774a26051d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425fa334-6e8b-491b-8f3a-498db151bd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfba5d8-295e-4912-b889-8a4d32f049cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8ab15a-7425-43ed-a207-ba6145c07f5a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af3bb8a-7d71-4c7a-8373-61249e85a5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f669b7a8-bee8-4692-ab62-f41a13d249a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31b4ab6-24fd-4bf6-9f23-87de60188be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1732ef63-da25-4a77-aef5-1c05cd706519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3f042b-168d-4a97-94d4-06bff446d224",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9be06d-87ea-4083-8de9-b45c57b0b742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d5beec-2718-42ac-adc6-9a36f8b3fd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4193636e-f8df-4aa0-90aa-ed0b3cadbf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4db47681-306d-4fdc-80cf-a6cab1aadd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6dadd0-7e6a-4e4a-9197-e8097642819d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e785c38-a212-47cd-8bf3-213c5a3ab4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246febd9-cc02-439f-b79e-baaa8bc28961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f733886b-05a4-4ed9-be17-b0dfae3c8893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca18d25-f228-405c-8fc0-f54f97c1a652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7e7583-09b1-47d5-b164-46519c9570be",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae077359-d1e6-41f5-9a48-a9212d6f294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a84478-d00d-45f4-8bd8-46f2acf7e91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c612c0bd-1226-4525-babf-edd0c1a339ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "608bf9b3-1b03-480a-a9dc-22ee35b62a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86ae2fc-4843-49d2-86a6-56f371b25b06",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d82547-047a-4308-bdfc-5e55f4d6e497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d028e74f-2bd9-423f-8448-3bb04f676cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6662ee-42d8-4087-a637-d85c40c66460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf83a36-a608-47d0-b3bf-acbe04a6ebd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65e3dc7-ba36-4d60-867f-4c80b6e92f38",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709d9069-bfd4-4b1a-881c-5e3b2613f213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fef562-f71c-4fb8-8d20-a702c0339819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99393849-8133-421b-bc6a-240aaae430f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8960968-5b45-48e9-825e-7ef047993bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5236ce5a-740f-4f5a-9bca-d0fd3688371d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f84a09-e998-49c2-9dff-1292788e7657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296146ca-61ed-486e-a7be-ea6fdc05c79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee606992-79fd-418a-8275-5b8bdeb3dcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e70f497-c665-4267-a3b2-82559e12467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71b10e4-2f48-4d17-9fbf-95545153c01f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee935df-df47-4bd3-9c17-18f0b638baee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0eade3-ff81-4560-b814-ab6fb18f02ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fcd403-1af5-4eac-a5a0-9be0a806c4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b43d7092-7073-467e-a6dd-b6984b9b80d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36d03c1-4e3a-4483-8966-e666ec56a762",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378a9dde-258d-4669-b103-6fb210da383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fd85e5-2576-43d4-aefe-c396a3d2d673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b921b5-183a-435c-abd2-8ec91459462b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b51ebb-7e74-4b7e-8bbe-4be08a1834c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fd9339-f6ab-4802-8b1d-fe238ebc4e6a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd1a2d2-9713-4b70-a232-ac818ddd2f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52225bc-fe8a-4f60-bd0d-0ff6973fcb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4a6c91-10e3-4566-95fc-cb2d671d8742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4216176f-6104-4828-a30c-b6de369452d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b6c99f-c649-4ebe-a166-072f6975f4ad",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98e14b0-0557-4074-8250-d62e589613db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdc68df-ac32-427f-9256-881622967de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35498499-9d14-49d6-a5f3-554947f1361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c535be48-d70d-4ee9-921a-79d037bc2506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f966a45d-1942-443b-bd33-28e23c327522",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eaff89-cee9-450f-b16f-f40c4794ae99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904efb67-88e7-43d9-82e3-46d9f5d4b4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5711d10-497f-401c-9567-0837e0457063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93e79b99-ccc8-41d5-b025-76c3d4ef3d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84d21cb-273e-4999-b3b4-3b0497ffe495",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7edc52-6d88-4a0b-962f-a0d641c55843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f14e71-39ac-4d90-a9b3-2b910977dc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b8075d-2520-4f7d-9430-6943fa7456b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06941fd1-7e5a-4720-8961-26cae3781b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02c387e-dbc5-49f2-a77f-a7a263ee7963",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fde070-24a3-4cc5-b0a8-316dd791f89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189a9bf3-297c-4dd1-adab-4d5ec8ccb988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc72e87d-53e3-4d88-b787-46409e322180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e205207f-5270-4d35-8600-6b7c63b23c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335629bf-a23d-420f-8fc1-6fea560b3b40",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7489e32-9171-4abd-80d0-6285b067c711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c75c1d-25e1-42c3-a524-e6fd10467efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f197486-e822-4d29-bbb1-7f0a949688aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "934f6543-2c49-4b62-90b7-3d5d90b26629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf04b99-7548-4123-97dd-fbc481f5706a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b4a305-5b15-4c93-8968-ba6e837d21c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "967b3c5b-998e-46dd-98eb-9025223f8716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d5c789-3f86-460e-9fa5-bb5baa57e0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "439361c7-e8bb-41e3-8ea0-161231f867a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6190d70d-26c6-42ec-af11-5948600ee1ee",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dccb9ea-c72a-4212-923a-771f11420df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99af4f72-a8b1-4c35-b342-9ae3752fd6fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf83529f-7cb9-412d-8def-9d02ec4c989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1ceedf-8e62-4938-a4cf-cbaaa183aaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b750c5f5-964f-4408-a0c5-b280de0d71fe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf11f22e-ad71-4aaa-87e8-29261ba4a24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1bc5ea-33fc-4e81-987c-e635a71a85f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912cab8a-5f0c-4289-9633-a0df5cb0a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b19f474-19e3-4e39-892d-19fd2a074690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d67075-f33f-4420-ac4c-d6e95e39f6f6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36e67ff-668f-41ae-901b-52fb5120dc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d42dd6-bc00-4fd1-8eea-3f0c35790015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fbe895-17ab-4abb-b901-d7ee782dff9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "07e3d470-c563-4aed-bc97-2ddfa7073119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26833721-887f-4dc3-9fec-ed3933821dbb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5449015-8323-45d7-b800-f1d09218063a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9259cae-1063-449c-b33e-12c314741dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069f0ebd-55f9-4107-a674-85106f206a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "655be9ce-c907-46e2-95af-92377c5cad13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57801977-31db-423f-8622-d1b4e2cd6098",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dc53d2-d369-44c5-ba06-7065786b98ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871041a8-585e-4f8c-95db-c2da0ae6786e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae48d3c5-e3ec-4781-9043-47d537bb8702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fec67dd1-2e05-4456-ade3-c8b3991def75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b996600-9c0f-4a0e-af9f-1662b0471bb0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e185b3f2-90f8-4bbc-99b6-2053a193b59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b44420-9130-46fc-a10a-7a468a98c558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fd20cd-5cd4-4f23-9824-200a08ee09c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1835d8eb-cd5e-4a7d-a7c7-e59243d3d1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089344bf-c8d6-4807-a7ed-7e20fd89918e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4081c6d-e279-44bf-8217-09fe65d30471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66833935-a44e-40aa-b919-4906a3ca003a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc73960b-c3c0-4a54-9696-6d5d3a4b2629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "70ccd442-7232-44ab-a63e-370497eba404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047327c1-f8cb-413e-a33a-bd749a5e4745",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7c69f7-7028-4b7f-a251-7ff8d4253bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16854897-2625-4335-8be8-59d5c96f9f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106111cc-d505-4efa-a08e-409fe9d52e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8bbb5ea-be57-489f-b933-29d9aa94ef27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46daa996-42c5-40e0-a164-068c2075fa31",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c8c62-caaa-4028-8dfd-f2807a1936ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfd1d87-24a5-419e-a748-093b62cb50d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf45e8be-ba25-4684-959a-1360cb3c0a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ac8c18-633c-4b98-beea-bb43ee8583e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ca1df5-d1c4-4f5a-9b56-f10dec45f020",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2843ea7-04b3-4b1d-8c60-083146f6b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd8d9df-748d-4de9-9825-6fcf7b8a2e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7522da1-c0a1-4844-9e5e-edb6d0b5e1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb787f10-39ef-465f-a9b1-15591b11c0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e314a9-c1b7-4778-83f4-b4f3296dcd6c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64096193-3c60-43dc-932e-ff0f31fc7c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb5e6e9-4c63-4b25-bec1-19832ebd33d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfeb7881-dfe6-4158-8fc6-a53f2cb1e23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2daf55ff-2344-4126-bcbf-a3ef8712702e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5fc712-f485-451b-9d8e-45c1abfc6396",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08fceae-d018-4d82-b09c-6f686dcc2e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b4b547-3b46-4133-94f0-bcc7b7bdadda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8314f579-26d2-4f09-bef4-441ae99a0a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00190713-6bb3-40df-9593-177daff86e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886af65a-e1a7-4bd1-9cd0-edc47b3c37e1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3302d4da-56a8-4bb7-bcf4-10ffd411e02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e61d435-8008-4f11-a916-3be37f1ab90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0693511d-5104-4ae8-88ce-6af4a34f070e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73d6ca90-d880-4cce-8a1a-961f87dc2751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6279cbf8-b3ec-426f-9c3a-cac134afdd01",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d109d8-7e89-4a30-aca0-fb7dcac33451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9a625a-b2b9-446a-aafe-ab0af28e12fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89ccd19-bc2f-4aab-8063-6f7e18ebf18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89597679-15c6-4e9d-ad92-a93e420167ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f336e922-8def-4a6c-aa31-e173fb7f12dc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a73ae2-48eb-4765-8342-ae2ae33d2e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beea0a59-fb4d-4247-8828-ed310a314fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91af8d3-0cbe-409d-9acc-8b57e486495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "18f4861c-04a4-40a6-950e-870735c4e423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a601d2a-4692-49cf-9c85-5e974b89fdc6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1305c409-2e8b-49cd-b015-04ea0b835424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48c2a46-ba95-46e5-b120-e39aaafe1291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952f7d1f-df40-4e2c-aedb-d05b2856dbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4634d124-aa54-4a98-8057-bcc4dd8aff4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be30384-c9a3-4223-8f09-b1c08a6ab3c2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487566aa-4985-45c0-ab1d-596cea11de04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b271f4dd-77f2-4698-84ae-b3fbfcb224ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c04200-1a5b-4c5c-ab07-be081002760b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "308da69f-80f8-4b43-bf72-08f2995f3726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274d4380-c91c-496e-9912-5c8e633f6802",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af93f8eb-d16c-475c-9e83-820c6abf10e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18701a7-6b2f-4572-8516-bccd12b1a392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd10a46-e4e5-4097-bb4e-682aeb733446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02b589ba-4550-441e-bc6f-dcab1f25d11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066b98e1-b867-4842-ad2f-fc92f150bd5a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc79b6a2-9380-473d-b48d-f5753c267e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c74ac9e-c7b7-483a-82e8-94fd59d59376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9374ef1-471e-4f70-816a-957c1facec10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de22db26-7ce2-419f-9770-09117629a628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06072ac7-16c3-4539-9a25-308f6b361099",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f2c704-5dd1-4c6c-b575-7d021da3d43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37030755-c748-43c2-a361-025d3a9ef2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e503d844-4918-4fb1-a1df-9201fc31622d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a02a87b3-3fb9-4755-b9f7-173f66ba57cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5963259-855b-416a-8b27-ac02a459e8c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6972cd65-50c4-4243-9a8e-6c073c16ce4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdb5919-2aee-4584-8064-ce6a4d78382a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e667b5d-fe0e-4387-b28c-91e9198fe4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c9139c-2f7c-48af-8628-15aee6790d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264cf1d1-ae7f-4dd3-94d1-d92a3fd04cf6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4342b0-3239-4c97-b617-307b6122d057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41875cb4-15f0-4a11-bf69-ab02a91eed96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fcda79-7cf7-41f5-b22d-35ffca8a70cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca01f985-ea3d-4f99-9085-338904b8337d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844e688f-4b0c-4f4c-9f01-c787abd2ece5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3cac56-6fe5-465b-bf7d-ff34b18888af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f93fb8d-361c-479f-9704-068362cc58d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbda101f-21bb-46cb-a9bf-d06e1f44dc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa42fabf-e9da-4945-95dd-a902e7c0e3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407c9876-1038-4cc3-b249-7c7d1d58b46a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be65280-d4c6-4ad4-a3aa-35649623349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b85553e-5f68-41b4-84f2-ec6d1d4448ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495c0fa0-1dbf-4fed-b8c3-22e82cc548b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83821c77-cb7e-4618-969d-6985f8becc29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4d4d54-8930-4b13-8c77-66b863b18b7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3db463c-75b9-4e2e-8d5f-e40992bdc803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bbeaab-7530-412e-b80a-8b76e2a543aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe371f10-230b-4a8c-bfbb-7d11e90c552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "887520e1-d523-4831-8f5a-188268c312ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b706719-081e-437a-aa1c-d6ae472ed2aa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51446e5-5a8e-40f9-ad85-5f3ed9ecb7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6800300-8810-4e26-8d09-b3eabd03077f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1453d03-36e2-4508-bd9d-cc524402f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f73678b1-5e8b-479d-b332-8fb1fc125d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f66026-8719-43ae-981f-7bb0867ba40a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d62d88b-2f6b-4181-ac93-5e515ac75090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77be0ffb-4904-47b9-8fea-89311d47b44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc7af63-b124-4ea1-af24-366270f34209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c05fab-d5fd-4d51-b747-63c4d4ff649b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9a53bd-8111-438a-a92b-47f7a09284a6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928a75a8-bc1e-4fde-a01f-8f7e670bb282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211bb519-e268-4e69-ad4b-9fe9747b20d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e9f763-e70e-4e11-b294-7dc3f37c248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "019158ef-d9c9-4293-836c-db4e390e293f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f021141-e732-4fec-ab49-3159d1b62504",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd7a029-bad9-4386-b75c-681b40354f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd97692-bd94-451e-91f8-2c730d98235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe455ee6-0c0f-4744-90f5-5ca7ba8aed4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81dd7d17-d762-42b3-91ad-392bd8816303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a016fd73-eea5-4dc8-a0e1-b126464bdbdc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a40b74-1b5f-4250-9c11-a4e9a91399d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73bdca4a-9e91-485e-bb32-11c1a027a745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df845586-c1f9-494e-bb22-18496f103bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46378bb6-c96d-40b9-95d6-5c6dac941892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09956471-decc-4ed8-83cd-ed2272505f22",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63db4d84-0ef5-479d-8c19-4d8e4a375da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cef60f-cdc6-44d6-9dd4-a34862efbc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843c0491-8a1d-4302-931c-9a6adbfd9dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "155e7a04-4309-473c-83b0-6154c835ad64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db477203-a701-4252-b333-c1693b6beb1b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c80110-00c2-426d-8c54-e1dea43d1e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b762dbc-c8a6-4824-b68c-4dce0626c756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46ce0d8-bbf0-4a8e-b68c-7ed73613ea0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a69a7cf-4f5c-4501-a1f7-63ba8787e6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76db48fc-85e4-4da8-be7f-1ce0f3586c43",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12296644-dd97-47b0-b6e7-43910778b6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebc549e-d3a4-411a-a945-0335ce142c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4a9409-88a1-46c3-a9cf-5e8f11ed567f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9034a37-156a-460b-9d30-ca6e7f190d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e91d50-f1cf-4fb4-a814-52ac296bbbb4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c687a04f-e94e-40f0-a213-32f86ed4f879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b97755-cd5f-47ee-a340-588cc9230c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb475edc-9a2b-4289-9dad-ea9540981d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6deec11-b1e7-4a0b-a029-29f08930d141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2695fec6-6cc4-497c-a592-271f116939b1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa108bda-b642-453a-8682-d9a633f03ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f853a6c3-42a7-43ae-9d13-4bbc684b2e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6438afa3-f849-4800-8c02-de559f504bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1c47e2-4448-481d-8bc6-3ae2084de746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e213e5-cb9e-4b7f-aab6-d50b713537ae",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3bb52e-ccf2-40e9-9dde-4c9430e1d56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d2ea30-9a5f-4cd9-8459-56bd7868c4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f934ab-ab60-455e-9505-6e720cc0199f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89d2b94c-c4c4-489b-bce5-77baa3bc145c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e66fe1-e3d3-412d-b724-1a469cd519f8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96acc17-9608-4ef0-82af-bc49e1ed2d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa48732f-1f5b-49a9-b185-cc1224ab32b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b2189a-4575-4b3e-b984-6c5198a493fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5815734a-46aa-4501-903c-bc79a3927151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885bf3a0-a37a-40e8-8b60-a66e8bde07bd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec4ff11-8a57-42ca-95b2-a74864c2c611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179a5215-f70a-4aef-8ead-1f4d1800e118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ea2510-1a6b-42c0-8d85-4a98cce8df8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f182304f-9dd2-49de-86fa-4cfc6ba1484b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86d6865-da0a-4757-8fb1-2db20d91a541",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad61ea4e-d9b8-4193-a0bb-5cb738784ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0669b1a-027c-4c5e-86a4-f0976f530103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1e47d8-e563-4f73-bc27-38d9cebc1e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47a1e6d9-42c4-4b36-b6ed-35e8af85dce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f0e5c8-5c27-420f-9f6a-000d2da76c5a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db42332e-1908-4574-9fb2-f0f376da7301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac18ab7-162c-4c05-8f0b-d6a902c58864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff33b97a-4f94-44a3-85fc-a8a6edb6bddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a57337fe-7284-44ec-9051-f45f1ced81e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9075e51c-24ca-4573-9753-c11d3198260a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27fe8dc-48fb-43dc-8137-b59bc769d471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7347b244-881c-473e-be96-5df6a3d541be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00c4e25-b890-40b3-a8aa-e31af7bfe787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbedd040-340b-432a-b795-98baf90d8bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba2d89a-12e1-4c59-af5c-1afcfa9b375e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24fff4c-dc4f-46c5-b4bb-82244e2a710a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b3ec57-579e-4f18-ab48-e4f1d078fa63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded97ef4-055c-4062-8b95-bbad1e7a7e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2693ed0d-00ab-4210-a79d-657073ef12db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab8cf17-3975-455d-acf4-e616961bb823",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186290f2-67cb-4d1c-b09d-45c0a0216938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087ef39f-8492-49fa-9e29-1c3e4319aefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f07b3e-3bcf-4570-ae80-6dfdecf6e6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d64e4c8b-533c-40bc-a16d-620cd105feef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09081b71-6420-47eb-9a08-7bf3e6988f85",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29189ce1-faea-4470-971f-d2bc96ceff21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e716b195-b27b-45fb-a4ee-31aba8eec1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b58e353-ca77-4582-96db-4ae2503c5acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9da5ba-a3e7-47f4-8945-570118e1cf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3d446b-818f-4a4f-bd98-dc6f19fbcae4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d485d991-5fa4-4ed1-a636-7d3e3535d4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6407083b-cfc6-473f-9603-5c2fa2eb69f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee55a82-26ac-49eb-8f5e-29e3d3dd5b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff52caeb-7741-4c2e-b0fe-e5d8040151cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb46068-e7cf-4944-8288-57190dad6c18",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c77b00e-aa4a-4e9d-9a5f-96ccd6341bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cf2651-5254-48b2-9e59-2bfd8ce4bbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b8e81d-3f44-43dd-9d8b-75276601a090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dfbd07-a0d9-4262-bf5f-dc6079a048bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ff9313-ba80-43d1-bf98-6ec286ca5d91",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be3e907-3f09-4515-a378-25a6f8ac0dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067cad9d-5b6f-4fd2-8752-8f2c5ac35763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f6e308-fdd7-449e-b094-8a74178bd7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6afb6a-ebfa-4f1e-8173-299d2dcb8686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e5ac69-ae33-4467-ae08-cbee0c8c9e23",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4abcaf-d45a-44ae-91df-d25b9ccc4b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d631ebe-a4f2-44cc-8cfd-405a0da37ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1772f344-8981-4233-9901-18fa299608b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84108cef-2f8e-4411-b1a3-adb2ca099c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0436deaf-e5b1-4e66-be8c-833f5ec6726d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec79a94d-f91d-49c5-996d-44693fb73862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4e162f-2bcc-485d-bd6e-1ff302c996ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c642147-3c2f-4d05-b470-2860223460c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a479597c-9d58-4ea0-a3ea-ebaab7a152d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14e4e58-42ca-41af-a80d-f48350d4808b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79998526-8db0-40f9-b8bc-840e2aff2164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f008a08a-a88d-4d88-ae8d-bcdf67ee57c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a356df-3fd8-4468-a86a-188ba6f02e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34094cbc-f8fb-4961-aac7-bb28b86552eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7937d35-6d8c-4a3d-a898-31370d8f5ec5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d0d94d-8182-4808-9ae7-57cb30ddce7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6be43e-2857-4be6-b82e-03dbdbb9624a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4a1eb1-63e9-4b65-9055-31078578f08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74609d67-8e72-42da-ba03-745ea62f49c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb664427-8587-4651-a74c-1639e424c121",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09b5f78-2e7c-4578-b4c4-b354ba8a7853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a857354-3816-4426-83d2-352445d68452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd25e0ff-5b93-40ca-bba1-f5532ddf160c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4cf6f0-11de-4bb3-a8c1-339f961db125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a44204f-6cab-4553-b228-bc23f7c5fe70",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdb0a2e-8767-47d2-8eb3-cb93360da95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caef6551-d524-4f70-b6fd-bea3cabb24c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955265a5-2833-4cb2-991b-c9558bc3283f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "64801911-05a4-434f-b9d2-55805ea5d083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6fcf91-d713-4473-8ab4-1f25b6dfe24e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17343365-38dc-49b3-83b0-90492cf5eb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0377d8-26a8-426b-bab9-01f96d6d8540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570843c8-ae0b-4a94-8f8b-d0d89df293da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "72862d9b-7014-4ab8-82c0-54f4012d4512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c889d6a8-b460-4d0a-aeb9-e55d65930248",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549b14bb-b6bb-4a3f-9c0b-2c52046087ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d322c954-2557-402c-9199-010bda74d00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38526ef-a579-4969-9587-15fd018579bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9a05f4-90eb-4472-8a30-77b5d439a9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605e573e-5680-4e1c-8808-eea02cc420f3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1bb6e2-f4c7-4be9-8890-98622f0dcfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1d715ac-f325-4ac3-a311-376237393313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85edffcc-b3fd-49db-ac54-e207d51fa88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "adee5d2e-a065-42fc-99f4-8856355be00d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "abc63903-40ba-41cc-ac24-ffad16957b32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0badd4f1-fe4a-4740-887b-099d44a268c2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7877ce-f89f-4a3c-9907-cba3dd8db508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff45d57a-bd02-491b-9af7-b04f6a9d70d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed5cdc7-78f3-4727-a93b-5a6e65839653",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2de38ddd-1313-4c0c-aee3-b4791ad76081"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb4e0084-ac12-4957-9401-0a15f7f4299d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61396836-3cd8-4386-abfb-0b0f5b4482ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48e15087-b92e-438c-ab4a-2fd3776a59f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bb155e7-bf8c-4535-a2d0-df22229abc51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7e238c1-4d8c-4760-ab29-b9056186f937",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a1abf02-d9f9-49b2-b0c4-eaca9b951ce2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f83005f0-06e9-4db7-b7d0-bfb8007beb04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f1387f6-462e-49c5-8c47-b0dea93bb92a"
                }
              }
            ]
          },
          {
            "id": "675d5301-7a97-40e4-b289-aee0f64910f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "303d1602-0817-4612-aad8-8cd20cf5310a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "465f938a-ab00-4665-9205-ea593676f368",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0ab8b5-d7f9-4d0c-96eb-7dcac1118853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e8112311-ce17-4ed1-8e11-9fd77c85b446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d99943-8f3a-46b7-8e53-94d95b3571c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88052a84-60f8-4fbb-a680-a44fcde3d2ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d404e795-a64d-4ae6-aca5-fd9164dd8d42",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "538597cc-3026-44a0-93b0-02b4870e204e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f7ac75b-de5a-40dc-b364-d7b9ae3cf585"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46b4efb6-3516-44ec-a464-07dc24fa1f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "077d768b-3df9-4a7d-ba03-ede1843798e0"
                    }
                  }
                ]
              },
              {
                "id": "9287b42c-3a65-4214-beb1-c579392ddba4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "238db9b7-04d4-4fd5-a4d2-2159b9e7d762",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a09003f2-ccec-4acf-be16-9bfd78c000be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "286d90cc-d219-495c-b32a-acfd1891df8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1dded1a-9394-4483-bd1f-6efd5a319d2d"
                    }
                  }
                ]
              },
              {
                "id": "0e4555b5-b467-4d8f-b7eb-115040c06ec2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9171607f-a018-4370-821a-846138956a1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58fb30a7-893f-4406-ab40-b81af9686f1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e78a1cb-3003-4c48-93af-48147d1b50e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cc3f0ca-0fc9-4f94-a980-aca7da940d70"
                    }
                  }
                ]
              },
              {
                "id": "fb480536-9c3a-4851-bd95-ca77937e0f10",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16b52fe5-fe3e-4866-88ff-3406609e2e6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f85e8b2-acf3-4d81-8e3a-22883ebf7861"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb27bc46-62bf-4cea-a1fc-86ba9db99b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7aea3d93-c12e-430e-a0cb-25cc4a7bc195"
                    }
                  }
                ]
              },
              {
                "id": "312d2072-932e-4f3d-a334-aa9b3d5dd0ce",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8c4cd45-c2f7-42ec-ae4d-55fee75dbfe8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e16410ad-f03e-4c31-beaa-ddf6f4e5ebad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1a98f46-4235-4f26-a225-6565471bdf1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f023e06e-75b5-4cd8-9d26-a031039484c2"
                    }
                  }
                ]
              },
              {
                "id": "7f8669f1-6adf-4430-99d6-894ab800bfe2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "06bbda82-2893-4925-ba6f-ba06bccecaa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5889ecec-416b-408e-b3ad-ecc7e8d7f35f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "113cdbee-db28-4cab-b620-60db7dccec23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d03a51b-7cbe-4ea2-8fae-10f9366abda4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8ad4ec4a-9647-4dd5-94a7-d6e025eb28a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "705db93e-77dd-473b-b40c-90b458122a7b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ca41430-d4c0-4235-8559-084a3242cf38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e386d25c-f0c8-40f8-882e-a8dc12af081c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6267a5b6-d0fa-49de-a938-0ac142052f3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6a4ed9f7-89c6-4aeb-a9d0-d2aeba971e44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5463ffa7-2b65-4d0d-9bf0-9ce5540f25be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09247d78-cc1c-4c51-bf09-ca5e9cce103e"
            }
          }
        ]
      },
      {
        "id": "c3801840-1b7d-43f9-b872-247fe058d1d9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4d4d9010-dbb6-4b33-ac5b-f96ed9b153c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "315305a1-7ff3-4249-8676-ea6fcab0cfc3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4de4b5d-9bac-47d0-b551-22c75203e652",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2804d10-5618-4267-881d-42cf91f67ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111f0531-56de-4046-bf90-383a9da96825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4295d832-16f9-440b-a215-d5cdafd30264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5e6839-7641-4a4b-b71c-faf4b8aee5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eba830b-bb14-4260-add3-05154081b856",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357bc9c5-019f-44b6-8c8c-74ef160dc4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c10c797-5a2e-41e3-b0c1-c7d72ceaf51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e28a87d-4252-424b-a963-bf87bf5d6952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67faf94-b6b0-46e9-932d-f6c7e4eeeb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb27dc9e-3bb2-4171-92d1-83bd4e3555b4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ace18d-46b7-437f-ab76-7bd9fc5b4029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1218408-70f6-41d0-b458-2dc4a00d50c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d3e826-adce-4b01-b733-5c96cea90668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89ca192-afc8-4683-bbf5-8f549c13484a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2e1eb7-95e5-46ee-8efb-f8fdcaf87635",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619cda5c-c3a4-4b9c-8ed0-ea6b8c15e564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528ed87b-2fc1-4a36-92d7-15e960daa552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110d080a-043b-42d7-87e5-2c2afaa6db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a53a8b96-195d-45af-ace7-ab4848d31ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf48e198-9de2-48ba-bdac-e5be1216e3ed",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586ddd5d-8c15-44a3-9727-1edbcea80e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff553f4-e82a-4950-915e-7bfe8ab3351f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dbbd64-57f3-4e0e-8133-dcf5965aba1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3affcd35-9761-4801-b200-1d1df78b0ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83c91c5-4623-48f7-bf7b-693c12609556",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa19197-1d7e-422c-b6e9-2c2572d129e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f27a59-581c-4238-901c-acdaccef0aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8e5418-a980-4360-8e52-d6228254e25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bedd826-b67a-4ff3-a205-477ff4081abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f56780-c13a-481e-a66c-bf40a6f5634f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df9c19d-aff8-4e3d-bea7-0cdca01ede3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9651f82-ae34-43dc-9a39-6ebf6462006d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acd97c1-889c-4569-9d99-2539469b4213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ad6005-ac1e-4579-a900-861fd90d8c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f856194-b4a1-466e-96be-8f128d3a8058",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa750be7-81bc-48f9-85cd-3ace8df8362f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab9ded9-d931-4270-a93b-b368e1dfd64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4938f120-a3fb-41fe-b9d4-f272ef656610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7caa63fa-e95a-43ff-a1e3-76713fd1439c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3fa6d03-9b7b-4d07-9bca-cd3908f95ece",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e011629-2e83-4520-82ff-1a70f23a4f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d230e2a5-f871-4e15-81b5-87bdb4636055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a526960-ce55-4750-95c4-300ec573ff0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc3fd00-ef5b-4a8e-9a1c-405e2d75e762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9f76dd-934f-4678-82c2-6ba209b8d3c7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb16484-c920-4da4-b6da-d68ea90e8c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdab136-71be-4b03-9ba7-06f9490fed17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a947e9-d9ab-4a65-862a-dff81e602b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf9f1aa-0f3f-4cf7-977b-dee80631850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643b9c83-f985-489c-bfc5-a0e1e5d18a1f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e688cb-0df0-47fc-8a4c-110cbcbe1576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379aed27-891a-4fcd-8b98-3fec968088a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71f23e5-7f10-4866-823f-3945cfaca2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1e93aedc-66ce-498e-aee2-d5ff0db4fc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a222c8a2-a397-4074-9ea7-0837a4fbcba0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac213c2-db49-4c94-a53b-0a2c059547ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5764830-afbe-416d-8ebf-05300f4dc923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eea3e5f-0a1c-45bf-8725-521799b6ba20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc5f569-34e7-4be3-9341-0d9ef0ce730a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7323052b-73e8-4339-a294-456b82a98f10",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7055777c-6127-460e-b586-644be8a3fdf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067524fb-c5ec-4b15-842a-e6a44cf0877b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5b5d8b-b466-4fe2-8f93-599d92d4d23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd132b8-2ad5-4f10-94e0-b8a761bd8db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b82afa-7eab-4330-ad4f-4377c51bc9d7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90075639-c831-47b8-8d2a-9e125a75672d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42de7c49-067a-442b-bd87-289665f04114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d3f65f-f781-4f65-ba08-dccb72c0acec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9ef58b-2373-49f7-bf1a-498afce1b945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c531d7-7550-4982-b45a-c48542fc0603",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005021cb-2ffd-4aca-b7f4-5d7277787038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b218a5e-cb01-4229-a7c2-a6e3b313b9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9382b26-2ef1-40fd-9a69-ee18ae0610f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f24bab-16c3-4e41-9769-4d0af8e74683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d94be1-5f89-4af6-b306-93eec8bcfd9c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf7a71c-aa2f-4d2f-8def-629de387db5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdb0a03-82b8-4d97-8ed0-e23eb5c9d4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c881aa-dd2c-48b3-8412-d7f9b44bd111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2dd8e16-2050-4c1d-bfac-111e2dce5c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d1eba0-6387-44b1-b19a-a8cf25fd6c54",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dca86c-73ea-476c-a533-593446eda40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd81bbcb-4da5-4e76-a300-a7de1b93b729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2087a4-7728-46b7-a45d-7317a652af43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a740f92e-7ee9-4835-b854-540b2b095dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15067910-22b0-4e5e-8868-28fd4e55cbd4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf5e9f4-437d-464b-ade0-ca9a3ee03762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6450c092-344f-450f-b876-38d30ff3dfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d705adb0-77d6-49b3-acd5-9bae42a141d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f02ebc2-4a18-4787-9875-d5021f92c677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34a90a3-ae59-48be-badc-6355cf70d79c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535147e1-17df-4b75-aba4-73930cf54cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc6be17-15c1-4dda-a63c-9e9fa13744c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000ac058-91d9-4317-9c98-ce32f8ed3b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a91a5b-2082-4f29-a8ee-7775019916c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3772821-8cdd-4769-a092-acd9ceac30d0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04a6723-e300-41d1-b0c6-e97d85e0b281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90bb2a20-3597-4c0d-b032-75b65e70c341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c83abea-81a2-41c3-9899-0fad81a02e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8ce9d5-5bb9-4f24-a753-2478e1d3faf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d44a5d-098d-498a-aa84-49fcf55a4b4e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020deb03-edc3-4670-9265-cd8768aa4aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4517c592-b2f5-4b08-a029-28724f9730f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73f3e87-b909-4952-8cc8-85f54253b7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c93d68f-5e0e-4314-b05f-7165ac434275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8171ab69-6a03-4278-b2f9-f07ff51fd966",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d782e67-cc17-41ac-b44b-4daa7d64ed4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396112f9-a765-481e-8192-060c9cd9fb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de40e0fa-d110-4406-8e58-b2cb9fbd9d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5daecee4-cf9d-4947-9b55-a0a15c780b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d732d0-2509-4db1-ac74-7d85af62e443",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29a9a07c-f88f-4ecc-9fc1-3ccd47fdaac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f908902b-f174-467f-a087-6a759832b08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d3d1be-3b18-40f0-bcd0-32b0588a787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac066dcd-982b-4f4d-b590-4641c7ba9364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7cfe97-05b6-434f-8993-80ad1c6742c8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abf3253-760d-43b8-97ec-d2b42944556d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35d619f-1e63-4341-8b06-0f42209b3724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3e69ed-182a-4dfc-8589-0e6e32811582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fa8c5d-2bdd-45e7-84f9-5b4a8692a285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eea5d7-619c-4d1b-a6d3-a09048566aaf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a2e4ae-4b38-4b54-badb-dca3d8e0a956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fae8213-e152-4963-bae0-f210ac318fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0d8943-f898-4248-b643-41d1ddefe7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "099bc61a-055b-4fbd-94d7-db25adceb0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a8bbaa-1a57-48f0-8f6e-ffc354263278",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0d45d2-29f6-4629-934b-7dd6aeb85d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3653828-e4be-4c01-a0ec-0ac2f55596c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd0e6d5-03e9-4198-910d-44301d1c1401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c16baa-8c93-4cb9-9f76-bd53d6fe922f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0956a1-05bb-4b06-8862-c705fae2031c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f26393d-08d2-4417-bf1c-41b246283585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc03d568-710e-4a24-a0f5-da770a3bbe5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c09352-5127-4677-a342-e0b52cb43625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ceb49e8-3e7d-4ca7-909f-efc0c4878e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c7b7ba-b0fe-4c3e-bc0c-0b188e042f2f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa638b99-9fa0-4668-9661-ae0c346e6193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbfee4b-f27e-471e-b8ff-f8853e99fff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befa0ad1-ffd4-4432-90e2-8b92e664bafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e43190-7cd1-4433-829a-3d6a8531188c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120acd5f-42c5-40cc-b3ef-b315bb2f9cdc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be22aff-e15c-476b-bef8-7abb09c2a527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ff6243-69cd-4c0f-9ceb-12785b2b38f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cb79a6-19d0-43ec-b7b6-63aae2f9a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87f7957-718d-416e-8ea4-ce641169c11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb984f9-6310-4280-932a-de90e025e46a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4196bc93-2c10-41e9-b77f-3dfcffc815e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45688c7-e142-4ef4-a83d-c0f078bfdce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c86cb2-df8d-4e40-bb6d-e22533c391f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b9145d-ad57-4091-8c05-cf61530971a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a8bf0-05a4-4664-82f6-ccc962caf6e4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4af34b7-cd56-4f5c-9c86-c1ad0d4a3f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109b61ab-a87f-40a9-9d9f-d5db5b74bbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2455204d-72b3-4f1f-ae0a-f10e72af6963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bbb0af0-996c-467d-970e-d14c74aab950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b82e93-a8eb-42f8-bbba-662b76a6b121",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507300ab-8a5b-4207-b3bd-eef5f568b04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1cc1eb-34c2-4d0a-8ec1-0bbe76d7dce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a938ee-6024-479e-8004-426fdd758791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c894a97-0f9c-438e-8d8a-1551bd8c2fae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e11e623d-96b8-4708-97a6-e91131f14774",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4fbd586-6dc6-4a5d-bd5b-703b2f7433e7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3887cb37-3bed-4466-8f02-79097dc5ad46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7acd38b6-5aec-49fc-82ce-d1b98e22aa88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc2697b-a373-479f-8e11-5312a2ac4412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c2e040b-4903-487e-bb10-914be9c487d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1921b488-a725-4287-8917-5b9a09cce363",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b5baba2-ab88-47da-afc6-c0736a4656dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b0492bc-57fa-4f5d-9cf9-5a4c8f10de6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f06360cb-4076-4a0d-874b-884a6bfe11e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2000beb-f052-41e6-aaa1-5770b9304a20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "26b6891d-46a5-4d58-8db8-2885ddae2b51"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6028fd7-4bd5-4ee6-9d46-851f838fd159",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32693cfc-0757-4a0a-abdf-1934b3bd339a"
            }
          }
        ]
      },
      {
        "id": "02d89205-a95b-46a3-a86a-60ca8b179418",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "80228212-4667-4b70-bd33-289e35dac749",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eeab8999-fc53-46f3-9a21-e762b3b219ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ad4c3c7-f963-4c7d-8e85-caeba050377e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c635856-3fd5-4e88-b856-3b4a1acc7695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0f180f-6947-4490-990b-49062ddecaf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283fa142-6dac-4ea4-b5af-f28a95370117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "21db86bb-c066-4866-9597-43b661cbeb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db71fab-1f89-443f-903a-dd69d7d5610e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fca0ef-12a1-4a0c-a4e5-ef4cee7e9be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4c8a4b-aedf-4f8b-9ce5-71ef15bd9667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4d184f-2264-4cf8-969b-a7026493efa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8334d94b-1697-4b73-9b6c-2df337f29c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26453453-47c3-403a-9b3d-4768cb948e52",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24984430-054c-49af-a5d0-45107fdb6e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494ffc29-5067-4078-b847-efb7ac4a28a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cd993e-fad5-48d2-aa46-ff8c91ccbd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f0004e-4bb7-4819-a4ec-f351072c3341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d77c49c-79e1-4182-afbf-c2dadecd26a8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461079b9-34ba-4bc3-b69a-cee972f580e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5daf056-e144-48e4-909a-6732389a30d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f8c49d-6bd0-4d5f-a01f-93ed1f5a0f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83505dac-8496-4a19-81fe-ec63863321d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c869b020-10b1-43a5-871a-1d3503fe8474",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f287e4b-6b83-44a8-9e96-c2a2da4e4357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500c662a-f8b1-41a5-82cb-752ef36f4704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab85567-904d-4ba1-8500-6143ac5c4f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e394f4-7883-41fa-afab-abbdd9baa255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8022dd2f-7649-438d-a433-76a8b0848530",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a84107-a780-46fa-8524-d9df390d7ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da81ece-0367-4f8b-84e6-f72cf94aedf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf72f68c-f617-4659-bfff-825dc8b42062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29ed6000-b438-4935-bd42-a470df6c6aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cbabca-8f28-4682-a558-e58844880c02",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135294db-1af2-4d8c-9fa5-9732de5acda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e98a629-fb40-44bb-bb7a-3a4faaa5654d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3fba65-69ca-49a6-a91c-d9fa85cb2535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "63378504-c245-4ced-b0ca-556596eaa2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1082bf1-9f27-43f0-bed2-a7bf09e0c1d8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbbe594-ff40-4421-ad5c-e65316e86790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7842396c-37b9-41a4-ace0-6afcc063b1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b4048d-b527-4351-8a0a-8763d08f0ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9187fef-713e-4352-9630-7e321c6571a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e88231-a195-409d-954d-e7b3a9ea462c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793abad4-1fd6-4a54-83e7-60165a3a4096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3d3855-0f8f-4f39-8143-6585c2b06e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cf0f3c-26f5-499c-9278-de93943cb696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57ef7ed3-749d-404b-929b-a6616ac769ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64f039c-8875-4de9-91d3-403846ba49bf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9933e0f4-8d70-4903-b1be-dd7396700aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e449315-a06f-4dee-ae76-06ed512fc01b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c2c861-26b5-4aee-953b-8ddf940a9bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e75840a8-356d-463f-9273-f32aeb159549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e161bd64-af6f-48e1-ace9-065b8e331480",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d54f9e-825b-4362-8c09-49cbc613fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ac73be-b729-493e-8812-07bf4063d502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209d6a22-4963-4b05-b57a-2e85229f189b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "56b15e9f-02b7-43e1-adf7-6a306589b778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38d5083-8174-41e8-a53c-ec07461b42a1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e026bd-a46d-4830-ac0a-3c5b5669561c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122879e3-dcaa-4e17-975d-b1395ae91f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397e4f2a-e870-4eeb-8a79-bd2e9da146df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "727f276f-80b6-4fa8-9723-0be302d46c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8255d50-55fe-4ccf-b2f2-ffdfb49cd292",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007e4469-79ac-4799-8df2-842a59f1f52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d6f0804-f894-4a69-b85e-e7c9f936444d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c406ad48-c9db-4927-9b24-150da0cae1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "270bc375-e946-40f6-8cb2-f7b5be213bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f186e0f-aa90-48fa-8df1-4a7929ca6696",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208207c3-1a70-44cc-b3ab-c84ac2bd2d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5ae959-10ed-4ae5-a391-d18002e09ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6532ac63-85f1-42f0-9639-22f17c1084d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "04db1ac7-3523-4a7e-a30e-9105543418b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90638eec-1bbe-4764-9cf6-3f64ee3f02dd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e60949-e1e3-4640-8915-8d0ee45464ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92fcc80-cbd8-425a-a7ba-f0396b875538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244a2d3f-165e-4e26-bee7-10215a589d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b61397ae-4ef5-4b17-911c-f2c7bd4d656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b590297-db3f-41c4-bd47-6456dbf929af",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbc1a8d-80a3-430f-a9d4-4db8b562723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea36aa1d-5c14-4d9d-854e-009931634973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c931c62-566b-458c-be06-899ba1ba6685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "51606615-7688-41fe-9426-6c65f3f8d0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a9b86b-c4b0-4da1-ad37-170fe42554a9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26415793-c866-403d-bae1-b5632af678a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c9d910-31d9-42ad-8752-a1b1a5d0f163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d4b9aa-0df2-4091-8674-3879be13d062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "36df030a-8e75-4fcd-b4c1-82d42ae5d2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b00738-8657-4720-829d-a9be88d5cf46",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38efc27e-ebc7-4c6a-bdf5-4780c0c16878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca91c16-3600-4336-8546-8add92541013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963682d1-2937-43b8-b1e5-90141dd85f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "996bb7b4-b20e-4099-bb5e-82e41bb33f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b516806e-782f-4e30-a511-f0a110c233fb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8444c22-12c4-4511-b375-ea3eed11bc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e0ef98-791f-48c3-ab20-d7e39e7fa58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e308e925-2299-4901-8c76-9b3b8246a84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4975fea5-1288-4e3c-a08c-800d92f7f45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e65ff61-edcf-411d-b4dc-3a3978a6f0bb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc6d166-ff8a-45d4-ae7e-83ad084acd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d734881c-9593-496f-8382-ca27272d3799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25db694-7806-4999-99f8-611084509d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43744162-59aa-472f-8c00-7e29febc0160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8622aa76-0507-4a8c-b442-98cc6417b1af",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cf3ba1-d34b-4ec7-9afc-ba17f8348bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288076a8-9f30-4b80-936b-b0168f3998a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe026d30-443f-46f9-a6c5-0ee61009d9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6deee6-a800-476a-a7f1-bb7c15335970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25047c57-8f42-4ae0-b125-6f8f55e0cdaa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da30992-730e-45d5-9c30-cb2ba600ff32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f4868d-e20f-4dca-9d9d-827664e46850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c65c5cf-ab5d-4bfd-8e37-8de01fd223d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "117bbf5e-8119-4a4f-b116-eb4530f7ec37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6eaac06-4a5f-4b69-9b42-fa47ca575373",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301b227c-483a-4abf-bb50-106e7a95d074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae56472b-7c6f-49eb-b98c-df99b0281706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b22f3c-3c23-4b1e-8c1f-1ceeb743dae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4143c037-0cf7-4ab2-9238-9272b6c9f454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a85383-62c3-47ce-b34f-d9689eda5efd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190bf52c-76bf-4045-b91e-da7706ca547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a51bce-5382-468b-8b8d-c7819fe7b673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb8c410-3e63-4cf9-a3fe-6e83fcf7bab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11641cc-96e7-40b7-afd1-58f8890366e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfa20c8-6510-47a9-bc96-b2070df4985c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a2f9f6-1ebf-404b-8a5d-db4633eafecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee92ac4-46e9-477f-aeb5-a94ac07eeb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2922ec39-80f5-472f-a968-50e4711b2708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4f818c-bd7b-4991-bb4c-208e4680eea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56059915-08bb-4f47-ad45-99b1fed78947",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79afb953-88e4-46f9-8e48-c7cb3d18733f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9bc4d2-1717-44a7-8542-c5588a464be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd69f4f6-13db-4d54-97fa-2d535f683463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c766cb80-ecc3-4b18-8aab-e3df73fcc66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5f15a4-2b89-4fb0-b49d-30d47a3d0863",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a762303b-9539-4d58-b431-a6d0619139a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e77cfec-f37e-484a-8693-190389ba1514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6609a4d0-eb3f-41c1-8ccb-7908c02fa5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ae9a70-e11b-411a-942d-22fcb79a6387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdfd8b2-5b75-4efe-a560-3db3c77fdd31",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9766cc-a79c-480f-8306-d59eaa8eba7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57433d97-aa74-4823-9ffc-6c1affd68b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462ab3e2-a030-437b-a4f7-7121dc4fcb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a51cbd7c-2907-40cf-8edf-b8e82688d05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52f5095-8983-4083-b1d0-92dd9716c094",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a59391-47f9-4f0f-8946-a3372c459c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172b0dbc-831c-4d05-9ee1-cea803b76a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd643cb-f6c0-4749-aa46-be3134e0a9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e0a021-917f-4583-8a85-43883fac49b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00964144-450b-4173-8de8-5674bf9db13a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe2f15a-9b9c-4805-bcfe-fcd8a7bb81a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e78029-cb74-450d-ae16-26b5346534f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ddb6db-be1c-4039-a1a4-77d2afb50e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7666df66-a328-43a6-84f9-f28386e3917d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3be1966-9edb-4f3d-b501-43990d239232",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb9eeeb-5c2b-49f6-b0a9-8fc205087386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1119a9f2-46bc-478d-ac05-c188a2828782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52df517c-b949-43de-97dd-c39c1068179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c520e99-bf8a-4ca7-b9d5-5b621c2f08ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2a602d-563b-4069-9237-93b14465f4ca",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca4c07d-a745-4110-9970-d60f9aa9c7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c02ffa-80d2-432c-b4b6-65701978abaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c0f13d-89f6-4e67-9597-a63f37fcd375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4643c9-fd11-4050-8142-ebcd88e53277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf770993-6eec-4b02-94d1-a0c56dc671c9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b17ef53-8f14-4fea-a7d9-47ec945e804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae1bc72-60fa-4f11-8464-27b4b58fe1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8e53af-a0ef-4f15-94bd-82bad3a1987e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa6cc90-e3ac-4c49-a908-458b083d8d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ada7ab5-d625-4024-98b4-260544944a7d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b533d257-a39a-455e-ba73-b51d29ab6558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5155799a-924e-4734-8d22-832ee88d5023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136a21d5-55f7-41b2-a056-73a21f59c850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5296fb4-4166-47c5-b33c-dab6fc276e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c0ba0c-b8cc-4d5c-a30f-395800517d5d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716eaa5e-8a4a-43ea-8bd2-ad1309145686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45079d5-4a7c-4fc9-8798-a0d7c6fa034d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8030cf-8fc9-4a10-9c87-574ba0a77f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9e58f3-518d-41e6-80e9-7273b1c40be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec5e56f-1e82-4bed-9a4f-e96920191911",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5581ac3-646d-4a4f-a463-0ddff2ac17f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec69d0f-3bca-425b-9105-8e064782119a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cb9b13-fd92-4793-b4b0-42dcdcd1d634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "352ef232-f799-4e07-96a4-ba0095007b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b4dfe3-5692-4316-876c-9342bbb49b82",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0981037-2cb9-43b3-8a3b-2e062896b992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46566a56-c205-4754-bb4e-32a7abf9666f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9485ddd3-d8d6-4989-9105-53339483f934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f870806-e55b-4811-9f44-e93b8ae891bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a79ddbfb-b5ab-462e-a618-238debe15fcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09f2a562-0faf-4431-8501-83e6fd377925",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5881fce1-7de9-4d83-b66b-7092ae65bdf3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "396c12d0-d21a-4f4e-9ef8-f31e37395bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50b8d7a-bef1-4c6c-99d0-d3152bd879fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d9ae81b-555c-401c-b975-78f25e87f364"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f90d49b-1fdf-467e-8072-38d9bc65a98b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f31d21e9-c0a7-4fad-8d60-04dd9579041a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0b52447-734f-4b64-a39d-452ced3255bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c76b7c0-c7c1-4a9d-8f7f-51e6d500c92f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "995435f8-ac37-4b39-8d49-b0ce5380f4f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce760967-1cc4-4fd5-90be-c1b896ba8b29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f74dd572-0cb8-47aa-9577-4f269d76fd19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f70fde7-d96f-4a53-a918-6e3ec7e9187d"
            }
          }
        ]
      },
      {
        "id": "5e199468-b7b5-49a3-ab74-4b4ce06e8853",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ca84201d-ec99-4a7f-ae15-7e882f2d6809",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72cbb4f4-f975-478b-992f-0267053202bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a5bf469f-756c-4415-9b92-4a18c4d61127",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788f0da7-a299-44a0-82ad-7e3c7e8e7cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e39619d-7c68-4943-bbe0-0bddef6859dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cfd4f9-2bc4-4d47-9e83-419f99ff5585",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9fd021-c323-4a59-907c-d5a5be784774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5782cbd9-6949-423c-87a7-27384e3beb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239eac41-1ca9-4e16-afe1-3f2489042e59",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f9989d-86f3-4af7-94e1-642c186c13db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ccba22-bc38-425d-ba10-171361fbc7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f314d2-9518-483b-9d2f-d25da653bdbb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69318580-f77a-492d-9157-09a98decf28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3336de63-c98e-4b0c-afc9-28531db69664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74f2be0-7f58-43b3-b14a-643445bb500a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1186a4e8-45b1-4de9-ba12-4a36ef82605b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff61129-ed28-470a-8405-c217efb6f8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215603fd-7ba5-46f9-9199-d44c1befa615",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e6ae7a-186c-4146-a2b4-db5a1086676a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f10e83c-6202-4f74-bed0-7728e039e804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95415fa-e6ed-4345-afc1-422967771a46",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f419d4c2-f869-44b7-b91b-f2f3dc5b419f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b4bc3f-5649-4321-9e1d-c0db20ef01b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff38c23b-5a2b-4b8a-b0be-e9e841b1a1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a96c220-e5c8-4276-8bd5-1f474f816ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a73ee58-9655-424e-82b2-45666575df9b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060a9315-ee68-47c7-a693-2ef3c2ea02d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbfa4c0e-f64a-4a8a-a997-ca02c8832a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f262f2e6-bb0f-4b36-9697-5a4404e856a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a9afb8-6923-4dc4-b21b-a1255d258fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe4cb27-7299-42f8-8e09-bb3acfb237ee",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c9cffb-8f83-4b3d-97d6-775cd5e07262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a74886-b730-4d08-a994-618b51b13ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01473eba-e255-4f13-a8b2-01b679a81c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad45a19e-60c0-498b-a1c3-7d9cb7f040a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df08ef6a-59d8-49ad-8a4c-a59772e39bf9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb98a5d-86f5-4ba4-b5f0-d53bcaf2fde3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df8734a-26fb-4c2c-8f52-d7fad5c3fde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c75a4e-23ca-4d54-bfeb-32a153d20b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e67b0ac-2736-41cc-8c1a-2dfdf118ac3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f65131-f5a8-46a6-b0e3-01b3857de634",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb91846e-69c0-4f50-82cb-c0a58a23f4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de187f74-c620-4a34-a148-20da7067ad28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f357f6-62be-45cc-b402-0808a1feb5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aa2917-ce1c-4e7a-85c9-bd354548dbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4870b9e9-21de-4853-8d20-e7882c735e72",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8505ff14-6d47-42a5-bdda-68a46ffb1424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd20b365-292e-4680-880c-1ac1627d8357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c4a153-4122-492f-999b-bff4e714f862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee388c4e-797e-46d2-9512-2ef89de1654d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728d10bf-1ce6-43c3-a84e-a4fc155a1852",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1ce064-9199-4d9d-bc50-90bab73405ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49fa29ec-72cc-4ac3-be47-78f149100231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d2776d-51cf-40f5-ad0a-dfc4276c67da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d4eb50-b03d-4624-b664-3b499791973e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d463ac19-d920-4f9d-8fa7-f06a282447f6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d71de69-373c-43e6-8b06-5b55c741b564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46774a4b-4bc5-41f1-af3a-accd9a16290d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764aaaa1-ff69-4a14-b8b1-c4b5c229a32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb741e13-61d5-4221-8092-c6e039a6a9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7293847c-39a9-423b-aa78-2c3c7266b2df",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07366db-710d-4a99-b6e2-eeb2de22c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83fa10d6-a7da-48c4-8460-2625afb0c596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b062c99-5c76-4316-930f-559ca69c2193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13c6bb2-e2e2-4c68-951a-e98e3276c40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3ba7b2-126d-47de-b835-daba1043983b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d723551-f726-43a3-b6bd-d93a9252a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e4257c-3e36-4e53-94c5-70999af1129c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306f4c27-edea-452e-bdc3-c170244adea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c144a682-3788-4da9-ace9-1b1adde76026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0cdbc2-556b-47b0-ade5-9017123a696b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4983db-c06e-4d5b-8e20-1bc76198ccd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0ce3c4-e61c-43cb-b868-7c1fbced6c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388de9c8-43a5-4066-accd-235f9da59039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fab4f0-fd17-4410-83ce-4f4f2840e6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c8fbfc-0e0a-4712-a0e5-6118d3f16dda",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee5ef25-ea36-44a0-b3c7-9efd2a012522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcf195b-da62-45f9-a199-74470863237e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33808176-c95f-4569-af01-8cd7ea8cc350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad4e8e9-cb08-4b45-a8f6-5dc63a3d3433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d1b6b0-c2d4-408e-9f4e-2c5d08ce73f9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ccd986-9ff9-45ce-a8d1-cd50d2a67fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e695c384-0e41-46ef-b50a-9daa045185ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e008b4-667f-4ac0-9d16-52fe3716372f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b91ea86-210d-448d-8008-a13884ea0a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bb4950-79ec-43a6-b664-e122724ec3c2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae3c372-f01a-4b42-b777-8713518eee0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bf008b-f45b-49db-b3f4-748314d38d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872bb692-ee0b-44a9-b1b6-4aa81873b4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74df7c53-d859-40ee-bdd1-27f1f6bbe66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfabefc-ed40-4c3b-a4d8-3b6e3bef348b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5555549-8444-419e-99a2-e3bba4d30f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7c7e56e-9591-4a80-8532-0263922e6ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8209554-5aaf-4194-86ea-8f11311f5a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4216447b-b392-4fa5-b476-1639791cc985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a57a72-566c-4bb2-b3b2-28c9ddd0c4b9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce71bcdf-5b0e-4dd9-afd6-3fe5e9aae0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0497f37b-1630-43dc-8211-1010b4dab03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a741ccb-6134-4270-b633-e14d1f3b1369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b12ec44-9964-40c7-a986-1a6bc3b70d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b5bc98-2b28-4fb3-8c40-efa8417e22e5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea2624a-029c-44fa-ac92-9423d592c671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d50562-30be-4d2a-89b9-5d4b970cf61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f272285-5b53-4406-8218-bc5eb2cb55ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9369cb70-8178-40d7-8f50-7925e21e4774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8b19bb-22a4-4874-876d-2b31c75be26a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff642b84-2a8c-48c0-b49b-db2f2936acc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53320b4b-8470-4964-a5c2-cf1ab3c947c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbf4897-c5db-4033-a206-2ca1f3146fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a8a0b6-4197-4f0f-8e97-4263065bf937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3d5a8a-a83d-4df8-8a84-68f471eb2184",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1510cbf-50d2-47f0-ab59-ba24a62702d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470a89bd-967e-4f0e-8d46-508e6200548a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2cddbd-96aa-4914-85eb-85f0852dd85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e68c38-9498-4105-a2d5-86f44f7d8857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9320317c-69b0-4b35-9d0e-5e96d5cbb5ec",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354cdc80-d385-4ff2-9e23-65bcebcfde76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3664c76a-a873-421b-a299-d697ec0ea3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dbcf3d-0043-4021-8d25-65e4d10c4112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fc612e-896a-43b8-8514-c4f73595997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5519b7cb-14c8-4913-9054-82e8737082e3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6035f3-a414-4f76-bcba-33ce54b082d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cea2525b-cb96-4d94-9b14-b02712dc280c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca02efa-7fb8-4b4e-8cae-862fbdfb855c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51ecd95-8fa5-4afa-8347-8388e835c455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c6440c-b80f-4ce1-91ea-a96d8542b07b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a74177a-0675-42f3-982c-22bc3e945ba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd44de2f-c0fb-4cca-bc02-11be86e725bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc82d0e5-df96-4e53-80a8-a6e524c6671c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70147f41-4cf3-4361-81d3-3dee151443f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc2463b-7f27-460c-9953-66754ddf614e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb4cd15-0770-42d6-8ad3-0872e1ea599f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df4f4ac-18a3-4bce-8e9a-dbc3225aa73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a462444-1398-43dc-86a6-1e4c4c9e6951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87099569-91af-45c2-8314-c1579566332b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179fa555-70e2-4b02-8c28-8d6dd3e35035",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18ad214-9da1-44ed-841f-f97e8e20eee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fdcdc15-9dca-4611-b9c5-f2810fb87519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f930af61-77c9-424c-a248-d41db5108516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13df959-421c-409f-b125-40bceb3b6bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2990e3-b5ec-488d-9f47-afce26e7ff37",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f37654-70fc-4d46-a8e9-a294e0069495",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5397fa46-8d8a-4716-993f-68fbc9476f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4b8919-caa3-406f-8b7f-0473a4bb9bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec265ea-a006-4954-bc53-33d288458a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbf04df-a1ef-4a96-bcfc-fc13ed84c9c0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63957e2-9605-47ff-9618-c744b90d9498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4daa19c4-a7ed-4dab-95a5-d5adef0b00e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbeeec5-54d3-4b68-b29f-fe6ab2883668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e5f36e-7196-4e14-9d7d-aa0e69217066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7d5a1e-d323-41d7-8484-017b1854588b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cdb8d1-5e67-4613-bf90-13985779c0fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "062ca301-287e-44db-96f2-6477198ebb79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc0d4a1-79cf-4efd-88c3-20ca1a494a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8eed5d8-6504-467c-b927-b87165c90c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4822f879-874a-4856-8d95-d107cfabb88f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b798e5f-39c5-4835-afca-93d8ae6deb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f730c826-8bf5-470a-886f-5892208583a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edec45b-ff22-4179-9f65-223073e9043a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47955832-aa77-46f4-a23a-ded882b11909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35bc07d-2144-4e85-a0b9-de520e8afcc6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68ac753-037d-453e-8486-8624adb9b01f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29de6c0-e8d2-4718-b344-2a6404d73b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03c2c5f-f97c-414a-940f-dd2e7640d677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd698dc-2339-4c20-83a0-7085249c18c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c54019-39b2-43c7-aa0a-050bb7768089",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba80ff69-418a-4608-820c-5295a46812fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c792ea-6b2f-491b-b6c8-493ae781850b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f71be1-eb2b-4a02-bd79-1b72d7aac62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b851d5-a224-4892-87d4-f551105c1749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a659083-0b7e-403c-b715-79c95dfe93fb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c080e13-162f-4802-9dd9-715627f2a159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7db0a47-83dd-4309-8146-d3d4cbdde13f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7b0031-fbbe-4a61-98b5-9110eb9e06f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afabb114-c8e1-4b9e-97ff-069afc6c52c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff802f7-ca69-4b89-bd17-db4f154b1a54",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3309f768-e135-4863-bfd3-44f125eab810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d1ebb2-ea9a-4a94-a3ba-be1c137a7efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2a2a44-eac2-407e-ab0e-b696e0c88910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3538eb-e7cd-469c-af94-c83f35c9aa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af348974-ffcf-4692-97f2-7990c775cdd3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179592f8-3b50-4932-9271-c5417212d85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d0945e-4f4a-4ea0-8268-c450e448dc2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff5e922-9157-49d6-aa8f-e9848c8c8b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b576a0c-2432-4800-9ad0-3bceb73e1118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd793481-137a-415b-ba7d-59c0a3a280f9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111ac718-d990-4410-a78d-a2d2261b7229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052200dd-0ada-4009-8d16-5731d87aeada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2db242-07d3-4771-8f65-b11848deab4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40632d93-b2cd-4234-ae48-ad96d7ea0f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ada5dc7-e0cc-4727-b2a5-1e986c81ab6c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff37fb3a-eb6f-4b2a-87cc-b5fbbf1eaeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28f57c5-687e-40c9-902a-84156c88b94c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4b3dd8-225f-48e7-b5b0-c7d2d3bad937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7225f124-8519-40b9-afac-9e1913152018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168fc768-c902-471e-9285-e1f71b8ee7b2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956098a7-d889-4fe8-b29b-050df8ce375d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ec1375-9c12-4ea0-9b75-2739b9c918d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3464fcb6-6f51-4bd3-b261-906fff7f4eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c305cabe-ab63-4859-8740-9ccfb6fa78a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8356fafe-31cb-4933-9e38-1254d817ad6f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a9103d-3360-4298-84ce-64df8919cffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699580a6-0514-40cc-9d10-99f3e7485180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b595273f-bb80-4294-9240-daeb2fac689a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff6a8ef-f081-4975-b50e-cac007b73156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd889af-f2a0-4118-a361-9907f46d2bb0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec701c7-0a32-4b01-a6ac-7828195718c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76cefac-26b3-4935-ab8d-215964a42eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0cde71-d4e0-40d3-a823-50e9f61bd15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f313a0ef-d466-42fc-a22b-dff52672c507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e0a007-6a8e-405b-899d-3b0fa5736a04",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a6bcb0-c524-4974-9386-dbb3b7eabdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27175745-331e-44ea-8195-114f96395c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16a8c0c-9465-4d59-ba3a-92146d8ec0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef42a98a-6c9c-4510-a655-abc1054a743d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25ff851-173f-4651-98ff-b4b77ea791a5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ac0bac-59b4-489f-90b6-f1fd6aa7339a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a64bb93-9c3e-49e3-9e11-23e45c0f79ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84939cb9-de2f-4e3f-92dd-890215a37b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7773d76-e1f4-45d4-a31f-26dcad2f483b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5705177e-0511-4b06-ab02-788752672d01",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d6156e-bf16-400b-af09-5e116b9f0e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abf69fd-3305-4317-b4f9-b5590e50cc9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b16236-2ec6-4a8a-93b1-93775effbc82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f393fdb8-1863-4818-b82c-eab02373f28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034541b9-5f28-4b4e-a7e8-4215450c38aa",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc2403b-61a4-44a9-880c-a7acc2ccd663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13955a6-edca-431a-b131-7c918f5c4cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bcc64e-68a3-4b16-b0a9-fae50e52fe04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537504d0-9879-4791-8bc9-a48734886b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce74568-fd15-4080-bb58-af7ef52db3bd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e261c175-eb1c-4d45-af3e-61efe281aff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984a054b-bbb3-4bc6-bf07-171db1b13db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e421458f-38d3-4fdc-891c-d526580b6a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145b5a28-38ed-4a34-8448-ec9dff8f1e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa77dfd6-55b2-456b-80b0-cf6fc6a97b3f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f592477-5f05-41e8-92ac-8f7cb06264e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6cf6c7-1270-4182-a799-99e6fabaf1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e350b6-fa06-428e-963a-58dd0b42c4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e490f33-03ad-4b8c-ab88-b6f14a43aa64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d1bc0e-640a-4554-a649-f41df22afc5a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59f6674-8d5e-4976-b119-4d912f6016cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc86a77-f0af-403a-ae34-b230fa0413fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120d250b-fb60-490e-bbaa-1b329e5f1aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20303b0-ee93-41e3-a56e-2dccf0adfe01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b799397-169f-4c56-93f1-aaaae4f9f375",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b925aa-8d22-4fcf-8028-3761295c38ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc91f276-53ca-4095-bae1-6deab361e284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8a3709-d9a0-4e33-9d43-4bac49c7b4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6385bf-a2b0-4178-ac34-5f9a626b30ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c4d6c6-9b97-4b64-90af-5601951ba72a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd1ac99-7597-4216-8edb-f7f46101673a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986b8220-00ab-4a4f-a736-bff34df74086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7889408-8d5d-4d7f-9184-7f045a96be94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd93ce6-5d3f-499a-9a08-1694d456d385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824665e5-6032-4575-9fb7-2687d5f5ca94",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cc3273-8733-4259-99d3-b01ca5166dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e52c87-ef78-4eb5-9de3-977590261872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c0be40-0656-4bff-954c-4e81189e5280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c48d2d6-f55c-4b2b-86c7-ad621f77b77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4459ffc-ed4e-4938-a7e3-243c63159ed3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490a433e-2b3f-4761-a2f7-02d5d63daea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c015f6fd-b86b-4198-8227-4959aec5fdda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea28b26a-a224-4f7d-bb6a-ee261098b298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6384edd-7b72-47da-84f3-23419fed202a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e4c6af-63dc-44ef-89e5-818fa72f6d56",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6754e2-2a54-437b-815b-8aca13e06134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10d1880-056f-4ceb-88e5-c858cf9754dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec90b46-f93c-4ed4-bf65-79773b35548d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0429f6de-45ed-464e-87de-2bddef619eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df77810f-c7c3-466d-a8ab-69f77e0da95b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebe0c9b-fff6-4a6e-8004-09d67bb0ba69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be77a5dc-25c6-414f-a0ef-d5c5aec69301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229fb47b-432f-44f0-a2c4-90ca14bdfc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d576de67-28ce-4c1f-b9df-1e30f919ef7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c79343-e23c-40df-91e8-5c7e4300c238",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33bdb51-5671-4ac1-898f-cbe54fc9b3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab67f810-6126-4f3e-bc9e-ce716bdd21e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16745970-3121-4f29-8e61-4e1e17ded7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662a2653-d480-4554-af2d-733f22cfcfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f88d84-40a3-471d-8b59-3f093a333d27",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b538c0e1-cc5c-478e-a04a-38fd401d9cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307eab10-88a5-4221-8dcd-6a9aa8c2ed61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c39eb4-eb0a-4167-80ed-d2569f98b1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f4762b-e9eb-4251-873f-a7ecac7a96ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ea5169-a5dd-4d39-914e-07af67a96634",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06d143b-2958-4a50-b552-219e407b827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa47d23f-63e9-4f24-ab9f-954124af64df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d61207-98d9-4d96-8ce6-8026b157c77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85a8ec0-6b72-4f48-a841-0e8003495c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c7b4e3-268d-4bd7-b46b-2ba744253907",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bded6f2a-0b30-440e-b90a-a7deae9f1ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff75c99-3e24-4e03-b3aa-de8bb11aba0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85148466-73d6-4ac3-b6a2-4bf5f6b224be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1647ef-a5fe-4606-9937-35f978d0828e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15609c6d-29ce-4cdd-8232-6816af210fdd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc686a1-dca6-4393-b775-de8a29fd57be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890ce9aa-aa74-4dd9-8807-7e789ca890c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e855d5a1-0f58-4e0e-8647-a93ed82a5dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc62e619-da1d-49d8-9c2d-cea378dcc9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02346079-737f-4a0c-9291-b62bdc8d06c0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44254fd4-f438-46c2-9a1f-e65467ce34a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b604eb4-a7f0-476d-bf68-6adbc10206e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b0d431-6d98-4000-bb61-c587c930925e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9397bc51-e65b-4b59-8591-72927bf49bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b8783a-cf49-4297-9fa8-20b070390a06",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061ed97c-ea4f-4f13-9ea1-f91eb081de67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78c88efa-c16d-4014-92c3-925d418d5fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "681dcf9b-de09-404b-ba53-4754caf4ba32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822ac1bd-df2f-488d-8241-57d535f3a303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab5b604-1a9d-4def-bc61-65fa159b092d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72c7fbe-fd57-4e39-95e0-3872fd2df544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03070c59-46aa-4973-be4e-cc8859710b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42c0d28-20cc-4e8b-80d3-506cae85e01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dede1d-e85a-4d21-a60f-a4949bff2cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64385224-296d-4277-8dda-3e7147544ad5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ef7503-2cf8-4845-b9c0-8127efb16548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ad70b7-685d-45cb-b4e7-1c4e11e9bc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5644ccb2-d24d-43e4-a4e7-8b11508aca1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54039eec-12c1-4345-90e0-1181afbe73b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff25a668-a48c-402b-b32a-b9d4d131bd05",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6514c1-7eaf-4bdf-a51b-61c26ab13156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c45c05-a582-41e8-a800-abd5f706bb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fea7e3d-ffc3-44b2-a014-59cc35404a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0a7c60-0a7c-4e2c-88df-677fbff8358c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f488f911-fa4d-410e-8338-b485585bf3ab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7639a2-239f-48ad-ad7b-8db0a127d583",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fc714ba-1faa-43d9-82e9-cb7a3d56cbfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3953efcf-bc79-4271-bb33-46bb60265ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f8a6cf-71e3-4e53-b455-2fe0584b0ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3c9d4e-8346-4a99-9e94-9c716143fc82",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c4159a-a71e-45a8-af4c-c39d28198f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6a4c41-ea0c-4de6-bb7a-2afb50accbc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90e6c4c-d40c-4671-845f-f19b783a2e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b1b175-fa5a-4236-ae44-8798391c4240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13829580-e8bc-4c44-a6f9-a642d96fdda3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c382ffe3-49aa-4368-a689-5d4d46f696e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935bca16-1a5b-473b-8baf-3c036737f854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64af095b-5d0d-44f2-bc41-3b535d86b973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fc8007-47dd-463b-bf56-1459c77180db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cfac3a-c00b-497c-8b0b-683cbd4d401a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dead9d5-2095-46b2-b52a-5e4e33270480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1504b019-a4b9-4a15-97cf-5a6978a122e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c194dac-0e9d-4c43-a4d1-cb8cd25404d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f474e6-5280-461c-8dda-6aa4b4df43c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4963827-52a0-46cb-82ce-68584a7e1529",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d42db5-cdf8-42c5-b886-16aa4470561b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8b9632-064e-4b8c-8fc9-3e9c4b045cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd78344-0972-448c-8e8d-985599d6edad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85361f25-2b55-41d0-89f5-40c179abd785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d960c71-e0f2-4dfb-ac66-9ee09c8d8df5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fed12f8-742b-4c92-ab32-a073fb235dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0853083b-9915-4d01-a2d2-c6439a35cd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbeaf140-2c36-4788-89f7-804e182d36b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc314dda-7d12-4d21-9345-0b794d9f2f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3534629e-8b52-4549-b55c-f1d7a6d2e627",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205a1ed8-47f8-4fa9-ab68-2b5fb27824f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f18c9295-8d30-4d16-b9f4-d84bdd286be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae53609c-0c20-4510-8212-623f09bdc290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40551fd7-76d4-4c64-88b3-430a0050b618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791b8c86-fc72-4a60-ac9a-0f6d99241b07",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15d102b-5eb1-43fa-b9be-7c37c050900c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89081147-e32f-4315-8047-d5f8a76c62ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5a8a5-1754-41c4-8678-917211f0a078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336be67a-0bf8-437a-8b36-ab7e749ae240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3629c378-945e-4a63-86bc-d12254936103",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf6c5c8-0c12-4736-a3c9-f3c11fba98de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b4d174-09d7-4194-8afc-5029c58e9c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73f044b-8e11-4266-957e-2b20ddaa4dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66422db2-7d6d-4b9f-a89b-50ef1962f836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837b67c8-bf92-4965-918a-befbfb3659ee",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ac5cc7-ab7a-40ee-90b8-905f6d1b8ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b74a5263-ff64-4a4f-8c6c-07d0eb40e547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6863b505-5cde-4890-a9f0-f609891870e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b441094-3706-4a59-a8a8-d9025dac9074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15840b8-fbea-4bd2-98fc-10b20c8ef129",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd5a5f8-6955-4014-8b97-68693e0b01e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc969a0c-53e6-4fd9-b63c-f9d9b3f28303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8f914c-d912-4603-901d-a3c24af17a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e127d7-7972-425a-b129-686235c9e19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eacba0b-cfc9-444e-b278-5454a4d96da8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e1f7cb-33fc-4fe5-a363-0f048a833710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06bd409-bdc2-4b7c-a212-d5cbe86d7eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6fd7ef-b89a-4304-9756-6703838496c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c76f8e-1e9a-45b2-84ca-1a29f72072a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76f4d65-6303-4ab0-a202-b0260764dc7a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08158ce1-4ea9-4285-823a-7971dca045a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27f22193-4c15-4e0b-9dad-776f8379485e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c0d6e0-1d55-4d65-bba0-03f2b3479740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e49b9b4-3932-49c0-8506-b9cd823bb363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14714058-7ef7-4f83-9f1d-05680c03ce77",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad10ced-5061-455a-a435-eb44ee2e0cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2939b43-a16b-48be-93a4-343082972412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2612d955-2be4-40a3-82c5-59d56f02f3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be413358-1d7a-400d-be61-2b18f70bffd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059abc93-9e54-43cd-9a4b-62fc82088cec",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8531b63-fb01-44a2-9605-2cf6a84aaffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84f4e548-87b9-426d-9f24-9de48e64f561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5149f8f2-acb2-4dbb-8ff2-c2c9e4b601c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba8a7de-84ac-42d5-b185-83a6b2e05430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6f566a-7146-4124-b782-de470335f6bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242fdc68-a053-4387-9483-2ba1a8e875c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec05d981-da24-4457-a081-34adc6ed4d95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c365dd2-90a2-4cdd-a2ae-70b2e4f2dcb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4dd5e1-d0af-437c-9c56-2d8733b1d680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c50d47-18d7-4198-b6a3-03cf8d2d5dd5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365ffa0a-34d2-4dec-8571-e78829cf6b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d96edd9c-4f07-4c3f-abaf-5cb3f1e98ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc690d2e-4dd3-4ecf-a67c-9120353487d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94317743-5c22-47b9-90c2-2ed2e504b9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d63d94b-3fa2-4b6a-834c-ffe41a1d3b57",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5290ad-b1f7-4b01-bb31-7df6e6a91bf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "556f3527-81ad-4711-baee-998f58e818b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010ba678-e35c-42a1-8a8b-5de174a59c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd03fcc3-6235-499e-9267-2469bb27a49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc20d2ab-cf04-47d9-8667-38d22a35a398",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e6ca32-4a27-4376-9317-3013711904a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee6f989-b6e8-4fcd-9c9c-b24c56f541d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723f614e-8611-46ca-b8f6-2afed0093128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0d2c6b-1f34-49e1-915b-ddf934d25966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b74f516-e7c5-41c1-bfdd-80075288f424",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30329886-0d63-4058-bb8c-9dddfa1a9119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79628897-126b-4479-b2bd-e909d6bd42f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91b15b2-f085-44a6-ac94-4dbe95cde642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56d292d-1320-4698-a735-2ad0418f56c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38090da8-caeb-4dbb-9fec-122e7be9a8cd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b60de-3c18-4362-a521-1ab867423e91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e405e71-4474-47d6-8dbd-9c665beb095a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbc2350-cafa-4570-8809-81417b83473e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ae8966-c51e-4a12-9235-ea06a93c7736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6d9002-4fc7-4126-b357-295e066bee16",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04126ba0-7336-41c0-b48f-33ad865f59b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b86609b-d81c-46f5-a9ce-dd4ad5f6c6b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205355f0-ce21-41ba-8b5a-ca4a04462f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93343be-c10b-4171-8382-012d2e1c0265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e835466e-643c-4546-8031-290efc7897ac",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bb89ac-f2dd-4e9d-80f5-39da686d4970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa6e26a-0bd5-4930-aba8-51fce9bf6ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e16467-98e8-4dd9-ad4e-893a3411384d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ee3bbb-5115-43a5-b7db-537a4d67763c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b153800f-5153-4ae2-b16b-49b8962f7861",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f53ee3a-b665-4f4f-bc1f-72132bcb098b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4e6a28-af97-47c2-b0d6-9acd3a17ac28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60261a04-4ca1-4e9f-bbe5-6b3987e24ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b791cea-73c8-4bb3-9c1a-285320200d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbf61b7-cfcb-45a8-9a63-657bf9c79573",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e28de7-f29d-4742-a7e3-2cb09545e843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e1a4109-4f4f-4246-a931-a8c0eb73b2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10118fa4-c072-4b21-a19d-33252aad6b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394e6302-2bb8-4e81-829f-616184eb089f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d732bef-6b7a-45ed-9af1-2a43385b8476",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27993449-29a8-40ca-84fa-f87c21b83155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b1430b-422d-49b6-8331-eb8f4ad479a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86de52c-02f7-49fe-9038-65e484f23493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb5df44-a049-42ec-8ead-8d6fbf8b1e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70074ef-6b26-4cc0-921c-6afa52548c50",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b08dc71-e0ec-46d7-a3b2-d5fe09a73098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "555ea5c3-14fb-41c2-a28c-4b3fc56a164c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd94ea79-b90d-4781-ad52-1115ff4c1b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18cf9c3a-7748-4c6a-94c6-fec69cad711b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a13e9ab-263b-4741-a1fb-e29c93cfd284",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413eac3c-355b-402b-a27f-b798501ef675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4d92b91-2f83-4490-acfc-f95ffe47f6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ab7462-7e98-4234-b0c0-017a23a7da65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4b3bf1-0492-43df-97e9-1ecc4a8de391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c4ec85-a401-4601-883e-1d6e1b52d36a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458e4eee-4d6c-4bae-a0c1-8d70c35c0796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b576904-9f4d-4967-b002-a5c95914b15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cf56e3-badc-4f20-ad8d-84d4202a24bd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd498cc-a960-4f23-b84c-b24073ecfe52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efed6698-d3ad-461e-b9d0-a1cceac99cd1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa18a1f-9d9b-402b-a87f-59a4b0069d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5bd6624-1392-45ec-a65e-533f3f97301a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ae5b67-62c6-4ac1-8c33-652974a01a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe14d0e8-85f6-4a23-b02d-5f35d6e3b5b8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf206460-17fd-4c65-9cf4-9968f92e0de3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfcf09e7-95a6-4e3e-a843-908936b7775c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11cf15f8-d025-4310-be53-7335a6460208",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2560bb04-f55d-49a6-b4f8-91700da73e0c"
                    }
                  }
                ]
              },
              {
                "id": "2328b5a1-9cf1-43d6-b130-8c066e1edc88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70e808d6-ad4f-4a96-af75-384df010758f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7762849-6936-4989-b7d6-baca7ae25061",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1a6ce830-f355-4be6-88d8-67d846032d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee134e6b-9c29-4b27-bb34-701472bd71ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26e3e75a-f1f5-4b2b-b9ac-55d0bb8afa6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d836e01-82da-456c-96f6-383f3f2d07bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6c227ad-0845-4b93-8098-d933628980c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81c0141d-f453-409c-894f-6a911cbd3775",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54c13b69-3603-4875-94ec-10af9bcab54a"
                    }
                  }
                ]
              },
              {
                "id": "467117df-d171-4ce7-a8ee-82432d124009",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4da5cc9d-0638-4e1d-98f0-e2dca3dd271d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d4d182-6ee5-4021-afd3-a31f45c5afed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d61aea9e-5f9b-444a-910e-29ce612cf6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce098ff-b415-4eb2-b65c-b65a828c7d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc269b5-b4d0-4461-9ab4-099d58df50c3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ac4af37-014c-4c35-a12c-ad298e5a341a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08a9ba5d-086a-438f-a9dd-70fcbb5ef215",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9442617a-1bb8-4d99-b6c8-51030485a7c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "89e77658-d0dc-4223-8add-1278b60e7dd4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d90f5d5-0ec8-40d2-8d53-bf3e40876cae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f20b0e74-c4ce-4251-a54c-7dca787d495f"
                    }
                  }
                ]
              },
              {
                "id": "c87868a1-624f-4a7f-acbb-d7c4e523c4b3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeb6e744-b54c-41f6-8b65-9330b1506f89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "14e93386-15aa-485a-beb4-f89f4aca1857"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b4097c2-fcd1-47ea-be77-d0b9589244b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4170526-400f-4611-a9ab-1624c29f46de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae6443b9-a603-4805-8ccd-73d44effb1e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6d01fae7-1863-481d-b536-2eeb163893ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b3f982e-7c68-4bbd-a103-e7ca7e4b96d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27abc91e-811a-4448-b139-481bef169aab"
            }
          }
        ]
      },
      {
        "id": "fef18c8d-e2a9-4646-a44f-fe9c7641903c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dba280f7-9995-4f87-bf5b-8b645d669e32",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c1a71c2-ed9d-464e-8e4a-60ec53e3847e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04c60ef3-fef7-4420-b084-6afded354b98",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ea98b6-0454-463e-b975-240703a848d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3acf16ca-7f83-46c3-a0e3-aaf3b6a0b4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce756c7-92e4-4b5e-8832-2675eb5485f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90e88e55-bddd-47b5-9993-7ea27e733f7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b42cf8d-2c6f-445f-9e20-787680fe6bfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ca67cff-4d95-4f01-88e1-8a8f3f9846cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38c36c7e-ef61-498d-a4f0-5958301a7cd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4c90d8b-71da-46d5-936a-53f2c84105e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbddd332-bb8d-43c3-86e8-001f20879b90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4a8ffb94-ed91-4acb-b57d-a240efc758a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f54af8a7-383f-4c5c-aaf0-aadac85f3672",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70bd6c8b-6c52-41d2-af74-1ee210d7c329"
            }
          }
        ]
      },
      {
        "id": "9e4bb058-c213-4d3b-9a9b-8e516008fc21",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7a017843-0da4-4be5-851a-9580da67f4ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bfd61ec-e1c7-4cb1-ba65-420ea1ea4aa6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5629bf43-be39-4a92-bb79-5481d41b0ed9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178bef45-3303-41c1-98ee-37e7484ce115",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63e26fef-4ed7-4a7e-bc29-3208472d890e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47425d2-8615-4666-aad9-45de0eb274d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c47b3db-5e80-409b-88fc-817d5d653c21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a089d828-3210-46d7-8358-60663a46ee39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30205c70-5c70-4796-b8c9-77179a76b088"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a8f43d6-cadf-4aee-93ab-e35d7b53082e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6b748be-49d0-488e-b14b-393dcd7cb080"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7df591f8-34ed-47d4-8bef-f270b7161076",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cef8d619-f46e-4f05-8f8b-3baa4ad58863"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9ad1988-fbdb-4989-9277-a01fd38796b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f4f90b1-8385-44db-a081-2305335369b8"
            }
          }
        ]
      },
      {
        "id": "8d815649-5149-48a3-9198-e4488ecd3152",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6a52b47a-2090-455c-81db-09b39df95639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f17ef510-c10e-480d-afbb-e37d56bec16e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a19c5892-ac8f-4c1e-bf2b-d02a2de1e0a3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82b9338-6161-424c-b91c-36c76e024491",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff2aa78a-fab9-4153-9ea3-6d957393ac1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a90665d-865a-45d8-abe0-1043ff9708a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "314ba6ea-f116-484b-b054-52b67ccb9ad0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe38b19b-bea2-4d9b-8284-c8ad8f4380b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bdb4ceb-7cbf-4d4f-8017-cf00a2a5df79"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a3a0ac8-b524-4b97-a605-3d60b7ebd496",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f4d5ee0-a0ff-4179-ad33-9e2c536e4c87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "990e6701-4156-4fe5-a091-2d49685e59f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c807c5e7-4bd0-40bc-a3c0-bfc9fc15b145"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f593f4c5-f8db-4655-a06a-b954a16ca380",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee5a0f91-998d-40e9-92cd-1afc47267b51"
            }
          }
        ]
      },
      {
        "id": "79aed92f-49e5-47f8-995a-740210e8747c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1aa6587-3102-4741-bc9e-d74f67fcc2ac",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e3e20da-431f-4696-ba60-2f0f8d5a5882",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "20ba8fec-5c3e-4536-8221-892b4ce85c47",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5e48f8c-3d99-48d6-b432-4299240b2a11",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6007dbc7-0644-436d-8f3b-d6cf456f1e58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.29122807017544,
      "responseMin": 2,
      "responseMax": 418,
      "responseSd": 29.884504467428815,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706488459246,
      "completed": 1706488470232
    },
    "executions": [
      {
        "id": "2fb92d22-1037-43f8-b2bf-830bb5512620",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7699b142-052c-4f71-95b8-94f17e199165",
          "httpRequestId": "b5dfee46-1f63-4704-ae7e-93791106d0a8"
        },
        "item": {
          "id": "2fb92d22-1037-43f8-b2bf-830bb5512620",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "50e9c33c-62e9-41ff-bb3b-6eb30deaf4aa",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "61ddb8c5-ac68-4322-83b9-05efefbdcd9c",
        "cursor": {
          "ref": "978b55e2-e478-4e0a-b5a5-42f545854dcd",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "84e59aba-25d0-4615-a0e0-dcbb7aab1a1f"
        },
        "item": {
          "id": "61ddb8c5-ac68-4322-83b9-05efefbdcd9c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "43533b35-1ba2-495e-a610-768bda4e5f33",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "9609b4f2-bc5e-487c-b26f-fb52a7576631",
        "cursor": {
          "ref": "6e3d878d-9c85-4564-938b-06fb69a9a3c9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b28df0ad-e73d-43c2-8199-87d083a955a7"
        },
        "item": {
          "id": "9609b4f2-bc5e-487c-b26f-fb52a7576631",
          "name": "did_json"
        },
        "response": {
          "id": "2b76cdee-fd1e-4018-8ccb-b3dfdfe3a0e5",
          "status": "OK",
          "code": 200,
          "responseTime": 196,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffde0cb-ed78-4968-894c-ed6d7b572456",
        "cursor": {
          "ref": "ec670b2a-f0ad-480d-ac6c-2dc8186ab8f1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cee050ce-f5d2-485e-9360-6844e29c3732"
        },
        "item": {
          "id": "5ffde0cb-ed78-4968-894c-ed6d7b572456",
          "name": "did:invalid"
        },
        "response": {
          "id": "17d7718d-6fb4-45f4-a774-13ab042d2216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffde0cb-ed78-4968-894c-ed6d7b572456",
        "cursor": {
          "ref": "ec670b2a-f0ad-480d-ac6c-2dc8186ab8f1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cee050ce-f5d2-485e-9360-6844e29c3732"
        },
        "item": {
          "id": "5ffde0cb-ed78-4968-894c-ed6d7b572456",
          "name": "did:invalid"
        },
        "response": {
          "id": "17d7718d-6fb4-45f4-a774-13ab042d2216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7919cb7-bbc8-4149-8633-10cc34271d6a",
        "cursor": {
          "ref": "800a2fc9-523a-48ee-b3a3-dd34f21fbb70",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d34485ca-5dfe-445e-90f0-9edf3c4d1068"
        },
        "item": {
          "id": "c7919cb7-bbc8-4149-8633-10cc34271d6a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "20216733-8616-4f57-9cb7-2bf39e946bdb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f2d3f9-66a1-4b80-acca-34b0c0d2b6df",
        "cursor": {
          "ref": "7d770986-19b8-419a-a4d9-eb7cec509389",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1e1f7998-be88-4e0e-850e-7f1e00c3d479"
        },
        "item": {
          "id": "88f2d3f9-66a1-4b80-acca-34b0c0d2b6df",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a0072f9c-214b-4d9a-8fb4-afe7aedd1d17",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2aa3b7-e94a-4231-ba58-a641ec5df781",
        "cursor": {
          "ref": "84c08295-4628-464c-a73c-1d90eca07f76",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "53aa7cfc-e3d4-4a3c-aeb1-47c01f81e3f3"
        },
        "item": {
          "id": "be2aa3b7-e94a-4231-ba58-a641ec5df781",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f01ccd18-0b59-4774-9896-6a4eb13de78a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a414e6a-3f90-46f8-9df3-4ac58cc24ff2",
        "cursor": {
          "ref": "0d65cc6c-e53e-4480-abd3-dbbb3fb50d16",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "de338e92-e4ad-4eb9-baaa-7a0ba722f1d2"
        },
        "item": {
          "id": "9a414e6a-3f90-46f8-9df3-4ac58cc24ff2",
          "name": "identifiers"
        },
        "response": {
          "id": "18a77f20-5496-412b-9d90-ec25726f60ed",
          "status": "OK",
          "code": 200,
          "responseTime": 142,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6187759a-a7b0-42c6-af25-b4bd6e3356b3",
        "cursor": {
          "ref": "bc4d005a-638c-4a75-a120-622264611270",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2b2d8750-27f8-4508-918c-05fca1a1c165"
        },
        "item": {
          "id": "6187759a-a7b0-42c6-af25-b4bd6e3356b3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bbd8d1b2-92c5-4b5e-81fb-755fa48930ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf8b353-bcba-4a2d-8d60-c9ef23a0b1e3",
        "cursor": {
          "ref": "ceb79bea-07d7-44f9-9e42-a254c18331c4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "76146af6-19ef-45bc-9bc3-51acbc7efb08"
        },
        "item": {
          "id": "aaf8b353-bcba-4a2d-8d60-c9ef23a0b1e3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c9f85c36-a5df-4406-964c-758c177c3e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf80edb2-4f3e-408c-9f3b-a5ea516c88d1",
        "cursor": {
          "ref": "f2e4f6e8-37b7-43f6-b5dd-e958ed06c33e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6cb9098a-525c-408c-bc66-2033132adf82"
        },
        "item": {
          "id": "cf80edb2-4f3e-408c-9f3b-a5ea516c88d1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b878826d-ace6-4189-b483-d86b1990767a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be2229e-294c-44e4-b079-5c61ea8f6e24",
        "cursor": {
          "ref": "b8e7c0e9-55e3-40fc-a28e-44738bc041df",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b4e83ead-5fa4-4f02-b727-8915973f94dd"
        },
        "item": {
          "id": "7be2229e-294c-44e4-b079-5c61ea8f6e24",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "85060070-d3de-43cc-9cf2-bcc907073c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631152ca-5764-402d-81dc-bcc54abc626a",
        "cursor": {
          "ref": "d88802f0-a2e6-4a97-95ac-99bc0343d315",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b34f6959-c302-4918-b6d1-505d88e17a2a"
        },
        "item": {
          "id": "631152ca-5764-402d-81dc-bcc54abc626a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "77a46a98-3ae6-4dcf-a66c-fa82f1f3d6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6820c59a-45d1-41cb-8751-d0a7aacc878c",
        "cursor": {
          "ref": "407996b1-f98b-4379-9ddf-c0a216815492",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c7e340e5-8292-474b-8447-b4f74c642ea0"
        },
        "item": {
          "id": "6820c59a-45d1-41cb-8751-d0a7aacc878c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6e019b92-1ce1-4b4f-9b98-7b559af0e35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b760f6-85dc-409f-8c0b-c9e013e6dab5",
        "cursor": {
          "ref": "de006e24-9fbc-4952-a2b2-c9c7dd686cc7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2fad6ac9-f4e7-4b45-888e-f822f46e3c83"
        },
        "item": {
          "id": "b3b760f6-85dc-409f-8c0b-c9e013e6dab5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "23609058-71b8-4496-b737-1b059db50845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f31037-23a9-4988-bbd2-e6fadd7c18da",
        "cursor": {
          "ref": "bc5a88a6-3ff0-4eaa-93f5-8d9785ce432c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c5ed2e7c-94be-4352-81ee-2fa587cde97e"
        },
        "item": {
          "id": "c4f31037-23a9-4988-bbd2-e6fadd7c18da",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "60fbe31e-15ad-49f2-8197-9f6cc705b479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f0841d-1d4c-4320-be3d-437fabd5b796",
        "cursor": {
          "ref": "ae873850-2349-47cb-bef8-0c61cdc45b8d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c9495803-e31d-4231-aa27-1faf996b6c68"
        },
        "item": {
          "id": "08f0841d-1d4c-4320-be3d-437fabd5b796",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "760c9057-e436-4ea9-afb7-f7ca2c1b4cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d60e097-895c-4f96-9541-55dadcda503f",
        "cursor": {
          "ref": "cf0990a0-5edc-491d-8a64-7b020f668576",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2b0c8452-94ef-4f18-9871-eebe1d45b5be"
        },
        "item": {
          "id": "2d60e097-895c-4f96-9541-55dadcda503f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cc03c3a3-1969-4f5b-ad37-4ce3d2d1d1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416fec1c-2f71-4348-b6e8-0a75824614e5",
        "cursor": {
          "ref": "a6d61be1-46d6-4287-9991-982ac8bf8b8e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e53a991e-de9e-4291-a3cc-d90dc4b18556"
        },
        "item": {
          "id": "416fec1c-2f71-4348-b6e8-0a75824614e5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a6368473-8004-4bd3-932c-5d6f2c23671a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc4d4cc-f23d-4d02-a6f1-d25a9f64c31a",
        "cursor": {
          "ref": "4a77f96f-67e4-4615-9940-078090bca4b6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "658fe5c2-c782-4632-a771-ce8743fd5bef"
        },
        "item": {
          "id": "2cc4d4cc-f23d-4d02-a6f1-d25a9f64c31a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "23c6b04b-872c-4bd7-8c95-1472656f3c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1527e260-7f7f-4d17-85b2-7d5185291858",
        "cursor": {
          "ref": "148f64d8-fb12-430d-881c-c39ad1b7bb53",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4bd3f579-3bb6-4933-bc81-93de7ab3bb3c"
        },
        "item": {
          "id": "1527e260-7f7f-4d17-85b2-7d5185291858",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a2d25f97-a8d4-420b-adc4-d87bb0ea8893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21d0f98-5cb7-4ccb-b9bd-3a632c7aca0e",
        "cursor": {
          "ref": "25aa809c-bfa6-40d2-ad9d-fbb54be4f77c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "30702fca-58c8-478a-9fc1-206511cf9f9a"
        },
        "item": {
          "id": "a21d0f98-5cb7-4ccb-b9bd-3a632c7aca0e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "792f2dbb-61f3-4cb9-a8a5-f2c80e3828c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a2fbc6-ced3-4b5d-b3f3-f1771a359c4b",
        "cursor": {
          "ref": "7f21aaae-0905-429d-8d93-159fa02dda49",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b7902eac-5ed7-42cc-9e9d-b3bb39351d61"
        },
        "item": {
          "id": "15a2fbc6-ced3-4b5d-b3f3-f1771a359c4b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a7b63bb7-a2c3-4e31-83a8-6a7f17bb433e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7ba253-44be-4f69-b09a-629281d129ef",
        "cursor": {
          "ref": "8f098286-7f55-463b-9445-d18219208246",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "051326ab-a755-4c96-b123-21994e6a323c"
        },
        "item": {
          "id": "8f7ba253-44be-4f69-b09a-629281d129ef",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "56ed707f-a631-4535-bec9-35403200ee50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f22aa0d-ad00-459c-8a74-69ab18e679ba",
        "cursor": {
          "ref": "6cba7009-3fe9-4711-b701-9e2066ce4d27",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4d2807c-a1be-483f-9c10-f1a6ba45d80e"
        },
        "item": {
          "id": "4f22aa0d-ad00-459c-8a74-69ab18e679ba",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "51552230-40d3-447b-ac32-3bd16ec7f821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e703e2d-f272-4e25-b761-9e7f033359f7",
        "cursor": {
          "ref": "b23259dd-2c31-40bb-9884-72bb64f897d1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c612b2a6-3e53-4a7d-88bb-60dd7b5062a7"
        },
        "item": {
          "id": "5e703e2d-f272-4e25-b761-9e7f033359f7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "677c5785-28c1-436e-ad49-5fc31f806d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333a37ac-f547-4626-8f26-93cbe53653ea",
        "cursor": {
          "ref": "6b358c1d-b1fa-45d0-a4f6-1f6bd83980fb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "846bf9fb-b71b-4ee3-88af-b69242163d6b"
        },
        "item": {
          "id": "333a37ac-f547-4626-8f26-93cbe53653ea",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9c9c7aaa-14ef-46a7-97b9-3345e2387836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca3cc2c-40f3-478a-b3e6-57ad662732f5",
        "cursor": {
          "ref": "331fca21-344a-468f-bc97-812b63683dba",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d0fa8787-2a3d-42e0-a4da-29927cc1cd44"
        },
        "item": {
          "id": "fca3cc2c-40f3-478a-b3e6-57ad662732f5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6a4b195e-5f51-4805-a9aa-b028b338b217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8ab15a-7425-43ed-a207-ba6145c07f5a",
        "cursor": {
          "ref": "53c7dfd2-f28f-4970-8b5c-0e649759edc2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "854ea2bf-61b5-457f-9157-83795eb84b45"
        },
        "item": {
          "id": "eb8ab15a-7425-43ed-a207-ba6145c07f5a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4680ed99-c0ab-4f5e-bd9d-058e8b66eb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3f042b-168d-4a97-94d4-06bff446d224",
        "cursor": {
          "ref": "5928b1cb-073b-4ea0-95ba-a3ed1a2462ad",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4d4172d1-b009-4ee7-931c-abb66efcc08e"
        },
        "item": {
          "id": "db3f042b-168d-4a97-94d4-06bff446d224",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "51cc8187-4d8c-4386-9d5f-188bfba4c8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6dadd0-7e6a-4e4a-9197-e8097642819d",
        "cursor": {
          "ref": "6a23f4e1-247d-4157-826e-e71f58f5468d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d92e4f6-dcdb-4853-a70b-707a82016930"
        },
        "item": {
          "id": "ef6dadd0-7e6a-4e4a-9197-e8097642819d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f0551ef4-d8df-4397-bb4e-ab2685fd64b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7e7583-09b1-47d5-b164-46519c9570be",
        "cursor": {
          "ref": "a1085f97-4aab-4004-91bc-f49fd61b028e",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "af82549b-376f-42e2-8a7d-8468da136f97"
        },
        "item": {
          "id": "8c7e7583-09b1-47d5-b164-46519c9570be",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d0a0e5fb-d26f-4259-8490-f2776213c75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86ae2fc-4843-49d2-86a6-56f371b25b06",
        "cursor": {
          "ref": "58686446-4d6d-4d28-af90-0eaf37779f29",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "37f957a7-b5b1-4353-9bee-fa3ea76399d2"
        },
        "item": {
          "id": "e86ae2fc-4843-49d2-86a6-56f371b25b06",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eadb190f-2d44-4f14-9aca-b1520c64032e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65e3dc7-ba36-4d60-867f-4c80b6e92f38",
        "cursor": {
          "ref": "6004d630-15eb-4eae-a4e6-84d3fb8d1a97",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4a532939-6600-4062-97b1-1a9f6c88cdba"
        },
        "item": {
          "id": "e65e3dc7-ba36-4d60-867f-4c80b6e92f38",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "49852977-42f9-4bed-a27b-40a6d067df69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5236ce5a-740f-4f5a-9bca-d0fd3688371d",
        "cursor": {
          "ref": "14a33374-47d5-4393-817f-8a1bc918fd6c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0c8b08a0-b8ad-4dbe-b32a-ec461970e90c"
        },
        "item": {
          "id": "5236ce5a-740f-4f5a-9bca-d0fd3688371d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "723da433-60fa-4117-bb99-1db352aa2ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71b10e4-2f48-4d17-9fbf-95545153c01f",
        "cursor": {
          "ref": "3b06dc00-acea-4f1f-96bf-94cc52ed5aa5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ff7b335d-a8ee-46c8-b1c9-8fc14877731c"
        },
        "item": {
          "id": "c71b10e4-2f48-4d17-9fbf-95545153c01f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cec55b31-910f-4c3a-9d96-09295f6abf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36d03c1-4e3a-4483-8966-e666ec56a762",
        "cursor": {
          "ref": "e99ac513-b6b5-4239-a056-51f6b6f9c600",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "906bdc22-4dd4-4b36-879d-cfa74476a842"
        },
        "item": {
          "id": "e36d03c1-4e3a-4483-8966-e666ec56a762",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fb6c9de1-1eec-4c3f-857e-fd427127b8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fd9339-f6ab-4802-8b1d-fe238ebc4e6a",
        "cursor": {
          "ref": "fa92d4ea-bbde-4411-9ebc-5fc3772a469f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b29c563d-0efb-4983-88d3-c93213fda0bd"
        },
        "item": {
          "id": "45fd9339-f6ab-4802-8b1d-fe238ebc4e6a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3e0ebfd2-9030-426a-b8b5-8ae01dbdbd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b6c99f-c649-4ebe-a166-072f6975f4ad",
        "cursor": {
          "ref": "b180ac94-2d40-4f7c-890c-c2ad7f3f6952",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "64e5adf0-e717-48be-8440-78a05b7c89c0"
        },
        "item": {
          "id": "a5b6c99f-c649-4ebe-a166-072f6975f4ad",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "92936891-6f84-491c-b12c-10fada7db35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f966a45d-1942-443b-bd33-28e23c327522",
        "cursor": {
          "ref": "23a32264-4dd1-4d4a-82dc-dc9fedac3e35",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5bee6ecf-67b1-41ed-a2b3-27456ba80a11"
        },
        "item": {
          "id": "f966a45d-1942-443b-bd33-28e23c327522",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7a5ac78d-be0b-4792-8cb9-0900c3da149a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84d21cb-273e-4999-b3b4-3b0497ffe495",
        "cursor": {
          "ref": "1dd39c9d-8def-4678-aec7-9ebb8ce03c6b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eeabacaf-b73a-4d14-8339-0e030fc6ee21"
        },
        "item": {
          "id": "c84d21cb-273e-4999-b3b4-3b0497ffe495",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3bc44383-a197-436d-b7a0-a98c4d1443f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02c387e-dbc5-49f2-a77f-a7a263ee7963",
        "cursor": {
          "ref": "3a897752-01dc-4f3b-b367-85d2c255895e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "80a42082-ac1b-4135-9cf1-479c4090aa42"
        },
        "item": {
          "id": "e02c387e-dbc5-49f2-a77f-a7a263ee7963",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d40e0c0e-4790-4a51-a81a-e0e2e2459058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335629bf-a23d-420f-8fc1-6fea560b3b40",
        "cursor": {
          "ref": "1b9d5051-1752-4998-a75d-00e3e3505449",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "66000624-38ab-4f9e-92f1-52c48e9a45e7"
        },
        "item": {
          "id": "335629bf-a23d-420f-8fc1-6fea560b3b40",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6b8948c1-531c-4a79-b451-cee74196b177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf04b99-7548-4123-97dd-fbc481f5706a",
        "cursor": {
          "ref": "83e483cc-7d3a-42a0-bfff-d5278cbfd6a5",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3f9916a0-53fe-4611-a06e-8f4429e6e5ac"
        },
        "item": {
          "id": "9cf04b99-7548-4123-97dd-fbc481f5706a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "18d08144-f3f7-438d-a4cc-eea1fe3ca232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6190d70d-26c6-42ec-af11-5948600ee1ee",
        "cursor": {
          "ref": "c2829e24-1c77-4949-909e-937581e1d2e5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "55fa42cb-58d7-481f-998a-3333b7bf2085"
        },
        "item": {
          "id": "6190d70d-26c6-42ec-af11-5948600ee1ee",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "21d5f560-2a8f-4096-b08d-4513af91e5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b750c5f5-964f-4408-a0c5-b280de0d71fe",
        "cursor": {
          "ref": "29c80423-baf1-480c-916f-a397ad5088ac",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "17fd1c37-4e0e-4ee1-94f4-fe3212f76533"
        },
        "item": {
          "id": "b750c5f5-964f-4408-a0c5-b280de0d71fe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "844dba04-78e0-4ff2-92d5-f9079c21eaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d67075-f33f-4420-ac4c-d6e95e39f6f6",
        "cursor": {
          "ref": "fa59f21d-2c39-4969-a330-97718123596b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "74207808-021d-49c2-a0dc-7e3b242592d4"
        },
        "item": {
          "id": "c2d67075-f33f-4420-ac4c-d6e95e39f6f6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "290b4ab9-30ad-431a-8bf8-1c77cc5abad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26833721-887f-4dc3-9fec-ed3933821dbb",
        "cursor": {
          "ref": "dde251b4-7372-4d9c-82b9-3a209202d39b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bb81428c-2e76-4e85-a266-494df11ccac8"
        },
        "item": {
          "id": "26833721-887f-4dc3-9fec-ed3933821dbb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "61c1aeb7-b8a6-462e-9740-4568dcb5c02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57801977-31db-423f-8622-d1b4e2cd6098",
        "cursor": {
          "ref": "95cfd48b-013e-40ef-aaf3-28835d383fa2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a47ea311-fe18-4f96-b30f-74a3441e2d58"
        },
        "item": {
          "id": "57801977-31db-423f-8622-d1b4e2cd6098",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6080d867-44fc-44c0-b279-1c39f769f30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b996600-9c0f-4a0e-af9f-1662b0471bb0",
        "cursor": {
          "ref": "ecda0a2a-a9d5-4990-913c-f3021f20ae66",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "27176f8c-3f21-4da5-b15b-5f9e3b87ca75"
        },
        "item": {
          "id": "1b996600-9c0f-4a0e-af9f-1662b0471bb0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2341cec5-d329-45f0-aa94-72901288b40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089344bf-c8d6-4807-a7ed-7e20fd89918e",
        "cursor": {
          "ref": "c9ac456c-94bf-44f7-be72-2b4cb1eac8bb",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "97bc1714-beed-4967-aee0-8e28bc02bb7c"
        },
        "item": {
          "id": "089344bf-c8d6-4807-a7ed-7e20fd89918e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e51f8859-b733-4522-a5b9-4e6830995b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047327c1-f8cb-413e-a33a-bd749a5e4745",
        "cursor": {
          "ref": "6f1da7d9-5852-4ae8-8bcd-2285253d7f71",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "77c3257f-2316-4239-a39c-ea37c9f7f775"
        },
        "item": {
          "id": "047327c1-f8cb-413e-a33a-bd749a5e4745",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b9132440-1285-4581-954d-d6a04fd58d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46daa996-42c5-40e0-a164-068c2075fa31",
        "cursor": {
          "ref": "f2e2211d-d478-45d4-8907-63a6a890dea8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1751ff11-864d-40c7-9fca-ce93a027288d"
        },
        "item": {
          "id": "46daa996-42c5-40e0-a164-068c2075fa31",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f7d840ab-dd3f-4190-8583-cd2159ad7c6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ca1df5-d1c4-4f5a-9b56-f10dec45f020",
        "cursor": {
          "ref": "724a7b8c-1611-423e-87fc-8907b68bec05",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bca28243-5bad-48ef-94f0-4c8110bef23d"
        },
        "item": {
          "id": "c9ca1df5-d1c4-4f5a-9b56-f10dec45f020",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7f7849a1-9c75-4a3e-8db2-b8939b25d760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e314a9-c1b7-4778-83f4-b4f3296dcd6c",
        "cursor": {
          "ref": "94aab4f7-b468-4e4b-b3b4-705b55628043",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e6880236-af6b-4682-a889-f5277cbac528"
        },
        "item": {
          "id": "b9e314a9-c1b7-4778-83f4-b4f3296dcd6c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3f457391-3058-46e7-8f75-a1f50241ae5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5fc712-f485-451b-9d8e-45c1abfc6396",
        "cursor": {
          "ref": "9ddb8eeb-bcd4-477d-a5e0-81cebd0b493c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6f1e996a-c0e0-4c95-87df-cc27bbd0eab4"
        },
        "item": {
          "id": "eb5fc712-f485-451b-9d8e-45c1abfc6396",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0a61fd0e-382d-4686-8db8-8e98cde14f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886af65a-e1a7-4bd1-9cd0-edc47b3c37e1",
        "cursor": {
          "ref": "b8834374-fd09-4ae5-90f5-2b7585d70f42",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "750c57e3-b3e4-4b16-91c1-3072c2ba32b9"
        },
        "item": {
          "id": "886af65a-e1a7-4bd1-9cd0-edc47b3c37e1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d445a018-4dee-4ca4-b89d-b74955a6b857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6279cbf8-b3ec-426f-9c3a-cac134afdd01",
        "cursor": {
          "ref": "a43c37dd-0381-4c4f-80fb-a16aac7d44f1",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a2915f03-d7a6-495f-a4b0-580998e1ea67"
        },
        "item": {
          "id": "6279cbf8-b3ec-426f-9c3a-cac134afdd01",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2d51f642-29e6-446c-b467-1857396d921c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f336e922-8def-4a6c-aa31-e173fb7f12dc",
        "cursor": {
          "ref": "9cfb20f5-f39e-459d-992b-ea168435d534",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bb3b9372-90ec-46e5-99b6-dd13d602ee94"
        },
        "item": {
          "id": "f336e922-8def-4a6c-aa31-e173fb7f12dc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "79711168-fe2f-4206-90a7-bf02338eb999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a601d2a-4692-49cf-9c85-5e974b89fdc6",
        "cursor": {
          "ref": "a9f7e476-02d1-45d8-a433-eac859d21e0f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dc3dc500-a735-4fed-bf01-c2c3e9fb304f"
        },
        "item": {
          "id": "0a601d2a-4692-49cf-9c85-5e974b89fdc6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4234e89a-3ea1-49b0-9313-4a740a5a12f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be30384-c9a3-4223-8f09-b1c08a6ab3c2",
        "cursor": {
          "ref": "bb063aba-415d-48d4-a48e-af5289148ad1",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8a3f1ee0-309c-42f2-a9ef-99027ba317a9"
        },
        "item": {
          "id": "3be30384-c9a3-4223-8f09-b1c08a6ab3c2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a4f5c7a5-144f-4a3f-9a3f-8dbf3e2c1c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274d4380-c91c-496e-9912-5c8e633f6802",
        "cursor": {
          "ref": "c2d546c3-04e0-48c8-be8b-2df9c5d3506a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0f6d26b8-b596-4a68-bb3a-7557c6b3e467"
        },
        "item": {
          "id": "274d4380-c91c-496e-9912-5c8e633f6802",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f4be8ad8-82b2-4b24-9c48-436d06875e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066b98e1-b867-4842-ad2f-fc92f150bd5a",
        "cursor": {
          "ref": "56f1d125-99fd-4c8f-90ff-287455c69033",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e0fe5a4c-fc53-402b-8245-fc90189ca575"
        },
        "item": {
          "id": "066b98e1-b867-4842-ad2f-fc92f150bd5a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "70b96127-42ee-4f56-80f9-c2bb33f093a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06072ac7-16c3-4539-9a25-308f6b361099",
        "cursor": {
          "ref": "030b9dff-458d-4394-9836-4774193f4da4",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3212b168-1d34-4937-a68b-5af17e763efe"
        },
        "item": {
          "id": "06072ac7-16c3-4539-9a25-308f6b361099",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8aba5132-e574-47c7-903d-7f02b56d9500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5963259-855b-416a-8b27-ac02a459e8c9",
        "cursor": {
          "ref": "902be803-d133-4fb1-9c19-8b056ca87c8e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9a84fdc6-66aa-424c-b79d-4da568250798"
        },
        "item": {
          "id": "a5963259-855b-416a-8b27-ac02a459e8c9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8ea0bdc5-0d95-42ac-bc27-fa2750a95214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264cf1d1-ae7f-4dd3-94d1-d92a3fd04cf6",
        "cursor": {
          "ref": "ef755247-a3fb-4de5-bcc4-514a8252fa36",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e249c34b-7cee-4b07-aa59-005cf1a8389c"
        },
        "item": {
          "id": "264cf1d1-ae7f-4dd3-94d1-d92a3fd04cf6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "26e0e542-5486-4a4e-b22d-7a7c97c5d0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844e688f-4b0c-4f4c-9f01-c787abd2ece5",
        "cursor": {
          "ref": "1577f31d-e95d-4c27-978a-4cb28845b001",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6bcd56e4-de1a-437e-8f43-ab0d7cfb9063"
        },
        "item": {
          "id": "844e688f-4b0c-4f4c-9f01-c787abd2ece5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f3cad440-8ffe-43ac-8113-fcea36e8dc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407c9876-1038-4cc3-b249-7c7d1d58b46a",
        "cursor": {
          "ref": "26eff95c-1bc7-4a87-b9dd-baf3db2f0342",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ed8e88c6-a79b-4e47-a0c8-e0d8248da5f3"
        },
        "item": {
          "id": "407c9876-1038-4cc3-b249-7c7d1d58b46a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "690c5d6a-aa7e-49a4-93e6-96e29b07139b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4d4d54-8930-4b13-8c77-66b863b18b7d",
        "cursor": {
          "ref": "7ec26448-240c-4158-a9c0-15ea206094e2",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9adacaff-e95a-49f9-b989-0a5aba502f66"
        },
        "item": {
          "id": "3b4d4d54-8930-4b13-8c77-66b863b18b7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4d219170-42f1-469a-8813-b6ffafd7de40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b706719-081e-437a-aa1c-d6ae472ed2aa",
        "cursor": {
          "ref": "43fbba5b-79e1-413c-a186-75847382ed26",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "af2591ed-545f-4de3-9b3b-904cc7e2132e"
        },
        "item": {
          "id": "1b706719-081e-437a-aa1c-d6ae472ed2aa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f8dd694c-39bb-4926-857b-3ccfea18c081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f66026-8719-43ae-981f-7bb0867ba40a",
        "cursor": {
          "ref": "105918ea-dd95-4a4b-a80d-6344753761be",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "892c2e66-a3fa-44ee-85ec-37e8d2f08340"
        },
        "item": {
          "id": "f0f66026-8719-43ae-981f-7bb0867ba40a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3d49ac41-1fca-49ae-b351-c463f028cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9a53bd-8111-438a-a92b-47f7a09284a6",
        "cursor": {
          "ref": "1c28544a-7756-407e-ba93-bb0ba9473358",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "99a62232-5919-4988-a586-60a484f59983"
        },
        "item": {
          "id": "fc9a53bd-8111-438a-a92b-47f7a09284a6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8daa5859-5bf4-4610-a99d-334ca0ba0c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f021141-e732-4fec-ab49-3159d1b62504",
        "cursor": {
          "ref": "45ff1354-1ec3-4f22-b3ba-f5cc4f29cae2",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cd4ac1f6-ef9a-46b3-9c55-e40c55a8ce6d"
        },
        "item": {
          "id": "0f021141-e732-4fec-ab49-3159d1b62504",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1aaa11f1-23ac-4737-b2be-eebc6060157a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a016fd73-eea5-4dc8-a0e1-b126464bdbdc",
        "cursor": {
          "ref": "4678accf-dcae-4253-b897-130a50ff36f2",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c168a7f5-868c-45e1-a1e3-0af5059725bd"
        },
        "item": {
          "id": "a016fd73-eea5-4dc8-a0e1-b126464bdbdc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9e1d8d52-4df4-431b-8cde-950a2e4c82c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09956471-decc-4ed8-83cd-ed2272505f22",
        "cursor": {
          "ref": "084849ef-7721-4e3c-b3b0-55647e9d2456",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "30028be8-99eb-41b0-a308-b707cf93f47e"
        },
        "item": {
          "id": "09956471-decc-4ed8-83cd-ed2272505f22",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cdf17282-4478-4643-ba3f-a7f804e97351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db477203-a701-4252-b333-c1693b6beb1b",
        "cursor": {
          "ref": "f0cd2b33-c6b0-4c3f-879c-d2b8bfb0069a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2db3bb4f-66a7-48bd-9eb1-0a23e62ab387"
        },
        "item": {
          "id": "db477203-a701-4252-b333-c1693b6beb1b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b9fee050-3630-4618-8436-cba2d38301d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76db48fc-85e4-4da8-be7f-1ce0f3586c43",
        "cursor": {
          "ref": "bfd88c81-3426-44b7-92d1-cb66e0b61613",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "12bc8f0d-6705-4424-a3c3-589e6cd0461e"
        },
        "item": {
          "id": "76db48fc-85e4-4da8-be7f-1ce0f3586c43",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fb4fc844-8721-4472-b0c2-a51ce4ff5fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e91d50-f1cf-4fb4-a814-52ac296bbbb4",
        "cursor": {
          "ref": "2d865514-3698-432e-8c9c-610792ad41db",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "89e7013b-96f6-49df-a3f0-eb6cfa31855b"
        },
        "item": {
          "id": "08e91d50-f1cf-4fb4-a814-52ac296bbbb4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f935467d-408a-49b6-82bd-98f081381307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2695fec6-6cc4-497c-a592-271f116939b1",
        "cursor": {
          "ref": "a71945e3-742d-4deb-8cdf-e62bc2d7fd77",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5727a6c1-ecf3-4445-9a44-5b36dde8ac9a"
        },
        "item": {
          "id": "2695fec6-6cc4-497c-a592-271f116939b1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5f39d26e-01e4-416c-a680-2ce23648919c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e213e5-cb9e-4b7f-aab6-d50b713537ae",
        "cursor": {
          "ref": "9baa8e92-44a7-4dc9-911d-4b952189f11d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "650b01b5-e0cb-4850-89b3-a6c3e3f29423"
        },
        "item": {
          "id": "20e213e5-cb9e-4b7f-aab6-d50b713537ae",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2e9ffa00-708c-45e7-9835-81b3a01d3f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e66fe1-e3d3-412d-b724-1a469cd519f8",
        "cursor": {
          "ref": "a10aa692-f416-4b57-90ee-e1bd1db96b59",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "be351d5f-ac70-4fe9-ac95-c22f189d2815"
        },
        "item": {
          "id": "65e66fe1-e3d3-412d-b724-1a469cd519f8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c4e6f4fa-b091-45ba-8d97-6c659cb9c74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885bf3a0-a37a-40e8-8b60-a66e8bde07bd",
        "cursor": {
          "ref": "47ab2ee7-1835-4bf6-936d-2af1b1a8013c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4b65fec8-7c3a-43dd-88a8-14c31f59ab48"
        },
        "item": {
          "id": "885bf3a0-a37a-40e8-8b60-a66e8bde07bd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "78a6fba0-dde8-4df1-b163-2a3014d996ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86d6865-da0a-4757-8fb1-2db20d91a541",
        "cursor": {
          "ref": "600d890c-027f-4804-8c3a-23475ffe5952",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1e61702d-545c-4c1e-a1f6-f87e44113432"
        },
        "item": {
          "id": "f86d6865-da0a-4757-8fb1-2db20d91a541",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4e962136-2847-43dc-af43-bdf46ce4cdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f0e5c8-5c27-420f-9f6a-000d2da76c5a",
        "cursor": {
          "ref": "0511cb3b-5526-4ee6-bc83-641d12a72987",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "96d8a2d4-c7d2-46f2-b008-18aad0646182"
        },
        "item": {
          "id": "f1f0e5c8-5c27-420f-9f6a-000d2da76c5a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0d44c8fa-1aaa-452c-90ac-adea6b77f12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9075e51c-24ca-4573-9753-c11d3198260a",
        "cursor": {
          "ref": "439f6d6e-75d7-478c-b048-778b088d0e58",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "56ef2956-1b42-49da-8bae-db991191fbd6"
        },
        "item": {
          "id": "9075e51c-24ca-4573-9753-c11d3198260a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "89a7c1be-74a3-494e-9066-ea3c1b7b448c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba2d89a-12e1-4c59-af5c-1afcfa9b375e",
        "cursor": {
          "ref": "2c16742b-2467-4762-9f96-a1509d4637c3",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f16c08dd-a8f9-43e8-97ec-f0e4fd5f8000"
        },
        "item": {
          "id": "6ba2d89a-12e1-4c59-af5c-1afcfa9b375e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "93033754-9beb-49fd-8188-7b0677900481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab8cf17-3975-455d-acf4-e616961bb823",
        "cursor": {
          "ref": "ffa203aa-29ec-4f9c-a46f-29be7b998632",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fd4b93b3-cc0c-4f37-b1f2-d49341b65e81"
        },
        "item": {
          "id": "aab8cf17-3975-455d-acf4-e616961bb823",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "85801cc0-08fc-4608-8d7f-8f6a5d9001dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09081b71-6420-47eb-9a08-7bf3e6988f85",
        "cursor": {
          "ref": "d735bf73-7b02-41fa-b19d-516e8130ceee",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f4bdd6a2-0695-45d9-a58f-e5acba41e77d"
        },
        "item": {
          "id": "09081b71-6420-47eb-9a08-7bf3e6988f85",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "92ac41ce-976d-41f7-b8dc-e07aa61dc85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3d446b-818f-4a4f-bd98-dc6f19fbcae4",
        "cursor": {
          "ref": "cfa3a7f2-d196-49fa-bd2f-e7a7025be031",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f8ce5d31-7496-485a-b3f3-9f8db73043ad"
        },
        "item": {
          "id": "da3d446b-818f-4a4f-bd98-dc6f19fbcae4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "11c66a1c-e412-4fbe-a360-cb73bc937517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb46068-e7cf-4944-8288-57190dad6c18",
        "cursor": {
          "ref": "deae1515-bee4-4850-8493-cd688a6d53a0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c72557cd-4010-4424-9be6-2ff803b37809"
        },
        "item": {
          "id": "7bb46068-e7cf-4944-8288-57190dad6c18",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0cc1f2e9-6dbc-4332-bf5d-b08acc22eaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ff9313-ba80-43d1-bf98-6ec286ca5d91",
        "cursor": {
          "ref": "904f6ee5-88b5-47bf-b477-22762e2e60df",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "00423e61-9c2f-468b-9f23-812a41614e0e"
        },
        "item": {
          "id": "30ff9313-ba80-43d1-bf98-6ec286ca5d91",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "35ac5731-14a3-4980-b0f8-5aa6ce0ac65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e5ac69-ae33-4467-ae08-cbee0c8c9e23",
        "cursor": {
          "ref": "6020fc9f-dc9c-4beb-9081-dd1107f92a2d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c1bcd266-af9a-4def-8af8-75b3f221a718"
        },
        "item": {
          "id": "04e5ac69-ae33-4467-ae08-cbee0c8c9e23",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3b183cca-5d8c-4904-bcaf-cdd79fa56b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0436deaf-e5b1-4e66-be8c-833f5ec6726d",
        "cursor": {
          "ref": "b3786529-0807-44db-b88d-52c9033a1fb7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8c3c81a8-c1aa-4398-90ca-4f8eee75db8e"
        },
        "item": {
          "id": "0436deaf-e5b1-4e66-be8c-833f5ec6726d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c66910a1-9ee7-49d1-a0d8-05ea93396db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14e4e58-42ca-41af-a80d-f48350d4808b",
        "cursor": {
          "ref": "c5b12bec-c002-461f-85be-c442bab480e1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "370dff19-d0eb-4f3c-8faf-389f670528ed"
        },
        "item": {
          "id": "d14e4e58-42ca-41af-a80d-f48350d4808b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "84ae0a50-8b57-4e10-814c-05805111f134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7937d35-6d8c-4a3d-a898-31370d8f5ec5",
        "cursor": {
          "ref": "4760c4b6-13b8-4846-89c8-b52777b8d688",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "df05f0e1-8054-4fc8-ba25-cd4b5640293b"
        },
        "item": {
          "id": "f7937d35-6d8c-4a3d-a898-31370d8f5ec5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a1a73192-2cde-40c6-bcfb-f4a106ee9352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb664427-8587-4651-a74c-1639e424c121",
        "cursor": {
          "ref": "86990893-95b4-4819-bc9e-5f57eb8b35b9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9a02c7ca-1e78-4af8-9573-cc36d290a945"
        },
        "item": {
          "id": "eb664427-8587-4651-a74c-1639e424c121",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7ad35ebc-effd-440b-85af-54705b780e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a44204f-6cab-4553-b228-bc23f7c5fe70",
        "cursor": {
          "ref": "bef8fd9a-f0e1-494a-8b2e-9ff06255bb8d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dbe255b6-eb72-42b3-a272-f5fb3a436253"
        },
        "item": {
          "id": "8a44204f-6cab-4553-b228-bc23f7c5fe70",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2b21b59b-fad2-44c5-a148-9bf77464fc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6fcf91-d713-4473-8ab4-1f25b6dfe24e",
        "cursor": {
          "ref": "add38f93-a60e-4569-9888-65c4422af408",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "32abe2fd-b3a2-4683-8c2f-7ae4132d3329"
        },
        "item": {
          "id": "4c6fcf91-d713-4473-8ab4-1f25b6dfe24e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "86049919-933a-4892-8352-00cc61b438b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c889d6a8-b460-4d0a-aeb9-e55d65930248",
        "cursor": {
          "ref": "ad8f0209-ae95-41df-a3e2-a3d5d1a425d2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6882b190-7463-42b0-9355-e23be5fef075"
        },
        "item": {
          "id": "c889d6a8-b460-4d0a-aeb9-e55d65930248",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "aafa8438-970d-46fa-9c2b-4dcb57d6282d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605e573e-5680-4e1c-8808-eea02cc420f3",
        "cursor": {
          "ref": "3ab9531b-2eb7-4e8d-94b1-df4a56aa1b5f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6a24ab01-455d-4acd-9603-a6aa355b73d8"
        },
        "item": {
          "id": "605e573e-5680-4e1c-8808-eea02cc420f3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "06189703-bc20-44e8-b6ac-beaf4dc2d7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0badd4f1-fe4a-4740-887b-099d44a268c2",
        "cursor": {
          "ref": "c6e18d7c-6c48-45a6-9aa6-6ac3d2a05f1c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b960d67c-cf8d-4b9a-bd6f-0320d0902d42"
        },
        "item": {
          "id": "0badd4f1-fe4a-4740-887b-099d44a268c2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "80b50c95-8a4b-41ba-9716-da2024ef765e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465f938a-ab00-4665-9205-ea593676f368",
        "cursor": {
          "ref": "db0cf5e2-9a11-4fe5-b190-f80fc1deb792",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "760b43eb-bba4-4f9f-9c7c-0448b474b3e8"
        },
        "item": {
          "id": "465f938a-ab00-4665-9205-ea593676f368",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b80d736b-f6d4-49e7-91f4-0301578e314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d404e795-a64d-4ae6-aca5-fd9164dd8d42",
        "cursor": {
          "ref": "7b77c923-b67f-4f38-a219-3a0c835ad1b1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ae1e0cf4-0aba-46ba-a2ac-df9435f95df5"
        },
        "item": {
          "id": "d404e795-a64d-4ae6-aca5-fd9164dd8d42",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dc5abfaa-3b09-4258-aeed-04b834b4a850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9287b42c-3a65-4214-beb1-c579392ddba4",
        "cursor": {
          "ref": "d939078f-b96c-449a-83e0-dd8847cd6557",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7a32ce8d-e7ac-42c3-88d8-661fda367e10"
        },
        "item": {
          "id": "9287b42c-3a65-4214-beb1-c579392ddba4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ca11ebeb-7ed9-4410-9d1a-375a7aeda1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0e4555b5-b467-4d8f-b7eb-115040c06ec2",
        "cursor": {
          "ref": "cc597bff-0238-47f8-a2bf-9bce7cb652f8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "45b5cfee-208b-4e77-adb0-e8090f8fc760"
        },
        "item": {
          "id": "0e4555b5-b467-4d8f-b7eb-115040c06ec2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8dcc1bf6-7b5f-428e-bcc9-e57a8b7e6c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fb480536-9c3a-4851-bd95-ca77937e0f10",
        "cursor": {
          "ref": "091bd77e-7229-4838-be9e-68044466cb64",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cf00f60c-7acf-4404-a579-44ce95fbd68a"
        },
        "item": {
          "id": "fb480536-9c3a-4851-bd95-ca77937e0f10",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0b74b8d0-4d88-422d-869a-c289088ecba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "312d2072-932e-4f3d-a334-aa9b3d5dd0ce",
        "cursor": {
          "ref": "eff5b7d2-4739-498a-8456-45068d257203",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0469dff1-bd1e-4bf3-980f-74d6df9572d5"
        },
        "item": {
          "id": "312d2072-932e-4f3d-a334-aa9b3d5dd0ce",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9ae98e21-14e7-4d91-a768-1534d57d6849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7f8669f1-6adf-4430-99d6-894ab800bfe2",
        "cursor": {
          "ref": "238a8ef6-295e-4bb5-98ae-51ef39b4ffbb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f9b67665-47a0-46b4-bb68-4ced5f76c245"
        },
        "item": {
          "id": "7f8669f1-6adf-4430-99d6-894ab800bfe2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a4098dc2-adcb-4d6b-ab1a-630df077910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d4de4b5d-9bac-47d0-b551-22c75203e652",
        "cursor": {
          "ref": "cc4b5df8-e6e6-4ae7-8641-ae4f0732ba55",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "79f95ffc-a129-4a20-a099-c5c77118348e"
        },
        "item": {
          "id": "d4de4b5d-9bac-47d0-b551-22c75203e652",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f7f200bb-823c-41bd-a837-cf178a4d15fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eba830b-bb14-4260-add3-05154081b856",
        "cursor": {
          "ref": "98b38381-f674-4177-9062-5560ccdb4d83",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "46647b93-14e9-48d7-8e91-bf1133de3665"
        },
        "item": {
          "id": "4eba830b-bb14-4260-add3-05154081b856",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1e8f4726-ddb7-44ae-afbe-f9597cf126eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb27dc9e-3bb2-4171-92d1-83bd4e3555b4",
        "cursor": {
          "ref": "7d6bfcb4-8ae8-4114-bbe4-0d7a78fdbded",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f0490dc1-0284-4f12-a5bd-45dcc5934f69"
        },
        "item": {
          "id": "cb27dc9e-3bb2-4171-92d1-83bd4e3555b4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "62d3f376-ceb6-4c53-9ae1-1025604ebc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2e1eb7-95e5-46ee-8efb-f8fdcaf87635",
        "cursor": {
          "ref": "cc5b487d-f4cc-473c-a8a0-e237ec511dc6",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "02500db9-0e62-4cd2-a616-7270b4e04a65"
        },
        "item": {
          "id": "2e2e1eb7-95e5-46ee-8efb-f8fdcaf87635",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a2fa2b21-c6b5-4073-95f8-18aa4139fd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf48e198-9de2-48ba-bdac-e5be1216e3ed",
        "cursor": {
          "ref": "2364bfe9-c5fa-4489-bd05-20afaa07c884",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "23368a72-250f-4588-b205-f007608860a4"
        },
        "item": {
          "id": "bf48e198-9de2-48ba-bdac-e5be1216e3ed",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56deb732-bc84-4be8-b08d-fd99cb1bed92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83c91c5-4623-48f7-bf7b-693c12609556",
        "cursor": {
          "ref": "d6074535-6e62-4fed-9a33-7bc6ac2151d8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6f5404db-ef97-4166-9180-3c7a5e8bf268"
        },
        "item": {
          "id": "f83c91c5-4623-48f7-bf7b-693c12609556",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4d37c2d5-1272-46e0-aed0-cf16b8639701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f56780-c13a-481e-a66c-bf40a6f5634f",
        "cursor": {
          "ref": "26222fd6-0861-427d-982a-1b861dc71c62",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "35bb9aaa-2873-41e4-ae0a-daf1101c064f"
        },
        "item": {
          "id": "c9f56780-c13a-481e-a66c-bf40a6f5634f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d9f5747d-12a3-420e-9318-82efaf4bcd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f856194-b4a1-466e-96be-8f128d3a8058",
        "cursor": {
          "ref": "4ad0b736-62ba-4bf3-becd-9bcc286eb3e9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "73fc2efd-56ec-4f7f-b0e4-a55979e060a3"
        },
        "item": {
          "id": "7f856194-b4a1-466e-96be-8f128d3a8058",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "35d1846e-8201-4254-b215-7d6a39bd6fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3fa6d03-9b7b-4d07-9bca-cd3908f95ece",
        "cursor": {
          "ref": "f13dbb9b-35b0-4d8e-b60d-aad953b30ca0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1eaedc39-2df3-4c55-9933-2fe64927a6ab"
        },
        "item": {
          "id": "b3fa6d03-9b7b-4d07-9bca-cd3908f95ece",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a2e9ef7c-1ad2-4c35-8985-3be01db8575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9f76dd-934f-4678-82c2-6ba209b8d3c7",
        "cursor": {
          "ref": "8c357226-d31a-42bf-ad59-0003ab7ca377",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fd66c14e-900a-4b95-a99f-f4913221b633"
        },
        "item": {
          "id": "ea9f76dd-934f-4678-82c2-6ba209b8d3c7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "707a172a-4f48-4622-a0c0-b6ee707251f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643b9c83-f985-489c-bfc5-a0e1e5d18a1f",
        "cursor": {
          "ref": "7e7c04f8-a645-429c-bd58-978f5c1a73dc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1accca16-de56-4184-880b-e20ea3bfa9e8"
        },
        "item": {
          "id": "643b9c83-f985-489c-bfc5-a0e1e5d18a1f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ff928af4-a109-4c72-be3e-459ca1aa2975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a222c8a2-a397-4074-9ea7-0837a4fbcba0",
        "cursor": {
          "ref": "be7d5c37-2edc-4f5e-8d88-f84cefb2be9e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c1f0d29a-e932-4e2c-a4ea-c3b69feda136"
        },
        "item": {
          "id": "a222c8a2-a397-4074-9ea7-0837a4fbcba0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1ccf4c92-47fe-4b54-975f-7196558cc20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7323052b-73e8-4339-a294-456b82a98f10",
        "cursor": {
          "ref": "36edc755-7061-4fbd-b79a-6d11a93b4953",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1e24734b-35d1-4fd8-9402-3deae044a4a1"
        },
        "item": {
          "id": "7323052b-73e8-4339-a294-456b82a98f10",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b4b11866-1de0-488f-bee5-afbe67cdbe96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b82afa-7eab-4330-ad4f-4377c51bc9d7",
        "cursor": {
          "ref": "853160df-512a-4a54-9678-96d16af3f4dc",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "99d49dfa-5cf0-4f9e-a416-7300eb99a9e4"
        },
        "item": {
          "id": "13b82afa-7eab-4330-ad4f-4377c51bc9d7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ae7a6930-f130-4deb-b90c-17c238e2e8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c531d7-7550-4982-b45a-c48542fc0603",
        "cursor": {
          "ref": "24a9886c-b740-446a-8a72-4eaf7bccc898",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ed732ad0-a204-4a5c-8887-b61e6152f8bb"
        },
        "item": {
          "id": "73c531d7-7550-4982-b45a-c48542fc0603",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "937c8ec6-7230-40b9-9343-59e3ef58a5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d94be1-5f89-4af6-b306-93eec8bcfd9c",
        "cursor": {
          "ref": "e2eb0a4e-33b8-4680-86a2-45b7edd3aabc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e31e7894-308f-4f50-a9ca-01351a36cc1a"
        },
        "item": {
          "id": "56d94be1-5f89-4af6-b306-93eec8bcfd9c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f3c84e92-9923-474b-a1c6-a73caaa2ed08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d1eba0-6387-44b1-b19a-a8cf25fd6c54",
        "cursor": {
          "ref": "1074c76b-4303-4762-907d-99dc8202109d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "66e35f90-9eae-4e7b-b660-2d3a56da4788"
        },
        "item": {
          "id": "a0d1eba0-6387-44b1-b19a-a8cf25fd6c54",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "09758877-5b04-4a7a-b230-e8f9a76ac6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15067910-22b0-4e5e-8868-28fd4e55cbd4",
        "cursor": {
          "ref": "7a4f0b9c-f9d3-46b6-ba70-8a39e1a535f9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "10d753bd-b177-400b-aa19-25c30bbce5ab"
        },
        "item": {
          "id": "15067910-22b0-4e5e-8868-28fd4e55cbd4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "53e375e5-6493-4ae3-9e51-72266d38e701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34a90a3-ae59-48be-badc-6355cf70d79c",
        "cursor": {
          "ref": "ea238d21-bd5e-4e5d-86bf-d63dcf51955f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "876aa85a-c3ed-4c02-a7b4-d4c301b11980"
        },
        "item": {
          "id": "f34a90a3-ae59-48be-badc-6355cf70d79c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "53702b60-6486-4851-9b04-6f9c3cbeab3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3772821-8cdd-4769-a092-acd9ceac30d0",
        "cursor": {
          "ref": "58a94e46-e957-4fd0-ab4d-334b32b9b888",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "75735f35-2a29-4a4a-b802-51b4d63915ee"
        },
        "item": {
          "id": "f3772821-8cdd-4769-a092-acd9ceac30d0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7bc3b06b-d02a-44c5-9430-4e0f4bd907b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d44a5d-098d-498a-aa84-49fcf55a4b4e",
        "cursor": {
          "ref": "37751d0d-2408-49d2-b736-292d6b8bba2c",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "947ffe56-64b6-4bac-9668-84ec6b7f25c5"
        },
        "item": {
          "id": "33d44a5d-098d-498a-aa84-49fcf55a4b4e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f749e295-1365-43ab-bb02-89ca46a7b728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8171ab69-6a03-4278-b2f9-f07ff51fd966",
        "cursor": {
          "ref": "efb6f783-4851-4149-bfa1-e40db2a5cba5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "da9e32bd-e151-476e-af7e-4123fa1f5868"
        },
        "item": {
          "id": "8171ab69-6a03-4278-b2f9-f07ff51fd966",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0973222d-4668-4e83-a544-674ab4a19ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d732d0-2509-4db1-ac74-7d85af62e443",
        "cursor": {
          "ref": "6c8896f3-99df-4144-a0ff-fc77f4f1880f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5f6690a6-f68b-494f-914b-658caeeac812"
        },
        "item": {
          "id": "55d732d0-2509-4db1-ac74-7d85af62e443",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75dd10e1-f5b1-43a5-a8f4-c229eec01104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7cfe97-05b6-434f-8993-80ad1c6742c8",
        "cursor": {
          "ref": "31c4e109-d563-4762-adc3-3390e26414ce",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c7141347-2fa3-4b8a-a0ab-8f7f4684be3d"
        },
        "item": {
          "id": "2e7cfe97-05b6-434f-8993-80ad1c6742c8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "297e6a41-002d-4fd9-8390-884b9b9cbc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eea5d7-619c-4d1b-a6d3-a09048566aaf",
        "cursor": {
          "ref": "aed38e4f-74ac-4456-b796-f209a0af74e1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ef5c05a6-0cca-4717-8505-8a9334f25acd"
        },
        "item": {
          "id": "28eea5d7-619c-4d1b-a6d3-a09048566aaf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eea1a602-06c5-45c3-b4b3-afe5afa9d961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a8bbaa-1a57-48f0-8f6e-ffc354263278",
        "cursor": {
          "ref": "4f0839a7-317f-435f-9095-8e1310ea8084",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a39289db-55a0-41e5-9802-f68394ac4349"
        },
        "item": {
          "id": "92a8bbaa-1a57-48f0-8f6e-ffc354263278",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1774bdbb-3b0b-48c1-8c02-45d93daadac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0956a1-05bb-4b06-8862-c705fae2031c",
        "cursor": {
          "ref": "265f8711-7856-4aca-a558-2f03faf42131",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "25aa9a32-3fff-42bf-bd8c-87e50e4d56cc"
        },
        "item": {
          "id": "1f0956a1-05bb-4b06-8862-c705fae2031c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba9d88bf-7407-4581-9053-e23f01ec5f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c7b7ba-b0fe-4c3e-bc0c-0b188e042f2f",
        "cursor": {
          "ref": "4feb1522-16be-4419-9fb8-972b6876fbc0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b71917b1-a581-4592-a66e-2ced6ade5dd2"
        },
        "item": {
          "id": "76c7b7ba-b0fe-4c3e-bc0c-0b188e042f2f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "413a166a-271c-4236-81c1-c760da1f010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120acd5f-42c5-40cc-b3ef-b315bb2f9cdc",
        "cursor": {
          "ref": "31313876-9174-4a34-bf99-b602d3aff35a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9fb26116-b245-4773-b717-c697b353905a"
        },
        "item": {
          "id": "120acd5f-42c5-40cc-b3ef-b315bb2f9cdc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a8ccb3b6-d6d5-4f06-8441-361abdfc7f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb984f9-6310-4280-932a-de90e025e46a",
        "cursor": {
          "ref": "18130e0d-65dc-446d-85a7-d8d70eb2362c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "85576e5f-9a73-4725-ab26-dad6289506e2"
        },
        "item": {
          "id": "dcb984f9-6310-4280-932a-de90e025e46a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e5105506-2d80-47e0-9f18-df6385593ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a8bf0-05a4-4664-82f6-ccc962caf6e4",
        "cursor": {
          "ref": "91a2f2ba-9b28-45e7-8d9d-5abb3f71b8cd",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cd247dc3-0e36-4e52-8398-abfe4f1a7328"
        },
        "item": {
          "id": "f98a8bf0-05a4-4664-82f6-ccc962caf6e4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5555fb88-9eac-46d0-ab70-e224684d29bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b82e93-a8eb-42f8-bbba-662b76a6b121",
        "cursor": {
          "ref": "7bb34b1c-9416-4499-b994-f17b29dcea60",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b9543175-5d47-4d3b-8855-465cc7aafa10"
        },
        "item": {
          "id": "73b82e93-a8eb-42f8-bbba-662b76a6b121",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2cf6086b-c3eb-4c8c-bcf5-c029d2ab6854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fbd586-6dc6-4a5d-bd5b-703b2f7433e7",
        "cursor": {
          "ref": "e01d3b86-b6aa-46a2-a342-b9f1bd172766",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5d22e18f-6c45-45ea-80b1-f1feee9a05a0"
        },
        "item": {
          "id": "c4fbd586-6dc6-4a5d-bd5b-703b2f7433e7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa5c37a0-359a-456d-8bd0-8dd8672e59e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad4c3c7-f963-4c7d-8e85-caeba050377e",
        "cursor": {
          "ref": "c9b0f732-8f77-459a-9bba-ea263d4bd54b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cbd3dbaa-c3a2-4707-9088-ff9f388af041"
        },
        "item": {
          "id": "8ad4c3c7-f963-4c7d-8e85-caeba050377e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5d2f4259-7977-4dbc-8fd1-c21cab4f80fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db71fab-1f89-443f-903a-dd69d7d5610e",
        "cursor": {
          "ref": "01a67f63-7953-44ae-aaf1-b74ca7d2330b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ab255f59-a1a5-415a-a0a5-877118896cf1"
        },
        "item": {
          "id": "5db71fab-1f89-443f-903a-dd69d7d5610e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "055e4ce8-cbb1-4915-83b1-99f82378ad0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26453453-47c3-403a-9b3d-4768cb948e52",
        "cursor": {
          "ref": "19cf8aa8-a6db-47b8-852d-496a6fc3db54",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c274deb9-18fc-4bbb-8153-00f6fb4a7f41"
        },
        "item": {
          "id": "26453453-47c3-403a-9b3d-4768cb948e52",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5f492566-2f1e-44cd-a7a9-abb778d231f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d77c49c-79e1-4182-afbf-c2dadecd26a8",
        "cursor": {
          "ref": "1599e437-5ec7-417c-87ba-cdfabccbd667",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a13b748c-65ba-4df6-acaa-d7078ee6de6a"
        },
        "item": {
          "id": "7d77c49c-79e1-4182-afbf-c2dadecd26a8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "be197880-6124-42ec-886e-8c6b16f3f565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869b020-10b1-43a5-871a-1d3503fe8474",
        "cursor": {
          "ref": "68e94185-ed40-46c8-8778-390f83dfa54b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "27479297-0d29-4147-a1b4-57bc1c162d2d"
        },
        "item": {
          "id": "c869b020-10b1-43a5-871a-1d3503fe8474",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8f7019da-7f89-4c33-8e80-8739bcd656e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8022dd2f-7649-438d-a433-76a8b0848530",
        "cursor": {
          "ref": "ea71771c-7dfe-4c9f-9b29-49b260d67e96",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fb64f9d8-d348-4d95-9d25-7d7b2f4cf54c"
        },
        "item": {
          "id": "8022dd2f-7649-438d-a433-76a8b0848530",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ac48527f-7d7f-4783-94f7-bfbc43f394e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cbabca-8f28-4682-a558-e58844880c02",
        "cursor": {
          "ref": "8b33b28c-c078-4c23-ba23-1ce7264ac979",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "85e6a249-58fd-4afc-bdc3-074096e83114"
        },
        "item": {
          "id": "74cbabca-8f28-4682-a558-e58844880c02",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f8df104d-a547-46b0-a547-90c542ebf4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1082bf1-9f27-43f0-bed2-a7bf09e0c1d8",
        "cursor": {
          "ref": "1b62add9-392c-49a1-a6b2-61b64c83b2c7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "58628b61-6cc5-4f92-aa82-f1603cae39ce"
        },
        "item": {
          "id": "c1082bf1-9f27-43f0-bed2-a7bf09e0c1d8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d51baa77-cce9-4365-b5c9-29c174da985f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e88231-a195-409d-954d-e7b3a9ea462c",
        "cursor": {
          "ref": "f079f685-9461-4e98-af7f-e31f1ec69f21",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f37eadb6-18ac-468a-b7a0-b4566af4ec6c"
        },
        "item": {
          "id": "e1e88231-a195-409d-954d-e7b3a9ea462c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "72f93f80-5231-4efa-b32f-58c0bb9d816e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64f039c-8875-4de9-91d3-403846ba49bf",
        "cursor": {
          "ref": "cd0f7ead-503c-4b5c-ad0e-32b3c2c8484a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "638e7a99-00af-4dca-b622-d9193fec469c"
        },
        "item": {
          "id": "e64f039c-8875-4de9-91d3-403846ba49bf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cd4b42ac-7a97-45c0-84a9-805b87274e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e161bd64-af6f-48e1-ace9-065b8e331480",
        "cursor": {
          "ref": "3f56cac5-8834-42b4-a64e-53183fef7e51",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d9ee6da9-c1b8-4128-936b-ba0cad00ea62"
        },
        "item": {
          "id": "e161bd64-af6f-48e1-ace9-065b8e331480",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cc65a697-db9c-434e-a41a-60f939341971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38d5083-8174-41e8-a53c-ec07461b42a1",
        "cursor": {
          "ref": "bbeb351d-6fdf-43ee-a059-cf54e1f54fe3",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bc7742f3-088e-4060-bdcc-019760ef4288"
        },
        "item": {
          "id": "e38d5083-8174-41e8-a53c-ec07461b42a1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "81c766cb-bef9-486a-a72f-c6b0dfed161f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8255d50-55fe-4ccf-b2f2-ffdfb49cd292",
        "cursor": {
          "ref": "4483cf88-fd52-429a-b24c-c6d820c4c604",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a09f861c-1a4e-4709-aa83-3a16ee0e6720"
        },
        "item": {
          "id": "d8255d50-55fe-4ccf-b2f2-ffdfb49cd292",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4d557dd9-3248-46d1-b917-7bce3506d216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f186e0f-aa90-48fa-8df1-4a7929ca6696",
        "cursor": {
          "ref": "3a2bf5b5-6961-42c0-8027-bf7f45cc2c67",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "69d6c2bc-3f4e-4ba0-97c9-455aba2df401"
        },
        "item": {
          "id": "8f186e0f-aa90-48fa-8df1-4a7929ca6696",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "557ba9c1-4683-4a77-9821-255c7b9cc4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90638eec-1bbe-4764-9cf6-3f64ee3f02dd",
        "cursor": {
          "ref": "bb4568a7-10b3-4fd6-96f0-f61b7a649340",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e52cc90e-65db-4ea8-9708-987753da967e"
        },
        "item": {
          "id": "90638eec-1bbe-4764-9cf6-3f64ee3f02dd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "172be135-1a17-41a1-8838-be0e5f25c6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b590297-db3f-41c4-bd47-6456dbf929af",
        "cursor": {
          "ref": "3d770548-0be7-4b9a-a685-278d8763f031",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "06035d2a-e71b-4b06-b779-9c6454c0f4c7"
        },
        "item": {
          "id": "5b590297-db3f-41c4-bd47-6456dbf929af",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fef04117-4308-4130-9e80-aca3ef5a10d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a9b86b-c4b0-4da1-ad37-170fe42554a9",
        "cursor": {
          "ref": "3a6122ef-469c-4018-8c00-1f046a3c5429",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f2af4b0d-7f55-482a-84fb-8b0ec07c7f66"
        },
        "item": {
          "id": "11a9b86b-c4b0-4da1-ad37-170fe42554a9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bff2cca1-1eac-479f-8100-80ef4542a153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b00738-8657-4720-829d-a9be88d5cf46",
        "cursor": {
          "ref": "e3c47947-0243-4c1c-b0ab-f9a97ac07b14",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ea80caef-d7e6-4727-88a8-b345a54b677e"
        },
        "item": {
          "id": "b6b00738-8657-4720-829d-a9be88d5cf46",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cf396ccf-6f4b-404a-b98c-08541343876b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b516806e-782f-4e30-a511-f0a110c233fb",
        "cursor": {
          "ref": "de77afa2-1524-45fa-a6a4-cd16711d89af",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "239bd5fc-58b5-4ce5-a189-541fdcec8c7f"
        },
        "item": {
          "id": "b516806e-782f-4e30-a511-f0a110c233fb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fd8674da-25c0-41ad-86d0-b2c487d3dfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e65ff61-edcf-411d-b4dc-3a3978a6f0bb",
        "cursor": {
          "ref": "477d600e-8380-474b-b382-3f1374716c1a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a60e08bc-3acb-435e-9faf-feb7f6d5fd6e"
        },
        "item": {
          "id": "6e65ff61-edcf-411d-b4dc-3a3978a6f0bb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a640d96-662f-49f3-a6cb-114735ae56c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8622aa76-0507-4a8c-b442-98cc6417b1af",
        "cursor": {
          "ref": "7b177894-c65e-4b6f-97e5-3bc2df7c5e9b",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "84e72537-674f-4a5f-83a3-2a956ff28b6b"
        },
        "item": {
          "id": "8622aa76-0507-4a8c-b442-98cc6417b1af",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "49b8eedd-cd53-4666-8cc8-2fb86b24b358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25047c57-8f42-4ae0-b125-6f8f55e0cdaa",
        "cursor": {
          "ref": "e981b1ee-9d89-4c50-9772-9e7f39554669",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c27eefd7-e576-4a67-a374-be705f7e72bb"
        },
        "item": {
          "id": "25047c57-8f42-4ae0-b125-6f8f55e0cdaa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a9647ab7-5ff7-45cb-983d-d263bf7464f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6eaac06-4a5f-4b69-9b42-fa47ca575373",
        "cursor": {
          "ref": "68505a17-ec33-4e7a-993a-a61d9fed16a6",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fd2eb28b-5b38-42fd-8245-9357b6500c74"
        },
        "item": {
          "id": "f6eaac06-4a5f-4b69-9b42-fa47ca575373",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d2ed995e-25a1-4ffd-bdf4-1d3e16076f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a85383-62c3-47ce-b34f-d9689eda5efd",
        "cursor": {
          "ref": "ef5c8568-07cc-4588-bf98-0103945d7b0e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7106d011-2f9c-4dde-a9a7-02a20cacc00a"
        },
        "item": {
          "id": "24a85383-62c3-47ce-b34f-d9689eda5efd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "49a7df60-4b12-4a20-af33-9fd948c2b292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfa20c8-6510-47a9-bc96-b2070df4985c",
        "cursor": {
          "ref": "b29cd5b1-e873-46d1-9eb4-eb9934461237",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6c546f85-278e-4856-9f6d-e008794c5173"
        },
        "item": {
          "id": "ebfa20c8-6510-47a9-bc96-b2070df4985c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a44a52bf-ae1e-4e7d-80ce-213776c6d8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56059915-08bb-4f47-ad45-99b1fed78947",
        "cursor": {
          "ref": "601b6f72-8966-4b12-8d65-d88e3d89ffdd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8fc83cef-083c-4683-b674-489d8d13d02d"
        },
        "item": {
          "id": "56059915-08bb-4f47-ad45-99b1fed78947",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fd7da3aa-f711-4efa-be12-1b0a115ada71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5f15a4-2b89-4fb0-b49d-30d47a3d0863",
        "cursor": {
          "ref": "7f588d7c-b61d-410f-8460-3da655688238",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "581299d3-3192-4c09-885c-062bd9d50cf0"
        },
        "item": {
          "id": "9b5f15a4-2b89-4fb0-b49d-30d47a3d0863",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ca676005-0737-4bac-89ba-ce1dc6add912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdfd8b2-5b75-4efe-a560-3db3c77fdd31",
        "cursor": {
          "ref": "609b53ed-8a6f-46a3-9e39-b309be86c538",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "20b215ae-fcdb-4cc3-bf77-1dc30060a729"
        },
        "item": {
          "id": "0fdfd8b2-5b75-4efe-a560-3db3c77fdd31",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eadf48eb-e6cf-400a-a52d-028ededbc319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52f5095-8983-4083-b1d0-92dd9716c094",
        "cursor": {
          "ref": "8adc85f8-17a5-450e-86b1-19143149bbd0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4ff04930-bb97-4e05-85d3-f7eebd56639c"
        },
        "item": {
          "id": "b52f5095-8983-4083-b1d0-92dd9716c094",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3c4785de-7a09-421b-a99c-b238b9f61815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00964144-450b-4173-8de8-5674bf9db13a",
        "cursor": {
          "ref": "c4126c3f-0de5-4ed6-aabf-4203a6cdf842",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "142c1832-10f3-4249-b6d5-1596de57c53f"
        },
        "item": {
          "id": "00964144-450b-4173-8de8-5674bf9db13a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2d85e5c5-5b3d-441a-9502-e69b784d25a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3be1966-9edb-4f3d-b501-43990d239232",
        "cursor": {
          "ref": "903e534b-fc4d-4602-aedf-ca543f989b75",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d6c5d02e-d358-4b12-af80-dc0860408855"
        },
        "item": {
          "id": "e3be1966-9edb-4f3d-b501-43990d239232",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "337f9991-0acb-48f4-bf19-235d73027434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2a602d-563b-4069-9237-93b14465f4ca",
        "cursor": {
          "ref": "62194830-48f4-4cb5-b6a6-f2caddde9ad4",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fb25a7fd-8f58-44bd-b250-da1e53ca8eb8"
        },
        "item": {
          "id": "1a2a602d-563b-4069-9237-93b14465f4ca",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0b09c119-f49e-4362-9f10-9d8280e43d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf770993-6eec-4b02-94d1-a0c56dc671c9",
        "cursor": {
          "ref": "0dde84a0-a05b-466e-b335-52a95ad9356b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "70f9bf50-7212-4be2-a0b3-51e9a65d9455"
        },
        "item": {
          "id": "cf770993-6eec-4b02-94d1-a0c56dc671c9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b7942c0c-1612-476d-ab7b-c870586fc20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ada7ab5-d625-4024-98b4-260544944a7d",
        "cursor": {
          "ref": "07f66b75-c4b1-4102-98ce-c3b32d9327b3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0f00fb82-3d2f-40da-b357-4168293118aa"
        },
        "item": {
          "id": "4ada7ab5-d625-4024-98b4-260544944a7d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8c8a9b76-20a6-4b41-adab-e7e64b42573a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c0ba0c-b8cc-4d5c-a30f-395800517d5d",
        "cursor": {
          "ref": "1931b5bd-7d0d-4eb2-a81c-01dcfc19e779",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8291dcdb-76a4-4eff-a9dd-892892d12c8f"
        },
        "item": {
          "id": "52c0ba0c-b8cc-4d5c-a30f-395800517d5d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9f8bfe4e-edfc-4fcc-8948-1aef7f9223db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec5e56f-1e82-4bed-9a4f-e96920191911",
        "cursor": {
          "ref": "51e60c97-04e6-48a7-b63b-756e5cea80e9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cbba449a-5d6d-4088-8f93-505fd88622f6"
        },
        "item": {
          "id": "cec5e56f-1e82-4bed-9a4f-e96920191911",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f63a16f2-5a38-44b7-a6df-3b0b7e0e11ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b4dfe3-5692-4316-876c-9342bbb49b82",
        "cursor": {
          "ref": "ccba5f7e-0c53-4a64-9665-cb0bcfedb370",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "45237fdd-02b6-4470-8827-252fc1a11a46"
        },
        "item": {
          "id": "d9b4dfe3-5692-4316-876c-9342bbb49b82",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "72b1d3bc-7b64-49df-993b-8914925d8ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f2a562-0faf-4431-8501-83e6fd377925",
        "cursor": {
          "ref": "6bc5731c-1f35-43d2-a9bd-9ce054f635c5",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c518798f-835a-47d5-b294-f99e409cca8b"
        },
        "item": {
          "id": "09f2a562-0faf-4431-8501-83e6fd377925",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b80da3b-6a52-4d6e-a9be-72ba1fa35732",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bf469f-756c-4415-9b92-4a18c4d61127",
        "cursor": {
          "ref": "fb7c7c0c-436e-45bd-a1d6-593f332f3d32",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6663e434-a305-4be6-a1f8-b24ea51e58a4"
        },
        "item": {
          "id": "a5bf469f-756c-4415-9b92-4a18c4d61127",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cfb2ad77-a6a4-4899-80d8-5d487503919a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cfd4f9-2bc4-4d47-9e83-419f99ff5585",
        "cursor": {
          "ref": "3abb2eda-ad09-4479-b3d6-21e3692e09d9",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "42eb89fa-3ee7-4e3a-aafa-664b088b376b"
        },
        "item": {
          "id": "64cfd4f9-2bc4-4d47-9e83-419f99ff5585",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "48944932-94f6-48f4-8c8e-7127da6b76b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239eac41-1ca9-4e16-afe1-3f2489042e59",
        "cursor": {
          "ref": "d37d1c8d-9d3c-448d-b950-eb56ee63ff22",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "64dfc319-663c-497a-9f78-69a77b1adb16"
        },
        "item": {
          "id": "239eac41-1ca9-4e16-afe1-3f2489042e59",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d54e8019-1b50-46cc-a071-17018459221d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f314d2-9518-483b-9d2f-d25da653bdbb",
        "cursor": {
          "ref": "35be6c85-93f8-45b9-b73f-e00edc5d343b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8219ff30-1a68-4d2a-b87e-16a41ba1cd22"
        },
        "item": {
          "id": "d1f314d2-9518-483b-9d2f-d25da653bdbb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b9ffe5cb-cca4-4491-860f-a6a329bbd5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74f2be0-7f58-43b3-b14a-643445bb500a",
        "cursor": {
          "ref": "95f2bba1-29fa-44c8-b4bf-cab2f62312fc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "75da23d6-ee24-41e5-bef4-8e0b9f043341"
        },
        "item": {
          "id": "b74f2be0-7f58-43b3-b14a-643445bb500a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "112b660b-790c-4782-9a1a-eb0bc6c629d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215603fd-7ba5-46f9-9199-d44c1befa615",
        "cursor": {
          "ref": "3b54abf6-7474-4c69-a289-0d5d26d7de23",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a9dd9e6-3c92-4433-ad48-89a225a14e94"
        },
        "item": {
          "id": "215603fd-7ba5-46f9-9199-d44c1befa615",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "04d0b593-825e-4d5d-86ae-d562e0adb5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95415fa-e6ed-4345-afc1-422967771a46",
        "cursor": {
          "ref": "47f38116-7e9f-4eec-b7fc-79904d50222a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4e320979-64a3-416f-9dbf-d8292637ea85"
        },
        "item": {
          "id": "e95415fa-e6ed-4345-afc1-422967771a46",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "46fd09f8-b028-4b5c-9b8b-d98d7d81d1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a73ee58-9655-424e-82b2-45666575df9b",
        "cursor": {
          "ref": "f7827b50-55fa-4547-9653-8471dcaa56e8",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8d05c057-6191-467c-8805-cc68b6e6222d"
        },
        "item": {
          "id": "3a73ee58-9655-424e-82b2-45666575df9b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2439cd9c-2e50-4e92-9f37-0c3564c68f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe4cb27-7299-42f8-8e09-bb3acfb237ee",
        "cursor": {
          "ref": "ac2cd859-997e-4f2d-8b31-493d22f3e330",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e91003e4-c2c5-4f1b-9ccb-37a08b3f849e"
        },
        "item": {
          "id": "efe4cb27-7299-42f8-8e09-bb3acfb237ee",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b87808b8-d1b3-4b2c-8157-9b9db6ec60b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df08ef6a-59d8-49ad-8a4c-a59772e39bf9",
        "cursor": {
          "ref": "bfe93b9b-620f-4d03-a209-66b35e6819a8",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6ebf1c7e-f792-4081-8ba1-ddfc774d6256"
        },
        "item": {
          "id": "df08ef6a-59d8-49ad-8a4c-a59772e39bf9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f2d18df4-4d04-4756-89aa-3c704fdf3c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f65131-f5a8-46a6-b0e3-01b3857de634",
        "cursor": {
          "ref": "4cd6ae62-6af3-45ef-97ec-fa117780e7de",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "504e2d49-5a80-4ccc-932a-f79f44013292"
        },
        "item": {
          "id": "45f65131-f5a8-46a6-b0e3-01b3857de634",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9c537d47-f7ad-4dd3-8f77-cf9f5f5e0cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4870b9e9-21de-4853-8d20-e7882c735e72",
        "cursor": {
          "ref": "19416f40-abf6-499c-b658-b98b00e3b15f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3d3dcd75-80c7-4279-bf9c-360c7b8f4424"
        },
        "item": {
          "id": "4870b9e9-21de-4853-8d20-e7882c735e72",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a10b0f7b-2b31-48ab-98f0-d0608b03fe47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728d10bf-1ce6-43c3-a84e-a4fc155a1852",
        "cursor": {
          "ref": "4dc5b9fe-265e-48b4-aca2-b831a2a18c62",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a8092c2b-86bf-49ee-89fa-45adad86f3e2"
        },
        "item": {
          "id": "728d10bf-1ce6-43c3-a84e-a4fc155a1852",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5166a2e1-db22-4c2b-8fbd-49938c3cee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d463ac19-d920-4f9d-8fa7-f06a282447f6",
        "cursor": {
          "ref": "f2f97338-76d8-439d-b649-a0d3a7a7f804",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8544f276-f1ac-4043-9322-cf2d94478101"
        },
        "item": {
          "id": "d463ac19-d920-4f9d-8fa7-f06a282447f6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9791c210-4659-4c59-a922-fcfa86092ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7293847c-39a9-423b-aa78-2c3c7266b2df",
        "cursor": {
          "ref": "be4f4df5-4b58-4795-a2c2-cb2723785753",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "93f51781-e6c1-41c5-87b1-2433fcfaf987"
        },
        "item": {
          "id": "7293847c-39a9-423b-aa78-2c3c7266b2df",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3c176485-de53-4aa8-9d13-0f0f43655327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3ba7b2-126d-47de-b835-daba1043983b",
        "cursor": {
          "ref": "3723cdec-a504-4ac9-a1ff-4a25181c65e0",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c08f4c47-2ae9-4d24-90ba-002f2cfaa87a"
        },
        "item": {
          "id": "ef3ba7b2-126d-47de-b835-daba1043983b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "aeb8bd7a-ee17-4752-b551-db6588ab2744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0cdbc2-556b-47b0-ade5-9017123a696b",
        "cursor": {
          "ref": "7b425341-ebcd-40ae-95b1-20bdb0ca7c9f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5f8789d2-7eb2-4af2-be23-252d82063914"
        },
        "item": {
          "id": "6e0cdbc2-556b-47b0-ade5-9017123a696b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7c970d85-dbbf-49b8-9cde-68f633f585af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c8fbfc-0e0a-4712-a0e5-6118d3f16dda",
        "cursor": {
          "ref": "50af4eeb-a4c7-4096-9705-53fae1469027",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "70804f6c-bf9b-40ec-b3be-ebb27cfdd6a8"
        },
        "item": {
          "id": "e9c8fbfc-0e0a-4712-a0e5-6118d3f16dda",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fa3d5024-97ba-4ff1-a2b4-760bc89ac01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d1b6b0-c2d4-408e-9f4e-2c5d08ce73f9",
        "cursor": {
          "ref": "d22a27f3-c37b-4d10-9d60-345b7b5666fa",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "798a3ac9-b35b-437f-a49c-950b37738b03"
        },
        "item": {
          "id": "e2d1b6b0-c2d4-408e-9f4e-2c5d08ce73f9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c010d2b5-aa2d-4f0e-9109-aab2671851c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bb4950-79ec-43a6-b664-e122724ec3c2",
        "cursor": {
          "ref": "c3af8646-17b3-4bae-b21e-d58fb415f765",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9c05deb6-51d9-43cc-9675-a79be3cc05f9"
        },
        "item": {
          "id": "33bb4950-79ec-43a6-b664-e122724ec3c2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b9afcdea-de59-4e3a-8ca9-3c03c3276254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfabefc-ed40-4c3b-a4d8-3b6e3bef348b",
        "cursor": {
          "ref": "7fd8c86e-2829-4024-9351-e464324d0832",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c3c81f2a-c9fc-4cf8-b639-0a33f845894b"
        },
        "item": {
          "id": "dcfabefc-ed40-4c3b-a4d8-3b6e3bef348b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c43441b8-21ac-4488-847d-4c21eb9fab4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a57a72-566c-4bb2-b3b2-28c9ddd0c4b9",
        "cursor": {
          "ref": "8829c27d-8072-4b95-bda8-fe86af4094e3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c664bfef-144b-4b60-beb5-01066aa40453"
        },
        "item": {
          "id": "15a57a72-566c-4bb2-b3b2-28c9ddd0c4b9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "561bf7c4-0451-403b-9afe-ea53d293ceb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b5bc98-2b28-4fb3-8c40-efa8417e22e5",
        "cursor": {
          "ref": "15add720-616d-4a0a-abb8-80bda46551be",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5bf57e92-db57-480f-a858-4ecc9d578cb3"
        },
        "item": {
          "id": "d8b5bc98-2b28-4fb3-8c40-efa8417e22e5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "09fa5f40-0de1-4082-ac3c-dbf575864caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8b19bb-22a4-4874-876d-2b31c75be26a",
        "cursor": {
          "ref": "5ccc1e7c-d58f-4807-9edb-d1e1ab919a2d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a92b96f4-ebf7-4ecf-a9b7-4e45f93a76a6"
        },
        "item": {
          "id": "2a8b19bb-22a4-4874-876d-2b31c75be26a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0af6abc3-1cae-4498-b6db-dd35bb029bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3d5a8a-a83d-4df8-8a84-68f471eb2184",
        "cursor": {
          "ref": "dcf3f05a-9b29-4139-906f-7ab2e8d84507",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "30b4749e-2180-4850-b1ab-23ce536e0e86"
        },
        "item": {
          "id": "1a3d5a8a-a83d-4df8-8a84-68f471eb2184",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f224595d-9095-46bb-958c-4db053af4da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9320317c-69b0-4b35-9d0e-5e96d5cbb5ec",
        "cursor": {
          "ref": "e9085f86-2cc9-4fb7-8d4c-87839f82baf7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "61ddf40e-b065-49fd-9a98-f9b32a52dd4a"
        },
        "item": {
          "id": "9320317c-69b0-4b35-9d0e-5e96d5cbb5ec",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1b6b857b-3b2f-48b8-b313-edfc88f3822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5519b7cb-14c8-4913-9054-82e8737082e3",
        "cursor": {
          "ref": "a216fcca-ab8d-4940-a865-93b795aa2c59",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "700bd5c3-e7f1-4103-ab8f-d8ca5020c879"
        },
        "item": {
          "id": "5519b7cb-14c8-4913-9054-82e8737082e3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6f9c1609-8959-4989-8a4b-137e0dfc354d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c6440c-b80f-4ce1-91ea-a96d8542b07b",
        "cursor": {
          "ref": "2d96fd32-f60e-48d1-8c71-add22955cc3e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d1db4217-4b1c-4445-8aa0-74c955d049d2"
        },
        "item": {
          "id": "46c6440c-b80f-4ce1-91ea-a96d8542b07b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "557e3cf7-8186-4cf1-b10a-0202be85a27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc2463b-7f27-460c-9953-66754ddf614e",
        "cursor": {
          "ref": "c1c00373-c899-4627-af07-4726798f0fd3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ae640025-b7cb-4a8e-bc69-c105b7d1c9e6"
        },
        "item": {
          "id": "6fc2463b-7f27-460c-9953-66754ddf614e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bf825484-47de-473a-9507-fd48670c9fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179fa555-70e2-4b02-8c28-8d6dd3e35035",
        "cursor": {
          "ref": "bc054b5b-174f-44b4-a16f-a3f238d057dc",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8b26ab9d-dfaf-4efe-a5e8-ba5d48687e97"
        },
        "item": {
          "id": "179fa555-70e2-4b02-8c28-8d6dd3e35035",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cfe737f1-0ea6-4c79-a87b-cef40936fab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2990e3-b5ec-488d-9f47-afce26e7ff37",
        "cursor": {
          "ref": "fd474dc7-94ef-4d90-aa51-225bc7e038b6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6c173cb9-334d-4cb7-8f11-d7b4555329ae"
        },
        "item": {
          "id": "ba2990e3-b5ec-488d-9f47-afce26e7ff37",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c2cec589-ecf5-4899-8e60-6cbdfdcd8e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbf04df-a1ef-4a96-bcfc-fc13ed84c9c0",
        "cursor": {
          "ref": "b98ac40c-39ba-4a3c-a6da-28c6771f87e9",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0337df76-a944-43eb-9332-84992406a2c0"
        },
        "item": {
          "id": "ffbf04df-a1ef-4a96-bcfc-fc13ed84c9c0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d1960aed-b26c-43d5-a78f-9b6414fb8d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7d5a1e-d323-41d7-8484-017b1854588b",
        "cursor": {
          "ref": "123efd1b-40a5-456e-b316-ac30cd7baad6",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c78fd3be-6fa4-4c75-84b3-c75ddb4b921b"
        },
        "item": {
          "id": "4a7d5a1e-d323-41d7-8484-017b1854588b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40c871ed-cef5-4312-b95a-a248e8974200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4822f879-874a-4856-8d95-d107cfabb88f",
        "cursor": {
          "ref": "2a407fb7-2714-42ee-b30f-837cb5297f95",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "258e4033-dc0c-4bd7-9489-a8865eeefb1e"
        },
        "item": {
          "id": "4822f879-874a-4856-8d95-d107cfabb88f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2c9e5270-4f16-408c-86bc-b735bcfdaf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35bc07d-2144-4e85-a0b9-de520e8afcc6",
        "cursor": {
          "ref": "9ba895b2-d32c-4b95-bf2b-d282d1840be7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4a3b1d71-fbcb-4099-8520-1824263b417c"
        },
        "item": {
          "id": "f35bc07d-2144-4e85-a0b9-de520e8afcc6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f6dd1cae-f8e1-400e-91d9-b1a7797ae27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c54019-39b2-43c7-aa0a-050bb7768089",
        "cursor": {
          "ref": "6d935b65-41c9-4238-b864-a72ad5c71edc",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "69bf8400-068a-46f8-aeb2-4e5a36304d5f"
        },
        "item": {
          "id": "a7c54019-39b2-43c7-aa0a-050bb7768089",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eab0bae4-e10c-4c80-8abd-72d73ce7d88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a659083-0b7e-403c-b715-79c95dfe93fb",
        "cursor": {
          "ref": "2fb58fd2-5b75-42a8-bb30-c60260dedcfc",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e5b4c4f9-1832-4d8a-9179-0f6f63e38494"
        },
        "item": {
          "id": "0a659083-0b7e-403c-b715-79c95dfe93fb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0adbf7d8-c44e-422b-b17a-66c2dd8f71a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff802f7-ca69-4b89-bd17-db4f154b1a54",
        "cursor": {
          "ref": "dc905633-10ed-479c-86ea-8218825af382",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "85f05678-2bc6-47a3-b49a-b97f9b70597b"
        },
        "item": {
          "id": "cff802f7-ca69-4b89-bd17-db4f154b1a54",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c182f3ad-84ca-4376-af3e-2f3f55bf13a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af348974-ffcf-4692-97f2-7990c775cdd3",
        "cursor": {
          "ref": "3f309645-0509-4534-af87-615bb8ad74c0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "db95c7a8-9cb9-4f2a-9bdb-6ea38169038e"
        },
        "item": {
          "id": "af348974-ffcf-4692-97f2-7990c775cdd3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "295905e5-c8ee-49ae-a321-922e99b856b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd793481-137a-415b-ba7d-59c0a3a280f9",
        "cursor": {
          "ref": "522ddfcc-4537-4734-b1f1-fe015fb150da",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7901845d-48b2-4407-8062-da9230104363"
        },
        "item": {
          "id": "dd793481-137a-415b-ba7d-59c0a3a280f9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9269785f-d7a2-43c5-8d95-01c6fa755dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ada5dc7-e0cc-4727-b2a5-1e986c81ab6c",
        "cursor": {
          "ref": "e052f0d9-7f3b-4274-a2b6-679b24ad4f18",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3b8d7c20-8d85-46f6-8596-490d55f3eae8"
        },
        "item": {
          "id": "8ada5dc7-e0cc-4727-b2a5-1e986c81ab6c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1f04d54b-b3f8-4e0a-9d5e-de9c45854fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168fc768-c902-471e-9285-e1f71b8ee7b2",
        "cursor": {
          "ref": "86301b45-087e-4092-b932-6b8b5d3aeb25",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "83941a19-cc59-4f4f-8feb-49cfc7a58862"
        },
        "item": {
          "id": "168fc768-c902-471e-9285-e1f71b8ee7b2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "26b4aa3a-20ef-49b8-8d65-bc042f715cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8356fafe-31cb-4933-9e38-1254d817ad6f",
        "cursor": {
          "ref": "69cd0b48-9f58-46c5-9b0e-d113a0a5f1d2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "233d6eff-54de-4aa4-b743-7d056398391c"
        },
        "item": {
          "id": "8356fafe-31cb-4933-9e38-1254d817ad6f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "52b1501e-6fe0-432c-a213-ee6a90eb54fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd889af-f2a0-4118-a361-9907f46d2bb0",
        "cursor": {
          "ref": "aadc927b-4cc5-45f9-b622-c49eadc8582e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d7f45200-cc75-4fcb-99b4-a8c33f92a8fe"
        },
        "item": {
          "id": "1bd889af-f2a0-4118-a361-9907f46d2bb0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "317fbc64-e1ed-4d92-a7fb-7c3bc215fccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e0a007-6a8e-405b-899d-3b0fa5736a04",
        "cursor": {
          "ref": "9b3ef949-42ce-4944-960d-1c8ce4531353",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fd45e113-87f4-498b-8905-6397ad0018c3"
        },
        "item": {
          "id": "13e0a007-6a8e-405b-899d-3b0fa5736a04",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dd2f9458-4810-411a-89a7-933437dbfa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25ff851-173f-4651-98ff-b4b77ea791a5",
        "cursor": {
          "ref": "09a54245-bea7-4f96-997c-e539fc01a7da",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "750d2032-1801-458a-a8d3-a5715213aad4"
        },
        "item": {
          "id": "b25ff851-173f-4651-98ff-b4b77ea791a5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9dd05f7f-68f5-40c3-bdd4-c3ede5e53fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5705177e-0511-4b06-ab02-788752672d01",
        "cursor": {
          "ref": "11ccaaa6-29e3-49db-a007-5625345d5bd3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a9dd03d8-1195-49f0-9223-3ca929d1894f"
        },
        "item": {
          "id": "5705177e-0511-4b06-ab02-788752672d01",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b78e2b5b-eaf9-4fd5-bbb6-47d667b95a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034541b9-5f28-4b4e-a7e8-4215450c38aa",
        "cursor": {
          "ref": "b55b399f-f65a-4dc8-a5e9-b9790ae93cc9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bd3f861d-5d75-49cd-a5f7-69e19be73089"
        },
        "item": {
          "id": "034541b9-5f28-4b4e-a7e8-4215450c38aa",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d05b82ef-c569-46f7-ae38-b52dbac26252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce74568-fd15-4080-bb58-af7ef52db3bd",
        "cursor": {
          "ref": "f5f56c5b-f358-437d-861d-7499c0f01713",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c4a1f8ba-cbaf-4270-8423-4edd76325d71"
        },
        "item": {
          "id": "6ce74568-fd15-4080-bb58-af7ef52db3bd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7901217c-1007-4054-8460-70ebc69a4e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa77dfd6-55b2-456b-80b0-cf6fc6a97b3f",
        "cursor": {
          "ref": "4aa8ca2d-c3db-4375-9a3d-c779c842638a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "60d740ce-9151-4e0b-917f-920758004aa5"
        },
        "item": {
          "id": "aa77dfd6-55b2-456b-80b0-cf6fc6a97b3f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1e06ff7e-a5da-474f-88c5-d078d506ee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d1bc0e-640a-4554-a649-f41df22afc5a",
        "cursor": {
          "ref": "5a51fac0-f47e-4708-a1d6-bc7b754b0c4d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "08ed86fb-92e8-4b74-8ca0-3519cfccb49f"
        },
        "item": {
          "id": "48d1bc0e-640a-4554-a649-f41df22afc5a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8c0d1d77-30e8-4182-8887-9f6591d15aa3",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "9b799397-169f-4c56-93f1-aaaae4f9f375",
        "cursor": {
          "ref": "7cfdd8f1-a91e-4cef-a08b-83d125ad7be1",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e6e1782a-09e7-4bf4-9720-7a2e333f8cdb"
        },
        "item": {
          "id": "9b799397-169f-4c56-93f1-aaaae4f9f375",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8b9df9bc-a80e-4b27-856e-a9b41383a349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c4d6c6-9b97-4b64-90af-5601951ba72a",
        "cursor": {
          "ref": "1f4f56ac-ce26-4201-9b48-73c781348209",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "296465a8-de47-41ee-a1e0-c91a26635f38"
        },
        "item": {
          "id": "02c4d6c6-9b97-4b64-90af-5601951ba72a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1b0b5226-b71c-4de7-8b9a-ed780a697a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824665e5-6032-4575-9fb7-2687d5f5ca94",
        "cursor": {
          "ref": "3aeabde1-cc39-4285-97bd-a6e1be4f8e69",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a2dc5a4a-e5f5-40cf-960b-63131b7070a4"
        },
        "item": {
          "id": "824665e5-6032-4575-9fb7-2687d5f5ca94",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8235b46b-ecc3-4409-8a39-4e2da364fbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4459ffc-ed4e-4938-a7e3-243c63159ed3",
        "cursor": {
          "ref": "666e6cd8-0963-4a4b-bf94-7eff191b2a1c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ef6b587d-0601-49d9-a517-410aed190e4e"
        },
        "item": {
          "id": "c4459ffc-ed4e-4938-a7e3-243c63159ed3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "da25f737-4e34-4a89-8172-e5e5dbd39dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e4c6af-63dc-44ef-89e5-818fa72f6d56",
        "cursor": {
          "ref": "aadd482a-eed8-435e-b781-02e76705a2f1",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3c9be38b-60b6-46bc-889b-e78154ac2b08"
        },
        "item": {
          "id": "16e4c6af-63dc-44ef-89e5-818fa72f6d56",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5c5b2602-4e61-4cec-97e8-bfe79defb695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df77810f-c7c3-466d-a8ab-69f77e0da95b",
        "cursor": {
          "ref": "667acaf0-3b2b-440c-9c77-46346900caa9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "47fffb64-a705-40e2-be3b-a2eb1b429899"
        },
        "item": {
          "id": "df77810f-c7c3-466d-a8ab-69f77e0da95b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "731c1976-a63e-451a-aef1-bd1ee3e01c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c79343-e23c-40df-91e8-5c7e4300c238",
        "cursor": {
          "ref": "2a0b20e1-f900-4a35-9ea0-fa284d1d2bea",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e373c1b2-7bf4-4e2e-b3ac-09d5ac484221"
        },
        "item": {
          "id": "19c79343-e23c-40df-91e8-5c7e4300c238",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e5987320-7a02-41ac-9007-261babd5b022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f88d84-40a3-471d-8b59-3f093a333d27",
        "cursor": {
          "ref": "0f34fab6-d5c8-441d-9e96-ab627a7dec5a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "057514c1-1bec-4c6d-8265-a776af862a7a"
        },
        "item": {
          "id": "73f88d84-40a3-471d-8b59-3f093a333d27",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e3669852-86a6-4dcf-bbdc-e6987d6f3e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ea5169-a5dd-4d39-914e-07af67a96634",
        "cursor": {
          "ref": "201d3f29-e166-4550-a0e0-c60d1f78ab42",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cf0cd291-17a7-4754-8477-f5c7fc10a59d"
        },
        "item": {
          "id": "78ea5169-a5dd-4d39-914e-07af67a96634",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "15bd7723-628e-4076-b94b-bc6aab06795d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c7b4e3-268d-4bd7-b46b-2ba744253907",
        "cursor": {
          "ref": "30b30b9f-6057-4579-9de3-53b117025aaf",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e5a280d4-acd3-478e-b243-8d468f8ebcbc"
        },
        "item": {
          "id": "70c7b4e3-268d-4bd7-b46b-2ba744253907",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d6bec212-e77f-4f0e-a3cd-45e434969c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15609c6d-29ce-4cdd-8232-6816af210fdd",
        "cursor": {
          "ref": "a3e3fd38-3181-412a-9950-cf754938836d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1d441ca1-7cae-4e3c-a67b-2ced43e56b57"
        },
        "item": {
          "id": "15609c6d-29ce-4cdd-8232-6816af210fdd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2306125f-f183-44b8-be64-8b2203e7d8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02346079-737f-4a0c-9291-b62bdc8d06c0",
        "cursor": {
          "ref": "72c1e3fa-e07a-43a0-a9fb-4a5750646447",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e94ba8cb-e8f3-4450-a1c0-03ca4fe0415c"
        },
        "item": {
          "id": "02346079-737f-4a0c-9291-b62bdc8d06c0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "341a0bf5-acc7-4220-a08a-f05bfb80b7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b8783a-cf49-4297-9fa8-20b070390a06",
        "cursor": {
          "ref": "f56a093b-8175-410d-9d82-3c1c30ba7210",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b612c737-2b35-4e33-bdf3-62a88d8dd701"
        },
        "item": {
          "id": "01b8783a-cf49-4297-9fa8-20b070390a06",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c045f392-c64c-47be-97eb-2ce76f8b784a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab5b604-1a9d-4def-bc61-65fa159b092d",
        "cursor": {
          "ref": "64529beb-82a0-45d6-9eee-e09f18cfd281",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "887e244a-4fdb-461c-8bf0-5cb0032e2d9d"
        },
        "item": {
          "id": "9ab5b604-1a9d-4def-bc61-65fa159b092d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "51f5e176-87e5-4864-a6cb-3de1d2a83052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64385224-296d-4277-8dda-3e7147544ad5",
        "cursor": {
          "ref": "9a106c87-0676-417a-a678-1bd1a118f48b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3dfd983f-7111-4548-9815-8e5fe1b02510"
        },
        "item": {
          "id": "64385224-296d-4277-8dda-3e7147544ad5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8a5f568e-77b6-4b69-ad96-1fcbb346d777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff25a668-a48c-402b-b32a-b9d4d131bd05",
        "cursor": {
          "ref": "a65fc55d-5037-48c1-84da-7b9ee50262b0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "290d0135-21a9-4554-a2ec-c1ad6b3b3705"
        },
        "item": {
          "id": "ff25a668-a48c-402b-b32a-b9d4d131bd05",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fbe110c5-e429-429d-9be6-ea13c06e1be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f488f911-fa4d-410e-8338-b485585bf3ab",
        "cursor": {
          "ref": "445bdf3b-0411-4862-8841-7acf8abf55a4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "738649e0-97b7-4984-9adf-61136b4041d8"
        },
        "item": {
          "id": "f488f911-fa4d-410e-8338-b485585bf3ab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bc4bfc86-e00c-4ad7-bd50-03b737939de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3c9d4e-8346-4a99-9e94-9c716143fc82",
        "cursor": {
          "ref": "c3a9f833-cf8e-4bf8-98bf-d6d5ac241bf7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7d936d9f-79bb-4845-87c7-8ce7aae2cf8a"
        },
        "item": {
          "id": "1b3c9d4e-8346-4a99-9e94-9c716143fc82",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "174690cb-8b98-4a39-9f8c-1b912e9a2075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13829580-e8bc-4c44-a6f9-a642d96fdda3",
        "cursor": {
          "ref": "36d064c9-e21c-4c23-8e41-a981ee662b85",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "44650389-88fa-4d2f-a43a-b0779cd39e9a"
        },
        "item": {
          "id": "13829580-e8bc-4c44-a6f9-a642d96fdda3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f44f5122-4fb3-429f-9394-c689c6a8ae72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cfac3a-c00b-497c-8b0b-683cbd4d401a",
        "cursor": {
          "ref": "f70bb327-ded8-47a3-9246-92daadad11a1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d466e010-1c26-42fd-9bf2-e679ee251c8e"
        },
        "item": {
          "id": "01cfac3a-c00b-497c-8b0b-683cbd4d401a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4ae3459f-e175-48f6-aff5-5944aa21d024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4963827-52a0-46cb-82ce-68584a7e1529",
        "cursor": {
          "ref": "0ee466f7-539c-4e34-9320-594ea7332964",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7120ed87-4ad9-43d9-9390-5069f52929f5"
        },
        "item": {
          "id": "a4963827-52a0-46cb-82ce-68584a7e1529",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "47d45e86-429d-4f09-b95c-6385282c3fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d960c71-e0f2-4dfb-ac66-9ee09c8d8df5",
        "cursor": {
          "ref": "d28c2659-7051-49e2-90b7-a68bdfdb4603",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b3acf009-0d7f-47a2-bb6b-cb6ee226e184"
        },
        "item": {
          "id": "1d960c71-e0f2-4dfb-ac66-9ee09c8d8df5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5281ec0e-e7ee-4c78-9d82-6abccb70889e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3534629e-8b52-4549-b55c-f1d7a6d2e627",
        "cursor": {
          "ref": "195efbcb-7ada-4bb8-a3a3-590d60207fae",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e0e42ea7-8846-4974-8928-9c8d4452c845"
        },
        "item": {
          "id": "3534629e-8b52-4549-b55c-f1d7a6d2e627",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ededad3f-994f-4c8d-88bc-e821e1d83dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791b8c86-fc72-4a60-ac9a-0f6d99241b07",
        "cursor": {
          "ref": "b6f36503-0699-4377-a5a0-1eff9e1d3e7f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9b5b1f48-4056-49f1-8db4-c7c02810fd64"
        },
        "item": {
          "id": "791b8c86-fc72-4a60-ac9a-0f6d99241b07",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e2198d39-50d0-4112-abba-2a590c8c2ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3629c378-945e-4a63-86bc-d12254936103",
        "cursor": {
          "ref": "e0319bce-7a8b-4584-83c1-6b18e1877a5c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3b37c097-89b0-4571-92ed-376193501195"
        },
        "item": {
          "id": "3629c378-945e-4a63-86bc-d12254936103",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "53a92e60-80b5-444b-9b62-27b6cb0f18e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837b67c8-bf92-4965-918a-befbfb3659ee",
        "cursor": {
          "ref": "45d37741-2c56-4b55-a2b2-51170e60690f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "42cf3a30-a22d-4f65-ae7c-368dc80629e6"
        },
        "item": {
          "id": "837b67c8-bf92-4965-918a-befbfb3659ee",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "21d8a887-102c-43f9-bf0e-7b3261506695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15840b8-fbea-4bd2-98fc-10b20c8ef129",
        "cursor": {
          "ref": "0851151b-427a-4e18-a27c-ec2c0b8a5000",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5dca5bb0-1c75-49ef-ae70-5639c6e5f411"
        },
        "item": {
          "id": "c15840b8-fbea-4bd2-98fc-10b20c8ef129",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a2a231f6-e8b8-4a3e-a1ae-95814248cb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eacba0b-cfc9-444e-b278-5454a4d96da8",
        "cursor": {
          "ref": "76951003-9b49-4385-9b1d-3162283a0043",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "342d8050-7189-41b2-a538-af75356e4bfd"
        },
        "item": {
          "id": "1eacba0b-cfc9-444e-b278-5454a4d96da8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "749f6af7-5841-4901-9c6f-6e77d8d54735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76f4d65-6303-4ab0-a202-b0260764dc7a",
        "cursor": {
          "ref": "3f970027-4db2-47d1-bbb7-abeebc728b91",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f92ae3f2-e88c-4d82-95a6-d8eac480262b"
        },
        "item": {
          "id": "f76f4d65-6303-4ab0-a202-b0260764dc7a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d09054af-f04c-4e3e-ac80-7907d80e662f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14714058-7ef7-4f83-9f1d-05680c03ce77",
        "cursor": {
          "ref": "ccb38784-efac-4237-9325-d8f5df3a18f2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "881ee4f5-2a02-4a93-a526-44262f86b57f"
        },
        "item": {
          "id": "14714058-7ef7-4f83-9f1d-05680c03ce77",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "12d7bab3-84ca-4dec-8c5f-863e8ae4951b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059abc93-9e54-43cd-9a4b-62fc82088cec",
        "cursor": {
          "ref": "3287fb50-b2ce-425f-b450-18ec0b97a715",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "32ba5126-e5c0-4ade-bb4c-b3e6a4aafc06"
        },
        "item": {
          "id": "059abc93-9e54-43cd-9a4b-62fc82088cec",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "476353d6-e913-4fd7-adbf-017e7586c009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6f566a-7146-4124-b782-de470335f6bd",
        "cursor": {
          "ref": "c7e72800-f8e2-4b88-97a8-a1061114c929",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "eeeab26d-c7f3-40ed-9305-2404d9a3f0a1"
        },
        "item": {
          "id": "de6f566a-7146-4124-b782-de470335f6bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3f190f42-cf89-4ab3-9c2d-3f62f7e129a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c50d47-18d7-4198-b6a3-03cf8d2d5dd5",
        "cursor": {
          "ref": "c7b9a357-72d8-409c-bf7b-7144b42edc3c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4a738501-e6bd-47fa-b105-cf14ba2454cc"
        },
        "item": {
          "id": "a8c50d47-18d7-4198-b6a3-03cf8d2d5dd5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2c8e837b-1b14-4fbb-acb2-35b728f478ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d63d94b-3fa2-4b6a-834c-ffe41a1d3b57",
        "cursor": {
          "ref": "5131505c-e5da-466f-85e2-a204f3aae3c3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6e9a9a33-013a-47d2-a16b-096b5ebe5672"
        },
        "item": {
          "id": "4d63d94b-3fa2-4b6a-834c-ffe41a1d3b57",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b55e0531-aa0b-4f35-b92e-660cd45dc2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc20d2ab-cf04-47d9-8667-38d22a35a398",
        "cursor": {
          "ref": "8216b8e9-4ad3-4021-ab51-e03cad8a1688",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2415706d-5fa4-41d6-860f-6c814b3fb7e4"
        },
        "item": {
          "id": "bc20d2ab-cf04-47d9-8667-38d22a35a398",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ebe23ea0-854f-4b39-9b21-cced3c12c9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b74f516-e7c5-41c1-bfdd-80075288f424",
        "cursor": {
          "ref": "00c7f0b6-e941-43d4-83bc-6e4d929dac19",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7776217f-5d34-4b6d-853a-3c895248d9f9"
        },
        "item": {
          "id": "7b74f516-e7c5-41c1-bfdd-80075288f424",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "76cef6ea-7b0d-4a34-8857-cd9c366206a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38090da8-caeb-4dbb-9fec-122e7be9a8cd",
        "cursor": {
          "ref": "e48834ae-0eff-4cf5-b324-cb68f32cc389",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a97b1036-1e67-47f4-b7e1-a1cf91d05aee"
        },
        "item": {
          "id": "38090da8-caeb-4dbb-9fec-122e7be9a8cd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7ca2ef68-9f46-4821-bf6b-2ec64ad3257b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6d9002-4fc7-4126-b357-295e066bee16",
        "cursor": {
          "ref": "be1ae000-7a69-4260-bca6-0623a1ab9457",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "68db51da-ed83-4b85-bf9d-f22fc0862fb2"
        },
        "item": {
          "id": "8f6d9002-4fc7-4126-b357-295e066bee16",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "be16677a-bf1e-4e26-a7f7-7a0d5a86cb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e835466e-643c-4546-8031-290efc7897ac",
        "cursor": {
          "ref": "5a0ac95c-2a46-4b12-834f-35b958121dbe",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "588c7716-b792-4f84-86e1-42ddc6e4f8c5"
        },
        "item": {
          "id": "e835466e-643c-4546-8031-290efc7897ac",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3bee9405-e402-4beb-94a5-1af795587c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b153800f-5153-4ae2-b16b-49b8962f7861",
        "cursor": {
          "ref": "9934ce4b-534e-4805-8cb5-d0df4510d1cd",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "06bc582c-d802-415a-856c-633f9295124c"
        },
        "item": {
          "id": "b153800f-5153-4ae2-b16b-49b8962f7861",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8ef45ef5-e96d-4d54-9ebd-c52bba49a8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbf61b7-cfcb-45a8-9a63-657bf9c79573",
        "cursor": {
          "ref": "409b0fef-73ec-4c89-9e7e-c796af26262e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fc95b3c1-8319-4c78-bf6f-51205f6bbf8e"
        },
        "item": {
          "id": "0fbf61b7-cfcb-45a8-9a63-657bf9c79573",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b5c327d4-6f7e-4bb5-b38a-e34dcb853b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d732bef-6b7a-45ed-9af1-2a43385b8476",
        "cursor": {
          "ref": "7be767e0-062a-4476-b460-a3b996f34b30",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "33c75543-251c-4050-8a49-f0af955abad1"
        },
        "item": {
          "id": "2d732bef-6b7a-45ed-9af1-2a43385b8476",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5b109377-5ed3-44ba-82a3-0d1d6b617b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70074ef-6b26-4cc0-921c-6afa52548c50",
        "cursor": {
          "ref": "e6533cbd-3fae-439e-ab50-7c109a79f31a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5cf388e2-3bbc-47c2-a7ec-7938dc9959ab"
        },
        "item": {
          "id": "c70074ef-6b26-4cc0-921c-6afa52548c50",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "15f016c0-643c-4284-8a48-98abd83e6abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a13e9ab-263b-4741-a1fb-e29c93cfd284",
        "cursor": {
          "ref": "c816c2dd-e74e-4ca9-a2ef-8e6f18fc0641",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bf4eb65a-1f28-4f1b-bb1d-e7c64c0e72f3"
        },
        "item": {
          "id": "1a13e9ab-263b-4741-a1fb-e29c93cfd284",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d32dd5b4-e6e6-4d37-84b9-1cf212a4f77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c4ec85-a401-4601-883e-1d6e1b52d36a",
        "cursor": {
          "ref": "15ded442-da57-41a4-b817-99337edfd3df",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "26ce0027-29a0-41de-8c8e-c6db766d5fe7"
        },
        "item": {
          "id": "96c4ec85-a401-4601-883e-1d6e1b52d36a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0537ab1a-d974-421d-b859-16e7dd1107f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efed6698-d3ad-461e-b9d0-a1cceac99cd1",
        "cursor": {
          "ref": "486f1653-5a67-4ac0-b328-f8141e5acadc",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3a7f8147-d89d-474b-a3fc-5920ff1ecc75"
        },
        "item": {
          "id": "efed6698-d3ad-461e-b9d0-a1cceac99cd1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fe563208-1672-4370-adcc-d5e8b7473809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e808d6-ad4f-4a96-af75-384df010758f",
        "cursor": {
          "ref": "d36efc49-5a54-4943-9477-9d9e284b65ef",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d87cc8e1-ffad-423e-975d-7676b735c0eb"
        },
        "item": {
          "id": "70e808d6-ad4f-4a96-af75-384df010758f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c806ebbb-451b-4873-95df-823c77a4f7dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da5cc9d-0638-4e1d-98f0-e2dca3dd271d",
        "cursor": {
          "ref": "a913c5c5-2788-4bc0-b69c-88959feef599",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5288c218-1efa-4e7a-8993-65fdeefb968d"
        },
        "item": {
          "id": "4da5cc9d-0638-4e1d-98f0-e2dca3dd271d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3b14dbfd-1895-4b2c-85d2-703f358b64e7",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a9ba5d-086a-438f-a9dd-70fcbb5ef215",
        "cursor": {
          "ref": "e315b9ea-cda2-4e9b-a5a9-078c08018de2",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a68a8c45-a2a5-4409-acfa-7c2210989758"
        },
        "item": {
          "id": "08a9ba5d-086a-438f-a9dd-70fcbb5ef215",
          "name": "credentials_verify"
        },
        "response": {
          "id": "50c50602-3184-4c78-bc18-dd95afdc391c",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87868a1-624f-4a7f-acbb-d7c4e523c4b3",
        "cursor": {
          "ref": "5e22ee40-071a-414e-97ec-4474e1ddda62",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "43953137-ac8a-45c2-bde5-37a63e723ebf"
        },
        "item": {
          "id": "c87868a1-624f-4a7f-acbb-d7c4e523c4b3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9362a4da-a047-4bb1-8a71-63ff1faa1d04",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c60ef3-fef7-4420-b084-6afded354b98",
        "cursor": {
          "ref": "498dcc67-0ba8-458b-bd4c-1ddc18dd739a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4212a506-612d-4742-9b76-7703eb71518f"
        },
        "item": {
          "id": "04c60ef3-fef7-4420-b084-6afded354b98",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e783151-8e2f-4b0d-bb5c-b620b91215d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c60ef3-fef7-4420-b084-6afded354b98",
        "cursor": {
          "ref": "498dcc67-0ba8-458b-bd4c-1ddc18dd739a",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4212a506-612d-4742-9b76-7703eb71518f"
        },
        "item": {
          "id": "04c60ef3-fef7-4420-b084-6afded354b98",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e783151-8e2f-4b0d-bb5c-b620b91215d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5629bf43-be39-4a92-bb79-5481d41b0ed9",
        "cursor": {
          "ref": "0d304d66-ba51-4984-be25-0b89a84a9442",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "293d3cee-67a7-4ff6-abb7-d998d20d7418"
        },
        "item": {
          "id": "5629bf43-be39-4a92-bb79-5481d41b0ed9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79740a81-bf94-4479-a694-7a641343a622",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19c5892-ac8f-4c1e-bf2b-d02a2de1e0a3",
        "cursor": {
          "ref": "1b426172-e01d-4bac-817d-d194168550c2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c913f209-f241-4414-9ff6-b1cd8b632911"
        },
        "item": {
          "id": "a19c5892-ac8f-4c1e-bf2b-d02a2de1e0a3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a21ad76f-cd4d-438d-83a7-ebdb0fa6b629",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}