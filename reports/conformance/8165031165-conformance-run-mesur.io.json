{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c09f4883-e0d1-4148-a2d4-72efc2a8bb9c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5ee26f3d-55f9-4c12-9c71-322c02be94b7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17851a85-9cf9-45a5-b972-b8a18a38a75e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90c99d36-8821-4f1a-b7d9-a82ec340e77c"
                }
              }
            ]
          },
          {
            "id": "dbe9ae15-2b7b-4aa0-a6df-1e6d9ea7be1f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc6c4fbe-da00-4e79-b3a8-cfda0c94927f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d121e34a-bf55-4d94-a67c-730a8c3df967"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "11043715-dbb1-424f-92a2-a39ad39d6d55",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f7dab363-3904-493e-bafc-4de2dc9df558",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14c7f6ef-20b8-44e2-a9c8-c96512d0d37d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2efe2cb0-35c9-4b3d-9eb4-ba535ef125ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6da9f452-ff6d-4264-b575-c6c5bc836a6b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97232760-4182-4d00-b38b-3b6436dd9afe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d4cc4ec5-02ed-41f3-8459-79ba033b85c4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fac664f7-adca-4c72-bf83-eb3444498b87",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d17a0826-5df0-4d32-afd3-bc9bfd69030a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "192d1455-4945-4b4c-b9bf-0362d53b250f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4e0e9ae2-f3db-4569-823e-3bcc3ba3935c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb22c851-c5da-46a9-8a3f-7435fe2be450",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8479ffd9-39a8-4f56-a4ce-b68f1d948d01"
            }
          }
        ]
      },
      {
        "id": "9e2981a6-a892-48e8-b6bf-0b7efa0e6297",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c2f44d6c-8df6-42e9-808c-f940929c2ef0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d22fe9b-5218-40aa-adfa-760b698cea7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bae610f-8830-466b-87f1-ca29702b0fe2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e40b3a-0dec-4939-a490-b344c017c835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9160559-1fcc-4fb9-9c2e-424a92d46074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173ea43a-2a3b-45dd-93a8-72d396d732f2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26ae91a-cb10-45f0-9ce8-ce0b5a2f5a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f73363c-f67a-4a0e-aa15-a26581563a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2142057f-b74c-4d6c-ad39-db0993334516",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0da1efe-550f-43a4-9025-032006428338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82a67a5d-5ea2-43ea-b79d-cad91a4f5d2a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb085c88-88c3-4c20-b83f-4163e4a0376e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "129722a4-2173-4c60-aaa3-961dc6391819",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a105667-6a31-494d-a91e-49a01d8ab6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f9f32cf-8ce3-4dfe-95a9-c537a92773b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9c289e-fdc5-403a-b7ac-a1ef5c339e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd493e8-8406-4fdb-9c4b-75ffd2142311"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38664ee9-4caf-46c6-8ce8-83d692363c02",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf3048a1-78aa-498b-8aef-7988ccd4aece",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db13f70b-06a3-434b-9344-310d63c2d07a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "705912e4-dabd-49a6-8f75-04d7ab300276"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fb18b2f-033a-4aaf-88df-7e4c1e15fa79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "85e7c493-26e6-450c-8a8a-4ae0f556ec1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8edc3dc8-eea7-4575-95bd-2e50dddce00a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb4536eb-2366-4c9d-af99-6ddd7ae0be1e"
            }
          }
        ]
      },
      {
        "id": "261efc16-300b-44f2-bb87-20ad0188776d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cfd97e05-c83c-433b-bcfc-d92a2f59d4ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ede2cb7b-950c-4ef8-8f86-e79d40e23a74",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0a9a957f-1a03-4223-a4ea-dec37418bbc7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5a4f52-cd74-41ff-8ebc-e94d93f2814a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837b5202-b48a-40d0-9713-87679be2932f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e167fd-6e3f-4ac1-b778-63b70594f2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "231fe170-a748-4629-8ea2-e46887031813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a65753-0f6a-4a28-952c-df14db51092a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a3185-4669-4659-aed6-6c5a450beeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ca0930-90bf-4822-97f6-a890dea316fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc20691-fab5-4c88-a25c-f32db2a65cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e60bf91-6416-4478-b916-dd146cd0642a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a77e215-5b4d-43a5-97ee-d13f4dd07064",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215d0de3-5f9e-4aaa-b0e7-bfcf85394374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f369a6-650c-40d2-8f13-c83fe7bbabfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d19f80-c6c9-4c85-9540-c33f67167ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b94092e4-e5f4-401f-b7c8-60ca7cb12693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cd756b-8ee5-45fd-8c7b-09f8485f1728",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e49426-3684-48e3-a612-c6854809c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0843f8ec-a290-4a78-8f93-a73aa227b913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2a2f1e-fba1-4fc8-b0ca-9115c3138b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9447e40d-5e33-4adf-bef9-9b9dc6dd7867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40aa4d8-817e-42dd-bed7-97c02cf1e6e4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3f7d71-ce3f-4da2-b131-0b12538d96bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8024a4b1-9273-405f-b832-84a5e7899ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0155e2-2aa4-45d6-83fd-806e85dabddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c21af47a-b955-41d2-aaaf-605cf1c07cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba9c3ce-8593-4397-8d7d-fe6a2a82e3b0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022690c3-6c83-4734-b2b7-8aa273c0ead1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fce4a6-8649-4f4c-861e-40dde68e525f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c860f8fc-8d90-4cb6-ab31-605b7dd5e04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5578fcb5-4207-4364-b8c0-6c10551d912a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6fe5c6-7c53-4c7d-9aa1-5c5d7c79003e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99cf49e-0757-4d13-bb85-9d993022683c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891fe1f7-13b7-480f-85d4-8ed6ec7ca587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92471b89-7984-44c2-88db-eae5db0080c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cdcdf0e-a897-467d-a57f-de61940eced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7634292-df50-46c3-9769-71ff479791ae",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49ee705-e066-483e-b3f7-e3c14add83f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e4a457-ca7f-4443-932a-91b6c7944b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36359810-25f6-44b2-a8af-dbfa3607115d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fde6155-326a-4aab-a043-a404f11170a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f569ae-fc6d-472d-ae3d-f35d3dd0f8bc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b401b230-56a7-4dba-8cc1-736e21edff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629f7e45-df14-40a4-b4b5-ff9e30df0853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaa8f30-7783-4ab1-85bf-b2e19f3689a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6a44e75-c6c0-4b97-9939-543c3c149bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdf0536-e03d-449c-95bc-6488c380758b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f3ebac-e43a-4ec9-aa16-866d49031bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0b00b2-03f1-4a07-8869-548be5377b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987ab5b2-b853-43aa-b393-b94413a41122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60a254c2-1672-4033-9956-ad60f8e807fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c022ce-7c80-46b0-b377-513c741d6193",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2375b15-e0d7-41f7-8acb-bf118720a116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb75596-16d7-4595-be18-a3bdfce47fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f3d98c-a46f-4c99-b1e4-207fd96b8e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a52d243c-f0c9-42f4-a401-a63aa7fa43c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cbf1a2-a51d-43e2-99bc-0dff304c1caf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6c4eb9-2e6b-46da-bb19-7f821d28fd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bfaedb-445a-4c20-b7dc-8857a323ce79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9031999a-846a-4de3-b60e-6a1554a215fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c0c5ce8-f722-4337-a86b-deada56ecb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfe421d-d4fb-4e38-8d88-819a5c89f2f0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1269c3a9-86cd-414d-a43c-6495d2ec2254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9bd665-ccfe-4e01-a29b-305531395437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb57e644-637b-4246-a937-7697ea598842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aec07a63-e32b-49ba-ac1e-27e09bdcbacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c84b15-8bee-4bd0-b4c4-19f3872640d6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8232c83-381a-4af7-b9e3-4885f65691cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c45b5c6-2f52-416d-81a1-2c0937cfd244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3bae6d-e383-476d-8018-c7e3956ed1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d592bc22-c87a-46d5-a139-7e13a3db7a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8927aa7-f61d-4f06-bcd8-3935d8a030e7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539c08bb-5740-4382-bdf7-ae8265e1c503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2b78eb-0691-4c7b-a2a0-708ad8aed17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1af9789-442e-4030-9149-7c48a37e6fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db41efb5-eaf5-4a70-93c4-fc47440bd3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4baf0eb-c5f4-4d70-acf2-98ac400c7621",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49777ed5-4625-433e-bebd-0544ebb9ade8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805b4b2c-bada-4440-9329-61dbf4e309ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2fe744-f0ea-4d4c-a991-1b0589927ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaa2026b-7be4-437a-aa02-daa32ce3111a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d68e628-312c-4645-b93f-d7aaf02cac55",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbfcba7-a9f4-49ca-be52-df02f5ae2fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642f507c-4c97-4e9c-8db2-249e3436bfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23465c7-0221-4829-8165-6f6cbd084f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41995a84-cb32-461e-87f8-7e1328c68ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b3ac26-fb29-4bd7-a4bb-4e938ac14d49",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449f5d9-8c9f-409b-bbc7-d7620515fc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3cbe22-8c90-432d-bae5-881c171eee9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae57320-f270-4093-85c3-60a61bf872a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cddeb4d2-92c2-47e2-99ba-dc5160fcf6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3e7d31-c3a8-4a51-93f1-2cddf3621fa0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aee62a2-d6a6-4fe2-a7ca-ea23df695c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8b20d8-4181-4e7a-bfcb-6180c7f6a6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5792ead5-cec1-4e78-a4bd-4121511cbac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6712ca3f-f1c8-49a1-a527-345c4ca44e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d13fe98-3221-47b2-a0d8-d3132cb456cb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd45a41-d890-4dfc-8bce-689c1f6222d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bf7f21-0981-43ef-8ad0-7c1a76b1df9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b891abc-a4b8-4e43-b9b7-6dbe9f2aeabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "574145fb-62f5-4742-bf99-0e378383e9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1da46a-cce2-4857-be4d-ef3b5778be25",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c15fac-904c-4d19-8d0e-233304e75854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beeeb861-11bc-453d-9d1d-e9cd0068b603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3638ba3-9686-4e2c-82d5-8722c54fc080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "410aeb75-e27b-4658-a19a-8d560d60559c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72888133-8f91-460c-8fbe-e1840cd186d6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758b8c2d-52eb-4ab6-bdcb-c4630e93ed8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ad8233-3a25-4f5c-a2cc-76dec1367421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1882bc5-4e10-442a-b344-f68f72a7ffef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8f5475-1628-4ff8-96e0-ae8cf942dddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8ae3e1-6e94-4114-a646-c9cab8c53c5d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fd875e-0142-440f-a09e-e6e80eabecdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db672a2b-0ec4-4a65-958b-f14b6891e71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3a6482-871c-4dfe-a0dd-3ebd2d136c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b90678-df2f-40c0-a5ef-893c3dcab802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deee79c6-48c7-436e-a3c7-bb1c99831659",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7c5b83-69cf-4b53-833e-665ae4dce4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715e223b-1aee-4efd-985e-4fcd84197705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76a7bbe-da02-4796-9350-7547e8eb2f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "864028d3-f937-4747-8ee3-af0244567db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147fbfbb-0c5f-45ea-a5ca-83982c10a843",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c4b7e3-6b1d-4ddd-8263-378f06a6bf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc2de5f-a003-4f6e-b086-da07ae150d21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c53ce5-4168-4b49-baa7-529a396c667f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f726fce-1c21-4411-80c0-7ed73f2aed8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802d0e2b-2c38-45b0-af2b-02b257d19930",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a2e266-9b09-49ea-b220-c61f1b039851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fa3ec9-8b58-4e86-ac31-2a1b90644bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856ef626-67a2-4cb0-ad68-7503dea8e66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "114ad290-282a-4616-9c72-33f4e82dd703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2635cc-b5e0-41b3-a870-ecb46db38740",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46e725d-5b43-4296-902f-e50386ed5f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab30118e-45eb-449f-b434-5a4441b3b864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9101e4f-6cb8-4d2b-be36-d76cc9b357fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a980dba-dae2-4083-aa82-82dc41c49f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8b2ed3-8330-411e-93e4-bce6ba31529d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "993dde4e-e762-4678-8470-380ea71274ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9228cdb2-3232-4100-9810-acfc981478d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cffe28-49f0-47d6-b833-2a76e399f9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da21614-19f6-47aa-bf64-540e656b8195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38783ec-9915-4da9-8cc2-b984fde9a1b4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c67811-3962-44a6-ba40-81fc2bbe75fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760988b2-5de6-46b1-88ca-b5a7dea774aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b792dc1-5b1d-48ef-985f-f99bca9c7d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe6d66b-3b07-438e-bac2-9879c110f77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cbc07c-ab4b-4eb8-8eea-b82f3470834d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49565c0d-3cea-42a8-914c-cab6c22818ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406d9c29-b800-4763-84e0-b81ec93c3b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b437c1e8-7e3f-4e7d-950b-d3216561531a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ced05a30-4015-47ad-8739-0e6ce3542b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1188bc85-9769-48a4-9642-3e9cc8623168",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce13573-bd18-43b4-8042-68a00b1796df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c804f6-8cc6-43f1-925d-71452738d188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab45d71a-f3ed-4c92-93cb-39470b47df11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b47d397-2755-4759-9934-1a3edc0a33b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21c9f3d-a3fc-4576-b6e5-0c1ffdd64eaa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f5c5ed-99d9-4125-ac19-3c0c2d0bad86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "735407a4-c0b7-4a51-b66b-0c6198032b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba32035-2f36-4c85-970c-7883771ea4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f70eb528-edc2-41d3-b71b-8eb617791778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1998400-adcb-4f32-829e-0c52c8bbeefa",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2ac5d8-a72f-4383-b776-5a300c3dda05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c96b52-ed00-4661-b5bf-d50569e0510b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb8501e-179e-4468-9167-20d714e52078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db99d31-b5ba-4136-ad3d-979c1a908a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42db9ea-ad9e-45d9-acb3-abc957d6a3fb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8d394d-9e1c-43b9-b4e2-bcc93a78304b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fc045c-b6ca-429d-b4b3-490d4d7b926f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befaf6f5-6199-44e1-a682-57068ede9ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c449b816-151e-40aa-9d66-aff1312d9033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e993462d-0faf-432f-807d-a54c716b5ebc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eac1a0-d664-415b-a227-2ee9ae23ee0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88471a94-5dbe-4f3d-9483-d1228c70c30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa54734-cc71-462e-873f-a09f3e33ddaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "40083562-f596-4486-a3fe-2c22e9850347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43da3e6-618b-43b5-8948-a50f19f77a9b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6348910-2e21-4483-9aa9-5c68e509781d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4280c07-699b-4bb5-9f28-8d5b71464081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae1b226-bc8f-40a3-9825-5fd21eb42245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92105f3a-19a6-471f-80b3-a58210c8381f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5be28fc-1cd7-4348-b401-51e294957cee",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d2803d-5e95-4cc6-8dbd-fa3ade91a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e24c6de-4976-4184-9274-bcefb4e52c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02751d3-fa2f-4468-85df-4e305c2c8556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec5bce5-ef2c-4522-81b4-297f7f350fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b07d2d0-bc97-454a-8090-faf2b210bdcc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e65ae9-eab0-43c0-9580-d5b4b9dba62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3e7e71-7238-4c36-888d-3631acd1f781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae68b80-457e-45f3-bbc3-f5e62d4c1c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "315dc6e6-7a75-4958-8651-5c65c740be6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fd2510-3e31-494c-b7f4-911bcca48f1a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8152c05-fb88-403e-b33f-2c13ab0e2d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc80fe75-1ad2-459a-b0fb-4ba4894ad0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485c8b09-7a5c-44e4-aead-edc57faf6fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4396225-a9fa-4967-944c-b6198a490696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ea5d99-9d13-42fc-bb42-c2ea423dee5f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a177ebd5-f632-49c9-b035-52b65b09f7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc225c3f-e314-4272-93cd-61b39bfd6621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960d3ac7-e70b-4d91-a13b-e713ab8b6106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db96093a-4ff1-4fe5-a301-20d18224016a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1f530e-e2e0-48e4-9c6b-4e28a4e5cb58",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe50101-b7d8-43dd-9219-ce454483de86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7786d7-ff04-4661-9a50-04ba5e3fc2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd94287d-049b-4f2d-a80d-a52ae2334d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf34cc3-af88-4dfc-89d9-b7009e2ba1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00360bb4-30ec-4265-a16d-ee585c61d9e7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b82d86e-1655-4a4a-b25f-fdfbdc97bab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b19f2d-e8ef-4f43-b45d-a54b49df3aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2a0216-369e-47fc-b51a-afbc5809482d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "58fa77d8-8b55-4165-a305-7d71404d9093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22a6362-abb7-4798-be62-19e7ad1c7897",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036372cd-63f8-44b5-b4aa-ab3d96078fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e72df890-d1b4-4971-8bb9-3a66fd8e74ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4ed232-7ee6-4fd3-950b-ee7125681929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "52d15bca-48c8-43ce-8fdc-3be9f7bec4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934c24f6-af70-48ef-9666-a0d50434d0c6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f174e1-1bbd-42dc-9ede-c8461a5f30bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea0c382-8fca-4e17-bcd3-43efed38409b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad4bacd-9f29-4b96-882b-979d3c67ac39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd6d03f-3269-4261-bf4b-1e230c5a8a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce66dec-907c-46db-acde-f4f33ff5b809",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec23f65-73e5-4b91-b940-cd196c6d298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c8b431-2355-460d-8c21-fea1dea462fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a48fb6-35c6-42ff-953e-0e9000a5b3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2600df42-2d24-40a0-b848-00484c917c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555eb810-6030-4081-ae71-ef8b6c504e7a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e990a2-6f95-46ba-af83-386b4aa07d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5ffb9c-73c0-4993-8767-bfc41b4ac0ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4098e9d0-4935-4187-ada1-3a0a70bfcfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "302a46c7-d611-4dbc-8f4e-26a0c41184cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8984e4d-ad24-4c10-b582-58ce4cebd9cd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b44872e-c091-4506-b5ce-9ce4c7f02044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb21c47-0c0d-4454-8991-713a66058687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1164ccae-de36-4983-934c-da7952ca28c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13fb9174-6f73-4d2d-9484-ffc1c152c4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e56202-026d-4041-a438-a07ab13540bd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf9f7c9-3856-4624-b227-c447515cfd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311295a4-b04b-436e-a85c-d5683dff2e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915cf7b3-c2c1-4a27-a463-05c24365060f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9703838-662e-4cb5-8b00-b40c950e4913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619b8e78-b3c6-4ce3-9e93-1b8b8a94abb9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9d044a-92fc-4e15-84d6-efcef1a02bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127a6c3d-b589-4974-a307-0a478ea6f259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8725a1d3-318f-4d99-ac18-b4556addf77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b007990b-7941-4f27-a6d6-6ca339c571d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019412fd-6876-4080-8e14-4feb1de096d7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a2249d-7077-4291-87a3-519975d2643b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c55f51c-4df1-4ab3-9704-5f25813e6118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eb6f98-66e5-4300-965c-ce50c722c15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cba8c4-f8f9-4132-8dae-4809a7605da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4115fc28-508a-4fde-931f-47274e8a0d68",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7e1532-83d8-4569-ba10-079b4a951f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9e4825-99c3-4a44-a8d7-3713369223d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6efc0e7-8f47-49a8-b9a4-cde66db6544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc1a104-adaf-4335-923c-fad399a93f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8e79df-3dc4-4e0f-b555-80b3a90e68ba",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26407643-8552-4213-9a63-18a4c75ff273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d3092b-9b8a-40e9-9bd2-11e7f7000f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1360e4-9db4-4511-8020-0377e3007461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "448372f9-3b33-4b57-bf09-235ab54b7358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd238767-388a-4b13-8a2f-94b079fe722c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b2d417-5f8b-4d7e-bb95-b665d9f497d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92df5f71-6aad-4bc8-ad97-b778b4be163b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c8afd6-4667-4714-8996-2f8107a623cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8bae56-d613-496b-a92e-2a4787cc1944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27eed669-bb91-43a2-a55a-be001fa792c3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a9fbe1-ab3c-4928-8b4e-9c8b0c615425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c93f1f-063e-4882-bcb3-5d190bff486a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df718d96-8698-47ec-971f-d7ea3e2d3ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f87503d-ca3b-499f-b3b5-13fb1ad336bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8483951a-ce14-4d79-aebb-8df077b6303c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b73e0a1-270f-41dd-9e5e-9832ea9df776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f6e78e-4458-432d-871f-f567fb4fdb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd30ff6-850b-43fc-b97e-d6c99074f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "763cafce-28fe-455e-96bf-d9ead834d2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76a9e18-ff84-4bbe-b2b8-b3e13da000ce",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c495c5-de86-4442-a3c1-d56f2cfc03fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b91fea-60ec-4ff0-856b-8360782e8a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a037bb6-0f0f-424c-8ca9-bffc3ce53dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "11159506-9781-4759-b76b-231b878f9fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d53589-892b-450d-85ff-281beefab8ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e74b623-d221-46e5-89de-d44d2143814f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71602721-d381-4823-a37e-7bece3a8124b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3f2ccb-14cd-4689-ade9-06308919dec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb5579e6-c980-47bb-a9a3-23577be25449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0363ddf8-f740-451a-8ff3-6b4b66efc3ee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffd5a04-bfec-46f7-a926-2f877cd3588c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca682a7d-867c-414b-9ffd-20c1fc0ed567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f8a6c4-7695-4f15-a23d-785559029733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e85e08c-6085-4a7d-a709-c520588fff18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c314012-1cd9-41f5-a9d0-e8cd9fe77835",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc23e5c-f9e0-4be6-821c-1021a110962a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cb281e-393b-4a66-bbb2-07d770cc005b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1740f1-7571-4125-868e-96b205e7d868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "caea514d-135c-4a16-b3fb-f79a842adff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6d01ba-424c-4f1e-b05e-c697bd3a2309",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b73beec-3cfc-499c-b69a-93ea7983945a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814b19df-6ef3-4e6e-b164-289292d4406f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24014709-f105-4323-9269-f1bb824757af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a00595f5-b3c7-4994-ab84-2f26fbb5daa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0409823b-5869-42b4-bcd2-dbb873ceb360",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae04398e-0c87-4f80-90f4-16091e8446f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d1dcf0-21f0-4204-a8c2-ad745c1067ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178775d2-44f5-420e-a28c-adcfc7e089f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "786d1af5-9800-4d53-8980-583182dec200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ca3f6e-17c9-43ba-bc41-ee1064a1b624",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e75057-ee82-4e83-bf31-97447506a706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c796e2f9-a7c6-45ad-bfed-54a20782abc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01071722-b473-4102-a3c0-dafae335913e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ce1aa0-1c96-4a95-9a97-eeefc6ea3463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341a4404-80f9-488e-a1a1-6755440f5722",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a53fe78-990b-442c-b976-49e03db03c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c91b0a1-592f-49d0-9f22-c4894ce04940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1980acbe-4b54-475b-8158-325edf305a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "145c1bc8-bda1-4cdc-981a-fa14de707c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56954aa6-b2a9-437e-a4eb-f7c1f0a16bb5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9636f0d9-bab3-4682-97a6-c2843df90492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028f91d7-9b86-45d4-bb70-f88a5ce11f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7bd1f2-cfd1-42d6-b1e3-ffbfa87994b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5063bb-3cc7-4ecf-8ade-da2411eb2f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fb02ec-2b78-466a-8f39-cd8ecd490956",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da31554b-8c78-42a2-8867-dcea770dc9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77ca2fb-4b2b-4690-a084-e2baeb632868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ea5bf6-de0e-48e7-91a3-513532eb3f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b967b943-cf46-424f-bcd2-d3aa99d1efbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76499097-72d1-47fe-96b8-098dd36851bf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cbe941-b5ce-4409-bb5f-5d6c685669bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1929e6cd-d08b-4cc1-b71f-cbfcfc3ad138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ecee26-3518-4735-89d3-99b403019de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdc0f6d-0748-467a-88ba-c1e35191ea1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7364172-c9de-4efa-958d-bfe38145fe81",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8105acaf-a815-4d6d-aa27-ce5e20557d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89740da9-288e-4e21-b66e-800ea2763d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28013f8b-617d-470c-b6a8-4bc9464d85b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2b87ff-aa4e-4aca-9e7a-f3818bf4a420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24630a0-d381-49c3-b83b-58991f598c2f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada8a01d-cf26-4f15-aa43-b05cf9356ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca106e7-3e70-4d5c-8aec-2219306294d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7612b7-5c0b-4ef3-bed3-3f9c7b8f5663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4b411b-4aef-49fb-8247-c17cae4ff84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b0e494-061f-4776-a951-11f552f91f94",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553c7be6-37f6-45d9-acc6-1a8ab691ac29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e36930-93bb-40ff-985b-c000a7bcd125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4babdb-68da-4bbc-afb2-ba6c782d8e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fec3c54-8373-42cc-adb9-f65c1b674436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438c5408-d08e-47f4-b26a-abd6b8421dfe",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2083c2-9104-4a0e-b856-3edec94c0919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22fccd7-b782-4ba4-a758-11a536a18125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47328f21-bfb8-48db-9cc0-001caedf9e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4090ebf2-5119-4c0c-a984-0d99cdd148f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0341c76b-42ec-4471-9255-a1ce860b3201",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3801619-2fbe-4c64-b493-99f723a36bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23813cc9-2e40-4020-b766-7ef6b2f65b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113e1e08-92db-4ab3-9d4d-cc1fb1492f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "981cab25-fcd3-4b2d-9667-8464b06b888a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276c09be-d64b-429f-bf3a-be4bfe40fe23",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e18bc49-1311-4a56-8297-379a5dbd22de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba32e35f-4cd0-4d68-b395-d243c580b828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5dbb75-712e-4892-b975-8e80c2b8255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a124665-9ba4-4a8b-8731-094c9a06e15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b221c541-29c8-465f-93cd-8395824060c0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c730100-221c-4bca-85b9-ae0385ffe232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d63140f-62a8-4c1d-ba3c-9347581e777b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ce879f-73b5-4076-a74c-c23c8e674db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2f7f69-1608-4cfc-a149-f7ae9fbbaff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a9f6b0-c3b9-4264-bb21-10c8fbca29e8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2540a0-74a2-4152-9040-fd6cba96d775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ce6530-f64d-4fcb-962a-8820924df2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94de8cb6-e760-4452-af53-17446414b4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f773cf7-92a3-4606-8bb1-36ed74e31beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44edf6c-42c5-438a-afd6-94893414eea7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b54fbb4-478f-4002-b28f-2861d2106e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17407a8b-ff2e-478d-84cd-c7aa9cd4d9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3062a430-e6eb-4045-abac-06d95c2e561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75a43f2-0e4e-4859-8629-369e56f962d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd90cb2b-b5d6-4d25-9294-03ba2f6a1866",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b9382c-ec48-4899-be6d-fa50753775a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0b8981-8864-463d-a447-55d9077e5f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29eb0676-2128-4bd4-bb1c-395f303120d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab60bee-868f-471d-aba1-8e1c6b42e703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d64ed9-c7d4-4dce-8948-5ba3add628ca",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c194afa-1671-4a04-98ce-65320d071ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b91521e-d50c-4484-9a69-204036f131d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b1faff-673b-4434-be2e-1f29035eb47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "717dc338-9bd6-40af-8bf6-e9115b5d9597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0bba0a-3e10-4dda-8892-cc4ec13fa659",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bba2ab0-fe7c-4004-a1c1-391c118e7098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3001b91f-fa58-4010-8965-28faa0edae67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad037838-eaa3-42d7-8585-2088c9a385c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec5616c-67d1-416d-98a6-83a91ab0615f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86afa5c5-c89e-486d-b452-9b839cd6ada2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3b2ca0-8fe5-40a1-81a0-4cb46c1f0ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a3e31f-4010-44eb-8906-e7488e2ab724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f59a26f-1042-4b8e-a69f-57e99c6ecd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "926bdb73-53bb-47f0-b046-35ecc0e7bd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd39fffe-87dd-4887-a1a0-3d362348fc19",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a219543c-41f6-410e-aad0-8292b63f4825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64aab427-e478-4792-ba6b-279d43d704a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d9731c-2286-4d9a-97ca-074e38bdb280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f515238a-4171-4be8-b503-c0bd03bc5c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db99d03-a10f-4538-9c47-45c49581280d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ea19f7-ab72-4b2d-b5d0-85092f66bf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a68b7a-58ac-4512-b988-741a7f574274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05b6459-e3cf-48d1-a772-399c6b0802a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8de161d-ccd7-4d9c-afc6-612492c32b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6372246f-d6af-4dd2-8fdd-b9531d63e082",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e685a12b-3966-4604-b012-7efd402e036a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8299011-d213-4499-851f-b86706882f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a02b8ca-4774-4bab-a59e-e8aa7faf215a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "491b1c76-f164-48d1-9f3e-15bd2df0b3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bd1698-27bf-4b63-b2da-20c3ae571333",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48390b71-5b13-4cba-8075-77edc210aa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9015292e-226b-4361-92a9-0e44d5229939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06019f38-f7c9-4a85-9a55-031847e0a1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e17efa-9486-4d82-9af9-a1bb55a970b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb2c3e7-0dad-4528-a845-0a8dde6ab958",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a36ca7-f88d-4a9e-85c1-72d9c679aa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d35cbe2-2dd0-4229-a568-584aa86b80f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42665083-8f6f-475b-a9ec-588da3e24084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7089303d-64ec-4c51-a27a-b885b7849cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76112191-9284-42fc-a524-a539d6a89013",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac88738-c1a6-4cc0-930e-1e01a08e3eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7bb732d-0413-4910-9538-60c426d0c089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc620d20-bab3-4679-ad0f-e87ff4040814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22bf1f17-465d-4b12-ba4d-c376a025ca62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6188eb3-5700-4edb-b85b-56f83a9b41f2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945b995a-43e2-4d54-ba5e-016f81874f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cba94f-3b94-46a8-abbe-3405e58adecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da77f510-dc5e-4625-b82d-c81377f442ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6dc9971-dee0-46b7-95ee-5d34b412f0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c458184f-a03e-4fd0-abf0-64d61e29630b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7692da-3005-441e-b26d-74faf9a563a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b2ea14-6199-41bd-b689-f3dab2df93e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b091927f-5971-486b-8996-d457e9828d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8643866-de72-4135-9f38-617c357be5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac3dfbd-dadc-4bf2-97b7-5f9290a2661a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ff4739-8ed3-4f56-a562-48be521fcc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5becec2a-534a-4ddd-92da-a2cfb7d85add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cd0084-59ab-4f81-a366-5864b02f3070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d50aef-c3bc-4914-a1b3-6914a642606e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8c8fd7-3d16-4902-a142-6eaa4c99be94",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c406e3-34b1-44eb-aa78-be580898c3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258cfa2f-227e-4582-9714-efc637dea542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2695caf9-e6c7-442f-a879-2b96cae8b282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6342ab7a-27f9-4373-97af-ec6e5f9b50ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bf5948-88b4-4578-9743-9c246d73e518",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8287553a-772f-4a73-90ad-0e1137ccad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc50142c-419a-416f-8b06-075ec00e0a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f45d6e-e4b2-4278-bd03-f10aa9fe9b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "49c8883f-1971-43f8-915c-29a7546eda31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a52b6bc-81a1-4de7-865f-1a96d08a5d59",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59c6737-1f1a-4506-a74a-8d052cc63572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f71312a-45b3-4e43-a8bd-5ae50e253705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347ac571-c7a2-46f6-8c21-cc6f6b9f00f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a4ea40-416a-4e5e-81b2-d6cdf0141e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636978cc-6b03-42d7-a49e-04e78534bfb7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c8f2d5-ab92-452b-aec6-0ace5263a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0935349d-79a0-4616-9fc6-951050caf961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae688f4-fc62-4db4-8d12-2cc58df7d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "953e9680-5918-49aa-aa68-0166fab864ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de51bfca-ce72-4711-83a8-50d20c8048bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0985d5a2-6b5b-419f-80e4-730a279915ea",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a2e0d1-639a-4dc8-97d9-c0c22ca12b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e1e2392-b90f-45aa-a176-275147abc174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20fd0ce-033e-4fd7-807a-a071de2d86fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34908364-6785-4a37-bd34-6e49162f210f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df2b8788-313e-4d7e-b94f-41b43e9c25bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4febc2f-c6a7-4cf5-b2ff-9642f10daf08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5dda8908-cf70-4516-8bb5-00a7e4d398a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71ff622b-c0e8-4fce-884b-30de983161bc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e99bb61-a3a2-497a-8820-5cf7f1368742",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5283344b-ee2e-4169-b092-9729ba1f88ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a06d810a-3405-4398-86a4-2fe4b79dbd6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcc08c9b-547f-4f02-b43d-6f2d81714610"
                }
              }
            ]
          },
          {
            "id": "d9d3fedd-e319-4053-9ea2-3995196bd201",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd90f2b1-7aea-4ca7-8930-438c902830f3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3dd75d94-1da7-4f36-96e2-464cf36c2446",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37331ca4-409b-493c-9074-405bf0069a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9bcbfcc3-d887-46c8-950e-0e45cf3e9322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6dd128-0159-4653-aa59-cf812af74199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7f9837-091c-4ce0-8a93-bfb36d15a413"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3c70bdc-4b0e-42c4-938b-8450d11d6934",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d68e24-dd5a-4172-802e-42df7ad1e288",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8adb3bee-3d18-44ae-b937-3eac8f569bdf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff6495f2-f010-46b2-9bab-5009906251c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4de5a551-5b53-415f-b0f4-77e1f79769b8"
                    }
                  }
                ]
              },
              {
                "id": "1d5f1cdf-dede-4673-b305-e7c1c6c6566f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bf49253-d01f-4b8c-987f-f350be81d45d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f23b8ee-62c5-4949-aea2-c76ecca307ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60b4e2f3-d4da-4460-99ac-98db81671ba1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44ca2634-e532-4336-abb9-e1146aed1a6b"
                    }
                  }
                ]
              },
              {
                "id": "54c9e4e8-12e7-43f0-ac7f-76bfb3fc6597",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e57716c2-b376-464c-b069-43460e99d11c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5604822d-8070-4740-a022-6f1daf6b75a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81437bf6-7d3f-4985-a227-ccbc8b6785d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "37cf5bdb-c94a-4246-8245-d10bbbc635cc"
                    }
                  }
                ]
              },
              {
                "id": "ed4964c3-5e95-4623-b15d-ceee43beb3b0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49ea71ea-dd8c-476c-8503-c22db0c8cbbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4a8bd75-eae5-44e4-a59b-ba23d17ec2c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bacf9299-d42a-484d-98a0-5af4230024e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "415b6847-35dc-4702-bd96-988d8e7b1093"
                    }
                  }
                ]
              },
              {
                "id": "b49e7e79-6001-476b-acb1-05fda64d77ba",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "878a89db-dea0-4a28-a5e2-545082a375b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ce65adf-c0c0-4d7e-a5b0-7849c39413ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39a56ade-d229-4a22-aeae-f2d2470b4352",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "86ae7c40-42d3-44d0-a1c4-1b7b98024076"
                    }
                  }
                ]
              },
              {
                "id": "d272904a-1bad-4236-b49f-6dba76c502cf",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64d348e8-9f05-4fbf-b1a0-62967cb6b478",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60b5247d-39f4-4400-9841-1b3b591bca2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da4fc341-5b16-4401-8ad7-bc5bec70b7ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bfb7d735-a298-49b4-8fb5-d612487b961b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10f8dcf5-e289-437f-a343-45909c60a7db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06bacef1-8e0c-49df-ac59-2785b3069be6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "624d025f-d771-48fd-982b-6da1ba04f691",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18b47873-fd8c-480f-9839-0a35c15699fc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60dc9d9d-4f60-47ac-8595-ed2b73982bb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "30fe4dc6-a59a-4726-bb7d-4345be4799a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51bf7dd5-0bb3-4bd2-93be-cc3da1aba5e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b324393-ee44-445b-b783-4b41e1f69abb"
            }
          }
        ]
      },
      {
        "id": "42648ef6-b21d-4718-9978-86dfdc68a480",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "18b51267-ee17-403b-8dfa-5ce8889f1e62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3454b7d-9a04-4e16-b9e2-18485512cf53",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0de4f52f-a545-47bd-a6db-4728484c1d79",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0d758a-4384-416c-bb44-ba397f4fa34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965787b2-d8fb-4fe6-8f75-e6cc76d5ec3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e82c8e-83cc-4aa0-8075-0df33bb740a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e6a691-7999-474d-b194-801ffa4dffe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54da04a1-2107-40eb-b03a-bbb3d6cfd97f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9a7075-8552-468c-a034-f10da27ecfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8afe23-be36-48ad-9bed-1e7bd2c6bfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c69b2c2-e93a-4eda-b5fa-3bf152ea5d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c441a2e-6d07-4cad-a86e-7a2cd0485fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518b4fd6-a2ba-4f33-8b42-632d0cc8b346",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7e33b5-d1eb-4344-8463-b1f982936c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab66b3d6-1a76-4d00-8c16-a301875f99a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf45ab9-b8cd-4ff5-a35a-12544871277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "947a3877-c6c2-4531-85fb-bceacf5cc708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934bff1f-8750-4fba-8ecb-58d2ecff4f6f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fa6317-1764-49e7-a8ca-29624173d89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b62725c-b684-4c28-9e8b-33426b982a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac0ad8e-52f3-44c2-a72c-0ae5ae04de1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58a12488-dbb8-4d8a-bfd8-692bb04e433a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5789fc64-76e7-498f-9a04-806e05e8652e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea12f0f-4091-41be-82d4-0a505e133a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa936bf-938d-45d8-b173-304900b68826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39270a5-4eda-44f5-a81f-c6aef72025d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aab0a90-9396-444d-8d51-e67bf8ea305c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0d51b7-5399-4884-a19b-1c54f4608326",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b5156d-d803-4c25-a076-084dcd80c5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f107a686-8e6b-4201-b78e-0aaffc6c5bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aeedfa-666e-46fc-b6e3-fb203ed7ad07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c277741-1c3e-44b9-a77c-84ca30f6c589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ea8cac-77d7-4cc5-bc90-43deb579a7b9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf9e133-7b66-4587-b1ad-d007ab58304d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ff5a6c-169e-488e-9114-1f6520d0e797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2061ce-0c90-4aa3-891c-655d87ebd12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d302a095-27ec-467f-9d0a-a0ded38da7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e8e5d9-56cd-434c-99f7-c84ad3edc169",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4334810-c469-406f-8b18-ffe9eac5a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e048af1-4f74-4961-8fee-ec88c22d28c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dadc4b-f295-49df-92c6-b5c06fc56de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f3a933-d668-438f-b5f5-448cb5c67494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5ae34c-ae4f-40f9-a80c-8da0a48b04c1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0289ea-c7cc-4144-81e6-95e2473063dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d12aead-30d1-485b-ac2d-f9dcc2c9cc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4742f2f-fde0-4872-8703-5d38c0915a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4388e69-ec48-49b3-94b3-dd33d0f3ab98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45a9d2f-2671-47c8-ba4e-79ec7a7e9a4e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08d4717-0965-4679-aa95-c40ba5cb2dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8d6b45-cfbe-47fe-83bf-7648a731bdcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96319405-f80d-45b1-867c-9f988a42d529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ef33e0-6219-4494-93b4-8437864295b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aae2da2-dbb8-4041-a592-2a2845416dda",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae2b1b-e843-47d5-b091-032dd6aa07c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500a633c-6733-450d-aebb-23f559ed716b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209bfe12-e09b-4182-b75e-1e4ef62dc35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "70f94438-c7e3-4e61-874f-830ebfcb56a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf8497d-53fd-45e9-bf37-423fdc5ecdb5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46015e77-ea13-4e91-9ee3-7f224edacef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb881a34-926b-4547-9229-97aa5ab8e2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120ea4cc-1452-40a5-91ce-b6486e34e9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4d4e97-48ed-4bd2-a95a-02a3a83814f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a482460-4306-4047-bf78-0cdb6b748746",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e151ed56-11a1-4348-8513-ce00bb50e52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79f4d94-8e20-483f-ae6a-bc26b4929df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bee594-aa0e-4d98-9442-0a4db2d8eb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c2bb29-c0ca-415f-b689-8c93a715d11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9a3e0f-b4bb-4c2a-8e05-c85fa268e226",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d4b7a4-f38c-4f63-b0c5-489c20ad46e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b110f5-4851-4b26-801f-f25f13f47cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adf1cf0-1cc2-46a5-9dc6-089b3b0c4407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a96e07f-c912-4e1d-85ba-1678ca96fa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ad72fa-1dc8-41eb-b8c5-d86de6e73051",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c489b98-952b-4585-8145-d81acd6ef6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791865b5-7eb8-46f4-966c-749a0cf23a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbbb479-358b-4b34-9c63-b7092728a66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c6562f-cc47-4879-b4c5-6fe3c54b9594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46cbd07-4175-4642-b1e8-b203555b068b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034745d1-7c27-4ca2-9a4c-28d4032af865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5ecee4-ddef-4711-8dc6-6b6c472411a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03f2cd1-c638-4aaa-b87c-51658bccd475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "51a031a9-fbb0-46aa-8a54-a10868223518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c00bffd-7681-449b-9bfa-de3fd24d5b87",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4507e2-6aea-4dd3-8a6b-faa5857be94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a89968-676d-4f37-bc87-b1743d4701e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb36476-ec74-43b9-a6cc-4a51c7b63849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f6e76c-e041-4dac-887a-a7b6039761b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69f2853-7698-421f-a013-7f39bbd749ae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c727307-2d71-4dc0-ab1a-4a422537bb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f3c41f-e4e3-4d7c-aaf2-70aa71bcefb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e7cb75-8e9e-48c5-8fe0-922c44a8f003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16e280e1-16f1-4feb-b4f8-87eb54171d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fada50-a814-4b59-8c19-041cd9ea36db",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b01648-51f7-4b40-9ce0-7c2471641ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05acd1f-3714-465b-ad49-c2948a9f7919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b230fe9d-b249-4af3-8865-40fcc3fe2367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7484786-9382-4e26-a193-de40bb4c68f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75b8b4c-bca1-4e69-a69a-9157027ca49d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6740ae37-9bcc-45a5-966f-1c1b9700fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068bd084-476d-4124-8945-a633df11e2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e614bc72-fe0e-44dd-82a9-64beddb6c8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfc3061-a95e-4ad6-bc52-574ff03bb1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202377ec-6ad5-4367-bf1c-d469defef1a4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116cb5d8-6307-43b0-b6e5-1c1edbc6495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683ccec7-f813-41a6-8a65-fdd3fe9da5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b5fe3b-f1fc-4351-be8f-87fbbb38fdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6bd885-c550-43ea-bdfe-9770ee19060d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f35a25-c909-429d-b42b-1a2c9db8db77",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f3463d-56b4-4ea7-a6e9-2fdd81eb0ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dbf94f-fddf-4e00-aacd-bb8881e1637d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d54b76-793f-4068-ab78-7fe2ff8736c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64f5ee3-021e-468c-9cba-a05619bdaebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b81f456-c3d0-42ec-9b76-413bb200a3b0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c49fb0c-5d58-4420-bcee-c73233a6eb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa816106-e992-4e1d-9473-0d2601aaff6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6aa5a85-9b47-4616-849c-5796bbd18ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6252aae-df18-4f3b-8b04-7507f8b1fe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccb150b-00e6-45ee-9543-fb42ec975989",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c07132-676f-4709-8cc5-6b547d094862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f1d5f9-e009-4c05-a2de-9ace46175a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a24b53a-b006-4820-a8a0-3dfa75a3643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4dc499-73bb-40ba-8a19-03a6fc11699c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a984e0c9-abf2-4fd3-a08e-982f1741931c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f324e2-f4ff-4b1a-a253-659ab36d193c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1d4084-a9fe-47c6-9a7d-5668af610c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e02a603-4520-479d-8b75-419faf038e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f850ec77-5934-4673-8312-03fde4ebcbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c3deed-df9b-46ae-b7de-41d81b38c49f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a24c5d0-9a02-4bdc-9e53-488c5b2241af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c927ec-6e41-4c54-8597-49905a1c6863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa831eb8-04e1-442f-9700-242c59769e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d085941-fb7f-4e44-ab18-adcff6ed1928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc0d75f-b3cc-4b74-8310-4605421b43ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd50876-a998-40a2-8eea-85ef09eae37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8373f2ae-7029-4237-a9a1-6de04e5edc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93bead0-1eb0-4ee9-8e83-c7ae534ff919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61fb7647-d5df-4dbf-9ae9-08def646ecf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8207eaa1-e475-4658-aa67-1b398ff9af0c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f410ed5-f372-4612-aae8-afb29f3a5e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e600a077-0ea6-4b4b-a22f-d436f0d144e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aae48f2-a6c1-416b-aac4-510eb52eb7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24471ff6-8da9-4dec-9205-5f57d3d8c977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9363ba7-bf7b-4eca-bbe3-1f2f8d4c5baf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1bb1ff-f3ca-42dd-8ec9-dbeb2206af4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9363c1ba-94c0-4c8e-a462-27be69592a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f114547-be66-416d-977c-87cdd8a61abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae41665-f030-431f-a29f-3d574fe70411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f34c0d-795e-4040-bb2e-bd6bcc424b9d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3270b6-2f2f-4015-aae1-a754138bdc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2916c14-931c-4b13-960a-c58a15700395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40e0024-6ed7-44da-a6e6-7fbc91b2b201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be57d369-091b-4052-80e2-c1edefd4f46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1645329d-0f96-4c9f-914a-f9432cbae3ae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b1235e-6b25-4ef3-a3e2-625d3ec983a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763aef80-9841-458f-862f-5b13071e5714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a751e410-27f3-4413-a02c-57220691a719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d7fdc7-b66d-4b45-98fa-b1d308eb3bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3e2d2d-5e36-4891-aaba-beca639fbb83",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b2fb9c-aa65-4d2b-805d-49776323d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713277bf-4200-4710-8f11-03162c9ab3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4f8783-805a-48ea-bf82-2873fa404154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b6b0a7-123e-4ee7-9754-c9b499a228e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ed47b38-797c-469e-a55e-773a1f36a582",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01f06d2b-36e6-4713-9f3d-0315d0384e5f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0170d592-c196-40f5-87f3-a0bf3bb2d13a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2c9695-b5b3-4a0b-9be9-7a3c8a9ad056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9e82a4-9010-4dc0-a887-fa01f8f65fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5277dce9-5aef-4ea1-b0ef-b82186b4b404"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e5c46a0-73ce-4378-8995-912911a6a9c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cae8a134-626d-49b8-95b9-182ff791b098"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4406287-f946-4dbc-92ce-e7326c21d279",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb2bb55d-0826-4350-b68a-543aca22ed95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "740f8027-cb40-4e8b-8206-3c538b3a8a0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0214c65b-6fa6-409f-8133-d85aea9941c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4abf893b-932e-4aad-aaf0-a85cf4b9ecd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c2ec22e-d831-4c26-9bb8-b0d665cf5bea"
            }
          }
        ]
      },
      {
        "id": "3a9448d9-ef28-4e5e-b037-18940f4206c7",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c8f0f6b5-b1a8-4ce3-85f0-26c3e4a0208f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "676f3a69-8c36-4e4c-ae12-794a50143486",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "99b8a1cd-4c7c-40e0-8c24-400e4f6d9983",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e7e762-1671-48a7-87e3-051d0d874b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cc0f94-d835-4c85-9b7a-83c9f2e92e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a55b8c-ecd8-4127-a703-c2ec97315767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5df5e4-9c12-4e58-a7f6-672ba93bbfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032abf7c-916c-4007-b5fe-6b36c4823533",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8b6e9c-623a-47b8-b120-86ff902fcd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d93311-87ad-4c23-8de5-584065ce0ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f384c746-698b-48bd-8311-31d4ab91c85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a45e5241-51bf-435e-a37f-c5e0a3f2cf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e6984d-ed22-4320-9889-de511bc88f11",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca56e49-345d-44e9-b4af-f1048032eea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64fef6b-96a1-47d2-a82f-86a0ec7d021a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f54dffd-a80c-4e13-80c5-dcdcfa25b770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43a5671d-7cac-4c02-93c1-849caa53a0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6884019f-60b1-430a-9661-5f7581451cee",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7403c2b3-513c-48dd-a7f0-0fb5b8ed0285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd526b2-f086-4bda-b246-c177d1ffb1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053d356d-935c-4736-8d0d-56a24d467ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bdaeeb-1c39-4025-91b7-f5fac2fa4cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8f716f-e1cf-4e80-b99b-61d77867ba53",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21015ff-4a9b-4b34-b3df-3deb47554ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109ab495-8c59-4b8e-8698-89459accccbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448ed573-00d2-4676-ba7a-d5da60c061fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12cc7ea1-9d2c-4ef6-896a-333185508040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f387e78-4547-4cec-87a9-199a4b6c08ce",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae28716-9c96-4dd8-9d3e-0dd4c47cf211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a0dc68-ee7d-42fc-af82-15f53d42ba87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e979be-59c2-4951-863c-04afcb006e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27c68aa4-cb1b-46bf-bd48-1de60a8cbc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a5d9a7-d9aa-4e3f-bd39-486187021442",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9dd9c6-3c4d-4c12-802d-7164a9a68daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e5816e-2b82-40fa-b7dc-1f1d39071f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05819400-186a-4c80-a373-517a6d927ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda4c3ca-505c-41a7-85f0-6adeeb527c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f307a70-f8c1-4e75-8822-23cb91781653",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e04e01-41cf-4874-8bac-0a6340010292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba79873-ca27-41e4-b837-88bf63c6d7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc7d72f-365b-4b84-824f-060c072729f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc60fea-b4e1-4dd9-8f74-8c9654b0f718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51fc258-ab7a-4db3-b2e3-8b42e2a469b7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d833104c-a8e7-4f37-b30c-5188ca412317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e534261b-045e-4a45-ad9d-f5d98dc333cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c82ca99-3c8f-4a17-a8d9-6a8f53f5765e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3590d1ac-b6fb-4466-ac51-e3eb261faad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056bf04f-40b1-4316-beea-5ccc9939877a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265776b9-62ea-4b42-a769-00aba7b2691b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac547b99-e629-456a-977b-5cb9b904fb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540f7f46-eb08-4806-a96a-1932743637d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dccf2f1-9894-41dd-b2f8-f25e7b7e29c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec56646-4517-4b5c-8663-0c5dfcad66eb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07c3114-1e28-4c9d-98c5-23f990074da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be4e77a-15d1-4b25-9c35-d21ac7d09423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc5447e-2630-4268-99a9-5b966318b51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e143c755-501a-4772-89fd-95cf27afe502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff62701-8cf9-4562-95b7-3cc0f6469308",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc97d728-22d6-43ad-ac25-971a5758d3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493a7f43-4f40-43f9-bd15-075b52703f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13f96db-7e66-45e9-ba7b-3a7984e633a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c79cf95a-005b-4688-b148-8fc2676c384c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d8c829-417d-44e2-a77e-9cd17a8c109b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f121220-7f5c-44f9-a70a-c5d54c2be8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227cc146-721f-4f79-a0c7-58820587cc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcd6047-cc63-4700-b13b-f19f2ad67941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d971eb61-2dbd-4fc5-a3db-fbb266e53f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f5012f-a678-42cd-9bf8-2728067d7c61",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c68f2ee-d7d0-416d-9c9d-26eb00f8d2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeda53c-cdc2-4143-a445-67f4bed21ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c521297-1ccb-41f8-8919-e17e33b2af18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eac7b10-5f46-4b2d-a1e4-731a40e6bc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbae65ca-9db9-4182-8288-799271b78998",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da65331-a27c-41e4-a2b3-68f792547af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd9ea29-9d31-4ef2-955b-7721e88b7496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ef6bd5-2441-4570-81c1-f1b98bfe3da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d716dbe-3ff8-4226-bf9a-6170483ba663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd38d45-0255-4bfb-808c-e212bbbd8aac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e912749-ce62-4e7e-9e0d-760446732372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414c9172-894e-4861-8131-60890afef718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe95c221-feaa-435d-9efd-5580a2e9a155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b48e347e-4d93-4a3f-b1ae-63589adb0c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5817d3f-034f-4e27-b50e-2a206f10afde",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1be6604-823c-4eba-98a7-979003265cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec48844-d18a-47d8-aa35-e0acb5bb5f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e09efb-1df0-4cb2-b763-e1e2dcd06f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed55945-865c-45fd-9b31-edf0b53ce76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffba534-8705-4601-90ba-cb581a080f3e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f135b80-4883-4b78-993c-8e79b9ebce5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db58783-6772-4bde-8ff6-214141ea4730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc87ecc4-c6b6-4354-bdb1-451b1d536a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7f4823-e75b-4ac0-a717-76576682c8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239587e0-88b8-4e68-87d7-f772b4b8eea3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728a044b-39b2-4372-85fe-cbb0a474356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcc08bd-2a1c-462b-8e8e-f90d116c49c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca108f6-814a-4d3e-a3c5-6686dda6d445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6eef59a-60bf-41fe-a0b8-4867fca006c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b51f88f-bcf9-45b6-84dc-4856f457a5ba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797813ec-659d-4568-a37f-640899ecc141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140cc48a-f422-445c-9d93-f4a36b0f9082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c65695-62c1-478c-8eee-f79414b75f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df246e6c-af2f-444c-92d4-5ed1261d044c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949aab1a-1bbe-421c-92a5-51b26ead0f15",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727bfd2c-7ca1-4ddb-aadd-16731a86f4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd822db1-256c-4ac9-960f-81fb70fb6a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9f6b69-d376-4b65-ba3c-8bfd4935ad54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12dd3f1-2466-43a6-90ad-10a86389a49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16183c1-2e3c-40fb-8e86-62b90541be6b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e4a3fc-2b34-4d0e-b919-d24573726351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06893597-ac52-4a56-bf8c-aa4a4a9efaeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafa035c-86c7-48ec-af5f-83a93af91204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81d18a5a-cf97-44e2-8075-e1a41e72ec2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90913b64-a5b7-47d6-8e0c-12ebd0eefb11",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907b9e6b-8c66-49e0-94b2-364a09f58ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece45ada-f0b5-48f1-9f05-0bb29de14e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9239e3e5-2635-418a-93e9-492647e70bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a71d205b-846c-489c-8f47-7e5109600b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867c3feb-7741-4faf-97cc-567c3ddec2fe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ebcfa7-b1f7-487d-93eb-aed9d46bbfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06a5284-0bff-4233-a3f2-13948b280691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fbb26b-d3cb-4f4d-9aaf-4f00b5171c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4b4913-ee8d-46b3-8826-c505217c764a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38041009-ac68-4a63-b877-36cc0f9ec348",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f79a424-beb8-4ef4-a2a0-9abd4b2a8968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81a0a88-4b3a-43fa-a751-0f847efc5bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aae31f5-2f62-48f9-9ff8-f456956439c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8df3ccdd-3f97-43a5-9863-5ccf08115bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca61ae86-c9bd-4bb2-9bee-c8d1573e811c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2d2848-f975-4397-92c8-6a68660317f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bba8e97-5659-4aef-853e-28befbb08a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c564e03-0edb-4d86-b915-dc490e1ca88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2989d9-7554-48b8-9759-32dcc0f471cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f90801e-841c-4030-9586-9f8dbeeb73e6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d834d0b-8b27-4a42-b9e4-455dd61e0084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773649e9-7ca3-48ff-9b5c-ecd4c3fdbcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c048e3-c96a-47da-9cf9-5d53809fc6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4806363e-f3d6-43d5-94fc-c2212933b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47818060-3be3-44c1-a11a-15fd974483b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f96ea6-58b7-4934-bdfb-ac382854a821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477c4aab-518f-419b-9712-2b49ac79469f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735081ae-d4ec-420c-b5f7-0385a057f2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8851facc-b443-427b-81b6-5e3ba12471b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f78928-4220-4064-8318-d330bfc8006e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b1d781-37a9-432a-841d-79b8d8feb85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3aacd4-7a8c-4515-a334-3af96c1fe239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b4b5cf-4fd3-4d05-8c03-2528279cd685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9847ac1-dd8b-4ba6-afb6-16db3ce332c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caff2b0b-2ac4-40cd-9041-fdefba5b2e43",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8581d03b-43f6-4dbb-9df6-000615836c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cff421-90bb-41d0-900c-8f8ce8d1cb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a06aa3-3309-4399-b2f4-3e529cd60e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4978756-270b-427e-bfd6-242e8e3ccb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec44c8a-9d4f-4758-8f7c-09b9bee31fbb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171b1361-d2a2-4cea-899a-2a52d5befc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720d91f4-c6fc-43ba-be42-4c23aa2be0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db976aa-e818-4479-809c-f325e7fe67b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c59573-42fb-47a7-b38b-69978df51cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a81bde1-ebb8-469e-b3c0-0b27af1ecbf4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868019ea-8544-4f68-9058-5e051fa68361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1a7299-7dfa-46fc-8003-cdaa026a17a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286021e9-19ba-406f-9310-00dafdd71204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6a2266-4f68-42c0-9891-43ecdf3ff32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4fea17-f777-494b-8e31-a8e4574e94bd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42137041-3b3c-4744-ad6e-39e2e9765b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491946ca-f14c-4e65-8da4-180a59e050d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d627f4a-589e-4371-bad2-fb4b57cc1c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab528d88-f42e-42ea-8318-35af2e78c7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab807edc-eba6-417e-a97b-2c8506e7e0f8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310dfe72-a7b0-4c84-9eb5-87990e99bdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a542bc-29b1-40bb-bb3b-4acdc6a4ec1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032007ba-83dd-4907-bc89-b820a03283c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "638d43e6-7da4-4394-a4c7-a28fd373e045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d195bc92-2ded-465d-a07c-de3bf6710aa2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7687818f-7449-4290-9fc7-452d241ec72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325318d3-f0ec-4b3e-a8c3-cd174821f005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603dd916-4db4-495d-9963-24217f9c892b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba91f7f-aac9-49f3-a1b1-6efa62c9afb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38461ed-dae2-4be2-98b7-abea30f2ebc7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fbc45b-01ff-41e1-a32d-793dd769ea11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f80732-d14e-4d23-8880-6c527f2dc53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae9cc37-a04e-4599-a3ae-e35cdf81057a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "747b7255-761d-4581-9b1b-4a95befea4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d68392-c79c-408d-aff9-6120cfd87aa7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e689e2d7-ae97-425c-aa9a-49fc3476aed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cef37cf-3bb7-44a6-8940-c691a1cb4261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a329b9-6e86-4ce1-9933-ec77b49e749c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1ed7e1-e5bf-4ac2-ac9b-089bb499d52f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "223abd98-0f79-4425-82d9-468f1a822755",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a68d3ae5-d36f-4c9d-9e67-6c9f723a064e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3634658b-d4e7-45d5-9546-6924ae3727b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "91205d23-5571-443c-8a4f-8ffb0f9daf62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf9cdda-5d4e-4988-8643-66090e356c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ee3b7ef-8f00-4c5b-93d8-082096985f96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f6d2d34-f1a3-465e-8ea9-cefc6d609ff1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8649792-10fb-4251-9994-fceb985ee69b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f071b34c-fad9-4cce-84f3-e57b624c5ad7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bb69698-fae5-45c7-8806-f5e73c21da79"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "314cf086-2064-4993-b016-c94386bd7000",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a93e757-80c7-418d-b6e4-7317e4524139"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0ced1f6-d9ae-4b16-b139-16806f64fa53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7401d3c-f9ce-4a6a-a9ab-6dbb24b4bc60"
            }
          }
        ]
      },
      {
        "id": "c56a946c-de53-4545-a641-af8b26e6995c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "356d98e0-a8e1-4e80-bac1-7db47331fa1a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "67258e04-91e5-4332-b37b-ca27d0a9e7e2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ec93569-b676-4f4f-9c69-51cc55946e16",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec5d47d-c261-458a-87d8-8b30be61a9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc38e59-f4fa-45fe-9846-dc0e465c3f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d617e8-3b05-42d3-aed7-492b3c7b07e8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4270e24-b693-4406-9276-804ded3ea689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d9564a-31aa-4926-acf0-f80fa4143395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb865ba-f5c1-4238-a4df-5584c978e792",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718b795e-3c75-4775-93f4-82fbd21f37a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beeef103-b0b5-4ab9-84a1-e3b4d35ab53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c5d5a6-cc55-4808-8840-e4eacbedbfd3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e60369-0026-4742-a815-eeb41c2eff1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81b4a6e-ab5f-4bdf-ba50-7047d3a1dbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb18d64-4a11-4c25-809d-d5929607d8b2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6829c870-91fe-4f63-9e89-2ad19d77a7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da147fb0-aea3-4462-bff2-68d6ef4035fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533b5b2d-ba7e-4c8c-8301-f30bf6df0e49",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef0295f-5157-416f-9557-7a30f437da29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda258fa-9818-4732-b134-823475b8c1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bed1cc3-26e0-4eb6-9c03-4ed5eec8e1ab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b89c29-2003-4e36-b0ed-fb0ceaa87dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f7368a-6ac7-4c48-afe3-2edd780cba2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8999affc-2bd5-4b19-aabb-d2b4ff265953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863bc364-b7fd-45dd-9642-f4c93bf1aa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1593a517-1cb4-45e7-8dd2-320d1753f70e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c82313c-1e76-41a2-9952-c011458ff11b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796b93e2-7daf-4a21-b982-c5ed856f8939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df181c67-0b2d-4252-b279-29c2c7ebf2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73f8267-2cd7-4897-b0ba-885e710d35c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9b16db-120f-4d22-8860-2f105c2d0073",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d40d79-6ab2-4b58-9752-b44a6774e78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b34e7f24-d7d6-441c-8d5d-f9450737b700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b82fe4-fd3f-43d1-b15f-8e2cec74f0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e65ebf6a-f11c-4b66-8d0c-83e12830c8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3103a5df-1d0c-448c-a3cf-d16a090a3a03",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3c11b5-dc30-4532-afe4-7f1c123ee8b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786e736f-9e80-46b1-b3a6-c141b707b628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393a1f9d-2a01-4a5b-b584-c36f0d23a445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff5e401-119a-4b4a-b929-3bfa22b5ced0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca537bf-b71c-4318-a2e9-e3c1c16918bb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e35eab-d4d9-4ae2-b90b-4c75c0515ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b304f2-aff0-4b1c-a30b-da6b012daff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b020fc7-225d-4044-8e78-9cac296f5f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225fd2ed-63f7-4985-a50a-ca3142242ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be117a64-60e6-41c5-8094-1941ce32510b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d7ca9f-b69a-42c4-b349-51338433d2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06931cd-656c-4b4a-9db0-0ac1c20b525f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6990a862-2635-4a36-b2ca-55674d7fc1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a340f2-fce0-410e-b435-d0a3292421c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4c0c25-d339-497e-a42c-5b6862eed7d8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04634b3b-ff09-4ca1-a51e-b9dfcb33559d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c49b5b-0c24-4a55-94e3-72c1d1b87e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58491c05-5276-4c9b-86a0-e1f7f923e91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ca1ec9-e67b-4f6e-9ea0-4f1681b7942e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d20feb-7510-4e70-81f7-dbe6665a7f2f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f9a80f-1a8d-488f-8eb4-15adff667178",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037e7432-dc3d-451e-8e23-cfa7a6ce82d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8947491-64dd-40d1-9789-891dbfe00348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958ea406-c780-47af-978b-b8b078fc4934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d795127-fef2-492e-882b-ea6b1ac00504",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae884aaa-580d-48e9-86c6-3c0ab410b187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ccff13-1cc2-491a-a6ae-0037bf8ed5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c0d471-70b8-47ef-9838-49a5bf6ccfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56894141-4359-4a9c-9857-7b6f935c285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac8bb20-b816-4f72-899f-776b1c7466a5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1408a41-b6cb-48ee-b8b8-9dd0e47b802d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9633c8a2-8946-43d2-8d08-875f3d00c3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3055cabb-c885-4ed3-b110-94c33314860e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d19710-0e35-4114-8bf6-c6aa9669b290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fb2a82-7d32-4a6f-8e98-eacc0cbf4a28",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5a87f8-bd1e-4319-ace0-7b226ef18853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8826f98d-5d55-4e31-afd1-f22c42004bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce40921-18bc-4f95-85f2-0f21cf7f026f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb022386-51b7-4262-a87b-478a92097512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb194f67-17fe-4290-8590-2e86d6e8821a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad9f74c-d307-425e-b550-fa759f316d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7dd067-90f4-4e5e-83f1-96ed8f932992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "764fe532-a6e7-443d-a8c2-35ebe6d8d925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1c9738-8ae8-487c-bf86-98cd0d8767a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5eb7d4-fd3b-46ef-a5b7-5e4415225862",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af15d78c-7fa8-45d9-accb-49718320c57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2297c80a-16b7-48bf-a5a6-7fcb160aed67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065ceed7-685a-4b5c-9d18-59737419dca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1965a5-f21a-416c-a885-c81282d5decc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea28d669-485e-46a2-8980-a671006f370b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07403da4-74e3-42b9-a567-fa2a104f0e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04a52a3-aeb9-4ccd-aaa5-c8c7812e424e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405960d7-e66c-43fe-a8be-7f0d4ab1ad60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b6236f-694c-40d4-a151-67dafc809116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6136ab7-d5f0-4537-bc72-aa0d70ed96d6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19be904-0131-47d6-a1fb-c189d0d9510a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c75feb7-4502-4a6e-b8ff-e89b99d3e072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7f27d6-4626-430f-941c-896bdda88319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ff5223-ecc1-4cf1-9568-16bcf57a2012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492d8da2-51dd-47c2-b369-36cb6edfb277",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce54360-9379-4df5-b4be-8b45df3f40b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b420975-4b84-4ab6-a834-90e03afea756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4e04ae-2120-4f36-a7cc-0f5e829523ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5adbff-44b9-4bce-aa1c-60027b268954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8627be19-82fc-4392-a849-3ddb0c19c3ff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f1c3dc-7ec3-49ec-8d24-e533df4eb86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c89e7bc-c138-4036-a320-109d1eb8adc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0341a4-12b0-485e-85db-4b21bd75ed08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d5990d-a299-419f-af7a-49ac8f622024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738bf831-9d43-48a5-9921-cf1d85337ab9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d94d58-6ba0-4152-acc4-12f0894004e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba390b23-190d-4ab0-bf69-585317a9e951"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48dcfb71-418a-4240-adeb-a3975d138775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b46ae5-3453-4f6a-83a6-608740b19fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a10930b-7a75-49d3-8dc0-8081e78a6ee3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5332ef-ffeb-4536-8ba1-d3f58cdf1e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5431970b-b22a-430e-acc7-5a38aa7c1b52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a2ac25-4143-4330-baff-9f23a121afbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8446cad7-dd54-498c-97bd-96d470c12dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bf32e1-8e9a-425a-97f3-f5c4238941bd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378fc1a0-4545-431d-b581-de2912f8a0cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b822fab7-75c6-42cd-9fa3-09fda7b0a7f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cb9f48-075c-4050-b4c4-e0fa928b4442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651fc09a-e543-44a7-93ec-3f928df45300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b134157-2aa9-412d-b094-dd4d04ea8766",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84953da-1729-422f-8067-164ac3b9b834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ec8dd7-0015-4ffc-bbcc-1d1c5bf8116f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f97ea6a-6ca4-4d56-8921-785ebc6a088b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eed4771-faaa-4be0-84dc-968b5e3d07b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122c4ae4-bc29-406c-a6de-e755f43e2780",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4720fead-cfba-4822-8caf-c3e0561ecb1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cf64e1-d3a6-46ba-a297-987eff304a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b95e5ce-3645-4bdb-a046-05573ea2dcf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583fee7f-7593-4900-b37e-bfeb8463ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c31095-0950-4e98-b3b5-5f7fd8185ab4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a7e798-408a-45cc-8cc0-c8e06e506b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7038f367-8362-487f-95a5-8f5cd23cf897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58293003-c8c9-489f-993d-9c0ccd683ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c10d766-33ce-44b2-a065-ee18043bf289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfd8d54-5874-4b59-991c-75c4123b02fa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba05a3d-d766-40eb-91ef-3f7318c4f9ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45320de-3444-44e4-b7c2-3bbaea84798c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55621e3a-40f1-4be5-8922-6bbfad3b0940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6a263b-b951-48f4-8c32-0ae93e30a276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b16b1dd-41c8-4a79-890c-e9c8fc39adb1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506b74dd-dccc-4fad-b586-bb44b88e5dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961e6d43-e007-45c4-8d21-39d9de89f174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a514b19-de6d-40d2-b2b7-af92a26327f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3108dd2f-f09f-4ce1-abb6-0d4c9e3a4746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738e51c1-1a9c-4982-80c1-1fc53c943708",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e451557-0bdd-44a4-aaf3-7234fc410925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa90e11-31f7-48f8-a42b-2beac6b26eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e9d649-ada2-4372-a103-d50ef2ef05cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea2da1d-0c65-45b3-a3f1-fe2c97521348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b887d99c-1af5-4bc0-b7a5-9bd55634cf06",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75909a7-fef8-4518-8e23-f73c9a73f5a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8735708-93c5-4837-bb47-0ec68597e815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d694fd81-745e-4411-8c7b-0a6695d02ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0512329-0319-452a-a2fa-dac67c79c23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27367ec-2c28-456d-934a-c7716fcce509",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1bd50e-b114-40ee-8125-5cf7217f6489",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c674c270-548a-4803-8867-cab1068ead64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07de8dfa-e1d9-479c-9490-b42ef55eedc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ec15cf-6b72-45ed-b1ac-2a637101738e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e9efb7-b02f-40be-b04d-cea6d3317be6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b986982-7f12-45d4-b905-d273ef5dd6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00227dd7-35f0-4f82-a331-de7015276886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ab6d57-9292-4313-ba91-b77696a6c1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f150e8-d906-4ee7-9911-202cbeee4178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5a4285-85b0-42bf-9f7a-02d619a945e8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b95b58-3ede-418d-81ed-934441f55772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65df0eb8-2d1b-4ec4-86df-951c1f4b217b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cec3c6-b2c2-4711-9bc7-9a1b280f1dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e80a1e5-f5a6-41dc-a3b8-8fdbdb130de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7457549f-0029-4c71-a365-226e28cf7e8d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781ddae7-f1c0-446d-b924-172e16379029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c50e3c1-dd73-43ee-a0b6-5860590bebf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1fa711-34fb-4de1-b1e4-08759e5ee3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a63e671-d79b-49e9-a9e5-9c07796ecc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c487cab4-abbe-44b6-93df-5afe9ad91f98",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068f102c-810a-4ece-a599-24f186123985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7528d59-d7a3-4afe-965f-94c8bc609a3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6e1392-9a87-49b1-9b22-ce3430dc936f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e3a695-19af-4879-8023-d81636354075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c538010-c5df-4f8a-86c6-492855592a4f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b713128-4f6a-4f76-ad02-359a0f205626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ccd59b2-a0a0-401f-9026-3505373aa9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eec1a44-72c4-4904-ab68-d3abc7bb3099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecfc6b0-396b-4920-b653-c873a5bcc87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac060edc-ce58-4c71-bbd0-9d1b38d31ab8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a080d203-8aa3-4bf7-a682-cb408f9431c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccd4fbf-15ec-4ec0-889c-39b8ed0cc2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6f1249-24df-4fb6-9acd-03466c44f018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc91ab1-221a-4e4c-8b63-19022dac1845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37829738-b54a-4ae9-aded-a9291fa0ad97",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6544ef-399d-478f-b822-40dd3cc7245c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932b7c6b-90c3-4fc0-be55-b0cf876a1bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc12b4ce-42ff-4050-93f5-554153cc1faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8b593d-f9db-4852-be9b-0b9207305e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d14d199-217c-443d-b48e-ec58c2236a82",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03186dfb-8e3b-4c66-b646-3a5b4ffafe53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b8e204-ddf6-427e-be69-f6f6876f8768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596c7bb5-91d7-47c4-a994-27d5871c093d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb509d2-c00c-49b0-9306-2e2dbae0d5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacdc0c5-8584-4f38-b15e-c2a67ce69448",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897ded6e-a566-4c1a-8e4a-69dcae98ad29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca9220d-8779-4003-99c6-8bee760b947e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71602d2-664a-42f7-9139-ade8272f23b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5960a2-968d-4447-9ce9-3b23ffe9b117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac45630-0a0e-4661-b255-d2b348742bb5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab6a83e-3953-4c7d-9a62-711807e4c82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6658656-060e-48dd-8af6-91647bfd1fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0df2ea-fd1d-4f47-9650-7bd5e996c25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1fe39b-a372-43e7-941b-50cff677204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1331e0e2-6488-47b5-b808-0be59e24b170",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a193cdf4-8d13-4619-8f16-c3de0b7eb597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e571f48-7d40-4b87-a990-20d5afa7a87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f3f3d9-2979-41d0-9d82-edc908da7a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37515723-140c-45f4-9674-70ac79c9e138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cda09c-b377-4439-8591-463e43104ebd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dce90a-38b7-4139-b8aa-d7d83e2518d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f189afc8-6355-449d-a8c5-9efe4176780b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387cadbb-f2c5-4c8b-92ac-bd10318d697b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406535ff-f10b-4afa-b710-620bdf462970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7e54c6-e35a-4027-9c18-6ccebea9aa5d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63215d33-e258-4bb2-8235-9bb90d208eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb235949-e4ac-4342-bcf2-a175e202aee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4573bc-97f2-4567-8b94-1f766f5b2151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772a7600-b95c-409f-a6d8-97028fee115e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f148529a-cef2-4f97-95d9-d4ea8be73066",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bc9d12-15e8-4d18-91c4-7c0735da2465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b60f8bc-a26f-462a-9141-36af1d591048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc44f154-2c02-41b1-96bc-4ecaca51c7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f3f4c2-dbb0-433a-8791-2756576414d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1a6ad8-0aaa-4066-9942-9fcefcd84db0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19beefa8-e144-4e44-a144-7924347e8e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc55b570-bf97-4c54-b72c-24026eea7ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b24b0ae6-3fa8-4f16-91da-e65c8ae474b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16e6201-648e-4a81-bf10-f48a79d3942d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653b698f-377f-43f0-b74f-23f44524422f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39903c9-39b1-4dd7-85dd-2f9043458502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02847e14-7303-40bc-890d-9ee9b53142b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5af9fb-4a61-48cb-b202-aa84634f8d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6858185c-4e7c-4441-86cc-2453d251b6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffae6cc3-0e9e-4f33-9625-2eedd07e15ac",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b3b43f-50f8-47e5-94eb-8d5e3441ff9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c7cd8d-4280-4184-b4f0-c999e7f6a446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea43071-ef22-4e20-85dc-98d81003afa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e836be5-2ce5-4da7-9a2a-4af098f188fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c8d60d-7810-4c58-9661-396d0cda9eb9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff7fe22-6aef-44e2-8dbe-c3c7ce9dd527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e46bfe85-5f79-4b31-9035-1501b35339c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d11a28-27c7-458a-bdf5-e205ac8bafd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e2891b-9781-4ff3-8d83-78f4d260fa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9340c33d-33a7-40de-be84-158c8eb77948",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6547767-38af-4acb-84ee-ad2e14c68804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fbd0db-5ffa-44bb-a9ca-93908a729dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61791c0e-5ae6-4c6a-a5e0-15accac7498d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad62dae3-719a-4db0-aebe-8a73e16191fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e76335-6006-4e94-9dd4-f8b515290771",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ce4572-e216-4027-a3c3-bba02325cab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfeafa3-f1ba-43a4-8991-b38418aefc3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddb68ed-74be-45ae-a3e2-d239dab8c69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c313e26-d36d-467e-accf-a6e186bbc401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43fea9b0-dce5-4ce4-bed8-8825ebe95429",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc238ba-9bd8-4ed7-bf6f-c0f4a71d38e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9dbc06-dfa9-44df-9ac4-6657f2d75da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0475d5-ca33-41cb-bee8-1997dddadea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584edaee-48c8-49d6-bd69-f33859c27bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dd0fcd-1897-4a32-b1a8-d6fc251752df",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b10cd9-3875-4d42-9c2a-03b6751c90f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf39c3e-3218-487c-8b0b-a19e0ca441c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c44896-6ecc-42fc-bbb2-ce9d72fe87f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc22022c-2fc2-425b-a947-2920faa355d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ade5369-d33d-4589-84c2-208fdd54364d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb10534-620c-4144-a841-0495a06ada07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31f76d8-ed92-4e41-bdd3-0b4f06c0ee50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56851585-dd4e-4724-9dfa-0de3f47f46be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fdc654-13ac-4d7a-b2c1-08ce5d5f5dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbc0937-1c1c-467a-8c20-1a9e9ef001e0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e7c03-0a6c-4196-802e-b99e932f1eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4803309-e544-4352-9633-d9534e1884bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75ede9d-5669-457c-891f-cf9765d59d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635f803a-071e-462a-832f-4ffb5f737dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78975a7e-76b9-41ec-9b63-2d8be0b18613",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1978609-f5f9-46a7-baaa-3888af1301f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205cc734-26e6-451e-8e88-237a0617b3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26fb1ef-ba2f-42e6-bb62-18a756542e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b13e2e-e6b1-4175-915a-eb85b780ab4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b7a4b2-8b2a-4498-85fd-37d02b586e2f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80e3aff-22ec-43bf-bc58-fbef5b7666d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d7c6c5-8a33-43d7-a9ac-4048554214f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63709d42-362b-4fe0-bde1-78fb019e69a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2f186b-e819-41bc-9043-93c50bd8b34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f905dbc9-6f0b-44bf-965c-e24fe1653977",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac766ddf-d8ea-4d4d-a076-fe01d51bab3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a2f5f9-2028-4489-8193-c92ad8f1f412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef60ca9-a22f-42b2-b3e0-b499a4a6ee2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efcad617-21e4-4722-8530-e49761266cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c98b01-9567-4af0-8686-3fa752ab4f1c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58f4028-6cf6-4448-b700-01ff0be31a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc82eda8-e503-488f-8b21-008e970d511f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da4c214-2410-463e-be5d-120b46de8002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75593b78-fc72-4d3b-a58b-e0ef7f1388b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5cd9f3-12a3-4136-8d22-49dcb5002d2e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c54c456-7797-41b4-a0cf-0553eb6d317d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ec423a-d3a2-47ba-815a-e8423bb00ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0b5d34-465a-4d4f-beb6-334a9908283b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c95d9f-00a8-42d9-b7c3-a2a40ff20e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347bb442-657e-4fdd-8b0c-277b0692c3db",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815ae64c-2390-44ef-a6e7-48b86b7a21f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a9a007-cfec-4546-a5b2-25750275236f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac69147-e499-49f0-aa34-4cb8cea5b93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6d52b4-125a-40ed-96af-467e7368e80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d52386d-0c3d-41c4-9df0-ccc5b6c53df7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4762c4cd-62d1-4d1a-9341-5f08d76b599a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de430145-dcb9-4e67-b19c-bbd4655a7fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50749942-0553-444e-9cc7-6058a3ff5c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161b5281-e152-4cb4-be14-21547320a9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e435af33-2478-4038-a68b-1e1fb24af57f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d36507-caa2-4d18-819e-45880d9b00bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aaab38e-27c7-4d62-848a-3856a531bb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a245292-4389-4fa2-aac4-465811572959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd6d9d4-6e07-4ffc-a9be-b7e3cdb02867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638e942b-6df7-4e65-aafd-f7dc85feb36f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8050bb2-8c1e-49f0-81ba-5bbd33369319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d369658-dc8a-4b4c-bb41-057e38c3be2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a4a84f-56b8-4961-9633-0efe72b2957a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc34f0f5-8768-4d2a-a8f8-040feae194f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c6de13-a523-4c89-bfd7-902acf60cd80",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66b171a-bcd0-4adb-b329-3531f16c633f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1aa58b7e-8c46-4ed1-82dd-0b617fa532e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae86cd8d-60b9-4fae-a3b5-e85514b126e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e290d279-3bc5-4baa-8c5b-0c7c30d11d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b750bd18-aa97-42bd-a51d-12a9d2b865e2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae28d997-f53f-4668-abdc-9e809fc6f479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d87610e-cf18-410c-ae92-af972942c55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52227bfd-bfbe-4ff7-9cc2-a00cd086abe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b1ef7f-526e-4646-9360-1da720f698db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37a8fa5-aa7a-4486-8657-ab7cd210b2d2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e9042c-16dd-475c-90b5-8f12112fbfba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ebddbd-0c07-4f02-be6b-40ace6a4f490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69d7d2a-239f-458e-920f-b07b4caca364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a603301-2a80-4a7e-889d-1218ec88abc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b55c81-a3b0-43a6-b49f-33bc020a6d6b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ebcd65-6352-4080-b2be-4d09ffe43701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148b7bc9-0c7c-4bc7-84fe-e7ced86c77ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af75d1e-5f22-429b-8a87-fa37e936e541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1113d6cd-6372-46a6-846d-67233e32602e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beca4553-0b02-431d-8af6-9110dad9615c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2387de9f-07eb-409a-94a4-8ea25b8c40e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d67d8c-c5a7-4891-82df-feda42337866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282661f1-eacc-487d-a5a0-656205b2d6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83742d32-d163-4c31-b5dc-b9c8b461ab96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4433a94c-1ea3-4f22-80a3-d9d52fe77795",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a37a9b-c893-4f8a-9ee2-fdc52275e56c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9f3cd12-34cf-48b8-ab2f-d38daad3ae06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5acf38b-38fb-41cb-9f78-ca31e8315d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069470aa-9866-4129-afeb-8e88d5f30abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7611f579-d5fa-4e8d-aa95-15fa8a1e97c9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc1937b-860e-44d7-922d-64d81ce1ed0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48a116b9-219a-497c-a041-825eac7b922a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85378cd7-936c-4dc8-889d-691274259da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962d9149-6ab0-4e6f-b975-aee2dae5256a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0744ecd-7e4d-45e1-bd7d-8e56c2ca102a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b4728c-e901-49ad-9b8f-fdf6628994c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a711b345-6de8-494f-996f-a3424beb73db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c75c02d-92ca-4e3e-8d3d-91dcc465ab48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444fb26d-f14a-49a1-b697-0a17aec31f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b92221-c206-4ede-86a5-b8801f40789f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882d1edd-f947-405e-bab0-aa4508c7232e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966300cc-8be0-4b84-8d4e-06c33b640fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd457a08-10a3-4cf3-a6a6-c886521a5e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fecc8f-55e1-45ab-8f41-0b072b49c960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65302de4-dd82-42f5-89d5-00397985fe33",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e760a5cb-3cb9-4f24-af82-b2c8f143c04b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b232197-4414-4c99-a8d6-88873148ae79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ba4444-aea3-4142-9322-aa3516b10207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653dabd1-0f25-44de-a55c-49d8529e30a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ed2f21-777c-4477-93af-80ae6c5784b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9bee6c-b6dd-4dbf-b480-e0265c3d67e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290fce8d-e7d9-4598-8405-119418365a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0847e9-45b4-4b24-87df-8502c7338e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fab245-5a32-46c6-8d89-24ad8cf30b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c377e676-e5ee-48ee-9059-9f161b9f56a7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d419ca0-1f4b-42fb-9ee2-0a629035098b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9214239e-4838-4d1b-9608-80d4a620690f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0854b9-9616-4a6b-b01b-478594eac3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b090df-b745-4f50-8022-2e028b2e7344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb95635-6581-413d-afda-a708586c451c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e84f24c-c49c-4435-850c-d06060dae2cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84e15b85-2056-43f6-bee3-20834ae9a751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee7505a-ff8f-4e80-bb24-7e4a9e56831d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6867d0-7be0-459d-8f0f-6a905067d966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9181fd3d-c8d2-4562-ae50-27e8cd53584c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77f529d-e64e-4b77-9d95-dc4d9e859228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eaa5100-8aa5-4275-8bac-d621ded1ef6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1442a266-3f0b-41eb-9f35-935ba934296f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778f91fc-071d-4913-98ea-f08445c31aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b196fbf-cbd6-455b-b61d-a2280afb449b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5161c54e-de62-4c29-b4b0-5321869a26d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5be86d01-948a-418e-83c4-94edacd0232b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f3bf4f-cabb-48c7-8882-32c8731cc251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7861c8f1-fe8a-4e59-8800-da83676bea68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9a6238-3fb4-452a-bf71-a84ec70c7b0b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36d80c2-be36-44ae-97b6-b60e6986911c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d204256-bd46-4338-b27e-a8912e60b9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce35bbb-506e-4d1c-b64a-4ac5bc81709e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99d2ebae-1c72-4b74-b1a7-239252fb9de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a904e55-2b35-4f23-849a-675a1db35e11",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419b57c8-4180-49e2-84a9-e8a77b2d00c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c924c5-73e7-436f-af42-ddc9ee3c9481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688ed1e8-ca00-4807-a0c7-8ad182fecc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec111e4-86bf-4769-b98c-0d8c082cfed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535494d0-10ca-4ae5-88fb-a87e88deceac",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0a8787-c2dd-4f8e-adc7-af2fc1fccacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f869515-c04c-4232-9381-6a2d0f389ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1d6801-048f-4347-b239-4635a39633da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906aa406-f552-4209-95a5-218785d46765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec0513e-85c5-4c75-940f-62f7bcaa33b0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50922c7d-9f97-4f90-a8f9-ce6a94f8898e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c92979-d607-4037-aae8-8a2d449770b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0722d4f6-ca76-4158-874c-6f5f9f776780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52968dc9-8f7f-4828-a8f8-0966a036f8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8861db32-0c8a-40d5-839d-9e885c166d67",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d32bbca-6a20-4e9b-9b90-b544e04916f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a9b2a7c-fb5c-486b-bf53-1888998f853e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143cb676-8d55-4745-859e-64f8369cf7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e4cd7e-0b87-4988-a98e-02be4027313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa0ff74-038a-4a01-ad1d-a876e33b573c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8847bf-bd9b-4ea7-a1a2-25e15edab8d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6dad953-3126-4edd-9a05-a1c9e1fc726d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22df3c8d-da83-42a8-aeb0-2e05e3145726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12171af0-79ee-4c3b-8d93-21123e040298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18639691-e960-481a-b52e-ccbc61c4e792",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac50290-ea7e-4ff3-8ca9-5a226ce68234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e62ec94-c9b9-4624-8282-d4bdb64d6244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f8474-6a28-4aab-b10c-c954d74ff542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7de417b-f4ba-4cfc-b470-4218949dda63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a720d5b-6e1e-4101-9bbe-e9f5b8e68045",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0bbe72-7a01-417a-9339-554bb42c943c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40e3850-754a-49a2-99e8-3bd75d916356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e465b3-4d22-4cca-a2a0-3aa6661f391e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cdfbca-c03c-4b99-a948-7ef06dafa1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fced86-917f-4a44-82d0-0b8173787339",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b52f8c0-5b4b-4b57-89bb-d66e7a926e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6a2a52e-8742-4795-9c8b-74082cd1d539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617f535a-e0fc-4c7f-96f2-eca6d1b8b68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781e6e2a-492b-481c-966e-ec504d8bc7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd69459-1cc7-4cb6-8ff5-e4421cce0fe8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5ee5d5-7d95-412f-87c4-7646342267fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "467e1eca-d353-410e-aa57-73ded089fd04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363d7e3d-f5ee-4aab-a4e9-832948bf8a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fdbf4c-6179-4f89-9b2c-81977b12a69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90652bfe-386b-49ce-a2ab-dcc2cf54cefa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f89fe5a-8bc7-4ff9-8eeb-2b903c913166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a09d252-e338-421e-be06-d3ea15480611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b16ffb-2196-44dc-b2e9-6a3a427851a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d3a294-cdeb-42f3-b9dc-f242002c2f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c396e5b-18b7-4b1b-b865-885e8257bb4c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e79e59e-2d8d-4318-b5a6-8da02f931632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b784e8f-c094-423b-8c3d-49dc88b705d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002a678d-aa36-4709-aa2d-3d2832adf8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa021dca-7b75-4ea6-b45f-d9a3bb2f9401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d397d4b4-15ec-494e-bc49-981a54148346",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4949d8bb-4f50-4103-bb5c-841550c485a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76fe8039-8a38-4539-9fbe-93c5080ea423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f317ec4b-b8b4-4428-8176-ee60da335560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae3eee8-ba89-4762-a9ed-79d4891b1271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5428c2de-7fe6-4192-b9c7-af9570950370",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6935ce8-6f13-4601-bedf-b7996fa73c3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26923590-ea37-43be-b429-95e0ddd0483d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a0f7e1-22c1-48ee-9a5c-a33752877b5d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5536c3d4-9908-4373-a1e5-7feb6b7ced7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd3f668-949f-4f5c-af55-bd1a0823b64c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ede90a-5597-42c4-a04f-ba93e6512651",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "145e4343-352a-42fd-967a-ab3a96eac855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad2885f-3f5a-4d80-bc69-049c4150dd63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa5f1fc-3209-4d86-bf12-60e25a532562"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74a83c2d-c304-43e3-b4cd-70997a78bb18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ec84d15-0aa7-4d68-a6a5-d533f0fdd3c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c080aac6-0b56-4b3a-ab75-e07d4d90c9c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69db7e1d-5535-4376-aa68-cc25820ada65"
                    }
                  }
                ]
              },
              {
                "id": "759fad22-12a6-4c5f-a376-4e750de0a3ae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f62283d8-e43c-4497-be4b-ccf9642a8dad",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeb97fd-8dc8-4607-aaf0-02e6e6243af5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "05099e01-896d-4a15-bc98-d13a66a2c070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e83dd4-75f2-4d11-8eec-476a029c7660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "841f8de9-9a47-4270-9eaf-a1b370dd4b9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfc93076-9f17-4d62-9420-cff54bed6679",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a212f183-e7b2-4293-af58-8571555792de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be17fa46-2f72-4346-a6e6-e40882f68f08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53bb367f-2baf-4a29-a06b-62a000f43a62"
                    }
                  }
                ]
              },
              {
                "id": "8de63d4f-828b-428c-aa05-1a62ca37dbc5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "57a4b28a-d9f8-4571-b048-bc40818b7aa7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3e0e1b-a571-4915-a8b1-314758ab4990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "22402875-e0be-484e-aa53-cb07a374a4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c77382e-4161-44a7-9f9a-956d19db081e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bb8d3a-b9c2-4c1d-b0b1-ad4ad461139e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42b7267d-b3e3-4fff-adb8-e8067672f996",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36afec59-b650-43ce-91fb-976faf3281b0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39c9a2fe-3928-4e3a-bf2a-f35a855da6af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eb3468c8-4c20-4e99-85a9-ad2d71c2db28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63e1940a-2755-4d91-b136-d5d855da775d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "984782a3-9aa9-4404-9b49-0bd06ea04c76"
                    }
                  }
                ]
              },
              {
                "id": "6d54211f-034f-4b23-8332-7a2b5965cff8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30d0aacd-03f2-45af-918b-2b4db4dc2d29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b12b4af2-569c-4131-9b92-25b7d94f1b35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb9971ef-c073-4440-89c3-d211211b96f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bea9709-f03a-48f5-8a6c-0d53b075c1fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63749bb3-b407-4b1a-bb10-5f5bd327d3c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f0f9d735-d153-42ce-b4ff-ef3fb8642262"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "445fee58-7a0c-40fe-abc9-398226fb8c1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03f82747-d93e-4a2a-96cf-3e6cbfb0b177"
            }
          }
        ]
      },
      {
        "id": "3c3e6bf5-3878-4aaf-b81c-67865bc154af",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7921c5c3-058f-4519-a9d5-b35bdfda1d44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21135de3-0884-4110-a1a1-4fd8edc2bebb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d1823cd-b479-4e39-80ca-bc2a5bb3aad1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486ade2c-8eaa-40b8-8e60-bc4417b78d78",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f56a0fcb-95c3-401b-9dd9-076978e4b7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc757772-1e4c-4b59-aa18-1eb1c2393554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc820c9f-bc36-4cb3-ab3d-eb9fa4d9e232"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ce71685-87b1-440d-8d1a-aef3c8bfa255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e643cb0-dfd5-490d-a330-8dfab7fc1583"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9888730f-f470-4014-b0b3-433591b1467a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "baec6ec3-b486-407c-9fc6-7f3cae96d3d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c83233c-8aff-4d59-864b-a739fbad4fdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "abbba35d-dddc-45f5-928c-d1b3799d5529"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8a721a3-4cce-48c3-a85f-149bb5f95739",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f391a1ec-455e-4658-b791-5e6d3c73b4b3"
            }
          }
        ]
      },
      {
        "id": "14b3edeb-e0df-47fd-b47b-d6cc87f7e680",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5afbbff4-880e-4ac5-b87e-6859c5111ce8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e087b989-a1a3-48b3-a1b4-e38c15318cfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66421183-42a7-45f9-b903-77a71505d447",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea34896-ea7a-4e1b-97e1-b5042de0aa7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "373a29f3-7b37-4321-a715-2011678fb16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5077626b-8dce-4531-92fe-7e9c56298073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3394cd5b-9d93-4c82-88e0-8098ac7242bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "524a19bf-5378-432d-998e-65e44e6e558f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "305f44a3-79cf-49ae-8a5c-9d2d4d761cc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9239406b-8be9-4e3f-bd45-8d967d1588e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c48f327-266b-4b91-8930-d161b78c2212"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abbfb252-52a4-4965-80f1-bb5aad713bb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "664b994b-77dc-44db-bb08-fdfeedf09328"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d22a829f-15bc-44c7-90b3-dd0a79b98713",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4adea86-b7ce-4c74-a958-054f1de28626"
            }
          }
        ]
      },
      {
        "id": "2f62079c-3526-4b30-811b-481cd3e67472",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7e8ef60a-c10e-440d-82dd-4ad1c5fffc83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25dd3aec-11fa-4d42-a09f-99aa5be9af96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2dd2a488-727e-4966-b45f-d78e04819c63",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03505ae9-82e2-41c2-b64e-878fa67994be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a4a71d1-c2e4-4321-842e-ff5aae3a3a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b09c2b-3bf8-43d8-8592-eeefe3852e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b2391b2-dffa-4e01-b71f-94fbd542d8c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3720a70-79b0-4b13-937d-032ea32799d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e5130aa-015d-4529-8bdd-11aed27c78c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "587527a9-a217-45db-804e-b09f40d37b08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "145f8aad-dacf-4103-b6d9-4ccd26daa730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf3e2bc8-8061-4eb5-8c5c-3c06d1642a52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "43bfbf5c-2fbc-423b-90c4-9b0f942999f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7811e860-5155-44dc-a8f9-5d0983b30897",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e8bf0c2-3e6d-43fb-93f2-dbde36ee24ac"
            }
          }
        ]
      },
      {
        "id": "ad141093-ee72-49cf-a1cf-e619762254e1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7413b586-c511-4ed5-a39c-26bf6f34ee61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f9abebb-dfe7-4512-b19f-c5da6ff17b5b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "20b262e2-9c37-48ac-ac4a-8a6b0b80bb46",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ddbb746-91b2-4f49-aa74-02dd5aa56664",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d98319e5-8c84-4460-a78a-b840fbf487b1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 73.00000000000006,
      "responseMin": 6,
      "responseMax": 339,
      "responseSd": 28.752787812967686,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709685249618,
      "completed": 1709685279473
    },
    "executions": [
      {
        "id": "5ee26f3d-55f9-4c12-9c71-322c02be94b7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "01b3100c-03ad-45d4-8b3c-88b0ea36f80d",
          "httpRequestId": "cae2be88-eb88-4743-84e4-d1ee636f6305"
        },
        "item": {
          "id": "5ee26f3d-55f9-4c12-9c71-322c02be94b7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3d32f9f7-11fc-43c6-9c5e-1334815edb2f",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "dbe9ae15-2b7b-4aa0-a6df-1e6d9ea7be1f",
        "cursor": {
          "ref": "a952f20a-2b93-4581-a8a4-f44d7fc5c6db",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c0e4749e-bcab-4a4c-8f68-e01b390e32ac"
        },
        "item": {
          "id": "dbe9ae15-2b7b-4aa0-a6df-1e6d9ea7be1f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "699821aa-8d55-4b81-bc31-7281a217a76c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "14c7f6ef-20b8-44e2-a9c8-c96512d0d37d",
        "cursor": {
          "ref": "bab037f9-74a5-4b01-8325-388aece4c667",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "378e3835-ac2a-4061-8366-eca79a02b747"
        },
        "item": {
          "id": "14c7f6ef-20b8-44e2-a9c8-c96512d0d37d",
          "name": "did_json"
        },
        "response": {
          "id": "c45dcde4-cec0-425e-b051-15ffa2b96ff2",
          "status": "OK",
          "code": 200,
          "responseTime": 339,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bae610f-8830-466b-87f1-ca29702b0fe2",
        "cursor": {
          "ref": "47ab1c26-7e1d-4355-9120-c465d6cf2012",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09ccad58-5cca-4ac0-8313-53246a45f9ba"
        },
        "item": {
          "id": "9bae610f-8830-466b-87f1-ca29702b0fe2",
          "name": "did:invalid"
        },
        "response": {
          "id": "44418975-cd31-4ab9-b0ae-a7225a9028b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bae610f-8830-466b-87f1-ca29702b0fe2",
        "cursor": {
          "ref": "47ab1c26-7e1d-4355-9120-c465d6cf2012",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "09ccad58-5cca-4ac0-8313-53246a45f9ba"
        },
        "item": {
          "id": "9bae610f-8830-466b-87f1-ca29702b0fe2",
          "name": "did:invalid"
        },
        "response": {
          "id": "44418975-cd31-4ab9-b0ae-a7225a9028b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173ea43a-2a3b-45dd-93a8-72d396d732f2",
        "cursor": {
          "ref": "e7dfa2cc-edf7-4a74-8d5e-8954d49e77c6",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "976cc938-568b-41d2-a8dd-6e2afac6c3ab"
        },
        "item": {
          "id": "173ea43a-2a3b-45dd-93a8-72d396d732f2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a8c37dc2-3b50-4080-846b-7d092b68cd85",
          "status": "Not Found",
          "code": 404,
          "responseTime": 134,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2142057f-b74c-4d6c-ad39-db0993334516",
        "cursor": {
          "ref": "2ee006cd-c428-437e-a46f-22f078225b9a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1b471ef3-0506-4e60-876a-7be1215c7e91"
        },
        "item": {
          "id": "2142057f-b74c-4d6c-ad39-db0993334516",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "39a19831-6dd8-402e-8752-06745d632ea2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129722a4-2173-4c60-aaa3-961dc6391819",
        "cursor": {
          "ref": "c653a1d4-cc44-4951-9ec7-916430fd9560",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b719bcae-a952-4eaf-b0ee-3c241ca3f8bb"
        },
        "item": {
          "id": "129722a4-2173-4c60-aaa3-961dc6391819",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "af12dcca-6959-4e32-a0c0-d2e30998acb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3048a1-78aa-498b-8aef-7988ccd4aece",
        "cursor": {
          "ref": "547de9a4-aba1-4c16-a095-d7b260a848d3",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "516fb2d2-eec7-4d28-8fea-cc121249ae45"
        },
        "item": {
          "id": "cf3048a1-78aa-498b-8aef-7988ccd4aece",
          "name": "identifiers"
        },
        "response": {
          "id": "4efd22fb-02b1-4b05-b95d-5e8fa891bf6c",
          "status": "OK",
          "code": 200,
          "responseTime": 163,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9a957f-1a03-4223-a4ea-dec37418bbc7",
        "cursor": {
          "ref": "04774767-acef-44e6-9c35-ee8c1203e0a1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7c9d85be-8ee9-44b6-a16d-37f9e1252756"
        },
        "item": {
          "id": "0a9a957f-1a03-4223-a4ea-dec37418bbc7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "51423156-4d27-4755-b8aa-be92d098ea4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a65753-0f6a-4a28-952c-df14db51092a",
        "cursor": {
          "ref": "50a8feb6-ed90-4285-9290-42f79ae34c73",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a1315c6-7f8c-4ffa-8eb5-3b1b78a6fdc4"
        },
        "item": {
          "id": "d2a65753-0f6a-4a28-952c-df14db51092a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7ccb9fa3-09af-4950-830d-892e29fff2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a77e215-5b4d-43a5-97ee-d13f4dd07064",
        "cursor": {
          "ref": "3a9e10d0-8d5a-4ad2-8624-0345f621ff74",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "632fd1bf-13a5-4683-8391-7ac3064eceb3"
        },
        "item": {
          "id": "5a77e215-5b4d-43a5-97ee-d13f4dd07064",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "187980a2-9808-42f1-bdf3-9fb5d7cd76d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cd756b-8ee5-45fd-8c7b-09f8485f1728",
        "cursor": {
          "ref": "f9085964-94ad-4f04-ae20-cd633a678d83",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cb1f5985-b762-4dfa-bffb-9e4d40afbeb8"
        },
        "item": {
          "id": "35cd756b-8ee5-45fd-8c7b-09f8485f1728",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a6dd40e1-9ec9-4991-a033-07cb28d7a2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40aa4d8-817e-42dd-bed7-97c02cf1e6e4",
        "cursor": {
          "ref": "b290a483-03a9-47ec-bd6c-a56e04a9df5b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4f567ef8-47db-461b-a758-57ddf2c1c994"
        },
        "item": {
          "id": "e40aa4d8-817e-42dd-bed7-97c02cf1e6e4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8a5ac164-402f-4d04-a151-aa17dd7ff317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba9c3ce-8593-4397-8d7d-fe6a2a82e3b0",
        "cursor": {
          "ref": "10b2a35c-8aa0-4348-b6f7-b48c82d85c05",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bcf375ca-1412-46cf-930e-8ef5f1bc16ff"
        },
        "item": {
          "id": "bba9c3ce-8593-4397-8d7d-fe6a2a82e3b0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f19683d6-00f0-4915-a0e0-4151a08f87cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6fe5c6-7c53-4c7d-9aa1-5c5d7c79003e",
        "cursor": {
          "ref": "1c9d3176-f8e4-4543-9228-ce4a7c952bc1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aaa6d7b8-eb45-41ed-b8ba-e8fdc731a563"
        },
        "item": {
          "id": "6d6fe5c6-7c53-4c7d-9aa1-5c5d7c79003e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c0baf15d-2d42-4bca-a026-cdf8a1ee1017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7634292-df50-46c3-9769-71ff479791ae",
        "cursor": {
          "ref": "ee58d527-4286-4bd2-ab84-f87e960ec947",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5ec45693-04e4-4241-8b85-9bb9aeded82b"
        },
        "item": {
          "id": "e7634292-df50-46c3-9769-71ff479791ae",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9d1fe96e-785a-473f-a324-85d525f99f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f569ae-fc6d-472d-ae3d-f35d3dd0f8bc",
        "cursor": {
          "ref": "3673937c-1f3f-4e7b-bb89-57ffabfaf756",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c4f53876-0121-448c-916d-df5bdb07eedd"
        },
        "item": {
          "id": "f3f569ae-fc6d-472d-ae3d-f35d3dd0f8bc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "febf6604-8a97-4e39-bd5b-2b2d10adb28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdf0536-e03d-449c-95bc-6488c380758b",
        "cursor": {
          "ref": "a43bed2b-d1c1-40ed-aa61-48bb72d89510",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4e6622b5-baec-49c0-b390-69e6389bdfe1"
        },
        "item": {
          "id": "ecdf0536-e03d-449c-95bc-6488c380758b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c0e36f22-4b19-46d6-a79b-00c1369b0f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c022ce-7c80-46b0-b377-513c741d6193",
        "cursor": {
          "ref": "0e7db253-2c69-467e-9c52-7802476d92e0",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "781d0aeb-d019-49b8-a879-0cb500e80f8b"
        },
        "item": {
          "id": "b2c022ce-7c80-46b0-b377-513c741d6193",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f23ca465-be85-4978-a3a3-bca9625c5498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cbf1a2-a51d-43e2-99bc-0dff304c1caf",
        "cursor": {
          "ref": "8f2236c9-46dc-4ae7-bc21-ad23667e2efe",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dd7122ba-b5b1-4c1a-a7cb-789b51d8f0ce"
        },
        "item": {
          "id": "f6cbf1a2-a51d-43e2-99bc-0dff304c1caf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6c81deb9-2798-4ea1-b2ce-1542757c1b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfe421d-d4fb-4e38-8d88-819a5c89f2f0",
        "cursor": {
          "ref": "8e724cca-b129-48ed-8819-a6e7dc35387d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2fa07053-40bc-4422-ae65-08f13ffa786c"
        },
        "item": {
          "id": "9dfe421d-d4fb-4e38-8d88-819a5c89f2f0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d6dc92d8-6354-4a22-98c5-d3ca9b03ee8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c84b15-8bee-4bd0-b4c4-19f3872640d6",
        "cursor": {
          "ref": "9c05b132-0f8c-4457-a64b-2ebfe5494183",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "96141f63-8a19-4bfa-a501-606cdee8211e"
        },
        "item": {
          "id": "c3c84b15-8bee-4bd0-b4c4-19f3872640d6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a0208c0e-9b19-4c3c-b46f-1243a32a4767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8927aa7-f61d-4f06-bcd8-3935d8a030e7",
        "cursor": {
          "ref": "64d5246c-fd57-4fd5-a73b-31f8d178cd8d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4637b7b4-1eb1-457c-be2a-02c4132d914d"
        },
        "item": {
          "id": "d8927aa7-f61d-4f06-bcd8-3935d8a030e7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9698fa5c-7caa-49e0-b1ad-549c0da797ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4baf0eb-c5f4-4d70-acf2-98ac400c7621",
        "cursor": {
          "ref": "379462a6-9bb0-4479-bc3a-08b52acd5041",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0b935f12-5a98-41d9-8a45-d8d370da2b29"
        },
        "item": {
          "id": "a4baf0eb-c5f4-4d70-acf2-98ac400c7621",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a7a9d41a-abfe-4386-a4a9-3ecdc993d4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d68e628-312c-4645-b93f-d7aaf02cac55",
        "cursor": {
          "ref": "a2fe731a-1d80-4c9d-9ed0-7f5e5fb55a78",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c541c603-0671-4d26-95d0-fa74ac624fbb"
        },
        "item": {
          "id": "0d68e628-312c-4645-b93f-d7aaf02cac55",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f894400-8798-44cf-98b5-8dbe83624c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b3ac26-fb29-4bd7-a4bb-4e938ac14d49",
        "cursor": {
          "ref": "a49f5dd8-a913-42d4-b566-1de1f14fed52",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d7579eef-1538-4d51-9978-725200650c90"
        },
        "item": {
          "id": "44b3ac26-fb29-4bd7-a4bb-4e938ac14d49",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "45f464e7-fb11-4855-a2e7-b1f95042f9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3e7d31-c3a8-4a51-93f1-2cddf3621fa0",
        "cursor": {
          "ref": "7cd14ed5-4534-4586-a291-96da1af5c3fe",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d215b75d-7a9e-4da0-b5c7-af1b65894efa"
        },
        "item": {
          "id": "dd3e7d31-c3a8-4a51-93f1-2cddf3621fa0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cd570a1c-e166-49e3-a288-ee317818be33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d13fe98-3221-47b2-a0d8-d3132cb456cb",
        "cursor": {
          "ref": "6f7b32b1-614b-4b4b-aa30-b4afd3d662b4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c200438d-d7d0-453c-8046-8dfb118dce3e"
        },
        "item": {
          "id": "6d13fe98-3221-47b2-a0d8-d3132cb456cb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b7df0179-315f-40c1-8aed-48eef2fa9127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1da46a-cce2-4857-be4d-ef3b5778be25",
        "cursor": {
          "ref": "6a17f3a0-2ed8-4e22-a574-fdbbfe135130",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0925a940-f96e-41b4-aba6-f770d452fd70"
        },
        "item": {
          "id": "5e1da46a-cce2-4857-be4d-ef3b5778be25",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "acaadd6b-c8f5-47c1-a67d-9accd4c5fd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72888133-8f91-460c-8fbe-e1840cd186d6",
        "cursor": {
          "ref": "2eff9605-5894-4581-bb56-361903c77868",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "768a3fab-c982-4e92-aba8-f48542d2051b"
        },
        "item": {
          "id": "72888133-8f91-460c-8fbe-e1840cd186d6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0c053cee-8056-43f1-a394-15853d00f047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8ae3e1-6e94-4114-a646-c9cab8c53c5d",
        "cursor": {
          "ref": "e0513283-840d-4cd3-aade-fc90b1c5a264",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0fb6e5c9-5407-435d-b6f4-f88a03f6f28e"
        },
        "item": {
          "id": "3c8ae3e1-6e94-4114-a646-c9cab8c53c5d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a3963bad-8088-4d22-82f7-2159414dc3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deee79c6-48c7-436e-a3c7-bb1c99831659",
        "cursor": {
          "ref": "c90fbdc7-ae95-47f3-9270-f961552a5d08",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "59d725c4-e96e-4e7c-80e3-8f74f025edea"
        },
        "item": {
          "id": "deee79c6-48c7-436e-a3c7-bb1c99831659",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "32a25f27-b11f-46ec-a06b-46df0011ca0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147fbfbb-0c5f-45ea-a5ca-83982c10a843",
        "cursor": {
          "ref": "76184ddf-f06e-4994-93e4-e0383460e60d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3e772d8b-bd33-4d89-827d-1a5815af499c"
        },
        "item": {
          "id": "147fbfbb-0c5f-45ea-a5ca-83982c10a843",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "802562d8-017f-4c2c-82bc-4f1900aba384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802d0e2b-2c38-45b0-af2b-02b257d19930",
        "cursor": {
          "ref": "ba513fee-cf60-4137-b484-0ac5f323d189",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c8c9373f-cae8-4836-9659-e19e49e12c81"
        },
        "item": {
          "id": "802d0e2b-2c38-45b0-af2b-02b257d19930",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1946593c-c81c-4741-91af-e44059022613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2635cc-b5e0-41b3-a870-ecb46db38740",
        "cursor": {
          "ref": "54737f32-3418-4bf1-9d76-add85f9940ab",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d5c34523-6752-49f9-bc3f-6d9ef52d9055"
        },
        "item": {
          "id": "5a2635cc-b5e0-41b3-a870-ecb46db38740",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d052f7b5-5dde-4f41-8bdc-13d69811b57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8b2ed3-8330-411e-93e4-bce6ba31529d",
        "cursor": {
          "ref": "8c65a9e1-effb-4356-831c-018b2b0e9c99",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "117b3813-3ef8-4846-96c3-c00dc77bada8"
        },
        "item": {
          "id": "cf8b2ed3-8330-411e-93e4-bce6ba31529d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1ae5e20b-55b2-43bb-bd2b-7c22fea55096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38783ec-9915-4da9-8cc2-b984fde9a1b4",
        "cursor": {
          "ref": "196c0367-1502-4b3a-a7a9-581a5a36cf83",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2b677605-3de9-4a89-9184-98beaa38caa1"
        },
        "item": {
          "id": "c38783ec-9915-4da9-8cc2-b984fde9a1b4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "66cc4f7b-929c-455c-9c94-caec42e4ed61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cbc07c-ab4b-4eb8-8eea-b82f3470834d",
        "cursor": {
          "ref": "eb8500a8-4eda-4cea-b778-5f05fc9c209f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "01bf447f-2324-4942-9cf2-87de97d2a93c"
        },
        "item": {
          "id": "40cbc07c-ab4b-4eb8-8eea-b82f3470834d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5dc95037-df48-4664-9f2d-48175efc4fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1188bc85-9769-48a4-9642-3e9cc8623168",
        "cursor": {
          "ref": "b13ad707-667d-4879-bd02-9b94042bc633",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c81394e1-cbe2-4ab4-9992-a1ddbbd273c6"
        },
        "item": {
          "id": "1188bc85-9769-48a4-9642-3e9cc8623168",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "04ce050c-5d99-4e6b-8284-5bbdb1272cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21c9f3d-a3fc-4576-b6e5-0c1ffdd64eaa",
        "cursor": {
          "ref": "0cefb667-1f4b-49b7-ad3c-3aaf07c8862a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "898e1ece-1ca9-4308-b26f-d7a6cf38b2d1"
        },
        "item": {
          "id": "c21c9f3d-a3fc-4576-b6e5-0c1ffdd64eaa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a984beb8-be7e-4e63-80b6-abe09523dff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1998400-adcb-4f32-829e-0c52c8bbeefa",
        "cursor": {
          "ref": "a123500b-d48a-4fb6-a1d4-24c73081f819",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "05fe30d9-75c1-4620-975e-2d4a60eedd51"
        },
        "item": {
          "id": "e1998400-adcb-4f32-829e-0c52c8bbeefa",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "047adb5b-f67d-4e43-b9fe-69c4d8869f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42db9ea-ad9e-45d9-acb3-abc957d6a3fb",
        "cursor": {
          "ref": "700a019e-533f-4eac-9c45-fd0355f280ff",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "eff73000-8b1c-4196-b5b6-6eaabeff9001"
        },
        "item": {
          "id": "a42db9ea-ad9e-45d9-acb3-abc957d6a3fb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e351113f-a0b7-4b2f-b969-ccf998b21ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e993462d-0faf-432f-807d-a54c716b5ebc",
        "cursor": {
          "ref": "37f0cb46-aaa2-4e19-bc2c-516a4aa11dfe",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "38b95d76-bd17-4053-b2a4-04ea197b6e05"
        },
        "item": {
          "id": "e993462d-0faf-432f-807d-a54c716b5ebc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b0374bab-dfee-4313-a876-c254b9ef08d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43da3e6-618b-43b5-8948-a50f19f77a9b",
        "cursor": {
          "ref": "7d3624a1-772e-42fb-b70f-4e26d377ebb7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "eaa150ce-2f5d-44a0-9d27-bfa0f4ae0fcf"
        },
        "item": {
          "id": "b43da3e6-618b-43b5-8948-a50f19f77a9b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3fd2c099-cfdb-4dbc-baf4-652f76791ccb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 97,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5be28fc-1cd7-4348-b401-51e294957cee",
        "cursor": {
          "ref": "28a109a5-a306-4f1a-a9f2-df4694cf3f28",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fee4ab64-3e81-4a68-9350-ab73c37d7e57"
        },
        "item": {
          "id": "d5be28fc-1cd7-4348-b401-51e294957cee",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "37e1a2e7-2184-48f7-9b05-a03f2099811d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b07d2d0-bc97-454a-8090-faf2b210bdcc",
        "cursor": {
          "ref": "3c0f464a-8ff0-421c-977b-85c39bc443a3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cae52328-91ab-40ad-8b82-da66144674c2"
        },
        "item": {
          "id": "3b07d2d0-bc97-454a-8090-faf2b210bdcc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c7071c62-6ba4-4805-b3df-7f53019a1a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fd2510-3e31-494c-b7f4-911bcca48f1a",
        "cursor": {
          "ref": "9fb7dbe1-632b-4f21-bc64-5bff56c4518c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d3b2add5-3a79-4a22-8b82-6bcb596d165e"
        },
        "item": {
          "id": "f4fd2510-3e31-494c-b7f4-911bcca48f1a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f67a2e9c-3546-44b2-98b7-43f8ae85b686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ea5d99-9d13-42fc-bb42-c2ea423dee5f",
        "cursor": {
          "ref": "da626107-e957-484f-acd5-3cb0d46d4b15",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7f8b6016-65f1-4cfc-8809-68191bafb114"
        },
        "item": {
          "id": "60ea5d99-9d13-42fc-bb42-c2ea423dee5f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5b6e67a1-81b0-4ace-952f-2f9cd532ea10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1f530e-e2e0-48e4-9c6b-4e28a4e5cb58",
        "cursor": {
          "ref": "4a10d8f6-98f8-406d-a7a3-e96abb049f43",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b913b92e-0cb9-4212-a0f8-6e9ff4473aed"
        },
        "item": {
          "id": "9f1f530e-e2e0-48e4-9c6b-4e28a4e5cb58",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "85e6e6fd-bbe8-434e-8fc7-57b0d432d96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00360bb4-30ec-4265-a16d-ee585c61d9e7",
        "cursor": {
          "ref": "8c42e515-4c5a-4387-b328-90541b529fb6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3229728f-3e0f-449a-99b3-1caf5e6e3d79"
        },
        "item": {
          "id": "00360bb4-30ec-4265-a16d-ee585c61d9e7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ed174a79-0a8f-4e66-899c-ae8a7f25f79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22a6362-abb7-4798-be62-19e7ad1c7897",
        "cursor": {
          "ref": "d5b37fc0-56b1-469c-8a22-1346c56b24b3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8a0c986e-9e78-4185-8fdb-eadba041c158"
        },
        "item": {
          "id": "a22a6362-abb7-4798-be62-19e7ad1c7897",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e6317550-cbfd-473a-af07-5f562d51c7b1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 85,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934c24f6-af70-48ef-9666-a0d50434d0c6",
        "cursor": {
          "ref": "7dd284f1-4bf2-4ca5-b1a9-e0723dcb8090",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "026c2819-1c9b-4882-8190-8efa65d30651"
        },
        "item": {
          "id": "934c24f6-af70-48ef-9666-a0d50434d0c6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "496224cb-54f9-4108-bb8e-169e31416b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce66dec-907c-46db-acde-f4f33ff5b809",
        "cursor": {
          "ref": "33c532b4-0f18-440f-92ac-a238e8e74490",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2e066681-93d5-451c-944c-fe06a7ab31b3"
        },
        "item": {
          "id": "8ce66dec-907c-46db-acde-f4f33ff5b809",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d186ee56-8a2c-4a9d-8f3e-92bca87d3160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555eb810-6030-4081-ae71-ef8b6c504e7a",
        "cursor": {
          "ref": "f0c31521-2ff8-42a1-8ae1-8304184d31d6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "497d3c41-6c94-41a0-9edd-d632816dd7fe"
        },
        "item": {
          "id": "555eb810-6030-4081-ae71-ef8b6c504e7a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d1ff9236-e3cc-41bb-994d-0b8d77f1587b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8984e4d-ad24-4c10-b582-58ce4cebd9cd",
        "cursor": {
          "ref": "2017efe1-7a21-4a95-8b97-9a1fa8732755",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "191d9fb9-e77e-4bf9-ac73-766161b6bd9b"
        },
        "item": {
          "id": "c8984e4d-ad24-4c10-b582-58ce4cebd9cd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "58dc0ad8-6ea4-436d-aa7a-99242f9982d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e56202-026d-4041-a438-a07ab13540bd",
        "cursor": {
          "ref": "9e30d713-ea58-4d16-aef3-8f7f017b2715",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9a5e4062-d9e5-4bd7-90ca-c7553dd5ce65"
        },
        "item": {
          "id": "48e56202-026d-4041-a438-a07ab13540bd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3b011a78-bd10-44f8-b489-9dfe0bd470b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619b8e78-b3c6-4ce3-9e93-1b8b8a94abb9",
        "cursor": {
          "ref": "3e9ac506-884f-4f6f-b340-dececa0eeb6a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "69c2f856-459a-4c93-86cd-dbe52a16ad6a"
        },
        "item": {
          "id": "619b8e78-b3c6-4ce3-9e93-1b8b8a94abb9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5a1ff309-f422-467c-b96a-95d4080d47d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019412fd-6876-4080-8e14-4feb1de096d7",
        "cursor": {
          "ref": "d8af5ed1-2bdb-43e4-9957-e9e57c080ad9",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e1bffb14-27c7-4a05-a79e-cc0a42891497"
        },
        "item": {
          "id": "019412fd-6876-4080-8e14-4feb1de096d7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f2d62ff8-c643-4611-be0c-59d23d8d428c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4115fc28-508a-4fde-931f-47274e8a0d68",
        "cursor": {
          "ref": "6d83f5aa-89d3-4afe-b57b-ed0df9c62fd5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "63868c2e-b42b-454a-a88e-13f197b3af9d"
        },
        "item": {
          "id": "4115fc28-508a-4fde-931f-47274e8a0d68",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "221c8479-1dcf-4028-8941-f63cbe7a044f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8e79df-3dc4-4e0f-b555-80b3a90e68ba",
        "cursor": {
          "ref": "42bdbb10-8dbc-420d-bbd3-03a69373b362",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "577e1219-590a-43e7-abb4-7474fb1b5824"
        },
        "item": {
          "id": "9b8e79df-3dc4-4e0f-b555-80b3a90e68ba",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dba69517-60d9-469c-a6ef-253822169bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd238767-388a-4b13-8a2f-94b079fe722c",
        "cursor": {
          "ref": "794c7237-7155-47e5-9174-1ae7dcd28702",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a336c738-d829-4541-a065-b5b5bed7bf3d"
        },
        "item": {
          "id": "bd238767-388a-4b13-8a2f-94b079fe722c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d125a07f-256d-4b2a-afe1-cc0468e3b3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27eed669-bb91-43a2-a55a-be001fa792c3",
        "cursor": {
          "ref": "69b247ec-349f-4c67-a0af-b759fb4a75c0",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3dfeb918-4006-4bcc-901f-86eaae6aa17c"
        },
        "item": {
          "id": "27eed669-bb91-43a2-a55a-be001fa792c3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d9751638-9190-436d-a4ff-c7484935fb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8483951a-ce14-4d79-aebb-8df077b6303c",
        "cursor": {
          "ref": "a594e540-3cb6-4f98-b31b-38f7563dec37",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "abcbeaff-6bca-43c6-8141-765f88bfac21"
        },
        "item": {
          "id": "8483951a-ce14-4d79-aebb-8df077b6303c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "692b4954-832a-4434-9d7b-47c6506f6085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76a9e18-ff84-4bbe-b2b8-b3e13da000ce",
        "cursor": {
          "ref": "49c4479a-84b3-4daf-9fc1-fb90e1271170",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1182d3b3-ccd8-48ea-8b49-707d0cd3b47e"
        },
        "item": {
          "id": "d76a9e18-ff84-4bbe-b2b8-b3e13da000ce",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "35ed433f-25d9-4dd5-aacc-ae2602723d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d53589-892b-450d-85ff-281beefab8ea",
        "cursor": {
          "ref": "02ceff69-86bc-4f33-988f-0cae0f2894be",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6f8d6c27-b2b8-4ac1-bd6e-6cee6e0f3bca"
        },
        "item": {
          "id": "a1d53589-892b-450d-85ff-281beefab8ea",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6138eec8-2b47-4cf8-a5b5-ef51a43d380d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0363ddf8-f740-451a-8ff3-6b4b66efc3ee",
        "cursor": {
          "ref": "08719379-c68e-4240-9521-c65118b498c8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "82be58f8-7c5a-4b62-a6c5-b29229d37ae3"
        },
        "item": {
          "id": "0363ddf8-f740-451a-8ff3-6b4b66efc3ee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "946257b4-b4d9-49b6-b391-4fc59b82f88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c314012-1cd9-41f5-a9d0-e8cd9fe77835",
        "cursor": {
          "ref": "b13f42a9-f9bc-4f01-bddb-96f6a6fc353d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c4429481-a9f8-4edf-97af-ed9eaa3a91b5"
        },
        "item": {
          "id": "2c314012-1cd9-41f5-a9d0-e8cd9fe77835",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f98b4d3f-eb0b-43c8-ad02-9f20b65bcd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6d01ba-424c-4f1e-b05e-c697bd3a2309",
        "cursor": {
          "ref": "95f50a7b-5b66-4647-8d8c-cbf6c7f7fb48",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "60fa2b03-2ee5-4e9a-ab17-ed3193a3e773"
        },
        "item": {
          "id": "9a6d01ba-424c-4f1e-b05e-c697bd3a2309",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1364b83a-ba52-4b47-9d4d-176b642f37a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0409823b-5869-42b4-bcd2-dbb873ceb360",
        "cursor": {
          "ref": "cbebbefa-c42e-4996-bc15-e1ee00d30a76",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d0241637-98bf-4cde-b6f6-f835f4afad55"
        },
        "item": {
          "id": "0409823b-5869-42b4-bcd2-dbb873ceb360",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5f5c32dd-c555-480b-a6e8-7902f7ca686d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ca3f6e-17c9-43ba-bc41-ee1064a1b624",
        "cursor": {
          "ref": "bc0c56b2-a973-4187-816b-c3b2af9c434f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "93384d39-e95f-4de4-9cf9-4a64bfaaec9e"
        },
        "item": {
          "id": "97ca3f6e-17c9-43ba-bc41-ee1064a1b624",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "68db67bd-da31-41d2-8bc0-1d9a9c668b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341a4404-80f9-488e-a1a1-6755440f5722",
        "cursor": {
          "ref": "dfeb47d5-0d31-42d9-a93c-299bf80b3d4f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "df00366a-ae3c-4771-a163-b69e0321e02a"
        },
        "item": {
          "id": "341a4404-80f9-488e-a1a1-6755440f5722",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "74cde9fe-9405-4315-8121-e9f320d2f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56954aa6-b2a9-437e-a4eb-f7c1f0a16bb5",
        "cursor": {
          "ref": "34175025-712a-4727-bf90-89c841a82363",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "85da95fe-398e-4b2b-8c51-b42f674189ce"
        },
        "item": {
          "id": "56954aa6-b2a9-437e-a4eb-f7c1f0a16bb5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ca5df0c3-32e2-454d-8dfa-6a682b61449b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fb02ec-2b78-466a-8f39-cd8ecd490956",
        "cursor": {
          "ref": "d8dc6432-597f-475f-b02e-af942649c243",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "60a676f0-8276-41db-a3e8-2ab8dd067bf3"
        },
        "item": {
          "id": "f3fb02ec-2b78-466a-8f39-cd8ecd490956",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5704e51-3554-4b75-b878-edbfd577dc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76499097-72d1-47fe-96b8-098dd36851bf",
        "cursor": {
          "ref": "e8ba3fb3-1481-484a-9d98-a47b2d29c4e2",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "de0d0544-f71d-4f45-a668-35bbc1b4000c"
        },
        "item": {
          "id": "76499097-72d1-47fe-96b8-098dd36851bf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2a47df36-eb17-44e3-8885-feef6b5bfe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7364172-c9de-4efa-958d-bfe38145fe81",
        "cursor": {
          "ref": "782e641a-58d4-4e03-be0c-3ae6bbb6ca1c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f07e29fa-00ce-4a34-9d7b-fea95a21c49c"
        },
        "item": {
          "id": "d7364172-c9de-4efa-958d-bfe38145fe81",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e3c6429d-a990-4caf-90d3-1963674b2ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24630a0-d381-49c3-b83b-58991f598c2f",
        "cursor": {
          "ref": "409bda0f-27fa-4b39-a3f9-248a783e0158",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "16fc627f-72a4-49b1-9474-487beeabf12a"
        },
        "item": {
          "id": "f24630a0-d381-49c3-b83b-58991f598c2f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "abcaef55-9aa8-48c5-8877-01eb4aadbae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b0e494-061f-4776-a951-11f552f91f94",
        "cursor": {
          "ref": "da839c83-e2a8-46af-a3a7-47b2e04afe76",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "90b42d76-f08e-4567-9063-755c9786e9ee"
        },
        "item": {
          "id": "15b0e494-061f-4776-a951-11f552f91f94",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "209ab794-de4b-436b-a436-419188ce6d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438c5408-d08e-47f4-b26a-abd6b8421dfe",
        "cursor": {
          "ref": "b4045b48-e940-4b3c-9367-9baa734bf180",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "67d14ec2-e4a4-4cff-8f19-96c76d853e0e"
        },
        "item": {
          "id": "438c5408-d08e-47f4-b26a-abd6b8421dfe",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cf5db4bf-023a-4064-bf05-a3a96385d57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0341c76b-42ec-4471-9255-a1ce860b3201",
        "cursor": {
          "ref": "962b75cc-cb96-40a7-8e43-ec0c14af15ac",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "19a95a2f-d4dc-4339-b0d8-196fd9da0cb5"
        },
        "item": {
          "id": "0341c76b-42ec-4471-9255-a1ce860b3201",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f0644efc-8ae3-451d-b137-c3eada218bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276c09be-d64b-429f-bf3a-be4bfe40fe23",
        "cursor": {
          "ref": "1c89fae7-7904-4dfa-b836-eed6a70f4108",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3880102a-bd87-49c5-a8cd-387fdc25467b"
        },
        "item": {
          "id": "276c09be-d64b-429f-bf3a-be4bfe40fe23",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6d1929a4-e0ba-4843-b199-0a433360cb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b221c541-29c8-465f-93cd-8395824060c0",
        "cursor": {
          "ref": "73bb8147-684d-43fd-9bab-889dfeaed583",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "24bd8ffd-d964-4342-b6ab-9413af02daa5"
        },
        "item": {
          "id": "b221c541-29c8-465f-93cd-8395824060c0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ae301dc7-408c-4b73-847b-196a2e0d950a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a9f6b0-c3b9-4264-bb21-10c8fbca29e8",
        "cursor": {
          "ref": "93a5695d-86a4-4232-9543-7247645a0b22",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b9a54e34-7bbd-46d8-b3cf-c2fc9a2e1be1"
        },
        "item": {
          "id": "51a9f6b0-c3b9-4264-bb21-10c8fbca29e8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ecd7e547-468a-444c-9c86-43465dda60ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44edf6c-42c5-438a-afd6-94893414eea7",
        "cursor": {
          "ref": "356af815-90a3-4bd6-a127-80e0c043dbf0",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2bdc28d1-426d-491c-ab63-324bb19b9804"
        },
        "item": {
          "id": "e44edf6c-42c5-438a-afd6-94893414eea7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4867d190-acb6-464d-a5a4-fa66b5012208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd90cb2b-b5d6-4d25-9294-03ba2f6a1866",
        "cursor": {
          "ref": "b2fa7bb1-c20c-4417-a6d8-c80853c37556",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "961e86b5-13e3-40d9-951e-b3b29f975903"
        },
        "item": {
          "id": "dd90cb2b-b5d6-4d25-9294-03ba2f6a1866",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1c38dc26-a40e-40e4-a11c-78ab4f4acec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d64ed9-c7d4-4dce-8948-5ba3add628ca",
        "cursor": {
          "ref": "ac8230cd-1cb5-4a2c-9808-b674110c2e9c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1671f6d9-6248-4117-a985-c5d47fa239bb"
        },
        "item": {
          "id": "16d64ed9-c7d4-4dce-8948-5ba3add628ca",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "550d3653-af06-483f-bfeb-4606579169f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0bba0a-3e10-4dda-8892-cc4ec13fa659",
        "cursor": {
          "ref": "19fcaa0f-ea63-48c5-b0aa-66664bf2d17f",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7997fa52-97c6-469b-b616-87616b69f0fc"
        },
        "item": {
          "id": "eb0bba0a-3e10-4dda-8892-cc4ec13fa659",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "79f69d64-6991-4ae4-aa17-5b9c413940de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86afa5c5-c89e-486d-b452-9b839cd6ada2",
        "cursor": {
          "ref": "1ab0cedb-1049-488f-89af-39593cae32ad",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7ab0547d-d0d6-414c-afbd-98e9c654408f"
        },
        "item": {
          "id": "86afa5c5-c89e-486d-b452-9b839cd6ada2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c74da671-d700-47a5-b739-6a33d22f1ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd39fffe-87dd-4887-a1a0-3d362348fc19",
        "cursor": {
          "ref": "379ccd56-026c-45f6-b330-3cd6690de7b2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fbc093a9-10c3-46ac-923e-ab5a33a1d73a"
        },
        "item": {
          "id": "cd39fffe-87dd-4887-a1a0-3d362348fc19",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b2455041-3d88-4bfb-bfd9-1b1ad15a0efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db99d03-a10f-4538-9c47-45c49581280d",
        "cursor": {
          "ref": "bf911510-89fa-4386-a42c-3a8d6990c7e2",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "173c0ffa-afab-4d1f-9a44-e3bbda7c9270"
        },
        "item": {
          "id": "7db99d03-a10f-4538-9c47-45c49581280d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7c05b6ea-e168-48f6-ba50-1867810cfd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6372246f-d6af-4dd2-8fdd-b9531d63e082",
        "cursor": {
          "ref": "9a00fe1a-82b0-4b06-8e44-3903a7d89ff8",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7198262a-3800-4ef9-8e95-5fbff02c6a39"
        },
        "item": {
          "id": "6372246f-d6af-4dd2-8fdd-b9531d63e082",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "581cbd85-194a-489b-8304-527c93abefd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bd1698-27bf-4b63-b2da-20c3ae571333",
        "cursor": {
          "ref": "994f2708-39bf-45c5-9906-0b719713be88",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1027b591-b392-48a3-940b-dce6c1e563f7"
        },
        "item": {
          "id": "52bd1698-27bf-4b63-b2da-20c3ae571333",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "99d992e1-4527-4737-903a-9455395535e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb2c3e7-0dad-4528-a845-0a8dde6ab958",
        "cursor": {
          "ref": "9f2f6a4c-b360-4aaf-8431-4011e4467fe7",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "62516571-ece6-4d3e-baff-a056e22c8913"
        },
        "item": {
          "id": "cbb2c3e7-0dad-4528-a845-0a8dde6ab958",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9649a840-ba87-475f-90eb-5492d453a5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76112191-9284-42fc-a524-a539d6a89013",
        "cursor": {
          "ref": "b1d19275-7973-44ad-bb7f-a92bf92d3519",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3cbed9cc-eb0b-4596-8e63-7f6ea21d4559"
        },
        "item": {
          "id": "76112191-9284-42fc-a524-a539d6a89013",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b3b5f44d-1c2f-4a8c-9b65-c245333d5228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6188eb3-5700-4edb-b85b-56f83a9b41f2",
        "cursor": {
          "ref": "24d1dbb2-8670-4dfe-8ed0-de644ea807b3",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d0f98a85-debb-47ef-a33e-91cbf85857f7"
        },
        "item": {
          "id": "a6188eb3-5700-4edb-b85b-56f83a9b41f2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cb805d42-6e53-4bf5-925d-7fa5410333f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c458184f-a03e-4fd0-abf0-64d61e29630b",
        "cursor": {
          "ref": "915c768e-dc94-41ba-8f06-4a8571f5f99b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9b797728-244a-4d8c-aa4e-69d678c35b6e"
        },
        "item": {
          "id": "c458184f-a03e-4fd0-abf0-64d61e29630b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "058a35e5-f24d-4d16-b8f7-fc4b93e133d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac3dfbd-dadc-4bf2-97b7-5f9290a2661a",
        "cursor": {
          "ref": "f96706a3-a464-44c3-a7f3-d65c333baab5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "314c30a2-7a7a-40f8-a587-25503b231e0b"
        },
        "item": {
          "id": "9ac3dfbd-dadc-4bf2-97b7-5f9290a2661a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c78f8b9f-86c8-4b1b-b433-398cfd6f2bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8c8fd7-3d16-4902-a142-6eaa4c99be94",
        "cursor": {
          "ref": "7b0e3e6a-f0d0-46f1-a7ee-013a411b6077",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d4c8abd6-5b40-41a7-b37d-7d3cef8e7449"
        },
        "item": {
          "id": "cd8c8fd7-3d16-4902-a142-6eaa4c99be94",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c0dbc526-6257-486e-83bb-1eb96074f8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bf5948-88b4-4578-9743-9c246d73e518",
        "cursor": {
          "ref": "df97bf82-ff1d-488c-a185-c62e6b36c4c8",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e789e9d2-aa21-4605-acaf-b7f9b542646d"
        },
        "item": {
          "id": "79bf5948-88b4-4578-9743-9c246d73e518",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e879c6be-b28d-48d4-b89e-7b17997d6efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a52b6bc-81a1-4de7-865f-1a96d08a5d59",
        "cursor": {
          "ref": "7991592e-5d51-4273-859c-86415d983093",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "31f94705-4158-4b41-aa57-026532f5f6eb"
        },
        "item": {
          "id": "4a52b6bc-81a1-4de7-865f-1a96d08a5d59",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7c1fa80d-67ef-47a8-aeab-62c369ce6abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636978cc-6b03-42d7-a49e-04e78534bfb7",
        "cursor": {
          "ref": "e9ef8a4b-497e-4c0f-a9a5-a48e16c735bf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "776f44c1-cfcc-4d34-a844-3c6b36d439b2"
        },
        "item": {
          "id": "636978cc-6b03-42d7-a49e-04e78534bfb7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0ae3d740-fd9c-4c24-9673-5d7d1c7876aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0985d5a2-6b5b-419f-80e4-730a279915ea",
        "cursor": {
          "ref": "efd4eebf-c43d-471f-8be6-080d25e32590",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8bf7985e-bcdf-4a8e-9398-c31463e24b3f"
        },
        "item": {
          "id": "0985d5a2-6b5b-419f-80e4-730a279915ea",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4361df9d-b188-4d55-87fe-8e0c4d17d7e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd75d94-1da7-4f36-96e2-464cf36c2446",
        "cursor": {
          "ref": "a7baa02b-83ed-4b8d-b0a3-d90b18dc7e3a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "556f1c7f-eeb8-4ffc-9daa-125b4c8d8a05"
        },
        "item": {
          "id": "3dd75d94-1da7-4f36-96e2-464cf36c2446",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0ee67e34-e772-4cbe-9c76-2a573755a094",
          "status": "Created",
          "code": 201,
          "responseTime": 114,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c70bdc-4b0e-42c4-938b-8450d11d6934",
        "cursor": {
          "ref": "d2bf74ce-89c4-424c-a004-9eb06b04958a",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4c1f3cb5-91ac-47d9-8b29-56b876774e64"
        },
        "item": {
          "id": "b3c70bdc-4b0e-42c4-938b-8450d11d6934",
          "name": "credentials_issue"
        },
        "response": {
          "id": "33e45ee6-9147-4580-9ff2-90fb0c38a975",
          "status": "Created",
          "code": 201,
          "responseTime": 285,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5f1cdf-dede-4673-b305-e7c1c6c6566f",
        "cursor": {
          "ref": "06efa790-3aea-4add-b46f-f8d2fe34c789",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "20014f36-6445-45d0-8e47-4b2f08b0bcc2"
        },
        "item": {
          "id": "1d5f1cdf-dede-4673-b305-e7c1c6c6566f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8cb20d50-cb9e-419e-afeb-5fc7492fd343",
          "status": "Created",
          "code": 201,
          "responseTime": 191,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c9e4e8-12e7-43f0-ac7f-76bfb3fc6597",
        "cursor": {
          "ref": "858a3cb6-df21-436f-a9d2-053c42b41978",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e00ba28f-2a78-458b-8b08-d846af53788a"
        },
        "item": {
          "id": "54c9e4e8-12e7-43f0-ac7f-76bfb3fc6597",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9d48abb1-4596-4f11-a791-ddfc8eadcc6e",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4964c3-5e95-4623-b15d-ceee43beb3b0",
        "cursor": {
          "ref": "12fce3b8-88c1-49b8-b02b-3e26a143c6dc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c121bd42-0021-41db-a0e0-fca32a20dfd3"
        },
        "item": {
          "id": "ed4964c3-5e95-4623-b15d-ceee43beb3b0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d157f55a-ae65-452a-aad7-0719ec943e17",
          "status": "Created",
          "code": 201,
          "responseTime": 96,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49e7e79-6001-476b-acb1-05fda64d77ba",
        "cursor": {
          "ref": "3cb3455c-d85e-48d8-8e09-a094b1785ee9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6c15df88-a8fa-46fe-9361-58dfd5814704"
        },
        "item": {
          "id": "b49e7e79-6001-476b-acb1-05fda64d77ba",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cb2e9e26-7402-4914-b302-c0d22249854e",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d272904a-1bad-4236-b49f-6dba76c502cf",
        "cursor": {
          "ref": "52bab345-0037-486b-99f8-24fce68f892c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7f364774-e3a6-4e42-b1ac-f5bb3ff1e7b6"
        },
        "item": {
          "id": "d272904a-1bad-4236-b49f-6dba76c502cf",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "79ecfb51-59fb-4293-9a53-8dce164ddf4f",
          "status": "Created",
          "code": 201,
          "responseTime": 104,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de4f52f-a545-47bd-a6db-4728484c1d79",
        "cursor": {
          "ref": "70994e5c-83fa-4fce-b9e3-7a6c4ed1c887",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7e1d4449-109b-47fe-b0c3-e62a151eba35"
        },
        "item": {
          "id": "0de4f52f-a545-47bd-a6db-4728484c1d79",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0ed157b7-38cf-44e5-8d33-4e2a6f561fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54da04a1-2107-40eb-b03a-bbb3d6cfd97f",
        "cursor": {
          "ref": "2a551afd-e10e-49f8-8465-1903d0a9b900",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "209c6a7c-e1f5-453d-81e8-97e2e81308fb"
        },
        "item": {
          "id": "54da04a1-2107-40eb-b03a-bbb3d6cfd97f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "193353a1-1f7c-4939-9379-48f47f367c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518b4fd6-a2ba-4f33-8b42-632d0cc8b346",
        "cursor": {
          "ref": "a2e332a6-98bc-40dd-977b-e5c27a53d34b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "40ec38ed-d15c-40f3-9a12-bca060d14a07"
        },
        "item": {
          "id": "518b4fd6-a2ba-4f33-8b42-632d0cc8b346",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1e6ae654-c1ff-4f80-8be1-c45bf12cd31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934bff1f-8750-4fba-8ecb-58d2ecff4f6f",
        "cursor": {
          "ref": "c71b3a1e-8a74-4e54-af5c-6c225d707048",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "89f36d1a-095d-40ea-b0d8-a51e270b937d"
        },
        "item": {
          "id": "934bff1f-8750-4fba-8ecb-58d2ecff4f6f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d9548628-8f80-45eb-838b-ab82ec7613d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5789fc64-76e7-498f-9a04-806e05e8652e",
        "cursor": {
          "ref": "12d067ac-46cc-45e1-9473-658f353934ea",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "264d630d-6e8e-4d0a-be31-d8db5c2b73b1"
        },
        "item": {
          "id": "5789fc64-76e7-498f-9a04-806e05e8652e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d2396a2d-6526-4ef7-81b9-d173f4a27f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0d51b7-5399-4884-a19b-1c54f4608326",
        "cursor": {
          "ref": "8c2f1992-98aa-42dd-a30e-bdab35be59ef",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e7961ac7-cfb7-4073-b5eb-5d179da3a8b5"
        },
        "item": {
          "id": "9f0d51b7-5399-4884-a19b-1c54f4608326",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d275a085-d7a1-4e79-be9c-3fd42d53f4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ea8cac-77d7-4cc5-bc90-43deb579a7b9",
        "cursor": {
          "ref": "bb2aac66-05d0-487e-95da-bce76e053b6e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3addae4a-53a2-4d04-848a-3df594dac063"
        },
        "item": {
          "id": "87ea8cac-77d7-4cc5-bc90-43deb579a7b9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "91925d93-b84f-47f8-9c15-97cfb3f5a64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e8e5d9-56cd-434c-99f7-c84ad3edc169",
        "cursor": {
          "ref": "f5500f2b-5284-4344-9c51-a046abf3b3d9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a130f625-b160-49db-8447-e2e015b91671"
        },
        "item": {
          "id": "03e8e5d9-56cd-434c-99f7-c84ad3edc169",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f085f3bc-ae29-4ec4-8aca-cb98c684959f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5ae34c-ae4f-40f9-a80c-8da0a48b04c1",
        "cursor": {
          "ref": "80d7b9bb-6593-4820-8092-c288008f21c4",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fdf92b06-90d4-44f5-89dd-56327cc08008"
        },
        "item": {
          "id": "cc5ae34c-ae4f-40f9-a80c-8da0a48b04c1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "546f378b-6610-4eaa-8896-208e1f5c5582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45a9d2f-2671-47c8-ba4e-79ec7a7e9a4e",
        "cursor": {
          "ref": "b1674228-94c2-43ce-862d-047334f56dc9",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5f61e540-34aa-4965-81cf-9fad8f8579e7"
        },
        "item": {
          "id": "f45a9d2f-2671-47c8-ba4e-79ec7a7e9a4e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e26fe48a-64ae-483b-a638-76e403b9b4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aae2da2-dbb8-4041-a592-2a2845416dda",
        "cursor": {
          "ref": "f355816a-3918-4baf-b571-2809dedc303c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "28c051b8-41b3-4965-a25b-15b3b8df11a7"
        },
        "item": {
          "id": "9aae2da2-dbb8-4041-a592-2a2845416dda",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1620217a-b3b5-41e8-b1ca-1cc4154ff0d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf8497d-53fd-45e9-bf37-423fdc5ecdb5",
        "cursor": {
          "ref": "4b13a179-1005-4d83-89ff-cd3c79a1cdfa",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2343dd00-0ed7-409f-b05b-fec76be1600c"
        },
        "item": {
          "id": "ccf8497d-53fd-45e9-bf37-423fdc5ecdb5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7ea1f21e-ba31-4c6c-958e-5466cc8a807f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a482460-4306-4047-bf78-0cdb6b748746",
        "cursor": {
          "ref": "320d025e-4e08-42fd-9fda-3d339ad80a50",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "087d369c-55ee-43a9-80f5-37ca919c0398"
        },
        "item": {
          "id": "4a482460-4306-4047-bf78-0cdb6b748746",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "33af6a8a-4b99-4600-845d-5fab91351ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9a3e0f-b4bb-4c2a-8e05-c85fa268e226",
        "cursor": {
          "ref": "bb70f464-f5ac-42f1-b701-aa394d3ae49d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d67bd2af-f390-4e06-9870-432812ed1a1e"
        },
        "item": {
          "id": "0a9a3e0f-b4bb-4c2a-8e05-c85fa268e226",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6eace137-e9e1-4d28-9b47-93fed916d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ad72fa-1dc8-41eb-b8c5-d86de6e73051",
        "cursor": {
          "ref": "60972522-31f1-48b3-b6e9-91378ad03b7b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1d76cff7-9009-4c02-8816-24da8c4ba0ba"
        },
        "item": {
          "id": "59ad72fa-1dc8-41eb-b8c5-d86de6e73051",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3473968d-558f-4b7e-93cf-4347ba5bbe5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46cbd07-4175-4642-b1e8-b203555b068b",
        "cursor": {
          "ref": "249f6a8d-4c39-43a3-b560-3533d826edf7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "140774d9-d523-439a-aa2b-f6e17a5bb065"
        },
        "item": {
          "id": "f46cbd07-4175-4642-b1e8-b203555b068b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "123f0b8e-390e-478a-974f-0a730fd2d61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c00bffd-7681-449b-9bfa-de3fd24d5b87",
        "cursor": {
          "ref": "c5ecb2c1-f2a9-416f-b6b2-b465c8dce8e8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "28009818-8b48-41bf-a575-e52bd623819d"
        },
        "item": {
          "id": "9c00bffd-7681-449b-9bfa-de3fd24d5b87",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3b983c18-dbd8-40d3-8c86-3916f990950c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69f2853-7698-421f-a013-7f39bbd749ae",
        "cursor": {
          "ref": "3a9d4add-2998-4752-a4ab-671bc6551411",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "967e13a2-9a2f-4cb4-94d1-7e6c12b08482"
        },
        "item": {
          "id": "c69f2853-7698-421f-a013-7f39bbd749ae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e38db82a-617d-4fd7-953c-fbf438432c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fada50-a814-4b59-8c19-041cd9ea36db",
        "cursor": {
          "ref": "005f6e75-cf96-42a3-9714-05d5c1b0016f",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e8863cc8-73f4-4d43-bfad-838cf1b17efa"
        },
        "item": {
          "id": "d2fada50-a814-4b59-8c19-041cd9ea36db",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3827ea5b-37ce-4c1d-9f74-c60eed5305e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75b8b4c-bca1-4e69-a69a-9157027ca49d",
        "cursor": {
          "ref": "eb9d0944-1d69-4112-bf7c-40c2f75514fd",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fefb8908-4b88-41af-9707-ed102e7aa784"
        },
        "item": {
          "id": "c75b8b4c-bca1-4e69-a69a-9157027ca49d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a39c6c92-18c0-4485-b311-8565f34f25fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202377ec-6ad5-4367-bf1c-d469defef1a4",
        "cursor": {
          "ref": "e042ebf6-2d57-4e77-ab64-bfeb0ea6d028",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bfad605d-b913-4cff-87e3-54b951e78a6b"
        },
        "item": {
          "id": "202377ec-6ad5-4367-bf1c-d469defef1a4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bc6288a3-d517-4af1-8005-2b329913e1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f35a25-c909-429d-b42b-1a2c9db8db77",
        "cursor": {
          "ref": "0d1b40b8-e7ef-4d91-bbd3-dd238c70a6fe",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9997535f-1f3e-4d63-8ae0-bc8cb6929ede"
        },
        "item": {
          "id": "43f35a25-c909-429d-b42b-1a2c9db8db77",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "643423fb-398b-4703-bdc9-ba8d6403f858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b81f456-c3d0-42ec-9b76-413bb200a3b0",
        "cursor": {
          "ref": "1f19cd9f-3e2b-4d5d-b61c-67f24b04679c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3fa7147a-ab02-4d84-843f-90ff4b5eb3bd"
        },
        "item": {
          "id": "1b81f456-c3d0-42ec-9b76-413bb200a3b0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0c5d16f9-e4d8-4ecd-b932-f9aee6fae8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccb150b-00e6-45ee-9543-fb42ec975989",
        "cursor": {
          "ref": "25c66fcd-f2b3-43f1-9639-1347ba54e1de",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5047c803-e465-4a4e-a24d-a663ee02cf83"
        },
        "item": {
          "id": "dccb150b-00e6-45ee-9543-fb42ec975989",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e92c6959-c877-4c6b-aec6-02f7f3c4281c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a984e0c9-abf2-4fd3-a08e-982f1741931c",
        "cursor": {
          "ref": "5f72b5e2-6e1f-48e0-ab8e-5bc9b8a856cd",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f77bce2b-b4da-4aae-bd46-09995524dc18"
        },
        "item": {
          "id": "a984e0c9-abf2-4fd3-a08e-982f1741931c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cda76cba-03c5-4d19-9d6e-1423e7cf5328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c3deed-df9b-46ae-b7de-41d81b38c49f",
        "cursor": {
          "ref": "6283b03f-a965-43dc-8f21-29c6e4bbb468",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1967d9c0-de1b-4283-b418-fe2d83c4eb27"
        },
        "item": {
          "id": "25c3deed-df9b-46ae-b7de-41d81b38c49f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4c3d95d4-16f0-4048-917f-feedf4fe1c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc0d75f-b3cc-4b74-8310-4605421b43ad",
        "cursor": {
          "ref": "a873ca45-3982-4716-9153-677e9f24bcf4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "35ce9c46-cfc1-49ad-ac87-78307b4a9487"
        },
        "item": {
          "id": "bdc0d75f-b3cc-4b74-8310-4605421b43ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "91bb0f45-ac7d-4caa-8126-b8f5a302804c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8207eaa1-e475-4658-aa67-1b398ff9af0c",
        "cursor": {
          "ref": "d662eade-8024-47bf-ae07-74098422919b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f87cd5ab-3f4e-46d3-9286-55be68013f1f"
        },
        "item": {
          "id": "8207eaa1-e475-4658-aa67-1b398ff9af0c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1e85095c-5973-4442-a854-2df78f2d4f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9363ba7-bf7b-4eca-bbe3-1f2f8d4c5baf",
        "cursor": {
          "ref": "9e299982-1599-45a0-b43f-f2edd38edcc0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "daf6ac83-163b-4e29-a7c5-c737af69ae26"
        },
        "item": {
          "id": "f9363ba7-bf7b-4eca-bbe3-1f2f8d4c5baf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c86c2d05-6b66-4dc9-8185-779cbbfae127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f34c0d-795e-4040-bb2e-bd6bcc424b9d",
        "cursor": {
          "ref": "c21dd119-9fde-4ded-812e-50ded91018c3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "91623d41-1b4e-4dc8-bc38-129ca32baa0d"
        },
        "item": {
          "id": "c5f34c0d-795e-4040-bb2e-bd6bcc424b9d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7f06aaa5-cca4-4969-9851-6961d145e737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1645329d-0f96-4c9f-914a-f9432cbae3ae",
        "cursor": {
          "ref": "6ad865ac-b3dd-4f02-a5cb-046a575f4201",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "85a45097-8153-4971-b8a6-791b92c1fda5"
        },
        "item": {
          "id": "1645329d-0f96-4c9f-914a-f9432cbae3ae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7c535207-3af2-458e-b444-0dc4cd281278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3e2d2d-5e36-4891-aaba-beca639fbb83",
        "cursor": {
          "ref": "b95c844e-96d9-4525-9ddf-afec703a5d76",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bf582c51-dfd1-4f42-bf4d-7e1480279d56"
        },
        "item": {
          "id": "5a3e2d2d-5e36-4891-aaba-beca639fbb83",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "923edffb-241f-4309-b2f0-5a66d4fa7864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f06d2b-36e6-4713-9f3d-0315d0384e5f",
        "cursor": {
          "ref": "e0bf3f1b-1ba7-465e-8ec8-1c4354fa5d41",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5f690073-7d86-4b3f-8144-0677265082be"
        },
        "item": {
          "id": "01f06d2b-36e6-4713-9f3d-0315d0384e5f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6268295b-022a-4ddc-ac22-5c641268edcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b8a1cd-4c7c-40e0-8c24-400e4f6d9983",
        "cursor": {
          "ref": "d014b139-f9af-4304-a1f4-17534125f84f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "052e3dc9-eefd-4b1c-b933-fae23853e737"
        },
        "item": {
          "id": "99b8a1cd-4c7c-40e0-8c24-400e4f6d9983",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4358d927-b97d-4dff-b796-b4ede3fb186e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032abf7c-916c-4007-b5fe-6b36c4823533",
        "cursor": {
          "ref": "27f9656c-40cc-458b-b073-9ce958468a6d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a8464909-a458-4a94-b31e-b1251ebaa337"
        },
        "item": {
          "id": "032abf7c-916c-4007-b5fe-6b36c4823533",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a2fbb7dc-b054-4b45-b704-39b89ac31302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e6984d-ed22-4320-9889-de511bc88f11",
        "cursor": {
          "ref": "8c5de077-d7fa-44c4-98d7-adf1d7ce97f3",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "69d5e90b-e85f-40a6-8486-c07fac0fa749"
        },
        "item": {
          "id": "79e6984d-ed22-4320-9889-de511bc88f11",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "158b96d6-8aab-400b-8ec5-22c18418f7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6884019f-60b1-430a-9661-5f7581451cee",
        "cursor": {
          "ref": "29b73624-f119-4310-a991-75f3cfc83547",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9d0edd3d-36ad-42cc-bf8f-b253f7136289"
        },
        "item": {
          "id": "6884019f-60b1-430a-9661-5f7581451cee",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "02b26ee1-9982-4d72-a626-d6c66300ded6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8f716f-e1cf-4e80-b99b-61d77867ba53",
        "cursor": {
          "ref": "6ee98e2f-d1be-483d-99dd-a92445d6e329",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d5eee4d0-1c7a-4013-b933-6040a55b7ab7"
        },
        "item": {
          "id": "9e8f716f-e1cf-4e80-b99b-61d77867ba53",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ba8569c0-443d-40fb-a3e6-9e85cbf69444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f387e78-4547-4cec-87a9-199a4b6c08ce",
        "cursor": {
          "ref": "781fdd77-7766-4ea0-b7f3-d01c0e217123",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8a59f4f0-7634-462c-9ae3-32b07e0140ce"
        },
        "item": {
          "id": "3f387e78-4547-4cec-87a9-199a4b6c08ce",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e8e043ae-6aee-4e38-a109-86bade1ce695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a5d9a7-d9aa-4e3f-bd39-486187021442",
        "cursor": {
          "ref": "2c19d077-2e54-4b50-beac-8d24915e078a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dd29d564-c5c4-44bc-b10c-13f4b86fbc54"
        },
        "item": {
          "id": "09a5d9a7-d9aa-4e3f-bd39-486187021442",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0a73cfcb-5742-41d4-862e-90b362c44ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f307a70-f8c1-4e75-8822-23cb91781653",
        "cursor": {
          "ref": "21d5d6ad-68c0-4830-9df6-0c5dad97c6cf",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "30afdd0b-85e2-41f3-bd6f-9e4aebfa62fa"
        },
        "item": {
          "id": "4f307a70-f8c1-4e75-8822-23cb91781653",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5a088a94-9075-4896-8686-328a0f1a2db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51fc258-ab7a-4db3-b2e3-8b42e2a469b7",
        "cursor": {
          "ref": "a038fad2-c21a-40ea-b363-d1f1dbc81a28",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "97b9e082-3a9d-4b45-8b5b-05df60f5df5c"
        },
        "item": {
          "id": "e51fc258-ab7a-4db3-b2e3-8b42e2a469b7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7381341b-bd15-430f-a423-e502e46ed3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056bf04f-40b1-4316-beea-5ccc9939877a",
        "cursor": {
          "ref": "f0d4b85f-bafc-4ef8-b4c4-225bc78e7731",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fd72edd8-d337-4559-a902-9d3a388693f4"
        },
        "item": {
          "id": "056bf04f-40b1-4316-beea-5ccc9939877a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc72fc67-5002-4afb-92df-084ccdb02e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec56646-4517-4b5c-8663-0c5dfcad66eb",
        "cursor": {
          "ref": "2f0c084b-099f-4796-8b2f-d4d6d09c8607",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "75c5399b-ef10-4ca2-90a8-efb805abf000"
        },
        "item": {
          "id": "fec56646-4517-4b5c-8663-0c5dfcad66eb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ac697875-1f43-4f2d-bdcf-d3d0dc615d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff62701-8cf9-4562-95b7-3cc0f6469308",
        "cursor": {
          "ref": "ad85d1d2-6e64-493e-afa1-0ed07c8e69ba",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd5466f8-2396-4dcb-bbcd-41f08e919390"
        },
        "item": {
          "id": "bff62701-8cf9-4562-95b7-3cc0f6469308",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "72fa815f-aa02-41c0-87ae-02dcce8529a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d8c829-417d-44e2-a77e-9cd17a8c109b",
        "cursor": {
          "ref": "b108f7e9-c47d-4e52-bc08-2d445128eccf",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e23ea536-4876-42fb-bf1d-7f6458ed5ab7"
        },
        "item": {
          "id": "96d8c829-417d-44e2-a77e-9cd17a8c109b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "598f6c79-96d1-47b7-92f0-3b82d1d25e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f5012f-a678-42cd-9bf8-2728067d7c61",
        "cursor": {
          "ref": "fb6c6314-6c3a-4370-bc68-406525ee81d5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "061260d2-ab82-42d8-b416-d3edfef6a2dc"
        },
        "item": {
          "id": "78f5012f-a678-42cd-9bf8-2728067d7c61",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "333cba22-221c-4f02-8ad4-45e4cdb890c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbae65ca-9db9-4182-8288-799271b78998",
        "cursor": {
          "ref": "8e436824-e198-4ed5-a6fc-2d110cc309d0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ef05b8f0-61ca-4c95-8247-1037a9e93645"
        },
        "item": {
          "id": "fbae65ca-9db9-4182-8288-799271b78998",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "946c4481-6285-40e9-b243-d1be427c2f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd38d45-0255-4bfb-808c-e212bbbd8aac",
        "cursor": {
          "ref": "4e055ca0-8af0-4533-b5ca-7535bbdb73e0",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "30667836-5959-4929-8168-621fa4d6de88"
        },
        "item": {
          "id": "6cd38d45-0255-4bfb-808c-e212bbbd8aac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ee9494f7-ecd1-4de9-8993-08e9e67ab28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5817d3f-034f-4e27-b50e-2a206f10afde",
        "cursor": {
          "ref": "0891bb12-5900-463a-bdd2-efda4f00be29",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ed9c0578-d1f9-4d60-a354-c36a63b1d240"
        },
        "item": {
          "id": "c5817d3f-034f-4e27-b50e-2a206f10afde",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0212c496-9c78-43fc-bc85-4b07fdb93a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffba534-8705-4601-90ba-cb581a080f3e",
        "cursor": {
          "ref": "ede9b4c4-d9e5-4521-85fe-085ed766ab41",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "968953f8-ea57-4c02-8fcd-2dbe43e43c22"
        },
        "item": {
          "id": "4ffba534-8705-4601-90ba-cb581a080f3e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "001cc428-ee11-4c2d-b65c-2f8db806a219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239587e0-88b8-4e68-87d7-f772b4b8eea3",
        "cursor": {
          "ref": "660edc85-74df-4404-8af0-14533b45796f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "076c38fb-3abf-4c51-88f1-a1acda44a54b"
        },
        "item": {
          "id": "239587e0-88b8-4e68-87d7-f772b4b8eea3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6c634bf8-68bd-425a-a1a7-a1df8e866b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b51f88f-bcf9-45b6-84dc-4856f457a5ba",
        "cursor": {
          "ref": "3bd6c0bc-8df5-48e7-a27b-f3622a3b3f50",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "685ce25a-9d2a-4f51-a976-feb788c650fa"
        },
        "item": {
          "id": "4b51f88f-bcf9-45b6-84dc-4856f457a5ba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4981ede2-09cd-4c3c-a55c-81181de114b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949aab1a-1bbe-421c-92a5-51b26ead0f15",
        "cursor": {
          "ref": "4ed1b674-405e-46fa-9dfa-be9546d5aadd",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d03b7b48-9e43-44f1-ab0b-31ec124b67f6"
        },
        "item": {
          "id": "949aab1a-1bbe-421c-92a5-51b26ead0f15",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "13c71c64-7f42-4206-bc49-dd73e9471542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16183c1-2e3c-40fb-8e86-62b90541be6b",
        "cursor": {
          "ref": "cdc8d238-b3a3-46c8-8a7c-b5411e6542f9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0befa06c-dd3e-4a79-acb8-90ca39ec1b1e"
        },
        "item": {
          "id": "b16183c1-2e3c-40fb-8e86-62b90541be6b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d47c7cd2-3be8-42c1-a111-541b040bf7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90913b64-a5b7-47d6-8e0c-12ebd0eefb11",
        "cursor": {
          "ref": "2d1daae5-f1c5-4191-ad70-4eaa7823d871",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "87d39ea9-f56c-4aaa-9f59-9919dbd7b087"
        },
        "item": {
          "id": "90913b64-a5b7-47d6-8e0c-12ebd0eefb11",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f8f18516-c928-498f-9f2e-dc2f4b24b0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867c3feb-7741-4faf-97cc-567c3ddec2fe",
        "cursor": {
          "ref": "40825f92-b54e-47a6-be9f-d7fc4fe89457",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "319e492d-532c-42d1-bd83-0b4c7f799e12"
        },
        "item": {
          "id": "867c3feb-7741-4faf-97cc-567c3ddec2fe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "31afddb6-3674-4718-9e1b-04185ee0a37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38041009-ac68-4a63-b877-36cc0f9ec348",
        "cursor": {
          "ref": "3ca3c8c3-1557-4a45-954c-d1c082ad5ca0",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b79f9fde-5aae-4156-96a1-e0a88809e492"
        },
        "item": {
          "id": "38041009-ac68-4a63-b877-36cc0f9ec348",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "68579736-d691-4df1-8ab8-83568ea27ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca61ae86-c9bd-4bb2-9bee-c8d1573e811c",
        "cursor": {
          "ref": "60008c64-2daa-4b5d-b40c-0c980caf06f6",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c6532e75-e5cc-4087-b7e3-ec1abb2a9c6c"
        },
        "item": {
          "id": "ca61ae86-c9bd-4bb2-9bee-c8d1573e811c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0c9b4496-acd7-4dea-96bc-bd72fd9f02b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f90801e-841c-4030-9586-9f8dbeeb73e6",
        "cursor": {
          "ref": "f8c9afa5-bd79-4d36-bbca-73b79cb811e7",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7c711cb2-aa1d-48dd-99c5-aa948d8c4e57"
        },
        "item": {
          "id": "6f90801e-841c-4030-9586-9f8dbeeb73e6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d0f34665-69b9-4ea7-ba17-a2d6368e0f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47818060-3be3-44c1-a11a-15fd974483b3",
        "cursor": {
          "ref": "be97c4bf-81a4-4bc9-91b2-40510389b15b",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "531b7065-6475-4b3d-ab2b-86cbeb138a25"
        },
        "item": {
          "id": "47818060-3be3-44c1-a11a-15fd974483b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "523feb51-ed0e-40ec-93e0-32f6c92ef6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f78928-4220-4064-8318-d330bfc8006e",
        "cursor": {
          "ref": "5ead12e7-f1a4-484b-90a8-c3adee969c63",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0177b202-4d2a-4be7-9d03-4e7d1c4e30dc"
        },
        "item": {
          "id": "75f78928-4220-4064-8318-d330bfc8006e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ad9ba531-19d9-4ddf-927b-8971f1ba7322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caff2b0b-2ac4-40cd-9041-fdefba5b2e43",
        "cursor": {
          "ref": "d1f725c5-e869-407a-b13e-e39745a73e15",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "56a1ef09-3dd2-428c-bffe-187953941e60"
        },
        "item": {
          "id": "caff2b0b-2ac4-40cd-9041-fdefba5b2e43",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "469c97e1-8d51-42a3-89a1-e46260fd1b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec44c8a-9d4f-4758-8f7c-09b9bee31fbb",
        "cursor": {
          "ref": "7af9360c-a90b-4113-946b-d2a503fc2baf",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "047e075b-2c69-41c0-a15f-eba2573c16b3"
        },
        "item": {
          "id": "dec44c8a-9d4f-4758-8f7c-09b9bee31fbb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a9b765b0-1996-46c0-8b06-e059e6ba484f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a81bde1-ebb8-469e-b3c0-0b27af1ecbf4",
        "cursor": {
          "ref": "71df8123-e8ae-4fca-a322-fad5bd60f4bd",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7018c940-aa4d-435b-959d-16ab6f72c0a9"
        },
        "item": {
          "id": "3a81bde1-ebb8-469e-b3c0-0b27af1ecbf4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c2726c3d-0f8b-4efd-b163-0a2b18344642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4fea17-f777-494b-8e31-a8e4574e94bd",
        "cursor": {
          "ref": "062057ef-abeb-413f-8734-27bf5b31fa02",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9b9d7c6b-9030-4182-9e5c-bee8d30feb27"
        },
        "item": {
          "id": "db4fea17-f777-494b-8e31-a8e4574e94bd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "67917401-4926-417e-b36e-f9b64a436832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab807edc-eba6-417e-a97b-2c8506e7e0f8",
        "cursor": {
          "ref": "696b05fa-4879-4a8d-8e11-cec18ca0052c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4e0ea1b3-3fc2-47da-8b54-75c3aaaec03f"
        },
        "item": {
          "id": "ab807edc-eba6-417e-a97b-2c8506e7e0f8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3dc21784-62ce-41c0-8f8e-ca691567c094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d195bc92-2ded-465d-a07c-de3bf6710aa2",
        "cursor": {
          "ref": "892f08b4-5842-42f4-96eb-b1d39f1c9726",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6b9de7da-796d-47b1-9ad3-4ebe1785e96a"
        },
        "item": {
          "id": "d195bc92-2ded-465d-a07c-de3bf6710aa2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "13af22d4-126e-4d0d-b729-27be700d752b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38461ed-dae2-4be2-98b7-abea30f2ebc7",
        "cursor": {
          "ref": "78a88e09-f3b6-4fb3-89c0-6d25f2df009c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "79207c0c-2483-4abf-81a5-c58ec533532b"
        },
        "item": {
          "id": "d38461ed-dae2-4be2-98b7-abea30f2ebc7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ecdac442-f9f0-414f-935c-b1f4797394d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d68392-c79c-408d-aff9-6120cfd87aa7",
        "cursor": {
          "ref": "68774eae-7c88-4090-88ad-add49f92c133",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a6e62564-5634-46de-899f-9106099b9b7f"
        },
        "item": {
          "id": "c5d68392-c79c-408d-aff9-6120cfd87aa7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "98f74649-88ac-4748-bcf5-e41691c6ac25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68d3ae5-d36f-4c9d-9e67-6c9f723a064e",
        "cursor": {
          "ref": "e46dfa14-9a2b-433c-ad0c-b4d4d545d837",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4f7d88b0-6dbf-43d3-bd4c-822668d194a9"
        },
        "item": {
          "id": "a68d3ae5-d36f-4c9d-9e67-6c9f723a064e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d94e5920-3968-4650-b6a9-d16d78e1477a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec93569-b676-4f4f-9c69-51cc55946e16",
        "cursor": {
          "ref": "64c5eb1c-b7fa-4ea9-96eb-8814617b1fac",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e8a734ac-e976-4ba7-b888-ca61415c1556"
        },
        "item": {
          "id": "8ec93569-b676-4f4f-9c69-51cc55946e16",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3d7fa010-a377-48d0-b6a0-4bdbf65c778b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d617e8-3b05-42d3-aed7-492b3c7b07e8",
        "cursor": {
          "ref": "eff93e82-ea10-43bb-b040-3a797d7be5fe",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6c4985c0-edea-4c0c-82e7-3475827b9389"
        },
        "item": {
          "id": "d7d617e8-3b05-42d3-aed7-492b3c7b07e8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4ebedabb-fac3-4f48-abbe-503e11a91e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb865ba-f5c1-4238-a4df-5584c978e792",
        "cursor": {
          "ref": "1ef9dd21-a3ce-4ffa-819f-d4f23e6d847d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "10f0fe99-886b-44a5-9dc0-c9c3a9b8afdb"
        },
        "item": {
          "id": "deb865ba-f5c1-4238-a4df-5584c978e792",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b36a5919-7d61-46b9-b876-de99acec996d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c5d5a6-cc55-4808-8840-e4eacbedbfd3",
        "cursor": {
          "ref": "4db78693-1c51-41b0-926e-51d09384d65e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4493da2a-21f1-406d-8dd3-50108e680b96"
        },
        "item": {
          "id": "11c5d5a6-cc55-4808-8840-e4eacbedbfd3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b2634cb5-7a5d-4783-8406-f490410596ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb18d64-4a11-4c25-809d-d5929607d8b2",
        "cursor": {
          "ref": "b7141f04-3c6f-4ffd-93b8-5918749d922e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f93960a1-12f3-4c95-8702-291d6ab7236e"
        },
        "item": {
          "id": "edb18d64-4a11-4c25-809d-d5929607d8b2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e3b1750d-e4d7-4516-81ce-207911d383f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533b5b2d-ba7e-4c8c-8301-f30bf6df0e49",
        "cursor": {
          "ref": "60ca1c1e-6835-4090-aa5c-1763d77ab23f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "59e690dd-ca1b-4806-b5d7-7240143fa297"
        },
        "item": {
          "id": "533b5b2d-ba7e-4c8c-8301-f30bf6df0e49",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c163d55b-18c8-4196-927f-43b00788b81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bed1cc3-26e0-4eb6-9c03-4ed5eec8e1ab",
        "cursor": {
          "ref": "b1fc85f0-ad28-4170-b7aa-baeebf7e1206",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e9b06555-2738-416c-9fa9-d2d1b2059979"
        },
        "item": {
          "id": "6bed1cc3-26e0-4eb6-9c03-4ed5eec8e1ab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4ca48729-f9ac-4cf1-8a78-cca95db70bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1593a517-1cb4-45e7-8dd2-320d1753f70e",
        "cursor": {
          "ref": "9d9ec48a-6118-457b-804f-2f5ef8eed580",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8df4f7a2-c553-426a-b66c-44b4ecae02af"
        },
        "item": {
          "id": "1593a517-1cb4-45e7-8dd2-320d1753f70e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "74af5f45-7d2f-4d77-a625-5ea5e3f6c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9b16db-120f-4d22-8860-2f105c2d0073",
        "cursor": {
          "ref": "dc1328ac-f02a-47ad-a095-d31610ffdc26",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bd50f9c5-6664-47c9-bc35-26ad69402860"
        },
        "item": {
          "id": "7e9b16db-120f-4d22-8860-2f105c2d0073",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "618b3a81-150a-4ce0-9329-d8c29858d4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3103a5df-1d0c-448c-a3cf-d16a090a3a03",
        "cursor": {
          "ref": "0514474d-a196-475a-af53-568b9091e607",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "44a8d33d-5cda-446e-8f6e-f1d30c68854a"
        },
        "item": {
          "id": "3103a5df-1d0c-448c-a3cf-d16a090a3a03",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "71829d12-c936-457c-9c84-9bc46c5a2a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca537bf-b71c-4318-a2e9-e3c1c16918bb",
        "cursor": {
          "ref": "2aa4f0d3-35f4-4a88-b321-02f8a38d1398",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5eb7aa36-b079-4fb8-b6e2-951cf561d3d9"
        },
        "item": {
          "id": "eca537bf-b71c-4318-a2e9-e3c1c16918bb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2be2078f-c289-45ba-af25-e27895f943d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be117a64-60e6-41c5-8094-1941ce32510b",
        "cursor": {
          "ref": "b26774a7-03a0-4537-a197-b7903625cdf6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6bb12de0-badd-4421-b6bf-8231b931f10c"
        },
        "item": {
          "id": "be117a64-60e6-41c5-8094-1941ce32510b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ac5bce31-ef6e-4168-a37d-ba6c75ea40c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4c0c25-d339-497e-a42c-5b6862eed7d8",
        "cursor": {
          "ref": "97047d5e-5c1a-4ab6-afed-c2f145989bd5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f1329bed-c86d-4ed2-9c0f-90acd384d0f5"
        },
        "item": {
          "id": "ce4c0c25-d339-497e-a42c-5b6862eed7d8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "08788fe1-898f-448d-9285-9138c08d8686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d20feb-7510-4e70-81f7-dbe6665a7f2f",
        "cursor": {
          "ref": "b0da909d-d2aa-40ae-9ee5-72a19ffd1b87",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b82ea5ad-788b-4261-b4e8-ad29a20fcbfb"
        },
        "item": {
          "id": "15d20feb-7510-4e70-81f7-dbe6665a7f2f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "837cf245-5ee0-498a-9e89-5fdbcdeb4511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d795127-fef2-492e-882b-ea6b1ac00504",
        "cursor": {
          "ref": "d7cd58c9-0c8a-4989-aede-f3169a1521e2",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8ac6d2f9-be3d-4186-9ffb-e27a9c8c8a10"
        },
        "item": {
          "id": "0d795127-fef2-492e-882b-ea6b1ac00504",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "07bdfb0a-1bba-4cbb-95b5-b9314676be05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac8bb20-b816-4f72-899f-776b1c7466a5",
        "cursor": {
          "ref": "51c9946e-ec4f-48c4-b0c2-3353e1eeb62b",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "87aa41d2-820a-4b2c-ab81-070b9e398677"
        },
        "item": {
          "id": "6ac8bb20-b816-4f72-899f-776b1c7466a5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "38f74ecb-78be-4aef-bdbf-55b05ed9b040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fb2a82-7d32-4a6f-8e98-eacc0cbf4a28",
        "cursor": {
          "ref": "053568e7-bfa4-4f04-b0a6-f5c398960601",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "59d1808e-6662-46be-8f20-8bf913cd0a60"
        },
        "item": {
          "id": "02fb2a82-7d32-4a6f-8e98-eacc0cbf4a28",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cb5c5ec8-ecc1-42f9-a689-e0ec1e8ef929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb194f67-17fe-4290-8590-2e86d6e8821a",
        "cursor": {
          "ref": "4d0de045-7843-42a4-a55e-38d0b50bd442",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "edc3426f-97c6-48e9-8b0c-dc26188861c0"
        },
        "item": {
          "id": "fb194f67-17fe-4290-8590-2e86d6e8821a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3073f250-247f-4798-b845-f99b7590cdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5eb7d4-fd3b-46ef-a5b7-5e4415225862",
        "cursor": {
          "ref": "8ca8bd9e-174c-4f35-925a-d5804c399878",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2806d69c-a294-4b14-9bd7-e796779d2ab4"
        },
        "item": {
          "id": "7b5eb7d4-fd3b-46ef-a5b7-5e4415225862",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "940b3c0a-e9b2-4b44-9ebb-9a3d9565b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea28d669-485e-46a2-8980-a671006f370b",
        "cursor": {
          "ref": "f23829f4-991a-4ff9-a640-6c434a7182df",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f1dc2465-35a2-4008-bb65-41bcde908452"
        },
        "item": {
          "id": "ea28d669-485e-46a2-8980-a671006f370b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5b1f8989-c08c-4bcb-a071-f2bba89c0e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6136ab7-d5f0-4537-bc72-aa0d70ed96d6",
        "cursor": {
          "ref": "737bf78f-2bf5-47fa-be22-22304b715d48",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "37db41d8-b1e1-4a50-8080-31010d3c980b"
        },
        "item": {
          "id": "f6136ab7-d5f0-4537-bc72-aa0d70ed96d6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a4703635-c582-4457-8f47-80c53d197615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492d8da2-51dd-47c2-b369-36cb6edfb277",
        "cursor": {
          "ref": "f2b5fe9c-83ff-4c25-b4cf-4c46e2430d3b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "352e9d63-77e4-44d1-bd09-2345db2b4d04"
        },
        "item": {
          "id": "492d8da2-51dd-47c2-b369-36cb6edfb277",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "480a8ad4-102d-4c7a-aeb6-28fe38da2d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8627be19-82fc-4392-a849-3ddb0c19c3ff",
        "cursor": {
          "ref": "21ec630a-b6b0-4f75-a5fb-cbc78b63e4c3",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d6623d14-b35a-40ed-bc41-39e47b4d74a1"
        },
        "item": {
          "id": "8627be19-82fc-4392-a849-3ddb0c19c3ff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d891b903-b6ca-423b-9943-37b39a45735b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738bf831-9d43-48a5-9921-cf1d85337ab9",
        "cursor": {
          "ref": "603e241e-9230-418a-866d-29d3d70df417",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c545ddde-b5ae-4963-92ed-3d151a4f1a27"
        },
        "item": {
          "id": "738bf831-9d43-48a5-9921-cf1d85337ab9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5000eef3-0670-4ed0-a441-ea35af18e397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a10930b-7a75-49d3-8dc0-8081e78a6ee3",
        "cursor": {
          "ref": "3ff9ec43-1d2e-4886-814b-6c4d252272d8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "552b5b2d-01c4-42f3-83bb-418c2cfa5ae8"
        },
        "item": {
          "id": "7a10930b-7a75-49d3-8dc0-8081e78a6ee3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a5dfa6a-6000-468d-8fc1-6ce9f787ec9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bf32e1-8e9a-425a-97f3-f5c4238941bd",
        "cursor": {
          "ref": "a44b92e1-f395-488e-9bb5-a159632de59b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "aec2c2c5-4494-42e8-8750-45824888deb4"
        },
        "item": {
          "id": "37bf32e1-8e9a-425a-97f3-f5c4238941bd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fa133bab-1b18-40c8-a32e-49fd02fc7890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b134157-2aa9-412d-b094-dd4d04ea8766",
        "cursor": {
          "ref": "be6aaeea-9527-40a8-9bef-014d20773d94",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f3565688-1dfc-4249-b9a0-3b4fa8bd0c24"
        },
        "item": {
          "id": "7b134157-2aa9-412d-b094-dd4d04ea8766",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "37d85179-4bed-47fe-a73a-ac997ec6d0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122c4ae4-bc29-406c-a6de-e755f43e2780",
        "cursor": {
          "ref": "4defc37d-f5d4-4316-9f3a-a4a8ad1fb6ed",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3a023646-c8fc-42c7-bc6d-fc51cb04616a"
        },
        "item": {
          "id": "122c4ae4-bc29-406c-a6de-e755f43e2780",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8ea878f9-0cb4-45a9-8053-4532c65f3978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c31095-0950-4e98-b3b5-5f7fd8185ab4",
        "cursor": {
          "ref": "e722e68b-8486-496e-8a0b-bfd5a3a38ae2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b48febc2-9040-4c75-83fe-1c6e169a90b1"
        },
        "item": {
          "id": "d7c31095-0950-4e98-b3b5-5f7fd8185ab4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "361b938a-b1de-43ab-aa0f-1b9400c6acbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfd8d54-5874-4b59-991c-75c4123b02fa",
        "cursor": {
          "ref": "677d4fa3-d267-4942-baa6-ffed7ab31498",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3d848e25-f41d-4640-8602-01df4d757286"
        },
        "item": {
          "id": "abfd8d54-5874-4b59-991c-75c4123b02fa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "862757c3-5c67-4ac2-8a37-46546462475d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b16b1dd-41c8-4a79-890c-e9c8fc39adb1",
        "cursor": {
          "ref": "59135fbe-b5ef-4715-bb4f-813e4b82152d",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "92bda49d-6674-4e66-b76c-e28d146e9af6"
        },
        "item": {
          "id": "2b16b1dd-41c8-4a79-890c-e9c8fc39adb1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2a58fbc9-2e20-4c6f-af94-8b1d18b6a22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738e51c1-1a9c-4982-80c1-1fc53c943708",
        "cursor": {
          "ref": "8d598d21-d6c0-47c7-b718-7e44b5466c11",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e1179c4c-bfe8-4e24-9e06-829fa89ab1bd"
        },
        "item": {
          "id": "738e51c1-1a9c-4982-80c1-1fc53c943708",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3220543f-1e8f-4304-b975-2e571d60dacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b887d99c-1af5-4bc0-b7a5-9bd55634cf06",
        "cursor": {
          "ref": "8c9f08d6-95bb-4199-bf7d-aef268687625",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "31540e7c-6177-4912-8482-bef790a16338"
        },
        "item": {
          "id": "b887d99c-1af5-4bc0-b7a5-9bd55634cf06",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "67e879d9-6f5d-4e3a-bc2f-871ba705dc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27367ec-2c28-456d-934a-c7716fcce509",
        "cursor": {
          "ref": "7da1ff60-4e17-4c36-b11c-6c0584049115",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9820dc8d-e24a-4ef3-a46b-fd0957296be2"
        },
        "item": {
          "id": "e27367ec-2c28-456d-934a-c7716fcce509",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1980aa34-7edc-42d7-afe9-c5763592bbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e9efb7-b02f-40be-b04d-cea6d3317be6",
        "cursor": {
          "ref": "90a14b79-e8df-4912-8844-63e36b47d30a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "787ab626-401b-4478-862c-767dcd200ed1"
        },
        "item": {
          "id": "d6e9efb7-b02f-40be-b04d-cea6d3317be6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ec1b2a4f-0996-4fe8-94af-bf4d36726ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5a4285-85b0-42bf-9f7a-02d619a945e8",
        "cursor": {
          "ref": "5b983b19-e91a-4eaf-b1e7-a457e31ce1f1",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "23ad6d6c-081d-4338-8814-6516644b8374"
        },
        "item": {
          "id": "fa5a4285-85b0-42bf-9f7a-02d619a945e8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c1a6352d-6b75-456e-88e9-be07783e5682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7457549f-0029-4c71-a365-226e28cf7e8d",
        "cursor": {
          "ref": "2038dffb-8d61-436e-97fd-2788a18b0c41",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f965d0cc-89f4-41c2-b182-e43a6022e056"
        },
        "item": {
          "id": "7457549f-0029-4c71-a365-226e28cf7e8d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1fa52474-9dc7-42dd-bcd0-7fabf03f16fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c487cab4-abbe-44b6-93df-5afe9ad91f98",
        "cursor": {
          "ref": "526ecf86-ce66-4c92-b729-ee2397a2a9c6",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fa34ddb5-6e88-43e9-a049-bf96aadcbca1"
        },
        "item": {
          "id": "c487cab4-abbe-44b6-93df-5afe9ad91f98",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "34f0c417-3eee-45f1-b85b-49cdd0ef5a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c538010-c5df-4f8a-86c6-492855592a4f",
        "cursor": {
          "ref": "40b3acfd-bc8a-4328-8bac-a850e863f813",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6cbed060-f63d-41e3-9f7b-04f533a8e20b"
        },
        "item": {
          "id": "1c538010-c5df-4f8a-86c6-492855592a4f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4d264c25-668e-4467-980f-367699e0369b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac060edc-ce58-4c71-bbd0-9d1b38d31ab8",
        "cursor": {
          "ref": "351f3a9f-1374-4c71-a3e4-bdd0f5cbabb6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d820727b-e018-4d40-8dcc-28e7afa37afb"
        },
        "item": {
          "id": "ac060edc-ce58-4c71-bbd0-9d1b38d31ab8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ea3e0df7-0b1e-4baf-be53-9f7b4d23193d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37829738-b54a-4ae9-aded-a9291fa0ad97",
        "cursor": {
          "ref": "4a1f684c-3b34-4c0c-868d-b1e0b54cf3df",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e8963b79-ffce-4736-9711-87807c5d7bca"
        },
        "item": {
          "id": "37829738-b54a-4ae9-aded-a9291fa0ad97",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c8667ed0-0f3c-4781-8bfd-739c5bbf6dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d14d199-217c-443d-b48e-ec58c2236a82",
        "cursor": {
          "ref": "2f2024f4-1433-4b71-81a2-502c36918445",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "acc45d74-8682-42c4-bfc0-a8e37ae4cc0b"
        },
        "item": {
          "id": "2d14d199-217c-443d-b48e-ec58c2236a82",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fae70dc9-9d47-42cd-b821-cb12e041d4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacdc0c5-8584-4f38-b15e-c2a67ce69448",
        "cursor": {
          "ref": "f52245bc-36b2-45f3-b95a-cfe2bb544d15",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "30160b67-4ff5-471d-aec8-24a4ad0eeb7b"
        },
        "item": {
          "id": "aacdc0c5-8584-4f38-b15e-c2a67ce69448",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d99b1f0b-b034-4459-968f-56c910af31bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac45630-0a0e-4661-b255-d2b348742bb5",
        "cursor": {
          "ref": "70331c29-9ade-4d4b-9728-7afef140fe4b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2d793ea2-71d7-4b3c-95a5-dd0ff2faaa43"
        },
        "item": {
          "id": "8ac45630-0a0e-4661-b255-d2b348742bb5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "82a0468a-2f31-48c9-830e-e786b838ecb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1331e0e2-6488-47b5-b808-0be59e24b170",
        "cursor": {
          "ref": "1cc3f79e-29b0-4b33-bbbb-4f8cf5bb36fb",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "73450214-d6d7-4742-a675-887dff931784"
        },
        "item": {
          "id": "1331e0e2-6488-47b5-b808-0be59e24b170",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "90a0c3d0-75a7-49b2-9ff0-92aae5e997fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cda09c-b377-4439-8591-463e43104ebd",
        "cursor": {
          "ref": "952b3396-c1ee-4cdf-9d57-b4c19621c43d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "11779239-c9ab-482b-b4db-e87618fd3471"
        },
        "item": {
          "id": "a7cda09c-b377-4439-8591-463e43104ebd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "daec9c70-6d23-4ab6-8486-e2e6b8729b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7e54c6-e35a-4027-9c18-6ccebea9aa5d",
        "cursor": {
          "ref": "59139c6d-c484-499a-97b4-e8e5989a0ac6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "48e3dc1d-829f-421f-8174-329b9a8f2c2d"
        },
        "item": {
          "id": "ba7e54c6-e35a-4027-9c18-6ccebea9aa5d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8e82298a-91a3-4671-bca7-067de55a7574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f148529a-cef2-4f97-95d9-d4ea8be73066",
        "cursor": {
          "ref": "bc6af72c-36c6-4923-b578-38c8241e8c00",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "83a13819-085c-45fa-be6a-a4fa590979bb"
        },
        "item": {
          "id": "f148529a-cef2-4f97-95d9-d4ea8be73066",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e0017e8c-ea82-48e5-a53f-0ade5c02fd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1a6ad8-0aaa-4066-9942-9fcefcd84db0",
        "cursor": {
          "ref": "72756632-fd90-4241-8614-b4c415ef3f1e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c0f201bd-b0e8-46e3-8e22-65c2bfdd6d4d"
        },
        "item": {
          "id": "cd1a6ad8-0aaa-4066-9942-9fcefcd84db0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c602eaeb-a2ad-4c8a-8c39-952db61b7a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653b698f-377f-43f0-b74f-23f44524422f",
        "cursor": {
          "ref": "483768cf-933b-49b1-9243-cdd9d95ca59a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4f691ecc-f7e9-4eb6-a0f5-db9eb1c0c7a9"
        },
        "item": {
          "id": "653b698f-377f-43f0-b74f-23f44524422f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9951fb18-9668-4299-8d44-58634699ea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffae6cc3-0e9e-4f33-9625-2eedd07e15ac",
        "cursor": {
          "ref": "b0adc610-8701-4681-a839-143ed73d0d79",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "199211ff-7fee-4a9d-95d3-eec312e4be83"
        },
        "item": {
          "id": "ffae6cc3-0e9e-4f33-9625-2eedd07e15ac",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7370ddd1-a97b-4e03-b1dc-aefe0c7cdf4d",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "53c8d60d-7810-4c58-9661-396d0cda9eb9",
        "cursor": {
          "ref": "4b4786d6-54b1-4676-9272-2654f8abb243",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d829cdc8-5c37-44bb-b5bd-88dcaee5e603"
        },
        "item": {
          "id": "53c8d60d-7810-4c58-9661-396d0cda9eb9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "357497cf-961a-444c-8a6d-e081f9e30a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9340c33d-33a7-40de-be84-158c8eb77948",
        "cursor": {
          "ref": "cfcf2e74-0313-432f-9ed6-1bd7842c28e3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a5dbcb5e-a1b4-4d64-bc0d-1cbf80fdcb77"
        },
        "item": {
          "id": "9340c33d-33a7-40de-be84-158c8eb77948",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "aff67ebf-02e8-4246-980d-bd8f9e3beb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e76335-6006-4e94-9dd4-f8b515290771",
        "cursor": {
          "ref": "5c9b59e4-f69d-4ebc-866a-ba1b677d01ec",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0e5158d1-bb8e-434c-ae7a-b77463cc55b2"
        },
        "item": {
          "id": "20e76335-6006-4e94-9dd4-f8b515290771",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5d43c50d-b66e-47ff-bcb0-b837d584f302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43fea9b0-dce5-4ce4-bed8-8825ebe95429",
        "cursor": {
          "ref": "75a3051c-acee-4f8c-86d3-e9beab2c585f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c4b72617-78f8-4919-9dda-eb466d848c63"
        },
        "item": {
          "id": "43fea9b0-dce5-4ce4-bed8-8825ebe95429",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "46b15397-b090-4c8e-b029-65bfdf4d247a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dd0fcd-1897-4a32-b1a8-d6fc251752df",
        "cursor": {
          "ref": "3b19c6b3-61dc-4437-810a-9d59bef382c5",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "850278bb-e3bd-4dfd-a8d6-daa289fb39da"
        },
        "item": {
          "id": "26dd0fcd-1897-4a32-b1a8-d6fc251752df",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2b67a47f-ad1c-42ed-99f0-7655300af76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ade5369-d33d-4589-84c2-208fdd54364d",
        "cursor": {
          "ref": "82312ba7-2510-4746-8412-6bf4b51fe2de",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "20e6b7da-61f9-493a-ae0a-6e8da9289a0d"
        },
        "item": {
          "id": "4ade5369-d33d-4589-84c2-208fdd54364d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "490432ac-7487-41c4-b43f-d411aae2d9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbc0937-1c1c-467a-8c20-1a9e9ef001e0",
        "cursor": {
          "ref": "bc87a320-0f71-4ccc-aac1-458156915fca",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e33d9650-46d2-4fe0-b244-e31393e05c16"
        },
        "item": {
          "id": "ebbc0937-1c1c-467a-8c20-1a9e9ef001e0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "90a7ab20-c790-4151-aa7f-abcc1a1c6972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78975a7e-76b9-41ec-9b63-2d8be0b18613",
        "cursor": {
          "ref": "c84206a9-07b8-4356-a2ba-9b6af845e15b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "980a0111-4560-4c38-b9dc-e87297c98db5"
        },
        "item": {
          "id": "78975a7e-76b9-41ec-9b63-2d8be0b18613",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "eee8d06a-7d6d-4a7c-8e80-e75b50125260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b7a4b2-8b2a-4498-85fd-37d02b586e2f",
        "cursor": {
          "ref": "1c356279-44c4-40f9-8d51-f28f187a2d5f",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a3292e6a-bc48-4558-a9d5-5fcc0f78c166"
        },
        "item": {
          "id": "36b7a4b2-8b2a-4498-85fd-37d02b586e2f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9851860e-328c-4c38-a9d8-3c0b6ea32cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f905dbc9-6f0b-44bf-965c-e24fe1653977",
        "cursor": {
          "ref": "e2a80f61-0055-4dc7-b566-da12e3d01de1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "abe057ad-60df-4623-ad28-34ec54881b87"
        },
        "item": {
          "id": "f905dbc9-6f0b-44bf-965c-e24fe1653977",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e1d858db-df19-4a97-b121-35b366190a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c98b01-9567-4af0-8686-3fa752ab4f1c",
        "cursor": {
          "ref": "5d74c1e9-d712-4272-b564-d195dd9483da",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "24f7207e-b3c0-4927-b121-c81f8d0be331"
        },
        "item": {
          "id": "63c98b01-9567-4af0-8686-3fa752ab4f1c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e42e31ac-b344-4628-b427-c9a84bcb2dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5cd9f3-12a3-4136-8d22-49dcb5002d2e",
        "cursor": {
          "ref": "f07928a3-4b08-4c72-81cb-34ba58ecde18",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "475111df-031b-4815-9b59-af5016313317"
        },
        "item": {
          "id": "1d5cd9f3-12a3-4136-8d22-49dcb5002d2e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "51af0c20-dcac-48c8-aa81-ebd6041f307f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347bb442-657e-4fdd-8b0c-277b0692c3db",
        "cursor": {
          "ref": "4a30a039-5a53-4252-aec9-163030cf9f6e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d63d75c9-f538-40d7-a956-e3f9072c19ae"
        },
        "item": {
          "id": "347bb442-657e-4fdd-8b0c-277b0692c3db",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2ba32662-6478-43b6-b49e-d19451353d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d52386d-0c3d-41c4-9df0-ccc5b6c53df7",
        "cursor": {
          "ref": "8e3e5045-60d9-4c68-b82e-ba4286090e93",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b5f8b240-5a4d-4071-813b-cf24b6fd263c"
        },
        "item": {
          "id": "3d52386d-0c3d-41c4-9df0-ccc5b6c53df7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ea42a446-29d4-4a94-ab92-eebcb0d4a7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e435af33-2478-4038-a68b-1e1fb24af57f",
        "cursor": {
          "ref": "913abae9-a9f4-4ccc-ade5-c0ae4ea29d62",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "74be7e6a-ea2a-4e0d-929d-fb99dda0d3a4"
        },
        "item": {
          "id": "e435af33-2478-4038-a68b-1e1fb24af57f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d68b55d6-014f-4ce2-9ea3-1fdec0a0098c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638e942b-6df7-4e65-aafd-f7dc85feb36f",
        "cursor": {
          "ref": "5f61a9ec-d18a-47f0-a242-76d247f619e5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "386814d1-4531-40d2-bfd6-0d83e7002a62"
        },
        "item": {
          "id": "638e942b-6df7-4e65-aafd-f7dc85feb36f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fd26cef7-4773-40e5-992a-f2097e3b74ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6de13-a523-4c89-bfd7-902acf60cd80",
        "cursor": {
          "ref": "69b8fb68-76ab-46e1-a261-8a4f9cab3201",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8e3b254d-3175-43d2-9038-66439e4f5586"
        },
        "item": {
          "id": "09c6de13-a523-4c89-bfd7-902acf60cd80",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7b956064-2998-476c-bd10-9203d6df926e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b750bd18-aa97-42bd-a51d-12a9d2b865e2",
        "cursor": {
          "ref": "25e1e18b-e999-459d-87b4-04e219b79329",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5f34938-c24c-444d-8da2-ae1e506811b1"
        },
        "item": {
          "id": "b750bd18-aa97-42bd-a51d-12a9d2b865e2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "64458bbd-119b-4f95-9a77-5f3a485d9454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37a8fa5-aa7a-4486-8657-ab7cd210b2d2",
        "cursor": {
          "ref": "71f366a6-3d90-4b45-8bde-1c4e3251d585",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2cda7eed-7714-487f-a541-56604b476b44"
        },
        "item": {
          "id": "e37a8fa5-aa7a-4486-8657-ab7cd210b2d2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c87dc3e6-60a7-41dd-8e19-adcb7b9f8a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b55c81-a3b0-43a6-b49f-33bc020a6d6b",
        "cursor": {
          "ref": "b7d4dddb-95d5-4540-aa19-c54c306a35ef",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2bf2513a-833f-402e-b87a-4b38df00cba8"
        },
        "item": {
          "id": "56b55c81-a3b0-43a6-b49f-33bc020a6d6b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "79a9cde4-3a3e-47bb-a4e6-a450cac66bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beca4553-0b02-431d-8af6-9110dad9615c",
        "cursor": {
          "ref": "6d0d4bc1-cbbe-4caa-a292-0306788f84fb",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0666dc95-98ad-4cee-8518-89286e7b64cd"
        },
        "item": {
          "id": "beca4553-0b02-431d-8af6-9110dad9615c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2503837f-0120-4a6e-b966-2e4b55380335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4433a94c-1ea3-4f22-80a3-d9d52fe77795",
        "cursor": {
          "ref": "8c7b2df0-3db3-4e42-8d50-45973e3c5030",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "365177f2-4264-4f96-904c-243253677ca3"
        },
        "item": {
          "id": "4433a94c-1ea3-4f22-80a3-d9d52fe77795",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ec6daed-2778-4dde-8044-fbce0080be43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7611f579-d5fa-4e8d-aa95-15fa8a1e97c9",
        "cursor": {
          "ref": "150f0516-2daa-4e34-8488-71f4fb5da684",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7328c368-1218-4a2a-8fca-8f58b6f7c6f9"
        },
        "item": {
          "id": "7611f579-d5fa-4e8d-aa95-15fa8a1e97c9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3087ba1b-d00e-4cea-af4b-687b11cd7241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0744ecd-7e4d-45e1-bd7d-8e56c2ca102a",
        "cursor": {
          "ref": "fec01ea3-a849-45dc-82e9-4f3b65bbe21b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "49af5881-a868-48a4-97f1-6c9e0c8440d5"
        },
        "item": {
          "id": "f0744ecd-7e4d-45e1-bd7d-8e56c2ca102a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c9590797-7cc5-48ef-929a-f7653d5691da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b92221-c206-4ede-86a5-b8801f40789f",
        "cursor": {
          "ref": "4e5a7fcd-6832-4786-985b-8c15adf78b2e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "84b15165-d745-4865-adf2-900bfec25247"
        },
        "item": {
          "id": "c0b92221-c206-4ede-86a5-b8801f40789f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "274baa43-e2e6-4727-b61a-e7e6713ad9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65302de4-dd82-42f5-89d5-00397985fe33",
        "cursor": {
          "ref": "89fb76ce-1c41-4019-ac97-936979b9be35",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "aabf0357-ccfb-44e1-a073-1ec2246fcce1"
        },
        "item": {
          "id": "65302de4-dd82-42f5-89d5-00397985fe33",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "437e6342-e4fd-4053-b526-cfdba3f54b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ed2f21-777c-4477-93af-80ae6c5784b2",
        "cursor": {
          "ref": "73052297-4341-4aba-b91c-6f30a5f318c1",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "76b163f6-25c6-4b60-b84a-783fe68b229b"
        },
        "item": {
          "id": "97ed2f21-777c-4477-93af-80ae6c5784b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9506ceb6-1eeb-4b3a-853d-6d9045ee5b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c377e676-e5ee-48ee-9059-9f161b9f56a7",
        "cursor": {
          "ref": "925c5c67-9876-48fe-a326-bf64fda3f627",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1dd1b42b-94de-4577-839d-b4fe10bc786c"
        },
        "item": {
          "id": "c377e676-e5ee-48ee-9059-9f161b9f56a7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "68e07b95-ee2c-4688-9b60-a1e2d1e2c368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb95635-6581-413d-afda-a708586c451c",
        "cursor": {
          "ref": "f0e1060d-98d6-4b8a-84b9-bbede6649293",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5f46f4bc-468c-4b3c-b37d-15dcd01924e8"
        },
        "item": {
          "id": "3bb95635-6581-413d-afda-a708586c451c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c35225dc-bc58-4c3f-af21-8cc66ec180fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9181fd3d-c8d2-4562-ae50-27e8cd53584c",
        "cursor": {
          "ref": "802a1752-4e3d-49bd-920e-90715ee9e2c7",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9ce73fb6-67e9-43d6-b9bd-2fe19e15fcf3"
        },
        "item": {
          "id": "9181fd3d-c8d2-4562-ae50-27e8cd53584c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c377f513-ccfe-41e6-9cc7-3a16b67efc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b196fbf-cbd6-455b-b61d-a2280afb449b",
        "cursor": {
          "ref": "b403eb37-f7c1-4085-ba3f-5b8454bf3b0e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c6d98b54-7c6c-4dff-85da-14ecb8622fb4"
        },
        "item": {
          "id": "5b196fbf-cbd6-455b-b61d-a2280afb449b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4edf30c8-df5a-45ee-b4ad-7248fa3c6b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9a6238-3fb4-452a-bf71-a84ec70c7b0b",
        "cursor": {
          "ref": "df8a941c-5ec8-48f0-8ba6-ed4783d574e0",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0baffe83-cb18-4ae5-a4f3-55506d807bbd"
        },
        "item": {
          "id": "1f9a6238-3fb4-452a-bf71-a84ec70c7b0b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "797f32cd-0d53-4538-837c-a7119765bfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a904e55-2b35-4f23-849a-675a1db35e11",
        "cursor": {
          "ref": "2c158a49-424d-4218-8bc2-54cab571e584",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "79b7b6a8-2994-48da-aa6a-290ddefac2bd"
        },
        "item": {
          "id": "1a904e55-2b35-4f23-849a-675a1db35e11",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1fc12ded-6109-4372-8684-eb4a2130df66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535494d0-10ca-4ae5-88fb-a87e88deceac",
        "cursor": {
          "ref": "4c73fa4c-3e81-4f73-8abb-95ea0bc0bb90",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "aea6699c-1c32-4ed4-84c1-48524a5ecf96"
        },
        "item": {
          "id": "535494d0-10ca-4ae5-88fb-a87e88deceac",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9d7f8c25-6f4d-44d8-93c7-46157f3c2133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec0513e-85c5-4c75-940f-62f7bcaa33b0",
        "cursor": {
          "ref": "4aa51750-b70c-4a2c-b010-247c67cf13eb",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9f1f1ad4-a8da-4e4f-86d9-4470e0d5756c"
        },
        "item": {
          "id": "3ec0513e-85c5-4c75-940f-62f7bcaa33b0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "709128ba-fd38-4775-961e-6c3b81763bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8861db32-0c8a-40d5-839d-9e885c166d67",
        "cursor": {
          "ref": "5571d3bb-9b85-4944-ad38-df39b2faca07",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "764539cf-be61-4a65-aac8-50078b070f77"
        },
        "item": {
          "id": "8861db32-0c8a-40d5-839d-9e885c166d67",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8a9fe437-c7ee-4c4e-b79e-3eabf16f11d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa0ff74-038a-4a01-ad1d-a876e33b573c",
        "cursor": {
          "ref": "640992e7-7e90-486e-bacb-f7db5a870633",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bd5da7c2-149a-4655-8719-02973af8ef64"
        },
        "item": {
          "id": "4fa0ff74-038a-4a01-ad1d-a876e33b573c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5a547689-e097-4d02-80d0-fa9f8aa69e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18639691-e960-481a-b52e-ccbc61c4e792",
        "cursor": {
          "ref": "e467d1bb-ee32-4e06-a266-9aecae21af4b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "44626317-5c6a-45c4-9180-bb4bd0ebd8b1"
        },
        "item": {
          "id": "18639691-e960-481a-b52e-ccbc61c4e792",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0386a0de-3979-4f64-93d8-bd1dcceba036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a720d5b-6e1e-4101-9bbe-e9f5b8e68045",
        "cursor": {
          "ref": "dec1c45c-2f4c-461a-b265-f5c2492345e4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f4b38522-fb1f-450c-b864-ac8bf434aaa8"
        },
        "item": {
          "id": "6a720d5b-6e1e-4101-9bbe-e9f5b8e68045",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "89a891c5-7e43-444c-a6c3-faa7a8440931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fced86-917f-4a44-82d0-0b8173787339",
        "cursor": {
          "ref": "dad0f5c9-61fc-42a6-8b6d-9c95c03c779f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a583db75-c6b1-4828-8339-800d5be50424"
        },
        "item": {
          "id": "e8fced86-917f-4a44-82d0-0b8173787339",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bb66f6ab-0d43-4a5d-bcd1-57e95e5c64d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd69459-1cc7-4cb6-8ff5-e4421cce0fe8",
        "cursor": {
          "ref": "0298eff7-8a7a-4eb0-b059-59aae0ce2ed5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "838cb6e0-ace3-477d-b904-60a3aabdf70c"
        },
        "item": {
          "id": "2cd69459-1cc7-4cb6-8ff5-e4421cce0fe8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1c525021-8542-4698-81b4-5deefe5748db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90652bfe-386b-49ce-a2ab-dcc2cf54cefa",
        "cursor": {
          "ref": "11b2c630-6898-4411-aae3-5f5ef845c48b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3d3691ae-dca5-41f9-92e5-bad61e7f5845"
        },
        "item": {
          "id": "90652bfe-386b-49ce-a2ab-dcc2cf54cefa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6de99ad2-a795-4a0c-86ba-69b2e1cf65d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c396e5b-18b7-4b1b-b865-885e8257bb4c",
        "cursor": {
          "ref": "98ce775a-3c48-40bf-984b-db304c1eed54",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0c49fd04-8a51-4e44-9aea-5ef18de0d88d"
        },
        "item": {
          "id": "3c396e5b-18b7-4b1b-b865-885e8257bb4c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "99486cf1-7ade-412c-830b-1b71d2ad16ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d397d4b4-15ec-494e-bc49-981a54148346",
        "cursor": {
          "ref": "da70d541-7de3-4966-bf9d-c6922e330525",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5b20d95e-c208-412f-acbc-4d5912d9c4f8"
        },
        "item": {
          "id": "d397d4b4-15ec-494e-bc49-981a54148346",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "66030002-39e0-466d-9468-d1ff92f5155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5428c2de-7fe6-4192-b9c7-af9570950370",
        "cursor": {
          "ref": "2320d223-b6a4-4f2b-bf17-f6ea9472a300",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "78093c49-c67c-41c3-9cde-c139af98a148"
        },
        "item": {
          "id": "5428c2de-7fe6-4192-b9c7-af9570950370",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "131ff56f-0b25-43c1-a5ef-bf168dd949af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd3f668-949f-4f5c-af55-bd1a0823b64c",
        "cursor": {
          "ref": "e1f03325-d253-4d9d-bf45-98a5709cfd6a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "82dffa9a-f071-4541-ad8a-3fb2c7276d04"
        },
        "item": {
          "id": "0fd3f668-949f-4f5c-af55-bd1a0823b64c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "acb31b94-4174-486d-aecd-84fbd38a7656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62283d8-e43c-4497-be4b-ccf9642a8dad",
        "cursor": {
          "ref": "d1274fd5-29e6-4936-98dc-6ab9df00e623",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fdb2380a-d017-467f-93c9-92053c1453d4"
        },
        "item": {
          "id": "f62283d8-e43c-4497-be4b-ccf9642a8dad",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c5c7ab8d-616d-4908-9796-57757dc50f77",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a4b28a-d9f8-4571-b048-bc40818b7aa7",
        "cursor": {
          "ref": "f0c46713-6d07-45e6-8c2d-9f202378248b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b5d8e332-6db3-46ab-aaa1-1ca02967345e"
        },
        "item": {
          "id": "57a4b28a-d9f8-4571-b048-bc40818b7aa7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "11cdcdef-f3b9-4f16-8caa-3edc1235b2dc",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "36afec59-b650-43ce-91fb-976faf3281b0",
        "cursor": {
          "ref": "67c2673c-936c-4fa1-9ca5-0c383d23d527",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "166fefe9-3425-4be5-8f4b-9998df37d67a"
        },
        "item": {
          "id": "36afec59-b650-43ce-91fb-976faf3281b0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9a0ff1c2-793d-4da3-8327-592a48b160da",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d54211f-034f-4b23-8332-7a2b5965cff8",
        "cursor": {
          "ref": "6c8fb9da-0424-4437-a3ec-60b8fb97c0b3",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3300bcd0-d43d-4178-b0e0-1c4054fe726d"
        },
        "item": {
          "id": "6d54211f-034f-4b23-8332-7a2b5965cff8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c1ccec3f-e745-4233-8c73-6b63ab276426",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1823cd-b479-4e39-80ca-bc2a5bb3aad1",
        "cursor": {
          "ref": "00d0c244-3259-40ff-9b9c-1293bb278f48",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "716231f6-e13e-464d-94ef-ae5237f95c0a"
        },
        "item": {
          "id": "6d1823cd-b479-4e39-80ca-bc2a5bb3aad1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f7e45fb3-ca3d-4701-b5d4-5dedf6a256e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1823cd-b479-4e39-80ca-bc2a5bb3aad1",
        "cursor": {
          "ref": "00d0c244-3259-40ff-9b9c-1293bb278f48",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "716231f6-e13e-464d-94ef-ae5237f95c0a"
        },
        "item": {
          "id": "6d1823cd-b479-4e39-80ca-bc2a5bb3aad1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f7e45fb3-ca3d-4701-b5d4-5dedf6a256e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66421183-42a7-45f9-b903-77a71505d447",
        "cursor": {
          "ref": "3d675fd3-f212-4531-a4dd-b3de7ec5a2f0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5f48e14b-20be-4b69-a29d-00035efd2de5"
        },
        "item": {
          "id": "66421183-42a7-45f9-b903-77a71505d447",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4d6e7c5c-62d8-41af-a908-6c2a5effe3d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd2a488-727e-4966-b45f-d78e04819c63",
        "cursor": {
          "ref": "a8c695b7-34ef-4c02-9b28-69c403afdddd",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "82bb126b-e4ad-47a5-a0af-a30df5081322"
        },
        "item": {
          "id": "2dd2a488-727e-4966-b45f-d78e04819c63",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "393af5c8-04d8-4cc2-ba3c-684d43a8e107",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}