{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "536581c1-ee27-4cbe-8a4a-d37a7ec8879c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dc997a99-e8a4-477a-b7fc-8e3edeb6a652",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6f4cc55-9767-415d-a04a-44ee770a38bd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "695d5205-38a5-48ae-9224-86d9f69c5e41"
                }
              }
            ]
          },
          {
            "id": "b8fd90e9-e0f1-44d5-97cd-ce2567a24304",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f567989b-0b58-40a7-98d6-14e07e1bbdbd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8fda8d88-a379-4db8-8ab5-8284d5586113"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1747de81-1859-4f0e-85bf-1fc5c1c2be22",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "df3ac2d1-94ab-453b-8baa-c62a019cc70b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ba164ac-a910-4269-a739-76a1e5436fcf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72786976-8cda-4ab2-826d-e97595993a4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4812f9ce-8b60-4b66-ad03-2f178f407696"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1afd3314-846b-4ff4-90c4-200438fc387c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aef834f5-fdfe-4696-a7b5-a42de1df7fab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02e8c48d-fcf5-45e4-be44-a0fcf99815d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c263f3d0-11df-45a4-b1ad-62f9c54f1b79"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62f42a6d-cf34-4592-bb9a-c7f5c507d4d2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8c053585-6a4a-427d-9f45-edfeae3c8289"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1c63e3f-cb0b-4f79-a083-c04a5396036c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e24a0c6c-ce1e-4708-acca-fc82ecd38daa"
            }
          }
        ]
      },
      {
        "id": "bd00704d-045d-4355-88a8-338f89c07d7f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2edacc4a-04b2-479e-8935-9ee8060562d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8347938c-4c69-4752-acbe-ea934ee7f3c0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85a31e1f-05a9-4802-bc07-3e7b7e0b461e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2771512-4d2b-4ef8-888d-2da71cf96098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8234f4e1-8600-45a2-9046-d835e263d2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214d6f39-32db-40f8-9e84-6e8ccef7faa5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5a5b81-eae4-4a34-8c02-01f1be33649f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb06bc04-250e-4fc2-97a7-0c891f443ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d135256b-31a7-43b3-96f3-6aac1a2d3df6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815ade5e-83b5-4c12-8bca-24069a798c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97bfde1d-49bb-4f2d-92a3-230414a731c2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d13da7b-6500-4eb2-9206-eb95b634e786",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82209aaa-2c4c-4c3e-a77e-a2aa8c579e41",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "673aa3f7-c65c-497b-bf0c-c3c7d0aced3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c46cc067-8856-4951-bb5e-b8916b678ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ce072a-4f44-454e-b7c9-fe35bf85ecff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b156702-2b0e-4047-b83b-3d1a98da0fc2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a159040f-3f06-4276-a73c-bb6ea27d5cc8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a1f3a76-ba73-4a6c-820c-187ea7f4afde",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42df60c5-911b-49a4-af03-82e2a6a0aa22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ba3cbe68-6dbf-4fdb-802c-ee0f61deb241"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "293707cb-0761-4635-879f-5a45820057e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3fa29d83-a51b-4cde-88b5-35f98c125e11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae86cadb-c90e-4b77-977a-ebdcfd962991",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27e056e3-9eeb-4631-8b7c-354b014946cb"
            }
          }
        ]
      },
      {
        "id": "a30f7fb9-0f7d-446e-b2a1-96d626e3b624",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e1dc038e-06d2-4706-a1e4-8009b6a0f907",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d64f1e3e-99fb-4e42-8e1c-b43bd0662bef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "390470bc-39d6-4175-bd77-9d84c951b680",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273aa6ae-5e4f-4fc1-88f4-7379703eec79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9d3bbd-9b3a-447c-88a1-d15c495d04c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e70bd9-2063-4e4a-aaad-5f2b4c7c8519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96dc2542-2933-40e8-8421-835cc829b518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c38328a-0ec9-4c63-a477-50047a1b483d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d34697-f6e4-4e46-952a-1343a03a5c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8446911-cb25-4c8a-8b2e-0305ead8b6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414c1887-f022-46e9-9f40-ed858c2e694c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd1aa170-efe7-4336-a4b1-c112114ac381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce230aeb-4df3-4e8f-93e9-6ced0b8cce98",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16de2d8-4a0f-4992-a9cf-304638f37542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa76bc31-2e6c-4d47-b9ba-172f56a3fe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4998de4-d6be-4ee3-a458-5701d0059df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a0427e7-34b3-4229-a339-593e25cc8a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6fa03a-e86b-4754-b11e-5e9c6a5fb756",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322c138c-2d48-4122-9076-5d0a0aaf8f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a373950-7d17-4b89-aea8-8c6f6c4e752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edab2fd0-dd83-4f8e-914c-e29ed596e2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f2ea275-3823-457e-aedd-85777931a36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd697bc1-b0a9-42aa-9b3f-5a87d1f134e6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154a6650-7318-4f06-82be-0cb97a3dacb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7412b5-0bd1-4715-abca-20c0087ae835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a566fe77-5d25-4253-a0ac-b829a6e5f575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b288654-b421-461e-a9b2-f1ad5f38a684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cedc4f-e33c-49ac-95af-5ce8faec1b15",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2658ac-d86c-4041-8ad0-476dd4c12971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8d41f7-839f-48ce-b6e6-7c2f9fe09ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3113a9-0de2-436b-9ce0-5eeda26f5e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7731ad64-eb8a-4c46-bf10-fe4f969c9030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f43341-98f3-40be-83f7-bcc2920cf916",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538f6e97-8d3a-44fe-a115-f6a5fa585d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2552e9a-9145-4c9c-b3ec-1ad11c30fdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b29924-13e3-4e04-aadb-a4edffe2f8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1f9bdc8-43cd-4d1a-8951-149d508da533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2763c289-bfcf-40c0-bea5-8222c6e58906",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3174bb50-eaa7-48ec-ada9-af4636ab33a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f999907-73a1-4243-8786-dba5eed729bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4b708c-405d-4a54-b2b1-a70a37b3b740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32af156e-dc0b-40f4-92af-9e8929beefdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bb141b-08f2-48a3-9990-ac28f413430d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6905d0-a673-4777-a0ef-ffdb4c8609de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e6699c-f118-4462-8b54-592ef3ce4b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a3fb8f-e60b-4025-a610-2d07398af8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53306b13-b4d4-4352-89af-9888eb76b5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5fabea-43ab-407f-a39b-722cddb8f65d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974cce8c-53d4-4800-bb97-fd035b5703ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbd865c-5786-414c-835f-a03ceffdc6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777a2121-66c3-4d43-8b80-3010047636b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c15f7f5d-192c-4881-84dd-898579da4dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e9a311-c390-488e-83be-dabf2443171d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35f01d7-c521-4ebf-b1de-cd0da3fbce82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e038770-5bcf-49d8-8978-ac827b31e737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754bf0b0-08aa-46eb-aa74-e0e52cfbd6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39263e9e-c014-497e-9a6f-091ed7f68ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d472b2-9496-4c36-9b93-fea2a9bad296",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31166cf-0882-4c69-aaba-84fba6b1a31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31bb96da-d965-4407-91c9-3a45d270911b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54763141-8615-4f99-a744-9602ddd79d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4143330-98d1-4039-a35f-bd16f506c6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab260331-2aa6-458c-9765-9edb8b6e41f0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55730fa-d6f4-42f3-8431-28b75a0eab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77af954-28c7-4d34-afbe-abdcb56548f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345318a4-d156-4541-a38c-38dd631c627a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "809c5e55-61e4-493d-a399-368de7029bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c2df29-7ec9-4f1f-b741-7ab594c0129d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06542e19-3904-41ea-998b-c0df69703903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac413e6-54ea-473b-b2b3-26b412271f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abbacf6-dd66-4338-944d-292ece7abce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "475657e7-df13-43ab-bf7d-763625253fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512b5f3d-5d7b-4377-b7cb-51441bd8231e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e471675-10a2-448b-8a75-57cfb719ae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07d7926-262f-4072-8c22-0b0ab1751a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a202de0-70a6-4866-8d72-a14275b50f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2bda70e-d405-4ccd-812c-ebabbc091d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958c2ea1-c9b2-4922-91f3-6f0d602b87a5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701454e8-df60-4b41-aca4-a98606f8c5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6c14d6-cce7-4c21-92eb-78cd13dec5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4684d1d2-54a4-44e6-84cb-26d9f2fdf9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dc98a03-3a91-499c-ae81-fca3afda06c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c1d33c-ea7a-49ed-a1d0-f9887af88bd7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4e4215-c46e-4050-bdaf-302869254681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bf0250-b637-4a6f-97a5-69574a1f8640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ce66cd-a0bd-4739-b381-c8e2a3a8fe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a20cb0c0-c530-4b06-8d8d-9cc7717a7c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a460043-625e-4802-a474-1888d7103171",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee2aafd-3fbf-4369-914a-20ff8edd9efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e150cddc-1220-4930-8013-987dd6cc278c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dec44e-ed5d-4e6c-9b6c-e8d9923af679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3654c8fd-d85f-4081-bcc7-3b88dfc6dad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6650f09e-2fd5-414a-8337-9a004b9d5276",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bd9679-95d1-4d5b-bb8f-48367126247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09ac0c7-25a8-42de-aa1c-ae94ab01e148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c198141-465c-4ecb-bb70-92d82e566594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a23fe0da-f215-4258-8e2b-fc14753cdd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d4468c-ea2a-42bd-8a6b-fba382e2ce6f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52c714c-5e9b-4255-92af-d5d3e75ccd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c74b7e-0602-495b-b1eb-6d9950145b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8168eeef-96e1-4baa-840e-b7347baa1fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d80a28-8b3f-4ec0-a33c-cbaf246a58c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809a0409-d8ed-4cd2-a9dc-c6fc7fa93997",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4506091e-0a61-4f60-82b5-1c249527dcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b635da-d20c-41d6-b16f-55f5ff3d404a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc101f-534d-4e56-8604-90a6eb107e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45107202-dd01-46d6-9d02-092c53451b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27776556-e0a1-4d0e-90ba-766614a378b8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5edba27b-8501-463d-98cd-e219ba5ae045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c193ebe7-9954-43ff-9290-225e2a0dd5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56214bbb-0cca-4602-8ee7-7747d128a92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "594a889a-fa78-4c3b-86de-1b273fb34231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc84964-9f61-4636-80ea-c7d7190f2958",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf3044f-250f-4138-ab96-0808190d8176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4758149-c736-4019-a736-f9a3f6046e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fb96af-4797-4804-89d5-ef91d7c316d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17c4a2e3-73e0-4eb8-9122-1033b4cba876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a315dbc-fda2-408e-a8da-710515ef7ae6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4348ec18-bd7d-4a0c-8642-5d4bd7a66291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eec2532-9855-4c0c-8fc0-d3e505042846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25826aef-7d45-4270-b877-b29db98af7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e25b09-bf97-4d22-9f12-becbe869465f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665c48cf-d921-4fac-b334-f9516f3672f9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7422fd99-9204-4fcd-ba2a-01cbcd065a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e9edfd-7ece-480f-8f82-6de82e825113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690b3f8a-11f6-4e2d-9ed4-885027522d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd58a2a6-2de9-44e5-9297-b5ffa2b96e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0adafc-194a-4aa9-8b8c-956b510972d2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b012acb3-7dbf-4d2b-8082-47b109d6c267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eef140-0e36-4ef8-b868-459764088fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff47021-fb58-4d34-b853-c35f9f091f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e220a131-cea9-44b3-b790-6796db5a7a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0944f3f0-5123-4f75-a820-066994915026",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43d078e-abb4-44bf-8b1b-cb2a1248f911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c89d68-b1ab-4bda-8ef1-27312bf6f457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee110a2-eb57-49fb-aafd-f1b2148f6e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeab0f6c-2009-4662-abd6-13db78a7079d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e48f47b-cc62-4ec9-b396-ffc47b20dc59",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cc7f40-bb92-4d82-9055-16b65523d434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4830bd1-bdf2-4d78-a63f-67be8c3532ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dd0fda-67f3-4d76-9911-1a6f9f1a5078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbfd8b7-d3b7-486d-829b-ab0e08be0b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa515303-aded-41c4-bae9-073ef59bd647",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b034430f-66b3-4e9a-a624-de301c27af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236b0021-7be8-4532-b85f-be25b6a9f372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81c2335-69c3-48f3-ab9c-536ff2989c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3df3b2-5789-42ce-849b-346a1b50f172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43502ce-3a27-4e2e-965b-a717c661dc97",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a077cc-dcdd-46e2-8cdc-5234374447f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6866da1-1fa3-4aca-979c-00f202031b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ef85f5-7d38-4eb1-ba97-52c2bc506419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfb08ba-8c1f-45f0-aa40-fe77e2deeb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9346ce-4696-4926-8c72-945f9fc84c1b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddddc15-4ce5-40e4-9633-e7ddd86e7457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0588a50e-1259-46b6-a922-ed8d3ff1afec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee16056-5eba-40f4-bae0-96e0ab8d01c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e065db7c-f91d-4add-8a7a-8c6ac9c78067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd269cb-f888-49d9-849b-cd5e38d93cb2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d88883f-7a2e-405a-8fc7-568b8c3beb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd1af1a6-1509-4e6b-b938-f8deb590e754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2c205d-109a-488a-97a3-da63b2f7f217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6b8337-bcef-4432-9dce-a1efe19836ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634a9065-bc8e-40b5-a655-5b8d486b3163",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b55d512-db83-4223-9931-b8635c2db4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecc0b21-71c8-4a57-ba69-5f39b9149db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57aaabf9-ea36-4ea6-9ed3-78b28804e677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b1e656-79f9-49dc-aef6-d8a3fa4619d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd13b4a-f91d-4d23-b4f0-e347b9e1412a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f89208-e271-4d76-a685-4a920e743db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c9e25c-ec5f-4411-b18f-f50ad750345f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264f2187-4524-44be-a209-09dbe6d76bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54642d1a-c2ff-4342-98f7-d371a44740c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285da312-9d90-4288-bec8-efaf41883822",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52da373d-2d69-4389-b0d8-52dad8dd8fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a19532-9ce9-43b0-8da6-7f860acbb169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe902622-3fe7-46ba-ae70-7d6f779dc025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8a82687f-2998-484b-a35f-37b9d6831a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09f177e-7f5b-4931-a9e7-25b2b0a5c3f3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d80af0-9a3e-4f0d-a3a6-d9463cec7761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "603cf2ef-0e0f-4b33-b1fe-4cb110067e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd196305-c003-4e11-a291-70e9790551b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a63d61-98b4-4962-bc43-98a9cc515856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89298d8a-4d6f-436a-860a-e12471c3fd3a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf236649-f5eb-4b0a-95d8-3f85140e13b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02521b1f-40e3-4a95-9b00-1bb942c8cb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc1d6c4-441c-4a5b-a892-5938af8405e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "568e7532-01da-46b2-b85c-5b359fe9b959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6340fa3-def7-4e89-ad98-baf95c50765d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edab9b2-a7fd-40b7-adec-13c86d8e5d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9409bea2-bae3-46e2-a65d-8689cf47aa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d13d92-1b13-4918-8009-3134433d1b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf3e690-6d76-4e65-8bdb-1435b524ff5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f20ed58-e453-45f0-aa7d-d63e71c3ddc2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b4b81c-4905-4f2e-90bd-c6c71a888d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ef662a-1033-4a61-bfe4-fb0db589d28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedf7a50-8f8c-43c4-859b-f3ff177603d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf73463-1b15-4650-adb1-686b6dd2534b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d390d3-212a-485e-b517-3b7987d3fe43",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b34c75c-a19d-49fc-ae97-c549d8bc6921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b175620-3005-4a06-aaa2-acb6771e384c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e457bd-9751-4339-8854-33a97e9e4acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62c6f2b-4120-49e0-b266-14bbefb0245c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373b45ee-f07c-4eb4-8fcc-d95937faf569",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa92a9b5-ffe0-4c01-92cc-4c9a30287838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19502911-fd04-47e1-bad1-ae8a52fa382f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434a56d9-f4ad-45db-9a5a-c7077f496578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51154d64-0842-4681-99e2-79a971384af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d8cc2e-9885-4f19-84bc-463e32cf6911",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab08ff43-8361-4911-9c4d-6ba2cdba2a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5838cc-81f1-40ce-b6bc-a2b83fd50005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ca21ce-7b5d-4260-a07f-204fec9cd35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0199a6-13e4-4dad-9c47-1d5c37e1fb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738b7499-8e81-45d2-b6ad-daa480722698",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2054c50b-8b2d-45a3-905f-ea35d51ba17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffa457c-92a4-47ff-b97d-4e3d2281363a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335085b8-4f55-4f91-bffd-6632676bffb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5113aa-81d9-49d5-a03c-9467c1fb18f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cdf82a-248d-4fa7-b029-eb2befa90841",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15f2261-aa44-4fbd-b6fb-2b26c9bb1fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befff44d-ee35-4860-bcb5-f0b7b36b118d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b8f234-6006-4608-afd2-57d26ce340d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cc3b92-76d0-4686-88e6-f75b5e295036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef11eba-30d4-43e4-8951-cdc61e625f0a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d2855c-d048-421a-ad9f-96a36ed34113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e1d5c8-944b-4016-80c7-71bac6beb913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f515ce7-0b8d-4607-bf7d-89ad16f7ed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e54efa-78e8-4a19-b6c6-4263fce3fc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71449183-db73-42cc-be1f-6923b092982d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc29de8c-5921-4714-98c6-94a6b9777119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af73da6a-b5ea-4627-9070-2d722ec49dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67ea9d5-e3db-48d9-8492-9e78b69b8938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4392443-a038-44d1-a420-c57cd03ce769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0816ed6-e9fb-42ba-bb57-4ebe05439085",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9512474a-8a8b-418a-b34e-d88c41f4e872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7ba900-4508-4e77-9f4f-a09544f9cedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ba8aa0-06dd-42d0-bbbe-a038c2a4e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "691592b4-482f-4608-abce-3e443f3e9006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57299ae5-5224-4693-92b3-1398ce648c84",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcb5017-a0b3-4109-9f46-898d91b1d7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452ba53f-1a4e-45f0-97a3-4b803f132f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3577666-9d25-44eb-8797-589c7132aed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f60fc36-092d-46d6-b7e6-6e93bf8ffa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e458722d-6dc8-4e4e-ad97-1d3a7d8a5554",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584ff7ed-d4c3-424e-8e0f-d7d754ab1f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6250508f-e701-454e-bba4-69febfa414d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b6a9ec-5b5e-45c1-a622-f54b4e7d7baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "599f5212-b992-4192-adc1-4fc644ad4f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3173489a-d9ac-40c2-b24f-5dba5458d37a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6633fb5-9129-47ea-b17c-7f9b360269c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9113556-70fb-46cf-b4e7-a480ce308c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8c90f9-0f79-40e4-adcb-c3c6d067a735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dfa1d3-aa54-48a0-9baf-a4b3f82267b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b521f9bd-eed7-4217-bc2e-658c867860a2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f8159e-4610-4d28-bbb0-a9d20a55237a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83390482-efe6-4803-8902-05118466a5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75393ef-bf1d-4f8f-957f-a587ef2e272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b30950b-cf3b-454a-aa8b-8cf559136261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e35c40-a3a3-4a6f-a34b-2c746842247a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b7fe1b-bdc6-4150-a279-e140b68348cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ee1f1a-d594-4ac1-a7a9-85a9e46366e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e99bc7-2d8b-4158-9329-ec1666adf254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "231914c2-1760-437a-8622-938e89f87e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088c3ef9-60cc-4a78-b56f-3fd0124f3c83",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc34f0eb-3b24-4102-af75-0611d189c603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92602de5-c1d3-4f22-822e-45425abf2140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d9b2ae-63db-4f02-8d54-2cf6b64784c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d302c834-67c0-4407-b005-6a9f741922b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81d695b-c609-40c7-a3c5-a9ce52713438",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef38181-e077-4df9-82df-338d41e34dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6a49ad-8046-480a-b660-531106c2e507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57553681-58b1-4b4e-869d-7d6c8767a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e9a5c0-0a69-4e02-a438-eb3a04a789b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d733240-bbac-4113-bf60-6ce66ca583f2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f77334-de95-48f3-9a19-3459e8b08b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ed3e27-34f4-43e9-b5b4-5d6185d58606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f26e240-7db1-488b-b072-0afbf0236668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c314cbc-e03a-4e61-ab5a-e404723ef0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ea212b-8e9b-4824-8967-d15c3dcf97e0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cdc22a-6799-42db-9cf4-d72266280b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415de2f6-eb1e-4cd7-b409-738556488b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f74f0c7-37fb-40aa-8660-db8494736d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "54405db6-d036-4bd0-861b-42a591aefda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8cceba-8be4-44f1-8908-1d04a5d9dc48",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e78228-1930-43c9-b327-41ace777c9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23c53f5-b4c4-49df-ba08-b023d84580c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dc3b88-ca8d-4cf9-a947-1eaef6d9b0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "031f1258-beae-46d6-a22c-95f5cd1a5dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d694230-30bf-4a71-a715-165eeea0f165",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd747603-15fc-4629-a241-b9339a2d278b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037186c9-ec2b-43cc-bafe-056044c692a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc25299-d5f2-4255-9673-5c1f033a8e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86c4419f-db90-43a1-806c-cf1be761dff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65448f84-fa9c-45d8-b781-a0ae39fa198b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d572b0d8-90f0-4e90-85e8-79fe2ffae164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5ece45-7538-44a5-937b-732b889c0252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c294aba3-96e0-4266-9b3c-8724c071c831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "17c335e6-ed48-4c1e-83cf-1aafdf3a2035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1e89ae-d1e3-400a-bd40-48f8234f8865",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e6cb13-474f-400c-83b4-9589072ad027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab4bd14-a8db-41fe-9dc6-66c4536eb546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aca9d0e-4baa-4861-ad91-14b92351e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1205f8a-df81-47d2-ad1a-f71ed1c6a891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081ac19b-0941-4883-be95-99418ae4ff5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9041915-a5e9-405c-a471-a854e66ea859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1f4cca-627e-4781-b7f6-66dd198f2982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f48c38-045a-4663-9890-d976f533fe0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8eedef5-235d-4f2e-b146-bba6c1cdeb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d408fe19-e234-4ed2-8aad-5bbb87f582ba",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc30e8c-1ea3-4f14-a98a-504ea39bda02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f32473-32b1-40c6-aa72-dc426eb4f36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f66b07d-c556-45d8-a0a7-d273be232f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8e33d6-bcb3-4891-8ee0-e299581859cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8214121-bf04-4aaf-9fb4-1c436d5c5d6b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e50d804-ecf4-4c6f-98bd-be405b2d01e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073e7923-9380-43be-908f-1b5504e98752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbd5255-be81-4ad1-beef-9803172c1972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5f4811-fe18-4fe4-8297-f50f9f669ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8173623-e362-4e36-92ad-711426e8019a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe11343-5294-4e21-82ca-888d21e7c70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d73c0eb-c7a3-4433-ac5d-09f5f13d4af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b411604-e6f1-48af-a91c-0564ae27dbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2badb27a-dccb-47c7-ac90-48b93cbce0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508ac167-aadb-4882-a1e8-bdff9048be80",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312cc7d4-16c2-4b8d-92a0-f182090ebf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6344e47a-c035-4eef-84c6-45ec02ae8a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fe4af2-af74-44f0-b082-e7cec22aa93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76abe573-497c-49d1-88e9-7f900570962c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3abf5cc-4a82-4f54-af72-3cc756bc28fc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea64635-38d2-4310-a9c9-79a3689ab755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0d5d21-4205-4e66-89d9-ecc36bf01a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7ed495-18ca-4101-8a99-3780b784e7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "329de3d8-9bdb-47a3-9c73-d7bb316e280b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33722e3-8804-48e4-8603-8267c7253cfd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193e1916-ae57-44f8-a2a0-bc2d05e5bf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a1f11c-2242-40bb-8ec3-55c4084d63f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87893dc9-b87c-41a3-b773-773883af9f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "908a68fd-b482-408a-b9f8-d52bb40e2699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dc5336-fc42-495b-9fe1-355979d22e87",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620028c2-ee88-4342-8cb9-9ecfda544f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce7827a-e821-4558-b6ec-2832f76c3bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef99b84-0cdc-47d6-ad62-901c049fdf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa94ab2-291b-4619-86e2-c9bec90e15a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8a1ae1-acfd-44d0-9755-fc23a9b16c88",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1587fee9-4a57-4c14-87bc-3e63da8d6335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4321d6-d345-47f6-9c96-5bc75507f0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928e2fce-a736-4f6c-b392-ee626d7a30b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dcddcf-a4dc-4f07-a425-55b41d4339f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae5d4c1-d2f5-4a91-bcaa-7e9fdfbbc308",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a269bc-579f-4b6d-b21d-cbe38822acb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5aa909-7f60-4e90-ac78-06980278b0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72747c2-bb6c-4952-9691-24f07052a92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd71e4b-9022-47b7-8d3d-903595401198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078e2d0d-fce2-471e-9668-d488358ee4b2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a90aad-4786-4e52-b1f3-ef69385235da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a117f6-1c52-4c11-9f92-62f9facdc5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f15feb1-f413-4d3a-87d1-e07f768d2eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b94b64-f4b3-4e0e-a794-463b95674a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7d7606-771e-4650-882f-0454fc257b52",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fd5e63-711b-451a-83cd-9238ccef1e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea77e1f6-3898-4344-a9dc-66399813d00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441e3769-4781-4fe7-8d46-a7b78a902800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5880a4ab-975a-4c50-b844-37860e83903a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471d2682-2a25-4262-8e72-496c4fb569c9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e09fba-e757-4b3f-80e3-ce7b229d2551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af78de8-c931-4db2-91e3-2cd8518e198b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d7ff70-a701-4d81-81de-b7bb6567d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4699c635-b70b-4394-a910-0bdc830b57aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739bd7b3-2838-43f6-849c-4ff5755c6a3a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6223e04-ef86-4663-bdd8-738dd342cd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1e918a-42a0-4007-8d1b-4cbf5346a414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b55293c-44fc-4a74-a440-902a40f41f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4577215-0186-43d4-84bc-cff420fda8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ce12c0-c607-40e7-abcc-3a250815f6eb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bc6caa-9a19-4e81-8df2-8682378b4235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8a18d5-876c-4da3-a14a-ab41cc8f76ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb822ab-014b-4a7e-aa27-c3bb1dc43838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3aad47e-88a7-4cfd-bd3b-b599114f638d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a75d9ae-1743-4c48-ab86-551afb509077",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86f41fe-cab3-4ba5-89b2-55a17245d503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b5c3d0-44fe-4e12-8b48-53c370bdf6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56d23fc-03fc-4186-86bb-530177a41dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6e054c-d728-4d7a-bbd6-e37a868a3f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dca3a5-4955-4e31-a243-85a74f16aeb8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afe2e9d-2756-4518-9735-f4c2cf263e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b74099-c9aa-4b88-8d1f-df5d9d622c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5847d9-983c-4ca5-b252-77a77dadc41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "838b1a67-324d-49af-9d86-02768aca9d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d697b9-de3e-49b7-afa5-39ba9a467452",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0059a9-5483-427c-a23e-d15cb8a8bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55736677-5fee-46e5-8251-ef747a159d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53863dc4-b4d3-4c9c-ae64-5fac1f304dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7009d7c5-1f85-4d83-9d75-0bb40afebb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735c71ec-692c-4a98-adac-bf62c79e1168",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b33fe87-6a4f-4769-8427-1ff409dc26b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a5a3a2-9570-4993-9b9d-6f21980343e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a12bc63-b241-488f-a6ac-efec621cd2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "36c043c2-e6f3-4cc6-bb36-cd178e75c60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adf7ec6-59b6-448e-96cf-6a13837a168c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87bfbe9-52a2-46ca-8209-3b42d33f9a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7329a06b-155e-4400-9edf-963c732fd864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e6f676-3634-4161-ba1b-41e9376cfbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f165a8e-8f71-49f9-ae25-66babda30a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c3a973-ce0e-4bed-8409-b123d3446cc7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f558da8-302f-4bb5-8c17-e15de3255001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7f231d-d50a-4f9d-960a-004db19caca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffbf7d3-ff64-4f0c-8d34-14ebab6f950b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc4a31a-f1aa-46f2-8856-ded8f15cde2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdc6151-16dc-449c-b42e-8512b5392e39",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b79bc99-791b-42b9-85ab-84486c5e8c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7be119-ad8d-4dc8-a00f-0fe11f227d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95388ca4-8683-43e1-a846-770b380ad795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "775c21ea-07e4-466d-9c3f-fae026316cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543b0662-006a-4aa2-9978-0826df2473bd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65041a3f-055b-4086-a56c-585c075c5f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35ddd3e-31d3-4d0f-9a3d-8289f0a52be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c785bd0-22fa-4215-abf4-f900b17697a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2866e22-9f83-4b37-a29c-8fd7277e3c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1053673-72ab-4337-90dc-a0884a9f5509",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f25a1e-a5ce-4ed8-98b9-ff078125d3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d052e6d-f1ea-482f-b69b-d4e78d55110b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8684ec45-43c7-4d2f-9445-2c662ea065ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1d38db-75f9-4e43-a682-e64d7b2b7e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d80cbe3-d713-444c-985a-bff8b6b4776b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c05018f-0389-4d46-9d0b-e3778d651aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a5a6c8-a309-4160-8d66-efa4b6a58b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca90db0-170b-4bbc-a6e2-fbf3fe19c77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52a52125-8df5-431d-9c9f-31cb53db373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bb9dc0-4548-4f46-8d15-e8b6ebd58241",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc894b4c-7596-41d9-a874-9a770706bd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337c0908-6c41-4ab4-9a53-f4e328546b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c7f73d-e3db-4c49-92f7-3c6db066d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d881a6d8-3bd5-473e-b598-d0dcb5451604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c46e5b-74df-4b32-acbb-862f67bf26f3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30db900-3120-4e78-9982-f401436db541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158eed86-d5fd-4593-871c-1340367f75d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccc1acc-2fa6-4562-881b-1ae0ef74ce13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f57f612-33f4-4502-9257-56d7f5d7d543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb4770e-68d7-4f6b-a605-0f4eb80023e1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83f51fa-f5de-4785-a829-8da7a3a4e6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1c1062-1bcf-4596-9119-aba0bbf4f2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee873c3-1621-4c56-81d9-876493fc1ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "88871db1-bdc4-4b5b-82ac-e35e22a2872b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce6fee-ee28-4dde-b9af-00a5c645b6d8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab993e6-6e64-4702-8f1a-0bc22912c63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6406a3d-9de3-4a72-8822-a6f2aa9b5ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ed3674-0180-4b1c-aaaf-0f99a69b1cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc031a8-9f4e-4883-a54d-a6ecffc7350a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa79a03-8066-487e-b273-f645e6bbf085",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e33127-d7cb-4893-bfb2-50c8372d6ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee1569c-6115-4650-82a3-0f59a7eab63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f934bb-6b8c-41c3-908f-136649fe0752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9605f1df-fab3-4333-a8b6-05a384f830a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8186a4-3e9c-4ada-9dc0-d0bfdc316f3e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bce4ff-271a-4d54-b167-060628484d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3766216-ce91-415d-a659-a7433186989d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e53f9a-1e75-4f7b-a9ac-e66a9e8ffb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bbb451-4095-41b8-9457-5d108f8354de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89b8266-b0e2-4db6-bc24-d44425d281e0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ffa81e-da7b-427c-b798-cfa804c39241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "181c4841-13e6-4a7e-a613-a60805c7d54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c642b90-e4e2-4f38-8275-9b0171568a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "48c41a1b-5b88-4ef3-b449-d9e5769f3dda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "196f0a9d-c887-4200-84a9-c00c8e6369a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1145c23b-048f-4ee3-b725-51da58f9bfba",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4ba706-d255-4024-aa52-a3c4b9948464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e9a41cb-2c95-4428-937e-6aa7802ffc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d84ec97-68d8-46d4-807c-ea3ca730ed5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15595d67-3e89-43b8-b2d2-210e5bb6f29a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f37543c-c925-40a9-974c-f5f313cd2361",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a9113be-af8b-4e83-945e-586242ae541d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "949d4f26-1664-49b9-8f2e-98abc8427776",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aea2e7c8-e57f-40d8-afa9-a9c71a995eb0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16279527-3ede-4505-899c-96b052285c51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c29fa70-6a39-460a-ac86-36d0bafc9dcc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee6149f4-190e-4448-9109-429bc7e715e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce4d5f24-cbe0-4302-bff4-ffb17e542d85"
                }
              }
            ]
          },
          {
            "id": "394f80cf-bdec-497c-835d-36c8bb0b136b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48cf153e-c376-4e1f-9245-3c8dd3131465",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85e0937d-4fd2-4e77-b369-b4624ae8ab9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07c288c6-8d91-4c88-a8ad-7bc566763d93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ac8fab5-90d0-4c2e-9de6-8ca955173b14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4d7b167-e5dd-4718-9a89-e109419018fd"
                    }
                  }
                ]
              },
              {
                "id": "f173b6d6-a4ea-4f78-ac80-e8130e300cf8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "923399f8-27ff-44a4-a6ac-a47fc51351a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f22eae6-5cb2-44db-924d-f04972009c9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "541ffba4-df91-4c65-a717-685fdcbb01bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8744fd56-5312-482d-8691-07480ce76381"
                    }
                  }
                ]
              },
              {
                "id": "e4002065-3ba1-4ce8-bad0-4c7da97726b7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13693e2c-f2bf-4888-ba59-2e0f958d3d1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "210974f3-d8e5-4254-8531-3f5514fde61c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2884c1c5-acb2-49b3-be46-8e17ccebef65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf272226-0d77-487b-b2ae-5c1f9c873fc0"
                    }
                  }
                ]
              },
              {
                "id": "33f1037e-25b5-4746-97ba-d2472efbceae",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62b7ae80-6383-46c2-9a0a-2807f24e4c61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16494ec9-3eaa-4854-ad67-a645d0418d7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8580e49a-790c-4a13-b683-8e989f7a8419",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b883342f-b828-4f91-9e4c-d8e91dd5101f"
                    }
                  }
                ]
              },
              {
                "id": "ad8255a1-4e6f-473b-9b41-cb5a064e2c23",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "749a0588-030a-4bde-89ff-9c8c45249670",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94510a1a-4e39-4e8a-ad2b-95b93c12da2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65c41695-701e-4ea9-af9e-f0aaf5673e3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cd24d0f0-688c-44ab-8f34-1900e8a0ca21"
                    }
                  }
                ]
              },
              {
                "id": "0d63908e-fad3-41bc-ac3f-cdda67f25bbb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd97cac4-9963-4796-93dd-106849abf9b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "542077e7-d847-4e71-9b90-31a9c50a0ad2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06c93e78-e401-4dfc-ac2b-e7a3ad040a13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b317c1ad-4be8-4ce7-ba43-64a338f793d1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e078136-4964-49d1-88c8-52656274e937",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78de6cf6-da2f-4138-a53c-c512ebf31ac8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "86e1a22d-efe6-4e6f-80e1-215bb3d3980a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5b39f18-ffe9-4037-b1c2-a03a0833a81e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32445aa9-74ad-4ad9-b0a8-58b13e299408",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "24b2b6a4-3dcb-407e-a1a1-9bbfe3f5c2ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb766635-d363-4db9-bf5e-bb3182bf85e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb0073ac-2122-4198-986f-aaaedb3d9fa9"
            }
          }
        ]
      },
      {
        "id": "8d6d9fb0-dbfc-4b3a-8cdc-61649162d034",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8468524e-9090-4d61-8849-4c8ad0532a0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e489eb7-29ca-45ec-83e6-bc6eb59bbfae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59ce5c7d-76b6-40e4-88c7-9aa7ae945bbf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6803ec67-880e-4f71-b033-b2623ba29e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a391e5b-8dda-496c-9613-b158afbe8ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830ecf97-b5e1-4bec-9a4e-3f6a3bc2b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d34a91-93a3-44db-9514-e91592360ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a84ecdd-ef17-496f-b076-3beb84349e7c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db89556b-8de3-4fc5-9f84-b37d30b32f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cff6605-340c-4891-a164-c4aa9cb663ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbc4d7a-3208-4ce0-b665-a7af614f1656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd12b5a-63cb-425f-b626-25ca79ae16f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef78b83-2674-4ec9-adb2-2e8d3b1fe342",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3002f9c8-cae4-4c23-8b86-dce2c3b05e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e41fb37-c7ce-4de4-8be8-279ef3d2e10e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12872ca8-c782-4489-89cb-50e00efe8afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "768e707f-2b63-424e-88ec-ff287b011bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0b33c3-5487-4db2-b763-09d1de11e31e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0a4494-c58a-4f0c-a815-1d2f02c04acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3243f674-b2bb-4373-bd4f-2c6c8e3a7eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce97082-f65c-4777-9de3-37070825b3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14073c25-ac52-497f-b6b9-c2347e534452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c70bc7-cd7e-476a-a4f0-6a451eb0167a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6969ed38-bad4-49b5-98c7-76d9f2478edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b43002c-3ad5-48e8-8af0-8660d5eff869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e04583b-a64d-4d02-bbe4-382072a78c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b1ecb6-106c-4371-a090-95fc16224dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f614a5c-a506-4d75-b38e-6bc5c3f0f2d2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293c910f-0a40-410e-abcc-652777358374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9953739-2991-4f03-a297-b60c4a9153bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbe9732-70d5-4512-8b49-0bb275c022ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb90df3-a3fe-43ef-8260-9e5e90d6b545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fef797-55d4-4882-97a5-c40efa3b7296",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac469174-4665-4021-8f50-f540055e5550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d7ee0dc-b7cb-4d25-976f-e0c58b9c6aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fcc71b-9214-49aa-8ec9-e7343567dda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4377f183-a67f-4827-92aa-5dbef4caeb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d223e0-9f28-400c-a593-ec2a9a805c29",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16517c7c-ec0e-4eca-8968-1618915fc161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e225de7-9e33-40c2-96db-0e38bc29e222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad7aee4-e510-462b-9c08-1dadc3f99d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99f15729-23f8-4a51-bdf0-ab12425cd95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2303dc0b-b2cb-4440-8cff-3866c50bc486",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f326c0ad-d98f-4d07-b8e7-a43177d722c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad164f4-b11e-447a-afe2-66dad8a61fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273ea238-5f1c-4d6a-b74f-bd82d5fd0507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5635b8f-6579-43b3-9c19-f8aa14419cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a20762-d68b-4f63-8347-213118f7db2d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eece61-169a-46f4-991b-2b8af8ca858c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d953372e-0969-4549-9cbc-363488b04e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f1d69c-dfa2-4dc8-8dc0-c8394e9b0876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "882cbc6f-fa50-40ff-b727-43ed85c4bcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3479dbac-ff86-4378-a686-c9e13148490a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19c0edb-a90f-4c68-8747-1b9b6cabc25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233fbcfa-d18b-4518-90ab-107d794b96f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738699fa-7cbe-4121-9c62-fa8fca5ab76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef32188-57a2-4b19-8b9c-7af2f9c3ce1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212cdac1-cbc0-499c-913e-4fa8fe847f53",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6320b85a-f215-41f3-b41f-067419e51c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aafe82d-209f-4c45-81d9-c580c9a9c600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fca36b8-58b6-4fd0-80cd-b010c9c4844e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "822f8d22-ddeb-4ded-b606-963030b15c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ee71f0-e407-4528-87bf-e72fadc98fa2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb66c727-6487-4c20-8480-3fb76e43556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bebf47-9bfb-4507-b76f-1aee7ad9e0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b0b4a5-55bf-4d59-b0ea-993fb9ee6e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d1c91d-16bc-46ac-8743-2a93a63cdf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "930df58c-62c0-47a0-a9ec-e6b5163be347",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd0883f-2176-4422-8bb3-ce6949d7aaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6b19f1-113f-4b3c-850c-2824d017d2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fd2c6f-9259-4c3e-827b-3d488c253f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "41654823-b3c0-4190-9351-ca8928870e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa64ed21-31bc-465a-be55-094924082f93",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f11678-11b0-4633-9a2c-52e979f81451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5ec6d4-cee0-4553-b7b3-6b6441902649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6762f8ac-a49a-40f9-895d-630af322d14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4198c46e-0981-4341-a7d4-d83f6535e638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a108e692-89f9-467c-aa38-84b3381dbc52",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7718755c-0284-43a8-b11c-1c50a03458ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a6fcad-e650-47f6-be85-8273821b42f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261b39dc-7af7-48ac-9bdb-33bacbc9e39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0040ec5a-4f8b-433c-82d3-5d842ec85502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74abb29a-857d-445d-9614-5d5b6b581e9c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8ab86d-6ded-431e-b8a1-27f297585475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833f16a4-0d51-425e-abc6-cfff72f908f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a8d083-5088-44ea-b379-c4edd83660e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d812cad8-7724-45b1-8f2e-7296b7a30ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe6da2c-b8b8-44a6-9852-3e6f7792e256",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee25e41a-d6aa-415b-81b3-8de08c340fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5a11f3-06fd-4e52-bad4-7ce7f389b5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f01feef-7361-413f-85ce-84feee54e57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "74adf0cc-8089-4f97-a110-bd5e011bd20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc4a915-fbe2-40bc-86e8-8b473ebe8b8c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b7c473-0eba-4bb7-bc75-41b1d378b2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38db06b2-085c-489e-88c4-b3dd5ea01a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0fdd48-0723-46ca-a467-0414736baf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a5d306-f345-442e-bfd0-14b42a4cd20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b16f05-6466-4003-99dd-f344806437ee",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e692b1-6dc8-4369-beb3-5ea22d84c574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5666b4c0-89ec-4558-b76a-d89cd6dda9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6479c40-b59b-4223-b2b4-ddf16bb56728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2914995-ea27-4ff6-8a74-479a29732e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778f8560-a4de-4ed4-9996-1ef43eb49c02",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113900b8-6f9c-4a03-9c88-91bf8325881f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba3ff9fd-3a6b-4179-9d4c-31b3be93c873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e42e82-ae45-4edd-a639-51971e285a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acc16687-9916-4b0c-8e02-b89909f0d9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e187d043-87bb-47d7-9730-cc8f15a53a26",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4715655f-5573-4462-8172-0d9463bdd7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb82c7a-33ce-45a5-a7b9-5c71c7da502a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e86fa1-ecdd-45ae-b75e-d183c97cfb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76ef16cf-16dd-4cfa-8111-cedece517742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a48152-ba75-46b3-8263-51a3e02a623e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e41fe6-213c-459a-b80a-c3efbc055f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb79018-4503-4b4f-8004-710d8921827c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1817a00f-bfc7-4d9f-bb4f-80da9d97b324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5616a28a-d672-48da-b4ae-e5ef648241e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa12a97-2c7c-4316-bb6d-36cc4245845c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62201ed-4f6e-40a5-ad07-68b4b10bbb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f836b1-4598-4f61-90ee-06715024b07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ae8121-2aaf-4c65-a603-f216bf97e926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "342f4d33-1e48-4b49-a348-f2a4861a347f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d290391-91dd-4a11-be53-841f2b8de9af",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27082517-21b1-44ff-a014-c1f346a0576b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dac3faf-e6c7-4e81-aeec-025b475d09fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d175ec6e-7bfd-4ab4-9e4f-91a067ae0d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "054208e9-e6ce-4e3a-b766-2d628039bf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4235a12a-59f0-4259-a398-6883ca2d62af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91251537-bf77-474b-9ccd-42bda86c6691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e9c5c2-1d49-47ff-8743-9ee1489e1a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51289b48-f71e-49a0-a517-ec7e7bed0e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49453053-439b-4424-9c90-bd74f8de1a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757759d4-5728-49e0-8c7b-30b38dece02d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9836b08a-4307-464d-b4d8-9ab00eac061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed879080-7ebf-413f-92a7-57a53b1f6e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce37d09-a0f8-4c71-b84c-60338f7b7113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac33832-92e9-42b2-a324-568f04442522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de404f3-3b23-4de0-8e2b-99a824a45190",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088ffdc7-3bc2-4e3a-a58d-e25d60930a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e338c015-0726-406c-9638-f30b629ab7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b710bf5-88df-410a-9014-bf2ff97e365f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ed8641-6fb6-4c5d-b0e8-00b7d6c5b31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a43c207-5b13-4f2f-87dd-e3c65a730768",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d5bcd6-48a2-4abd-9fbb-7e222fcb6070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0fed8d-ee6d-4af7-8a36-f386124b96fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8d5ade-5de7-4df9-85b2-d47bcb2cd381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3374eaab-1c93-4331-8f7f-11be20decb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414a2ff7-3dcd-456b-b799-24b5c15662ed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadc80ba-9b29-4cd8-8bcf-8cc15a50dccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1469be4b-973f-4827-b26f-8a3b44c7219f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19529bcb-0dff-40f1-a551-1b76e7dd07fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f98841-3642-41fe-905a-a1514820ed90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8feca65-d0ac-40fc-9688-cdc042bd4fae",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c573e6-b596-464d-8794-05076dc3a083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcd7a02-325e-4a6f-bcfc-4e89e96b03d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcbd77a-22de-4e71-a8a8-4aed47fc9bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98200dcc-8abb-41d4-9f77-f9eb13a7925b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ead1b91-fc9c-4baf-95e5-2f082bb308ac",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67372d26-2272-43a7-9feb-76059ae618d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f97ff0f-aaea-48cd-807e-c6c594597880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5367a9e6-62c4-4a4f-b30f-0c0771ffd5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a441ba12-b51e-468a-8765-14bdbc4fd214"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa4cfb35-b1d2-4809-a814-259df48dd75b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a368cb26-e658-449d-bb7b-af026f9b6e4b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06918fbd-9316-4325-8cb4-148d4cb18aa6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cfae1583-170b-4b71-afa9-1032e8c13f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5b2b66-dc18-4f43-8dcb-4abf51cab306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4be5c899-cd26-49f5-8667-897f05105d52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d7f57d3-81ff-4b0b-9b0f-2d55c0713431",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "993cabd3-75fb-4628-9c72-8b5082508e5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44dfbe61-f33a-4b50-b5c3-c7ba0fc67a0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3b3b067-aa40-4960-ae7f-6d0abd3fe1c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7211f5d-82fe-4922-a5f3-bfdef4501a34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa3deb8e-c664-4071-be30-d05eda38b95a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee53d0b1-fa37-4b10-ba6f-7e41e41cfb34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92d3d86a-e56a-409d-9554-5f718635228e"
            }
          }
        ]
      },
      {
        "id": "0d9d5d99-fa24-4717-94bb-c1a8007b1871",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "82af4a50-e1f2-4ceb-8c92-31a14000fc49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68c4723d-4565-444e-a54e-0c0d3a524553",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c72c23e-ee69-4091-90f8-62d681f074cb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfd7363-434c-4e1b-9341-9a3288f1c9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0a4f50-ae51-4034-a4df-fd8b052c0e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c17822-fdc4-4d31-83aa-1e8b637e8bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f870bd-a189-45fa-a1b0-3bed6115638a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3553c4-687f-48c0-9016-2cc6a03b188b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63315573-5cf1-4147-bbf4-ed236daf2c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38e109b-0664-4709-a7be-8783e613342f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e167bf-e8f6-40db-95b2-1082e19351d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e271b492-d2e1-47eb-8b50-f1415dc69be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1601e1-d972-4277-bf66-e42c4e95a2c2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e75fa0-bcc7-4880-b801-fca956d84dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419191dd-7472-49fc-ab0e-86586af0d5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182bd5f0-740b-44f8-8051-aecca2aed97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa8e6279-97ae-420f-9a1f-0315e5e24104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42b9748-2df3-47c0-b141-677f587dbfc2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d36b0fe-483d-4a3d-b955-f299759603d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd5ef40-1f6f-407f-a997-7930cd21a398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e482dcc-387f-4882-91e4-2373965c3d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b08b9dc-97b9-4adb-bd85-0a41ff1f21b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff5aaea-b962-45d9-adb0-bfd497012719",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c0420a-857d-48c6-a2bc-43b95ef36c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2896e68d-a5da-4782-b08d-66de6e98b3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8abdaa-dc63-4136-b17b-a5871a401932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "026cfd75-a3e8-4b52-b958-54076be6c238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41e8cda-6f6f-4f6d-ba40-2916016103db",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd97680e-c169-45cb-9070-c5b0a8969b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b05b9d-7182-4676-a639-84f0fdcc8b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc25611-0f4a-4602-9dd6-61288af7ae1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56103861-3e07-43dc-9dfb-f96bd273de80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802a860e-7d57-4b68-8270-039fc8588941",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee405c99-84d6-406b-90c0-e06ff533a73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d8545a-b146-4dbb-8ad9-1670c5e700f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a36399-dc21-4692-960d-70d7775801cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb6dcab-e058-4fb3-99c7-ababf15769b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efc0500-9dad-4897-9298-f3579990e3f8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345ba9a2-94c8-46f6-bbce-c5699f8f62c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902ec01b-6daa-413a-a2d7-a8216815ce99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75389279-169c-4cdc-a802-e26c46db0d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7463417-24e0-4327-82dd-84987e296a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1652c550-1131-479a-a7ec-5ada2e32d2cc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d65f7c6-8973-4c3f-9947-19d1cae38ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cac413b-8876-4d20-8253-d75c89a0af03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90265df3-7c09-4f29-accb-4f8867f0ebea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6257bc-f862-4309-af56-8fa06b139d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e4af36-23c2-4f90-921d-49dca21a1907",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a2415d-6399-47de-8eaa-2433cdc5cfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c61c0c5-8453-4da7-93a4-412c0e5e5e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef56bfa-be0c-478a-8653-ad55fe83bc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a93f625-2dde-4093-8c4c-2c0c07802331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7aa398-cebd-4391-b392-4f8c17fe862e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b8bb65-0d2b-46e8-acff-808343bba4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cfd17e-a012-4a42-a085-947b4ea74afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f244af-fa48-431b-add0-aff2360ac5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "97abbbe7-88a4-4a61-af2a-0acb477e95e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358df1eb-5296-429b-8d37-b56bf4e4c27c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae71474-1ea2-452d-b140-819528d47272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd19da1-6e42-461d-a2a9-39b033a418c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7ecc9f-f4d4-45bd-95be-2a657569b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76ccf860-4bad-45ca-a59b-e9d034791e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de0e752-a46e-44ba-9960-43507aa5ad50",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155aeaf8-2818-446d-a173-b4c4696dd6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3476ef-89b7-4c10-a870-80877276f837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37667b2-1b7b-47f4-b799-9589be00c1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c64ca2-d633-4681-9541-fb332a1568e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55c8866-3f5e-4fb5-a6ac-465fa40aaa17",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3816ccb-ae9b-4142-8b0a-afdf353ca325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0dab4af-dac9-4bca-995f-372f1cd05017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177c9f72-c8ae-451d-97c1-7debb6d3170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c349dab-89b1-4786-9079-9c80c54ca3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26533856-2699-469b-82bd-e05b8c03524d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f720b23-572c-49c2-a67d-2932fe2a6b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd3e5d6-e8c1-44b1-8616-0329a524aa85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b14f791-3f14-40d4-abd6-bd21ae98838f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2ce71b-397e-4ae3-b2ba-2a73c96afd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3a968a-914a-499a-9aca-d6caa28a0e98",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf0d76e-a08c-4b0f-b406-dcb1d5b32bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace76efb-b930-4a8b-8d3e-84a6fe90d615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c17dcd8-e172-4957-932f-1e7559dbf02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e897c6f-c880-4303-a92d-1fa317226e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf87090e-145b-491b-b50e-341eeb16408b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e82a672-8bd9-46e0-a3dc-563d305135c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435b69f8-8d19-4291-ab3c-e4d6b8b5ddda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ad65dc-0002-4290-b7aa-43d45dddcc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fe777c-d1c0-47ff-907d-1107c6c26709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a11b618-4c77-4089-9506-c3cf2411f2f7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1997568-40d6-4a86-85df-7702a0503949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a36f9b5-6906-4983-bd1c-644050f0b04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3070411-1b68-4746-ae70-34fe73a94538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40687ab8-9fea-456f-87e2-ad0e7acfa3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e10beaf-fca9-4aac-836d-b0f429354e06",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4911944-e403-41a7-9060-11b6b922f112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4562b2f-baa2-4684-a0ba-3df5ce0edcdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0b92b3-5536-46a6-a59a-0ec0106ce69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c49aa2c-0a01-46a7-bbf5-0f874e49f3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb998cf4-2641-42ed-a165-3d0b7ffca4c5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8948a1ba-61a9-47ff-8203-83e543ecb6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7158c9-5f18-43ee-81a8-ca551e2fc1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e392eebb-493d-4eed-82a0-5f12b557a0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "733ef8cd-a846-447b-addf-638c1e3dbb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd151f8-b055-40e4-963e-19209330819e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e919e-2bba-422e-8f96-ada3c6bdba30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be53f5fd-6171-49dc-94f1-2ab368b5e45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "047c25ff-cee8-49ff-ac72-0c4610a839ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59e39de4-21bb-4dc9-8ea3-39232bc03a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c857cd79-24ad-40df-b079-ebcc68dc43cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e7d5a4-bd1e-43ec-80a0-a16f790d830f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d021bba-d3a8-4163-8367-d0c085808c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4dafa0-b198-4b1e-b9e0-edc006833e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0087dd6-765a-474b-8b55-4c1f12469e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3a4c39-1daa-4e05-9c56-0f2b87eceb30",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b381e8-e5dd-4d0f-93e8-eb9694aa1113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a001ecf-d001-4832-ad9e-ed9d6a71bba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef7b8a2-74a5-450c-8362-d91bc0326a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "023fee5b-ac10-481b-b855-7bbae660fa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c313349-d5db-4784-a0ea-431f4b707e67",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f997a01-a7c6-45fa-9f03-619ef83da02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e233ec50-295b-469c-990a-294724c7c239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e772fb-0e7f-4eb7-af34-509689c83f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "539acf74-9619-47d9-ae03-a9af4586139c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d8dd70-d180-4510-b975-46ab5000983e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a3fc81-65a4-4bc3-b4dc-b13ab351fcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8289d425-f23b-4553-89ea-99f6fb1b2351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662af39d-3bfa-4edc-9949-4b6a1755266f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1026f099-1f95-4729-9f12-c4edff52e5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e0932e-ba72-4265-818b-3625d0e2628a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751b4314-d0b6-468d-8082-fb82f7a244fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59ec53d-11ff-4953-bf2d-9ddafbd650c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df541c0-9cde-4fa8-9d98-813037955fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55d9d48-7072-43c9-b092-e1cd00cf8cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dc85a8-6951-49ae-bbbd-700928e9c36e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dbe485-482b-47be-a963-ec5a956be875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb25c0a-df55-4816-8699-ff107b0b469d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbf1316-9ae8-40b7-8ce4-99b720f14034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "992d7169-039f-45b2-a6de-f2bbbd468e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e94c40-d890-4b41-a491-eb27e43be1af",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7ec9b0-d6f7-41c5-b7d0-7593fc17e3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590e7cf6-2a05-4dd0-8a0e-4e885f1ce8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edefeba3-3632-427e-bf31-18885f0c7ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd652be0-3351-4e92-beb8-7da281924158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc829b3f-0059-4bd5-b025-6761dd2192a5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eacc17-290f-4591-932c-2e6d4901b60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2072a82d-b44a-4f47-afd3-276d981e2e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b070b43-fc41-4d1d-a214-e8d399b6e021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14a7a68-87df-4878-a896-7863ee600868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374469b9-112a-4df5-9683-fd28732a819d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810a66fb-e6a6-42e2-84f2-321241b51522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374e5aa8-a890-4129-b2c0-a54b8dba621d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378e5376-7c20-4fc2-bb68-90f35cb6375a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8efa9625-bfcc-4667-9f89-34b190bfff29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707f5245-7459-44fd-a378-0ed4736d7322",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b91d72b-3156-42df-8f34-ea903d091b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3425f14-8d0e-4528-954e-be99bd1bebef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daff4af-e3f7-4582-ae17-5936faa6ea83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511ee368-ffc7-4065-baee-cd34fdcee706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4629b72-a850-4939-acaf-a2d094786f09",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae252d4-2a64-494f-9a54-3b93d25a8456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa80921b-022d-4d79-8ed9-3a7fb0e6b600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0699fc42-36d3-4e47-9874-1ff49a36acb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8371c3-08c2-49cc-ad5e-40c7fa9974d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fe113d-9e2d-4779-841f-daf04192e087",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398f6692-b40d-454e-b4f4-cf6361ef316d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d3a02e-64a1-4455-a510-90051b519171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c8b920-f049-4c9a-9e24-61423324f724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf28cf0-bb55-41c4-b167-1e6e2ec03e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a03c1c-b4d8-4a75-b451-3c16067525ca",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01de9f5-c6d9-453a-ad4d-8526629756ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3a0d3c-40bd-4eac-825c-5010c3526728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400e5268-5005-45f5-83cd-420e990d315c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe8f00e-43bc-402d-bde2-82b23ea5a8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e9760c-d9c2-4e1c-bd91-01d4604a64ee",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3b25af-06a6-4308-931d-5d2c8a2ed4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e502c1-dfa1-476c-a068-e1371cba227e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aa629e-7bc9-49fc-add3-271535efa461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a160ca9e-8332-4d13-8ae2-12630ab441cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6158c28e-b6d8-4f3b-a385-615de398b445",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1add150f-9a22-46b0-9074-d169d71aebdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc26c1a-5073-4e39-acc5-7db1c06a57f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e90bbd-5881-44a4-946c-df8179cb320a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5786588d-2e09-4a57-9b9b-c277fc74372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e30758-0fd6-4daf-8edb-b7d5d7f8fdc1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e137996d-63e5-4a61-8313-3448ff30e011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaedbe6b-d8d3-4cf8-99c6-b58f8ceb6e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5350634e-af1f-442b-89bb-7915ca741498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6191c41d-ade2-49d1-83c5-e016a1695422"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e3d8ff0-5c8b-431b-9f07-dca453b883bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7051a04f-6b6f-4c52-a621-76d0daaa7124",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4af5192-d1a1-4d41-8c09-fd76f522d0eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c8703af9-07e0-475d-8ae4-4ad38ee33e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5468e05-7a78-4997-9525-0cf33b28ed06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5749e461-894e-4ba1-b574-653bedfaef1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab3e4507-255c-4385-95f0-8953bde71d03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6019d0a-ed3f-48fd-8e9c-f4e3dbb95c1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03f5137e-0841-4226-9917-b5e7b8275d59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b12c95e-10e4-44e4-8847-2201a6c92200"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a15c8ed-5408-44ff-ab1b-19eef11fbf35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "559e9649-5ce4-4cbf-b8d4-e0bfcf900ffe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60d17954-7219-4aa7-8b75-4a33f504bfad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bcbd46b-cc7e-482c-971b-c527e710f322"
            }
          }
        ]
      },
      {
        "id": "76747e11-508b-42dd-930a-6a7cccc6d8fd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "194f4d29-e553-496e-9e55-14f366d9b4b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "beab8554-e1e4-446e-9a0c-aeacccd4c87b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "608d3c28-81b0-44b9-9b98-70b0ce1dbbc3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de34ec7e-27ca-4ff3-83ab-f6a1359972b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d62f41-47e4-4286-91da-08e87f536de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d29bd66-26ef-4bb6-ad68-d949836f4a3b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e7b4d8-322b-48cf-9651-b0bc5a63030f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b101c87f-9734-4140-b1d2-e9578472a8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8be1b9-7194-4aa8-a660-941e4ec0dfa3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47031ba8-6bc7-400b-9144-81f15ccaf591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3b8265-9d7f-4cf2-aca6-8e3999abed90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2db968-d001-418d-91bc-8797fdfd4f04",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6fecb7-b2e4-4abc-a0ae-c7de7ac35253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d740b2d-67e6-4717-b386-cff3275fc6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8e089e-014a-4f56-be3b-fc52be2178f7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7ed24c-e80e-4924-8494-ff68b75c8c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b55f1e4-ec30-40b8-a627-0e43a2958ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07b2b3b-18b1-4953-b128-6f1d75949f75",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e480b0a-0698-47d3-806d-127ac43bd022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb3021c-a6d9-4e69-b8cb-5ccc4020d5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e61f3b-f285-4e8a-a05b-fc84503cdaf3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ed47cf-a969-4f29-85d4-b0cd62151ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298e33fd-31f1-4e13-87ed-4fb5738ea4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3348ecd0-e434-4454-b4cc-9703fc612f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fcf377-c47c-4c7a-947a-7123f32eee19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a724a1e-bf06-445a-a45e-1347e65b3f71",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3107cf-073c-4751-b433-1afe641029a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a76e4e0-42cd-4a51-863e-b80685977ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d22d3cc-690e-475b-98ba-c40c4e406ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fae52e-3199-4a1f-948d-786a4703633a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76588895-8304-4638-8455-40461cefd90d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2c213c-1a85-4a4f-8379-915718206ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71b564b-53d0-4f62-a211-a8aaf5ef5112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aa3233-94ad-44cb-a937-5a3f3e097cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35c7e57-86db-4c4b-8530-544c72cad28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6945ca1-0d17-4ab4-8fa9-4a0b4257fa6d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595d9345-165b-4626-b3dd-b5d31fcb38a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25a5d1d1-369d-4239-a4a6-8fe7dbdc1907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011f00ae-7750-4db0-9356-20a67668b3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27efe63-bfb2-4a95-a5da-75a79cb67071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f1d7f2-15c8-4657-b1ec-c998f6eb92f3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2afd84-3806-4c3e-a42c-dd0cb3bfb794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17111a8f-004c-46c9-a394-ef5a6cc30930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c201cd4c-6dd6-4202-9dae-f2151da9c76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ea0f21-3aca-4968-b925-ca638a35d8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b869da22-e132-4ec0-9ea7-caf5277c5786",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a928946-daa5-4167-8301-f6023f282342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368c2a77-28b2-49c3-9ef5-d858f8f60135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a18dbf2-92a4-4e14-8598-acaf2b2269e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2440cbec-cfec-48aa-bb28-820fd26c724f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b092832a-4d68-471f-9d1f-21b3ce3a2101",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf498a8-3ee0-4952-90d2-47f88a8f3a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71eb758c-9bbc-4960-92d9-0c7b8c14bd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f27ca2c-ba0b-492e-a94d-745084858893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fbe47b-7139-4a2a-8aa0-604a89f858d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9058d40-0938-4d6f-8906-9cc0c56c2afd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad64cee-9da9-4b92-b1c8-1c05b2f502fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "613f2af1-f9ef-484f-9d5b-a1e1158ba567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e65e6a8-eb9b-4c4b-86ce-040a76b513a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ff6129-5e64-44e3-9132-3bcbc80c31f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abdc59d-1358-4c9b-aff0-ac01042a08e8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15340caf-143e-4311-b844-788d4610cd08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ccd8625-069f-498e-b411-6e0f74a1b130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3d6ff0-5784-49fa-a9cb-469089540495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06cc806-35ca-4424-a976-c3c1fc8c900c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84762410-4e50-4a4e-a20c-5203a413fe04",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cab05f8-d406-43de-bea3-cf0cbbcce752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b67e37b-054e-4c79-bb97-a5fad7bdfd7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da43eb5-d56d-4581-8175-c5bc9e767c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7a1c11-aea7-4cc3-a537-243f3a087f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e5c6bb-18b5-436e-86fb-326f42249217",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d333d0-30fa-47ec-b5eb-b43819246614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c63a6b-66f7-4b18-9742-9e6567cf19da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385937c8-43d9-4abb-8bdc-62765885ad03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b34035-b1cb-4650-9fdf-aa150811644a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b82ef8-11c9-46b6-8860-4613f087f0a9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e2c1e2-067b-45e3-abac-6d8e4a554bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1225c008-9bf8-4bb1-bf1f-59bcc35962ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0ef84e-31e8-45c7-a1d8-2f32fb0607cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01cb937-e6e3-447e-9662-04891b358433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2340c64e-0ab1-4c54-aab0-50c97da212c6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85529ec6-bfc0-45c4-be92-fa15939d1da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b07df3-5ec3-4d79-a093-60bf8888772e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e44cad1-08c5-4447-9060-397c2572ee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b93f272-77a4-4286-b114-8e5200e5055f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3d0f8d-dd03-4adc-a180-7932c389cf2e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f0114c-9310-4188-8772-97f80367b0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2bde50-2c3b-45a6-894d-116fc20dfb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f42312-2fc9-4f94-8379-5596a14fbf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d0761b-6e47-450f-915a-15a1c80f47f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339cbec9-457b-4708-9096-2d4ccf2c88f9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32392796-362c-48f9-9471-1bd758a7a5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa9aa2f-59b6-4b05-bec5-700c1833123d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05bbcc6-9fd3-466c-9157-fda21e332a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db346902-410f-40b3-bb05-d980f3477f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68de4296-05b7-4d71-a2bc-75068bc0e003",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfeda076-1f44-44d9-b7cd-a3f3180cc1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be49292f-0650-4a5d-974a-607a1bc51603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0404b8-b43d-4450-b300-0d597233816d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da18673-7282-4a38-b61b-2b533feca388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085498c2-872b-480e-a9bc-fbc5808c4519",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd6bc52-7393-4d03-ab1e-ee2f06d80a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1659955-9e59-4531-abdb-edb2d01a46e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca40db7-2aaa-462c-8072-79b8e44fce6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723f382e-6620-4a96-935d-4aae85fec9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad28108b-c2ef-4943-8444-613446339f83",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5043c7c4-de43-4f2c-95b1-4ce7af7345f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e89bf76-650b-44ca-a081-bb5c32810303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70121127-55b4-4ae1-8f32-90b633b697e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ff324e-43a7-45ce-a2cb-028a81b91d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c757b4-05b3-4a47-a00b-4969460d181a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28221dfd-c18a-4b3f-83fb-eb5631147291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d91706b3-4e23-467c-8082-ae5c3e78eb23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c81baf-3301-4ca9-bda4-ad58b6f58556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676aeebf-424b-4dde-947e-310c070b7c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679bef11-581a-46e3-aecb-6c1cc5e4a454",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a01825-c096-4d46-825d-20f7f1721097",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393eebe3-f6c5-4577-bf35-6dd6c8da5582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd0f7f7-3da7-47de-bf9f-9d26570253a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969d7f68-f4f3-4c28-8471-d1473747b9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8862dd-b3ad-497b-968c-2b15cf791b2c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782596d0-aa37-47ef-8e26-747070b88501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b27306-4644-463c-b23d-f6fcd2dc91e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e002aa-a7a3-4229-9e1b-23de6c71a508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7c5dff-45ec-4839-9342-5d7e26473e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79a6142-1049-489f-8b37-07e80a40a44d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de02783f-0f04-4d3c-ae9d-df7c2335514e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d793eb-fb66-4979-9266-5168e661f3dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13bd5b2-9f37-4909-8eba-36b341e27fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2ae315-0f0a-4827-a8d2-6a03bf6ddb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ffeb5d-092f-42d1-86c6-860ed7b45489",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2772d785-880c-4ef8-a179-936a69e965b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02f6822-1120-4d40-bf83-9259667e57f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6937bc-834b-4e78-bc32-efa85a86a3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b6aa04-78b1-4e0f-b2a2-b7b6311b5688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68415180-b284-41ba-98af-254196e3e75e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419657a8-2a44-4fc7-95a0-74ccdb696cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c994118-4e87-4be8-b99b-3e31284d2f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3aec00-88af-460b-ba4b-23338eef1d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b46751-c0a8-4bd8-ab6e-c06320616203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c148c5bc-c801-434e-814e-eb2ada45fb69",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4033d84-edd8-4b22-81c4-ed8ed2253f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bd93fad-f661-4f05-b430-6c16e9f03a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207c663e-17ae-435b-a1d7-0b936495b27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2cb16e-dd45-4f51-822c-4dede3a2b5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3413ec-1cf5-428d-9b8d-2d326e4f4f31",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e00b99a-3169-4a23-9d24-d04f14ad982c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2022b779-e44f-469b-99b0-bbc260f6f3e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec345f54-90b1-4f21-ad76-aca98656cf91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd953f4-4fc8-4fb0-a54e-664b9f04fd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2788f287-faf2-4efd-ae2f-48915fb9fa99",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8e3adf-3328-404b-aa2d-07b23eaa234a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b25912-117f-41ff-886d-5b719df609dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a57d1bf-9826-4f7c-8e07-b54742b80be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569099e9-fe29-4647-9395-d2947f952286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da767063-3055-4d88-acd8-d66ba9500f1b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d4c0b0-2cd6-44ed-b7b6-dec8830bb292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564c155b-9e1b-45fa-b6ce-cae207453263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ef4ce8-6a1c-4e6c-9783-c07732b50601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e99d04c-253f-4185-a752-37b613a2b242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d172884-81cf-4739-8a96-da6d82e73d1e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e82f896-4e25-4138-b049-4b6d310259c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb7d150-8da1-4726-9c1d-b28c55ba2528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2895d81-865f-4668-af64-6f5bd9c77b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b63950-9739-40cd-b096-be0701cac701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e8a944-b7ff-4ba9-88fb-7e31c8d5a2fe",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fb6827-0cd7-4889-aebe-f3a8f0d694df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5fbe3b-6727-4ceb-82d6-ef8eff3eaa79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4936634d-c2bb-474b-9c6c-09d8f237f6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a8149d-318f-49ea-b1b3-d924a714b6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87589c0-9dae-4d35-b100-b770ac342171",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cee2bc8-d6d3-42c0-9589-2a3dafe1fe43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4538c438-f376-4473-a611-e7bb816b37a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310c19e5-48f6-46b1-ac19-3f020049f11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01829162-ae8c-4998-9c6b-5093c6d1b735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fead4c2a-01da-466d-ab39-3d97a132e9d4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62d2b6e-10c2-483f-8d2d-ff54382142fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e90ddfd-65b4-45b3-9eb1-e9c2d1ea7765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b759e1-1f0f-4e1b-85e5-580fdcb32b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0ec96f-4c9b-4bf9-b3b3-e8560ca1103d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4464c4-8f0b-4697-9bbe-c7d3474d3ec9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "576fb12f-025c-4c3f-a30d-7e145629b82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e4b028-d64c-4dcb-9f7d-21607794cbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbf8ec1-4ded-4775-9c77-0097fbb76db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af92ece0-d4f6-4c56-98b0-09b67f268cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fe0efb-edac-48d9-bc69-0b5438306b4e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f42bc3-1ffc-4f65-b653-717865636bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77010ad7-bba6-4c4d-9a9e-33ebb9c005ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cc17ba-cc83-4acb-bdc3-986cb822b205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aca9544-0d62-46f0-9fcd-71fd807574aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36639728-6734-4119-ba7b-5cdce65a4c60",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7e12f2-0351-4442-b175-088ec82474dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c89b508-8fcf-40d3-a850-efcb49b185b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc2ac9a-f7c0-4a01-be4f-72975cd4dedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b1cd01-56e5-4b6a-b168-7734bea07bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9a8433-2f84-4adb-8e9b-60711edf2167",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240a5ff6-d222-4c96-aa51-6f63eff50324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53469da8-e332-4181-9aa1-a2cc1a8cd0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd643997-1630-4eae-91f0-79df5f35c91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef18ed3-028a-4f40-aa19-1d7b59724ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b04dab-71a1-47be-b5a5-53065efb07b0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed62e89-79b6-40ae-8e15-45ced88fd3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65ee08c-c270-4b1e-af99-3ca55b30c420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b7f14c-51a2-44c7-ad99-b27b4372f7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0808eff0-e0bb-47c0-a9b9-6b69bc18a833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a66c40-e118-44ec-8e21-048864c0065e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d37818f-0dfa-4d43-be0e-6cc124c1d972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f27cdb-6895-4377-bb3f-12b8270133ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb44c227-43cf-4197-a435-9ca08e2beb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436c52d7-dacc-4acc-b3d7-d9f7e9bfe78d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517678d0-37af-4bdf-8b23-408836dd480a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dbad5f-4a2f-4cc8-a65f-9f22635dedc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b91457-9a76-4a5b-9eed-0421c2515c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cb54a7-4cde-4bcd-b28b-6228cd1e517b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d214ce21-e523-4abd-8147-c760cd6a40ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8b25fb-f3d0-4fd2-acd3-8479f2e41195",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661e233f-e88a-47e3-8c62-d5ad63483096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41584bf9-fbb1-44f1-844d-21f60f0dea68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a20bae6-e3e4-42ed-8319-2733be490725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fa7be0-f461-42b5-8540-35161ad3d41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee547b6-1e67-4d5d-afc6-0456cba539f4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f813d348-8d93-4fe8-807b-0afe071c49cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6735fed-be82-43e6-9fa1-c0f15beafae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab99049-d295-4179-9c9b-2780bea17e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3418c10b-89a3-434a-af70-6b4db42e2b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da69e2ec-8d78-43d6-8f79-ee4b21b01a46",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36050c10-9e79-43a8-890f-ee4bceaa0141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9d5436-ec1d-4d60-bcf3-fadf0fb64c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a11aca7-25a1-45dd-a268-05f57d77ffa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad772557-d9c9-49c5-945c-d4c383ebc4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f7884d-3076-4f42-bae6-27dc62d69f81",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f343ef-e272-4617-8f9e-aa721bbfdee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bc2838-4f68-4896-aeaa-205979a0f792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e185e68a-7465-465e-9387-9b4cc8956b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c0dcfa-9f67-42c5-a624-badfc39d28ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c1f38a-1ad5-476b-8e2e-511a732146c9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67c7022-95e2-4c95-97bc-07e92f126347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1791467-d85c-4cb1-bc0d-5cc8b42a6e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8381e36b-915d-419a-aeec-ffae944649d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e718eb16-0439-40d8-b932-c3b9afe2adce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cbd73c-c7c2-4c01-8a49-b4a8644c5c2a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cd8273-bbf2-4be4-99c0-58e157eacf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc1def4-72f5-45ae-95e0-b5b4bf917c7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35b9ae7-c4d6-412b-a47e-6e57ff1dd3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a766867-0b4f-42ae-b0f7-328426073c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa11ea61-62ab-4aa5-add7-870b95db149e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cafccc-a9fa-43b6-83fe-80765e0f0683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9a46ad-dfc0-4853-b768-82a223a29a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee6a531-5d2b-4912-8675-410c58fcef11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd84b2a0-e1fb-42fe-9d5a-34d451a9524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5bdeea-3f37-498c-8eff-7130e014aa34",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4360636c-14af-46e3-9063-824125c30cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132cb06b-52c1-4491-a44e-8e3852bc0b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadbc25e-c19c-47a6-b994-19519d1c91aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0ffc19-6a00-4063-a625-cd381482b930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31483c97-2c27-4ef1-9218-88e06618e2a3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33c769c-b94b-4ada-8e1d-de824121ef01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5714ef1-a0ae-4d67-b9b3-785b3ab34dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f424e8bc-6a55-44a9-91f4-6bdaf5215dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c399aa18-03c3-4e17-af3b-e0d58f8540b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62c50a7-3b26-4c3c-a054-9f352983521c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab97761-77eb-43b1-99c5-5baed857939f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0d5424-68e9-413f-b45c-1bc3c31fd071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004f17df-8207-4bc4-86d6-48f284ec6fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c7c4aa-368f-4871-808b-a025e1b610dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c02adf6-016a-403f-a1c3-2a4c574b28f2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9f4c12-acef-4500-9ec7-6c0aa0308802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff88162-216e-42f3-97c3-d073bad89a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f68d340-1b70-4d0c-b56c-f5f6fe3998b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ddb7dd-0d61-4d61-a32c-37605b9f155b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49ba74e-51c4-40c3-8904-9fbad6886b18",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ac8196-c062-4fda-9016-36544526f2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667ab88e-0dff-40a8-8eb6-810a8c9692e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993cfcc9-df54-4d86-82e2-70d81696241b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b063d5-1c9f-47ae-aaab-219bfb17aa2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31db4ce4-7402-4c59-9e10-c23e581d8f80",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a7e615-dec0-4f4f-bb27-91dc3ba74f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40ee515-b4ed-463c-af80-98ead1c4fa7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5b5122-bf6f-4b67-9211-03c5b13e0cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a72bc3-5960-4917-a791-2b594aaf3f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ce5f8c-d6d8-4ab3-980a-ea8d1afcc0da",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8287c080-06d1-49f8-a9a6-e111e911b295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb98bed-8801-4ae4-9197-566f59c7b8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4128b485-4ad8-42c1-82cd-003190a8f54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9837bcfb-0ccb-478b-8b8e-76ad27a15a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb56fa8a-db7a-4f38-9e23-ea68f2e6baa4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91df44ea-91f1-4864-abaf-9863745ded8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36600a2b-0221-40b1-b135-b7f7271bfc53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c5d4da-449f-4434-9012-74c5ae30e063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321a5f30-48e6-4fb1-a98e-13635caddfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e7508-f3a7-4dd0-a9de-cf0c905cb8c1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdac15e7-6b33-4027-94d9-07cb58ffe636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa462863-d382-4390-a6da-a6bb55a1cc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917fdf45-20ea-4f7e-8c26-5a408ac5f25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f3752f-b403-47d7-a38b-688e95b05815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a451d0f5-ccb6-4aaa-a967-7bf547102b37",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0abb1d2-48a5-43ec-b84b-a00d87215649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c243bfd9-2794-4c8b-b25e-b8b7c66bdb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523a5b17-17ca-440f-a4c9-8f0c8bc3d1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08535c26-62cc-405b-897e-1fb3e26d4da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eba1d49-5b62-4e4a-ad34-8c7848f85c24",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbac50ad-74be-4e31-b9fb-b9f79fac768f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026eb447-645d-408b-acd7-4adcf0a8f832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187dd78d-fb5f-4bfe-8a34-ff09e8e3f558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb72bde-12b4-4aa7-ac97-86cb0be164d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589b7bac-7fcd-43bc-9a6f-a6c254bfa4c0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1043ff21-c18a-4eb9-becf-0412d63320f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60e4c958-bd8f-47ff-95b1-34d37b30f771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5da33bf-5179-44df-8c48-0b53df5cee4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac455ee-9423-4ea0-ad79-3ecbeb300179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59338c03-cd97-4f78-81bc-22189b959700",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2c5f69-5064-4ee2-bbb1-b70b6743f853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "debcaf53-3870-40e0-b544-dbf6939e052a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6c95f0-cb0d-4852-8c03-a051c3a7caa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e5fcf2-46c2-4869-b043-bb0e55fbc2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc910bc-f99c-41c7-a6f1-57468a028124",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a778885-1aa6-4242-9885-4f5cb50f0c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8c9b76-daad-41a8-8d4f-fd11d81afe1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd48405-7e7f-4810-a5d9-c814433d47c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5fbf94-37d0-4bc2-998a-48489cfa95f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4ffd6b-a56b-42b7-bb2d-b37c20c3c5a1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b809d87a-8b8c-4a69-a2e0-8b43f02767f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8600625b-a070-4b31-be5e-21c88d26c51e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1580552-4531-4962-a39a-52a994c4f318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90081db0-1c22-4993-bbad-0e68f8b0e4cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9240cd83-3aa9-4bac-8f79-e11a08cb5242",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa091f0-fe26-4b7f-8478-8a5ce185c536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c57a71-3f78-4c73-83f8-4914c286d29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32623679-f976-4a92-92b7-e15352648d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5714676b-9189-43f8-824f-6a8b9f5f5b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cb12cb-8a03-41d9-98a9-afe74bcebd2d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f398d30b-3ebb-46e7-b59d-291453e09437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44152330-e282-4931-9fba-30c49744504c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2205aa54-08ba-4890-b3fb-60e11c4a0797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccabc738-b034-4543-9037-ae982918f181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcddd86-bc86-4c89-9010-5c2778ec12dd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa563669-6ba0-4c76-b1b8-a2fa6bbbb3cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f05a137b-84b4-4f86-9fcb-7c87a2b85121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca729cc3-3d53-48e6-9f71-6779fcd4e9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e033f1-2237-4a92-a8d9-964cc951156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2580f1-9b3a-43d8-89e7-b439436a76c9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7493270-0981-42ff-8d15-4fa07f41278a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e319b6-c4fa-4a00-918f-7fe12fd4c12b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e213d16-c13b-4169-b83e-c6e086a8e20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7daf95-8e60-48b1-a174-3bcd7a4e7b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8126e9-e07f-44b0-8fda-e9ffbdbc1691",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d89b1cd-2513-4cb3-bd28-ffabd4e39873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38873339-904f-46b9-8e1e-ae3d0ca4b4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1307dc0-9291-4e10-b8a4-8b2d146eda2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754afb1e-7920-466b-8f43-67b2782dc979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edced8c-8f68-420a-9aa2-79388bdc11fb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5274bc-146e-4c05-96a3-6cd599633149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7638a7de-a8dd-4d99-acf0-99aaa33ef2d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e727e48-b26c-4ba8-ab9a-97ec6e7f5062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b1fd1b2-e1c7-473e-b1af-e556cd4eb85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb08049-776b-4164-9ea8-c8d257f7d66c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b7f18f-ee6e-4029-a5a5-ec2feb33d402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4907db41-fe89-49db-bdcc-14d7a35181ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96828a22-2aee-4e1a-8a07-25d5a7f44c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65e3211-8c8f-4f58-8bb5-e89e8dd6c708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a518fa13-5a7d-49d6-8438-b8868dcecc42",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec39bc06-eac8-4fab-a089-e57ec91897f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d35f9d1d-93a4-43c9-a076-550637f2644d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dd787c-a62e-4320-b575-c57f3eb14502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902af21a-2cfc-4a02-94da-704c86a66219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d8f81-6c3a-4eaa-b24c-3a8ed03a6353",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5951145d-d801-4ea1-9ed3-60b863adffd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b3a280-5280-44bf-bcf5-3a0868ebbdf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2c179c-4278-4479-8c19-838ba5d04689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33b1936-66f8-4c21-9f26-15c76da92e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab94a11-025c-4ee1-844c-6951082c5c8b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eded237-8a08-4014-8e10-596b2dfb9044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87a681a-148e-450a-adab-77a0daa4b2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c559f88f-eec6-4ab8-a86b-d73719f2dbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b717a7-88bc-4d82-b52b-db3e134afe59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c4527e-4f2b-429b-8ff0-38fd854022a8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6794e9c-0525-4520-83dd-7ee6ee797744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07cb1997-c5bc-465f-9a81-ef3f6215a823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee7f7fc-49b9-4239-99b7-17c15d8a2b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a002837d-63a3-458b-83b1-053c0326fc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a603e18-76c7-42cf-9184-834cf9110258",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bccbd3-87d0-4b7e-b1b9-680255dca505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f6f28a-fbdb-40c5-9420-14465b8e8bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32960e3-cb64-4060-9ad3-4a0814a22fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03dcba1-a568-470d-97a4-4b7081b01cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0db0ca3-6caf-4223-b233-af8e28354e15",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89632e71-0c44-47dc-8429-e6be6061600d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a876b8f5-c542-429a-9256-6f494070ba12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe44170c-5eed-42e6-ab78-9172b7ed58c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabc27b5-18af-4153-8b69-3eaa53ef398d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15702582-ba23-44cd-a721-383d3fc73450",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab5c33c-9369-440e-89b5-69d1ad8273f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a76d16-42d1-4a92-80b0-18fbbff86a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3d7ce9-436e-40bf-b142-7df3ee10e923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5782e490-beca-489f-ab79-59e38d1b4e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729a2ac5-0b53-4b0b-b133-79a983d4e09a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a21e582-d1ed-4fcf-8cba-20883dce7341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff82177f-da34-4864-9332-4edf57ef61b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68db4a70-ad74-4ff6-bfa4-ce60e95cb086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875f4e06-4c54-4275-a9af-d48a514eb32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d660ec-98be-4fb7-9ee6-71cbf7463e90",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4389e12-e646-4443-ab4f-b12207f02d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5bffbe-74f8-40e3-8540-b60aafdfe0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccad11d-43d2-4e7f-8686-d5a015f26ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff53bcd-ecb5-4567-875d-1f2c738b16df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f64ca1-fa4d-4502-adc5-3255e3d068fb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e822bc9-d328-4961-b3b9-08da0a2870f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a971255f-2e2f-4738-9b20-67b6b9eb4ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6254d6f7-eb22-4e15-a1a4-510b5b44ec40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9405c1-2bdc-48d7-ae96-2ac948bf09bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ab30ae-c6d1-4672-a417-56651416825f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cdff08-fe5f-46eb-bf04-2da10ea8aff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0908fe7b-7d06-48f1-a482-c3a6b1a14051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06161eb-baa2-4915-87f6-cee302c969dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a299a600-af21-4550-847e-124dcb5aaa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284fb6b4-c19b-443a-86bc-a7b0fb053ad3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7779857c-9999-4be3-8d6c-e9d2659a78b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7284e8-576c-4186-8d24-6798052acb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8603be39-9faa-4271-8449-c77a88a8dde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5357cba-2b16-4ed2-94ad-f24e763d03b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbc11ca-e48f-4729-a298-441bf104b07a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0143e7cd-b5ef-4442-a946-e1171fcd2f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457953e5-70a0-4eca-b6a8-cd8cec8025a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709b094c-fffd-489e-803c-7b6ae69fe7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7721900-55a5-40c5-afdd-336f508ad44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17666bf5-a11e-4853-96e9-9440624cb963",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d866a396-65f1-4033-83d2-b1a890034b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3a00cb6-7824-44bd-9f38-c172e6d81dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc77a0b-378f-4880-a59f-31c6185e5b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56de1f9f-fd2c-4c97-8eb4-731ebeb7cd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa44c7c-e224-4998-922b-c6b144202e3b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a7f52a-948b-45ba-b74e-df374de4de85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c9eed61-0af4-45a2-8146-d41383d62c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af60f069-5f68-47dd-b174-078b5f6500df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3394420f-9f7e-4bbf-82be-67f6a271aca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa57650-0ab2-4286-8c0d-17f0ba0be14f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0622b288-fd0f-4e30-ad91-dff79c14fd83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b21d6a0-e336-45c9-9aa7-1437ee955515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac3dc66-f7fc-4781-80f7-ef3c341d2711",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff3fd7c-1287-4629-ac6c-5c1eb6c900f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2392b805-d691-4844-bde2-fc4695fa510a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29059422-0b54-4253-abb7-2e83760ec10c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3134544-90f7-41c8-9a77-d066698c4e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe2505a-f403-4696-8a2d-3f145cc17132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565e011e-d5e4-4289-ad7c-867ee5fb8b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae0cd58-ed19-4db3-8a2b-28b0a04edb2f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9512a179-c10f-4dc1-959d-8a9982e81345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e6c7e0-3c73-4570-8ebf-67eeaf94efa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b861ef-6160-4ce6-801a-6ed961646b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05631c00-1b4a-4f22-b1ff-0f9224fc0322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a78649-d355-41b7-b34e-26611e9035aa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f5d9b6-ffd9-4792-8f23-329b42086089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6781a6a8-c87b-4864-ac31-3bf60350e834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180e6072-c7aa-4a0e-84e2-3422cb2a0649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3e2411-6438-4e06-9498-77e5b94ba0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a1d75c-5893-444d-b677-bfdca15591f6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048949f3-1102-451d-8c3c-7d416b02e15f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fa36ed2-dcd6-4fdf-a854-de38d6f96060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565c4066-961c-4135-8f75-aaa0b0924060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff493e9a-b560-41d7-b7a2-96a4c88795fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75975214-4a12-40ce-a308-ebcb6e1a6591",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd71708-5ff1-4470-b750-fead718d4d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4746dd2-c44b-4f8f-b0ee-c3111e2f2335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f764541-1a1c-4987-93a2-d5729ed1ab96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49708e63-6c93-4445-abfc-eac771a30321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0088051-5bbd-415f-8bc6-07f09694d010",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa9b1b5-dc4a-4f36-85e9-fe4a42394eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b445af5-5820-436e-87ee-ebbb94e14175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5db6815-81ef-49c8-80f3-630e093f41de",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3527e4-3d0e-41b9-a203-d4c496d992dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5e2c54-0d95-4e6b-8e42-9791afa1cfb6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7b93e8-e2bb-49a8-815e-d3b07ae5cd9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e861de-b370-4d68-b197-f1589dedff58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280cb1ab-5e49-4f1e-a598-ea300ddccc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0870e0-d8af-4a07-9f4f-b7c894bccf85"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05df3794-4534-4ced-bd8d-98555887a354",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "298a14e3-82b6-4183-b914-09cf3a7926d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fa63a42-6df7-4b3e-b600-4f12355546e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d564b99b-407a-4e26-bf69-9c24dd07a66c"
                    }
                  }
                ]
              },
              {
                "id": "0d5fde3a-de57-4f0e-a237-85fd70eea674",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37f8378b-3785-426f-bc92-42889f2a88d0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a907101c-a432-48e7-988b-becbefbeab38",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cf11e603-9830-44e7-b124-da17aed57782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99afe849-4464-40d4-858d-4f5058594db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52f413a0-1a08-4bdd-aa46-23c072eb1403"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db23adce-8fe6-431d-bcf6-fc8a4fe22b7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68c0d193-cdca-438c-9877-6fdb96f1f537"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fb67c5a-97b8-46d9-ae81-73f7ac19428d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5627437d-90ad-4147-ba86-4ba7bfdef106"
                    }
                  }
                ]
              },
              {
                "id": "fde94bce-d049-43d6-96f1-aeef78a565c2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "09e73319-b0f6-4209-9211-f5d82784fca5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ea04f0-1401-4c59-aea7-72525b3cf179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "94b39827-2e14-4f43-9e70-ce0582d34464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ab99a8-04a5-4c3c-b94d-aadf8474caaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff3e1fa-2771-4f24-85fe-2ef908a18bcf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4eb518a9-2d78-4151-83bb-f34901703930",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dfcdb85-7e39-4b43-b314-e4aeb18649e9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a16c9be-590a-4911-bd4f-94c32b24dd81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2ca11659-f610-47f2-924a-128283a1d9b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9374f2af-f33a-4d1e-805f-96c476faa82f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "223689cf-f64c-4b90-b413-59ef9f99807e"
                    }
                  }
                ]
              },
              {
                "id": "8c1613b0-0664-4957-a034-7dea0e20faed",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4606cee-140d-4439-af4d-05085b763918",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1c89a90-3176-4db6-af27-ac08d70df170"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0668ea9a-90e5-4057-a56f-be3538bacb3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83514eb7-56bc-4b9c-8d78-b82963f81140"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdae8b35-3b1e-4360-a3ca-1b1bb1fdfac2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "04a4bd32-37c8-4a08-8227-f848f71a31f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "880cf30e-1f2e-4ced-a753-fe923a2d7e9e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac6f5c70-35c9-40d5-a2be-891a161ced50"
            }
          }
        ]
      },
      {
        "id": "01c85cf4-f1e1-4438-ab39-c3f50e755a46",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ab2a41a8-4f30-4b0a-90bc-e1b0bbb1c831",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd0d6bc2-528b-4d9f-afc9-509c62a9faa8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb689138-468c-466f-8b60-a48273ac8a8b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d501a0-9daf-41a1-b0f5-0ce054474ab7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f05e6d9d-4f5e-43a7-9d68-72e4f5d9c919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010e16bd-6c0e-41f4-aa47-a4fd17fb71b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dc9c6db-8680-448a-ac9e-f0ea1bcf7583"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46317ddf-e087-40a5-828d-f018de884aea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2de81f0e-0e4f-45be-90af-d88d19331f1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4603aaf9-05c0-4c98-8741-8c84091a2a00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f6b9d86-57a5-4f84-9dc3-f9207a9262a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adb81938-0bd9-4d03-87b4-732c29189e3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c26df1de-94d0-4f8e-b42d-7b53f91092dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82986924-76a4-4f42-bc19-2107384932d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "027d2cbe-c9dd-4306-a6e8-44f031f6f792"
            }
          }
        ]
      },
      {
        "id": "ecec1a39-8541-4d95-9337-492b8eff439f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0e87d378-5fa4-41a4-84cc-10af6b8376cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6e50d7f-8e64-4aa5-8b84-e6f8d94f111e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c105c23c-c3c3-4110-ab75-8e71d80b3d46",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8571af5a-7343-4597-bef2-b13da049a352",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9273f32-bc8b-48b5-a5a1-a4f89526a2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7079e773-9c01-49fc-ab71-3ab8c2bf0a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99ed7fe2-0096-4359-a962-5f2e278343a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daa58892-bf0a-425d-b5f6-0baec2c4c3ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bf8d04c-83eb-4111-9c04-ba126ba7103a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a02bceb-60c1-4bc1-94c9-658aec36beb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03684543-3495-4259-b09e-44f2fb608d2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a44f42c-60ca-4507-8868-099950623daf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2bce1527-a56b-4d3e-82e1-60e83589a519"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda0d016-5114-48dc-a9c1-72fd5e67475a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f51299de-1be8-4c5e-b3a1-1464d06de2e8"
            }
          }
        ]
      },
      {
        "id": "8dec731a-c280-4a84-a69d-7fac375c4f86",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9ed6c35c-7e73-4772-bb24-cdb0e11a503e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86d1fa74-413b-4c07-839e-77e0c0a6c821",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c11ac1c-f7f6-464a-9384-561b18d368e1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd09332-b444-4746-abea-830bfefd8cfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a60c8ab-8bbf-499a-b494-85c4fa66ac41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1f6e93-0bd4-4406-ae90-3ac5f5a38543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23ea83ee-6817-409b-815e-40f2ae9e8d7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa99cdfa-86e2-4890-bff6-eb0934adc1aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3c9c015-d737-45eb-ab31-e44e202542b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e35bfc30-8c8f-4766-88e7-43947d54a9c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e930751-6f64-499b-816e-bed8e15b23a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "871b17b9-63eb-4ace-a3df-36fe21c4e60f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53c85cdd-fab6-4274-878f-63d2a5401007"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6d00b46-9daf-4347-bb2b-37f3dd2da4ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "961c3f39-8639-4090-b167-99128ab4da6a"
            }
          }
        ]
      },
      {
        "id": "aef1f21a-5532-4586-976d-c9a24468725c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e931bbc-e30a-41de-9745-0d8fcf1bfcbc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1c7e3c7-441b-4aa8-82a3-07161273e5d1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9fe8ea5f-d70b-448d-bd5b-6ac2004fc596",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9dcd39b-b7d1-418c-b91d-a0110e951db8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f02b4a70-0fb8-46fd-910d-1aa8f40ad644",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.320422535211268,
      "responseMin": 7,
      "responseMax": 223,
      "responseSd": 15.631072515681012,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691713871905,
      "completed": 1691713886866
    },
    "executions": [
      {
        "id": "dc997a99-e8a4-477a-b7fc-8e3edeb6a652",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "85a5c2b2-f83c-4add-ab77-5374fc6f56ff",
          "httpRequestId": "58e0f8dd-6772-46cc-b127-a58f3eb1544b"
        },
        "item": {
          "id": "dc997a99-e8a4-477a-b7fc-8e3edeb6a652",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ae69e2c9-d0ac-41b3-acee-5f7439cbaff0",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "b8fd90e9-e0f1-44d5-97cd-ce2567a24304",
        "cursor": {
          "ref": "e9c4628a-9635-45c5-90e6-9268bc62ba6c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7fc9e2bc-2536-4ccd-9268-59f0aec7d533"
        },
        "item": {
          "id": "b8fd90e9-e0f1-44d5-97cd-ce2567a24304",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f39472bc-ca66-4c68-8a47-688b29456d0f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "7ba164ac-a910-4269-a739-76a1e5436fcf",
        "cursor": {
          "ref": "05656f2a-0144-4234-8d97-c1952ad604ba",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "97cd77bb-6206-476a-a8f3-975e261717cb"
        },
        "item": {
          "id": "7ba164ac-a910-4269-a739-76a1e5436fcf",
          "name": "did_json"
        },
        "response": {
          "id": "8e3f2419-6427-416a-80c6-d7f14464412a",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a31e1f-05a9-4802-bc07-3e7b7e0b461e",
        "cursor": {
          "ref": "1618085b-57cd-4b48-bc6a-f1ecff653af8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03c3191d-025f-49b7-9a48-8d9e408dca37"
        },
        "item": {
          "id": "85a31e1f-05a9-4802-bc07-3e7b7e0b461e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c77446c-d58d-41cd-8438-6a32f57fd0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a31e1f-05a9-4802-bc07-3e7b7e0b461e",
        "cursor": {
          "ref": "1618085b-57cd-4b48-bc6a-f1ecff653af8",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "03c3191d-025f-49b7-9a48-8d9e408dca37"
        },
        "item": {
          "id": "85a31e1f-05a9-4802-bc07-3e7b7e0b461e",
          "name": "did:invalid"
        },
        "response": {
          "id": "5c77446c-d58d-41cd-8438-6a32f57fd0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214d6f39-32db-40f8-9e84-6e8ccef7faa5",
        "cursor": {
          "ref": "32783582-f4fd-479a-8dcb-e7de93eb7e79",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cee00c7b-5e98-46f4-a970-84c1a93c6f6f"
        },
        "item": {
          "id": "214d6f39-32db-40f8-9e84-6e8ccef7faa5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bd5624e7-2945-44b3-8f5a-ad9f015faa10",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d135256b-31a7-43b3-96f3-6aac1a2d3df6",
        "cursor": {
          "ref": "5cbbeb77-a3d6-4e1e-b704-390fecbd29d5",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "241dbad2-72e2-42eb-803c-966187787d3f"
        },
        "item": {
          "id": "d135256b-31a7-43b3-96f3-6aac1a2d3df6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fc1ebd32-4ed0-4df6-aa88-9500d4225131",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82209aaa-2c4c-4c3e-a77e-a2aa8c579e41",
        "cursor": {
          "ref": "c39d9e33-7785-44dd-b255-6f6f601a1aad",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c1393b4c-7b25-45c8-b502-805539016bff"
        },
        "item": {
          "id": "82209aaa-2c4c-4c3e-a77e-a2aa8c579e41",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c5cd561a-6e32-4c63-a49c-9e3ca1584616",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1f3a76-ba73-4a6c-820c-187ea7f4afde",
        "cursor": {
          "ref": "5fddf3ef-c311-40b6-8d51-af813d99ae89",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7dcb8d0b-ea60-4217-8ef5-80f9028e7bab"
        },
        "item": {
          "id": "0a1f3a76-ba73-4a6c-820c-187ea7f4afde",
          "name": "identifiers"
        },
        "response": {
          "id": "7c98992c-1b81-4e8e-9fe9-f45bd8397c17",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390470bc-39d6-4175-bd77-9d84c951b680",
        "cursor": {
          "ref": "2cf1185f-a506-419b-adeb-9229597449b7",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "897ad8d2-a45e-4b59-bd4d-a36c6fc0bfbb"
        },
        "item": {
          "id": "390470bc-39d6-4175-bd77-9d84c951b680",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f81e639d-24f7-4213-9ec0-fdd717da09f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c38328a-0ec9-4c63-a477-50047a1b483d",
        "cursor": {
          "ref": "dfc86d6f-8021-4819-8efb-8918cb5a6c8d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ddffc053-c6e9-4368-b68d-82e75f9ed023"
        },
        "item": {
          "id": "9c38328a-0ec9-4c63-a477-50047a1b483d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6c3df8f0-98bb-4617-80c1-3e5ca8e23b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce230aeb-4df3-4e8f-93e9-6ced0b8cce98",
        "cursor": {
          "ref": "f9c5db72-982b-4692-a1d1-884687f1a377",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3dc528bb-75a6-41e2-963b-d43118cd7a39"
        },
        "item": {
          "id": "ce230aeb-4df3-4e8f-93e9-6ced0b8cce98",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c3573b4b-495f-4477-8084-fb9e7ab8130a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6fa03a-e86b-4754-b11e-5e9c6a5fb756",
        "cursor": {
          "ref": "078d258e-7778-4f17-b41c-fd6f66eb0a99",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fbe90457-8efd-4535-bb2c-37bd58aa90c7"
        },
        "item": {
          "id": "bb6fa03a-e86b-4754-b11e-5e9c6a5fb756",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "58fb863c-5edf-4ef6-ab76-b6abcc26259a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd697bc1-b0a9-42aa-9b3f-5a87d1f134e6",
        "cursor": {
          "ref": "051b70b5-2ee0-40d3-8cdb-a8d69a3d50ce",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2c62d784-e02e-486d-a284-72176b6a033b"
        },
        "item": {
          "id": "fd697bc1-b0a9-42aa-9b3f-5a87d1f134e6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "51dc2b0b-6d10-48f7-b0f9-4957f0272ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cedc4f-e33c-49ac-95af-5ce8faec1b15",
        "cursor": {
          "ref": "1ffc36f8-0cc2-464c-abda-4f3aba31971a",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d3e89661-59c6-43c5-8920-9306cf25e6d7"
        },
        "item": {
          "id": "94cedc4f-e33c-49ac-95af-5ce8faec1b15",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4586a191-a4cc-4f4c-a9bc-c8967ee3833f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f43341-98f3-40be-83f7-bcc2920cf916",
        "cursor": {
          "ref": "1d35e70c-ee39-4047-a570-f03c7757177c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4ece9392-30ac-4c69-afaa-76fcccc5ac0b"
        },
        "item": {
          "id": "04f43341-98f3-40be-83f7-bcc2920cf916",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0ce06861-9bf9-4fff-ad61-abfe72a1751c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2763c289-bfcf-40c0-bea5-8222c6e58906",
        "cursor": {
          "ref": "6e8325ff-4ef0-48d9-a858-6f94d96103df",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "11690dec-d3b1-4356-88b6-dfb7a56c6e3d"
        },
        "item": {
          "id": "2763c289-bfcf-40c0-bea5-8222c6e58906",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "24b36a43-774f-4d12-9048-66436d1a8bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bb141b-08f2-48a3-9990-ac28f413430d",
        "cursor": {
          "ref": "427db08f-c59e-4f7e-81af-872122680346",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "85832857-b53e-4ae9-9bec-a1e2c637f999"
        },
        "item": {
          "id": "59bb141b-08f2-48a3-9990-ac28f413430d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fef4b60b-ae78-402b-88b6-ea2f5aa36fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5fabea-43ab-407f-a39b-722cddb8f65d",
        "cursor": {
          "ref": "d08d6411-73e9-4649-a393-04e52ff16bbc",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6c3d5ef2-491b-4806-8221-ac5af7761765"
        },
        "item": {
          "id": "da5fabea-43ab-407f-a39b-722cddb8f65d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "89af7ab1-100d-4409-a4cf-c7480b640758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e9a311-c390-488e-83be-dabf2443171d",
        "cursor": {
          "ref": "d7c2f76c-5c55-4d1a-9635-98cb5d99b46b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8b73c14f-f841-4cd8-bd24-e63a72c8ce7e"
        },
        "item": {
          "id": "a9e9a311-c390-488e-83be-dabf2443171d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d8f76969-0e2d-4199-aba8-60acfb65f68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d472b2-9496-4c36-9b93-fea2a9bad296",
        "cursor": {
          "ref": "e7957166-bdb4-4bce-88de-fee037f0537a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "44446c99-7490-48c3-8a77-a88bb08d98d2"
        },
        "item": {
          "id": "25d472b2-9496-4c36-9b93-fea2a9bad296",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "021c05b5-2589-427b-bed8-3abf1b4a0867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab260331-2aa6-458c-9765-9edb8b6e41f0",
        "cursor": {
          "ref": "c09fba88-e175-4820-aba0-9f34ac087e10",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "10a57135-bb87-4211-9031-779661b347bf"
        },
        "item": {
          "id": "ab260331-2aa6-458c-9765-9edb8b6e41f0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a21c2980-5379-4149-ad83-d32b0066d4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c2df29-7ec9-4f1f-b741-7ab594c0129d",
        "cursor": {
          "ref": "ad92a827-c46e-4655-be37-0d76d5cde650",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8fce92b6-8c1b-4943-b618-10de7afd4efd"
        },
        "item": {
          "id": "d8c2df29-7ec9-4f1f-b741-7ab594c0129d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fa03f2fc-949f-45d3-9d6e-80abd9276d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512b5f3d-5d7b-4377-b7cb-51441bd8231e",
        "cursor": {
          "ref": "85e06475-a26c-4697-9970-b0e9561018bb",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "50cd2ca0-245c-4d6d-b099-030987b5de13"
        },
        "item": {
          "id": "512b5f3d-5d7b-4377-b7cb-51441bd8231e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d758813a-9ebc-4f7b-96b1-9f436a835498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958c2ea1-c9b2-4922-91f3-6f0d602b87a5",
        "cursor": {
          "ref": "f6c38f73-5372-4bd5-bba2-360bf5d65dad",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dd2ce3db-3cd8-4c85-9dc4-ca7292bc2fef"
        },
        "item": {
          "id": "958c2ea1-c9b2-4922-91f3-6f0d602b87a5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4a8eb3e2-a10f-4e3b-a2f4-d1edf8fcab18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c1d33c-ea7a-49ed-a1d0-f9887af88bd7",
        "cursor": {
          "ref": "e96ea5af-74ad-49ad-b1e1-34d8e19b0229",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cf209eed-9b05-44cc-be23-d905a2c02a22"
        },
        "item": {
          "id": "a3c1d33c-ea7a-49ed-a1d0-f9887af88bd7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "01093a36-1149-47fc-83a6-7cf833a74c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a460043-625e-4802-a474-1888d7103171",
        "cursor": {
          "ref": "4c568817-e135-4a5d-99ab-b96a694ecdaa",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "28e03254-ced4-4c8d-9479-df12cc3d966f"
        },
        "item": {
          "id": "3a460043-625e-4802-a474-1888d7103171",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "780f88e8-48b0-493b-a055-fdcf1ebe1195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6650f09e-2fd5-414a-8337-9a004b9d5276",
        "cursor": {
          "ref": "8a5015de-b4a2-4441-940d-8f0d4741f4db",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "54396bc2-b87f-49f3-ba9b-b0047abcd576"
        },
        "item": {
          "id": "6650f09e-2fd5-414a-8337-9a004b9d5276",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "96192ade-3d71-4ba2-9891-765fe9e7bdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d4468c-ea2a-42bd-8a6b-fba382e2ce6f",
        "cursor": {
          "ref": "5d4ecb38-8208-4a3e-998f-7d3d8f855c05",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "41c24e99-860b-4681-aceb-339620e619db"
        },
        "item": {
          "id": "65d4468c-ea2a-42bd-8a6b-fba382e2ce6f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f97a28d4-538a-432d-9388-0b0837a91e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809a0409-d8ed-4cd2-a9dc-c6fc7fa93997",
        "cursor": {
          "ref": "0463ccf1-5d39-4452-bf6d-eeac47a50f1a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9ec4b746-ae0f-4693-8b6f-26e300c47d9f"
        },
        "item": {
          "id": "809a0409-d8ed-4cd2-a9dc-c6fc7fa93997",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6ca44957-6d6a-4d04-85a1-52ce482f0495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27776556-e0a1-4d0e-90ba-766614a378b8",
        "cursor": {
          "ref": "870d49fc-ec88-44a5-8b2a-e0025f0983bf",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5b182397-7b5a-4e59-80c5-6e20c2e5b68e"
        },
        "item": {
          "id": "27776556-e0a1-4d0e-90ba-766614a378b8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "086de52e-aebf-4d58-8445-3112f493124c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc84964-9f61-4636-80ea-c7d7190f2958",
        "cursor": {
          "ref": "2cfacef5-4e2e-47da-a8c4-735a93121d4a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "88e5f9d4-4bb4-4db4-8b75-dfdd4c0ff60b"
        },
        "item": {
          "id": "9cc84964-9f61-4636-80ea-c7d7190f2958",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f6ae4719-af23-450b-9a53-1ff4ece4b1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a315dbc-fda2-408e-a8da-710515ef7ae6",
        "cursor": {
          "ref": "dc5e93de-8cf5-4c2e-b508-6c632377df8c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6abe1432-f83e-487a-ba27-092eb4b16e0d"
        },
        "item": {
          "id": "6a315dbc-fda2-408e-a8da-710515ef7ae6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c1f25b02-f042-4129-a71e-cedb4cea3e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665c48cf-d921-4fac-b334-f9516f3672f9",
        "cursor": {
          "ref": "40029356-b16d-43a2-8834-263fe761692f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b38b9eca-3066-481c-ae27-aae0b09e5c45"
        },
        "item": {
          "id": "665c48cf-d921-4fac-b334-f9516f3672f9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "beee231f-11d2-48cc-8fbc-77f316239688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0adafc-194a-4aa9-8b8c-956b510972d2",
        "cursor": {
          "ref": "065471d6-c8a4-4c2f-a31f-36d622df9982",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "acd2e263-2fec-438e-950f-393fc3184e06"
        },
        "item": {
          "id": "bf0adafc-194a-4aa9-8b8c-956b510972d2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0b216523-7428-41b2-88b6-2f48a8426008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0944f3f0-5123-4f75-a820-066994915026",
        "cursor": {
          "ref": "2e68cb27-c619-4508-b8a8-5a01c25710a2",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "20dec6af-bd78-4445-83d0-b141a1059a14"
        },
        "item": {
          "id": "0944f3f0-5123-4f75-a820-066994915026",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5e25b17b-c59d-4131-bf8b-1fe985bea91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e48f47b-cc62-4ec9-b396-ffc47b20dc59",
        "cursor": {
          "ref": "0b7d40ef-755b-4e41-a6b6-9a849508eb7b",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e290ad3d-636e-482b-acdf-cfae9c69f059"
        },
        "item": {
          "id": "1e48f47b-cc62-4ec9-b396-ffc47b20dc59",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "db56e381-96e7-4a90-9e49-92fe5f8b01ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa515303-aded-41c4-bae9-073ef59bd647",
        "cursor": {
          "ref": "98bdbe89-5f98-4bd8-aebe-dbd3280e3e27",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5c272029-3558-4167-a6c0-4818e0df6082"
        },
        "item": {
          "id": "aa515303-aded-41c4-bae9-073ef59bd647",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a19b4a9f-6813-4b12-81ae-601c02dcb4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43502ce-3a27-4e2e-965b-a717c661dc97",
        "cursor": {
          "ref": "1f18e7e4-94f0-4edc-a210-39319511f357",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5070abab-c713-4dcc-a3c7-2f8ad8726ff7"
        },
        "item": {
          "id": "b43502ce-3a27-4e2e-965b-a717c661dc97",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e2594939-c2cb-4b0b-b309-b5b250be7bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9346ce-4696-4926-8c72-945f9fc84c1b",
        "cursor": {
          "ref": "9185c74e-3bd9-47a7-89a5-a8245f653380",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b8174da9-009a-44a1-bcad-2f6f7b7842c8"
        },
        "item": {
          "id": "2f9346ce-4696-4926-8c72-945f9fc84c1b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96528bce-2e9f-4376-bce3-31932fccd469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd269cb-f888-49d9-849b-cd5e38d93cb2",
        "cursor": {
          "ref": "bc1602b5-5e1f-4aac-8c66-d41a5d04ae2a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "772ec234-a5d0-4dc7-aec8-55129bbc11ff"
        },
        "item": {
          "id": "8bd269cb-f888-49d9-849b-cd5e38d93cb2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1401c342-7f03-451a-9ef9-4297bbd97f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634a9065-bc8e-40b5-a655-5b8d486b3163",
        "cursor": {
          "ref": "df420bba-9d75-42a0-9976-be0e83b87f3c",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8b222c2a-4825-4181-9da0-6dcd95e9880f"
        },
        "item": {
          "id": "634a9065-bc8e-40b5-a655-5b8d486b3163",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7998e20e-fd65-4b25-a4df-ae78f50fb4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd13b4a-f91d-4d23-b4f0-e347b9e1412a",
        "cursor": {
          "ref": "05e957f9-64bb-4035-b8a6-c16aaf8303d3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c6bfbd9f-9c35-42a5-a9cb-2fe4fc8173da"
        },
        "item": {
          "id": "9cd13b4a-f91d-4d23-b4f0-e347b9e1412a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "4f7f1052-98e9-4e78-bdfc-681de8af05e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285da312-9d90-4288-bec8-efaf41883822",
        "cursor": {
          "ref": "25f7e78d-dee6-4caf-b15c-2ed20a3c02fa",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6a615846-2050-4fa3-bc97-1821e3fce61a"
        },
        "item": {
          "id": "285da312-9d90-4288-bec8-efaf41883822",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9123476e-be93-40ba-9e1e-0a7fdfaecf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09f177e-7f5b-4931-a9e7-25b2b0a5c3f3",
        "cursor": {
          "ref": "29ef06cf-8b53-423a-b0d7-8fd74f56aeaf",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "160b910a-d685-4aaf-83fa-f94423dca56a"
        },
        "item": {
          "id": "f09f177e-7f5b-4931-a9e7-25b2b0a5c3f3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9b2a22a9-c780-42ae-82e5-8187d5741358",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89298d8a-4d6f-436a-860a-e12471c3fd3a",
        "cursor": {
          "ref": "c6f671ff-b94d-4c25-b7f8-ea31dd258560",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f3da0ece-5a5a-461a-8074-9f7a5005fa3c"
        },
        "item": {
          "id": "89298d8a-4d6f-436a-860a-e12471c3fd3a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "90fbb592-c5b1-45c1-b4c1-27793fa71dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6340fa3-def7-4e89-ad98-baf95c50765d",
        "cursor": {
          "ref": "bc745c44-417b-4ded-ba8e-c128b2bd9286",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6803a34f-0c73-4bf1-8de1-9d8d779f98ba"
        },
        "item": {
          "id": "c6340fa3-def7-4e89-ad98-baf95c50765d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a02e34b8-9a95-432a-b92a-8adb200e5a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f20ed58-e453-45f0-aa7d-d63e71c3ddc2",
        "cursor": {
          "ref": "c343c453-e393-478a-a030-06d7c9c0b60b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f872365b-ba7a-4c97-9279-6ab1079e2e5d"
        },
        "item": {
          "id": "1f20ed58-e453-45f0-aa7d-d63e71c3ddc2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8ce16497-a340-4ed9-9a1d-a7f7fcb7e073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d390d3-212a-485e-b517-3b7987d3fe43",
        "cursor": {
          "ref": "ccf6dfd2-d32d-4651-8873-a6d166e429e9",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c1635ad-e3c8-4fcc-b5e3-676c27db3a7a"
        },
        "item": {
          "id": "c9d390d3-212a-485e-b517-3b7987d3fe43",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7b7b575d-4bf7-43c8-aa61-e3deddd1ec8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373b45ee-f07c-4eb4-8fcc-d95937faf569",
        "cursor": {
          "ref": "a24d16ac-352b-4296-8b97-b10d0b431f09",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fae91dae-7ee0-4b7e-9770-48df74b63f0c"
        },
        "item": {
          "id": "373b45ee-f07c-4eb4-8fcc-d95937faf569",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bd5855a0-4ef3-49e3-a512-927929e99215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d8cc2e-9885-4f19-84bc-463e32cf6911",
        "cursor": {
          "ref": "e370843e-5764-4316-8f5e-cfc3e8ba67f6",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9be904d9-21c4-49eb-8154-c49a6dd65dca"
        },
        "item": {
          "id": "55d8cc2e-9885-4f19-84bc-463e32cf6911",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6d79f8d7-019b-4764-bf7f-21c3fc37f7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738b7499-8e81-45d2-b6ad-daa480722698",
        "cursor": {
          "ref": "e3794403-c55a-4947-8612-67116b56c3ee",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8160570f-4176-4d85-9411-2111add9a57a"
        },
        "item": {
          "id": "738b7499-8e81-45d2-b6ad-daa480722698",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "90c9e75b-693a-47a8-b5ce-f58d71362bfa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cdf82a-248d-4fa7-b029-eb2befa90841",
        "cursor": {
          "ref": "d1fdcd94-aec0-4225-b02b-ceb61f539aab",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d17e0024-4272-478e-9247-00c59bfa0b21"
        },
        "item": {
          "id": "22cdf82a-248d-4fa7-b029-eb2befa90841",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0e457908-45a2-4bf0-9c32-00404178001f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef11eba-30d4-43e4-8951-cdc61e625f0a",
        "cursor": {
          "ref": "ef29356b-2537-40af-8afb-8c5f66aa1f23",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "87807d4d-2006-4cd2-a3c4-a40b815a9692"
        },
        "item": {
          "id": "eef11eba-30d4-43e4-8951-cdc61e625f0a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2750fcdf-8fd5-4e05-8ca3-2bdac7005b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71449183-db73-42cc-be1f-6923b092982d",
        "cursor": {
          "ref": "014b05ef-0b06-44e8-9255-e9a2c1cb3d86",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "52f17788-8ffc-4710-9a91-6825a5fdd854"
        },
        "item": {
          "id": "71449183-db73-42cc-be1f-6923b092982d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9b2d031e-43e7-4964-8425-8565023ffed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0816ed6-e9fb-42ba-bb57-4ebe05439085",
        "cursor": {
          "ref": "ce290a5b-4af2-46ba-9faf-7ee5e27d19c5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "521d5179-4e58-49ad-8e8a-5538dc3f33b3"
        },
        "item": {
          "id": "f0816ed6-e9fb-42ba-bb57-4ebe05439085",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "eff603ea-27d0-4167-b439-0c9bdd1bc741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57299ae5-5224-4693-92b3-1398ce648c84",
        "cursor": {
          "ref": "7296d79e-7ebd-4567-8cb9-3c1b7e4e6831",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6b820067-0c57-490f-940b-b0137dd010f3"
        },
        "item": {
          "id": "57299ae5-5224-4693-92b3-1398ce648c84",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ef63878f-f995-4490-85b5-07c7a053ff81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e458722d-6dc8-4e4e-ad97-1d3a7d8a5554",
        "cursor": {
          "ref": "8764b5e3-a81f-47a8-bc8c-c72802bc362c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f3029f1e-555e-4883-a055-588029afa6f7"
        },
        "item": {
          "id": "e458722d-6dc8-4e4e-ad97-1d3a7d8a5554",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "409f4716-1491-4cbd-9214-a4d610e441f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3173489a-d9ac-40c2-b24f-5dba5458d37a",
        "cursor": {
          "ref": "67aa4973-08d9-4175-a530-3d603d6924d9",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d32d63f9-2467-4e35-8cd9-6c5d5d0f8d4c"
        },
        "item": {
          "id": "3173489a-d9ac-40c2-b24f-5dba5458d37a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "66ffef3e-9624-4199-865a-693d8aacd02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b521f9bd-eed7-4217-bc2e-658c867860a2",
        "cursor": {
          "ref": "3a7783f1-8271-4694-a07d-d270d8c12a35",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fea23ff5-5d3b-4f53-91c0-c449087c9ba5"
        },
        "item": {
          "id": "b521f9bd-eed7-4217-bc2e-658c867860a2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "18fec9e9-5c17-488b-9a50-949349702829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e35c40-a3a3-4a6f-a34b-2c746842247a",
        "cursor": {
          "ref": "bd20a87e-edaf-4193-ab29-58f7b8772367",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e288a2c5-e1cc-4ac5-a686-1595f1a9b83e"
        },
        "item": {
          "id": "26e35c40-a3a3-4a6f-a34b-2c746842247a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8f71fcdb-aee7-438d-8e57-643f49260a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088c3ef9-60cc-4a78-b56f-3fd0124f3c83",
        "cursor": {
          "ref": "9e91f70a-5b6b-41c8-b36c-089f67ec26ec",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fea2073f-36a8-46e2-9581-2ff506849ca3"
        },
        "item": {
          "id": "088c3ef9-60cc-4a78-b56f-3fd0124f3c83",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f56c3b9b-218f-4080-a49a-262cccd8c511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81d695b-c609-40c7-a3c5-a9ce52713438",
        "cursor": {
          "ref": "865082bb-96f7-4bea-991e-98be72f8e0ab",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "dfbfbe26-d55e-4313-9506-e15c742906b0"
        },
        "item": {
          "id": "e81d695b-c609-40c7-a3c5-a9ce52713438",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e99b0b1d-078c-47e6-929d-195812768537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d733240-bbac-4113-bf60-6ce66ca583f2",
        "cursor": {
          "ref": "f828bdc6-8e57-4044-873f-00bad6d657c5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0c000744-981e-4a21-ae95-93993293ee45"
        },
        "item": {
          "id": "2d733240-bbac-4113-bf60-6ce66ca583f2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "684d50bc-b448-48d2-be28-8851646ddafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ea212b-8e9b-4824-8967-d15c3dcf97e0",
        "cursor": {
          "ref": "f9c273f2-fce7-4611-923e-ae77489cd00b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "788b48c4-705b-43c4-9f90-e76338a3d8e6"
        },
        "item": {
          "id": "52ea212b-8e9b-4824-8967-d15c3dcf97e0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bdf77cab-f741-4b51-8cea-becf4b6e182e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8cceba-8be4-44f1-8908-1d04a5d9dc48",
        "cursor": {
          "ref": "7ed73572-ff83-41f4-9bf9-287c3737ea78",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ae66e177-da5b-4571-8e40-8fe5ba8e4761"
        },
        "item": {
          "id": "fc8cceba-8be4-44f1-8908-1d04a5d9dc48",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "912b1c64-e443-40e7-96db-77c3bce02eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d694230-30bf-4a71-a715-165eeea0f165",
        "cursor": {
          "ref": "ec8285dd-0e53-430a-abda-fc5e08dd82c7",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "28f3fcaa-cb67-4a55-b2bc-64e96fcf19be"
        },
        "item": {
          "id": "9d694230-30bf-4a71-a715-165eeea0f165",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cc8b0f87-7da1-4061-8cba-543c14f4a8b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65448f84-fa9c-45d8-b781-a0ae39fa198b",
        "cursor": {
          "ref": "f1055ee7-0bf9-4b5d-8335-168876324042",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e378ff22-ca98-4bff-9262-f233f05b261d"
        },
        "item": {
          "id": "65448f84-fa9c-45d8-b781-a0ae39fa198b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "21356b88-3005-4fb9-82f2-94c97850bc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1e89ae-d1e3-400a-bd40-48f8234f8865",
        "cursor": {
          "ref": "5462b957-82e8-4e8e-a780-137715080212",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ecd6ba44-e82e-4660-b8a1-a14c49af7f9b"
        },
        "item": {
          "id": "ec1e89ae-d1e3-400a-bd40-48f8234f8865",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "293a3dbd-31d1-4746-9617-8bb6beb88a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081ac19b-0941-4883-be95-99418ae4ff5f",
        "cursor": {
          "ref": "ff16462b-34af-43ae-8709-129742acca16",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d5afdb03-cddb-46ef-a74f-b6e680e40866"
        },
        "item": {
          "id": "081ac19b-0941-4883-be95-99418ae4ff5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9897a6b6-d3aa-4389-a6aa-6d0b00c2aaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d408fe19-e234-4ed2-8aad-5bbb87f582ba",
        "cursor": {
          "ref": "711d05e3-8458-4a33-9a6f-7e8c06b8bfc3",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "69c237b8-ee5f-4268-b561-d801a94b3d85"
        },
        "item": {
          "id": "d408fe19-e234-4ed2-8aad-5bbb87f582ba",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "76028a99-8d37-4ef7-ae60-6ec0f1dab23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8214121-bf04-4aaf-9fb4-1c436d5c5d6b",
        "cursor": {
          "ref": "709e1b01-3442-4b35-9fc9-b4c116aa2d3a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "347fcfa9-acf1-4fd0-b767-e35b208b3f97"
        },
        "item": {
          "id": "d8214121-bf04-4aaf-9fb4-1c436d5c5d6b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7d4a41cb-2968-4884-b71f-eb620757afbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8173623-e362-4e36-92ad-711426e8019a",
        "cursor": {
          "ref": "1e58d354-608d-471c-a38a-1192ae16c1ba",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9704256e-74d6-469f-b159-5a5b803e5be0"
        },
        "item": {
          "id": "e8173623-e362-4e36-92ad-711426e8019a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dce18308-e4c1-42e6-91c1-589961da59e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508ac167-aadb-4882-a1e8-bdff9048be80",
        "cursor": {
          "ref": "32ca72d6-bbe7-46c2-a45a-1a74ccdbf6b6",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7a0e6440-376f-498e-80f6-54adecb1bd77"
        },
        "item": {
          "id": "508ac167-aadb-4882-a1e8-bdff9048be80",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "346772f4-25e5-4d80-bb4e-29ba25f7437c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3abf5cc-4a82-4f54-af72-3cc756bc28fc",
        "cursor": {
          "ref": "42cac2e5-6d60-4de3-8fb3-986d4e428a11",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6085ca0b-f3fc-4a75-a656-e29bd9cf4821"
        },
        "item": {
          "id": "b3abf5cc-4a82-4f54-af72-3cc756bc28fc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d0c822c4-96ad-405d-882f-7dc6f7e6f321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33722e3-8804-48e4-8603-8267c7253cfd",
        "cursor": {
          "ref": "0db9676d-0b78-4aeb-9735-76d511084ba9",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "34fa292e-aa37-4390-b834-c9752ed64bbf"
        },
        "item": {
          "id": "e33722e3-8804-48e4-8603-8267c7253cfd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dcc19914-b410-47b9-a63c-975d834fe6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dc5336-fc42-495b-9fe1-355979d22e87",
        "cursor": {
          "ref": "dbd85430-baef-4f43-9784-2c6bf7b94f23",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fef3c692-d409-4c80-b790-c896426f77a9"
        },
        "item": {
          "id": "41dc5336-fc42-495b-9fe1-355979d22e87",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "04cd582c-37b2-4107-a4ca-c425b9f36576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8a1ae1-acfd-44d0-9755-fc23a9b16c88",
        "cursor": {
          "ref": "68f889d6-9c6e-4861-8f67-99c2244a66d6",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "323f979b-deaf-4dc9-bc47-56b4b37ea1c4"
        },
        "item": {
          "id": "3f8a1ae1-acfd-44d0-9755-fc23a9b16c88",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aa9427de-268d-488d-856d-a048e5cb3e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae5d4c1-d2f5-4a91-bcaa-7e9fdfbbc308",
        "cursor": {
          "ref": "1bdbdd4f-1950-4e65-a9eb-0fc7f18c71f2",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "27d81599-9d47-41d3-99c4-6759c28f0423"
        },
        "item": {
          "id": "3ae5d4c1-d2f5-4a91-bcaa-7e9fdfbbc308",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b8c3437a-d955-4c7a-930e-7d67e1311a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078e2d0d-fce2-471e-9668-d488358ee4b2",
        "cursor": {
          "ref": "0fa6dc0a-0f0f-4ea3-ab5d-a3af558f19d3",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cf5875ef-9aa4-4041-9ecd-0005920e6cc7"
        },
        "item": {
          "id": "078e2d0d-fce2-471e-9668-d488358ee4b2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c6187807-be87-49af-94c2-5bc3edf80e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7d7606-771e-4650-882f-0454fc257b52",
        "cursor": {
          "ref": "0bd234a3-0be0-476a-babf-21751f2adef0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "777cdb39-f3b9-4ea9-9d95-bdae176f12b2"
        },
        "item": {
          "id": "1d7d7606-771e-4650-882f-0454fc257b52",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a3923ee2-ebb3-46cc-a9db-2d51fa151330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471d2682-2a25-4262-8e72-496c4fb569c9",
        "cursor": {
          "ref": "38aba627-c11a-47b1-86ae-0e7f1f14e05a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "60317dd8-0c64-4785-8d7a-0192f1280446"
        },
        "item": {
          "id": "471d2682-2a25-4262-8e72-496c4fb569c9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1c055346-940d-4560-8587-fa0aba6b7044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739bd7b3-2838-43f6-849c-4ff5755c6a3a",
        "cursor": {
          "ref": "30322d7b-e6b7-4c3c-9802-edbfd3a5ac38",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8911cd57-e530-471f-bf53-bfd1fb8f4e98"
        },
        "item": {
          "id": "739bd7b3-2838-43f6-849c-4ff5755c6a3a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "62410417-7b92-40c8-b6c3-1e774be4d2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ce12c0-c607-40e7-abcc-3a250815f6eb",
        "cursor": {
          "ref": "0382df68-1d19-4678-ba1d-320d0f071e64",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "87d42013-1ca9-4218-bd8b-72fec37c4374"
        },
        "item": {
          "id": "b8ce12c0-c607-40e7-abcc-3a250815f6eb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "73a07a8b-3afb-4e49-9077-b8d216c369d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a75d9ae-1743-4c48-ab86-551afb509077",
        "cursor": {
          "ref": "e3ab4a8f-a7ff-46f3-ab5b-7d64c0339140",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2640cbe8-9a39-4bdc-abb2-29e3399ec133"
        },
        "item": {
          "id": "2a75d9ae-1743-4c48-ab86-551afb509077",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3c84a894-859f-43f6-a4f7-7ce47de422a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dca3a5-4955-4e31-a243-85a74f16aeb8",
        "cursor": {
          "ref": "8a02ed64-e820-4a66-a169-21f91ff80685",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "16499371-e0a1-4635-b7bd-56899771a5a0"
        },
        "item": {
          "id": "12dca3a5-4955-4e31-a243-85a74f16aeb8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7ed48dc2-6292-487c-ae35-3dc4d95a8326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d697b9-de3e-49b7-afa5-39ba9a467452",
        "cursor": {
          "ref": "e6682f98-d95a-4a11-b9a5-9f4a332be6e3",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5832097c-66fc-4be4-95fb-8a0dce07dbbb"
        },
        "item": {
          "id": "39d697b9-de3e-49b7-afa5-39ba9a467452",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2f72d697-66ff-4a06-a97a-2b1bb0f2dde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735c71ec-692c-4a98-adac-bf62c79e1168",
        "cursor": {
          "ref": "9976302a-bef9-40db-b941-3afd2916da4a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "625546b3-5d98-4756-a65c-07618adb0030"
        },
        "item": {
          "id": "735c71ec-692c-4a98-adac-bf62c79e1168",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "98d8d676-eb57-4ab3-b179-dc7348b80934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adf7ec6-59b6-448e-96cf-6a13837a168c",
        "cursor": {
          "ref": "4e97e191-18e6-487d-abe3-d35daae156fd",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1f66c4ca-5e8e-40fd-93ab-c155e72c8849"
        },
        "item": {
          "id": "1adf7ec6-59b6-448e-96cf-6a13837a168c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e6473456-6db7-49a5-bc6c-e8c209c0714a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c3a973-ce0e-4bed-8409-b123d3446cc7",
        "cursor": {
          "ref": "da6dd1bc-9eac-42fb-84e6-5b5c5e2f7c20",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8bb201a6-a40b-4fce-8ce0-2bbd008aa8df"
        },
        "item": {
          "id": "53c3a973-ce0e-4bed-8409-b123d3446cc7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "36fefea0-c226-479e-9bf6-292bdec46148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdc6151-16dc-449c-b42e-8512b5392e39",
        "cursor": {
          "ref": "00aecd3b-eda4-485f-8d12-d4fda2f51ff4",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "40dd70b4-83f5-4daa-a05b-c159776444db"
        },
        "item": {
          "id": "abdc6151-16dc-449c-b42e-8512b5392e39",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3f5ca185-3b74-49e0-98a3-8fbecda155ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543b0662-006a-4aa2-9978-0826df2473bd",
        "cursor": {
          "ref": "f37ace4e-7773-4f37-81b6-94b17b45c2a3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "57733766-c08c-41e1-a3cf-f2ba1704f6e2"
        },
        "item": {
          "id": "543b0662-006a-4aa2-9978-0826df2473bd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0edd2631-e30c-4396-9055-6cbdcc5a0096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1053673-72ab-4337-90dc-a0884a9f5509",
        "cursor": {
          "ref": "878ba570-f787-4374-a4ac-bb34ab378c8f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2785e995-6046-4cd7-a95f-81e1ffc686ed"
        },
        "item": {
          "id": "e1053673-72ab-4337-90dc-a0884a9f5509",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9200f1a2-b331-4b91-baaf-586edbd810d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d80cbe3-d713-444c-985a-bff8b6b4776b",
        "cursor": {
          "ref": "79715333-4d21-43e5-a12f-212768760207",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "66a1cd05-3079-4bd2-981f-2b4b1619eb64"
        },
        "item": {
          "id": "3d80cbe3-d713-444c-985a-bff8b6b4776b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f1af35be-b961-4cff-a8f2-7a4ac220de45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bb9dc0-4548-4f46-8d15-e8b6ebd58241",
        "cursor": {
          "ref": "6dcac89c-291a-4cc3-89f6-47e768720fe9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17ea2d84-524d-4e0b-91b5-b6fadd96a244"
        },
        "item": {
          "id": "d3bb9dc0-4548-4f46-8d15-e8b6ebd58241",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3d2ea975-55bc-4cae-9197-45885ab8e4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c46e5b-74df-4b32-acbb-862f67bf26f3",
        "cursor": {
          "ref": "58d8677b-4d63-47c0-97e0-6a34444f8499",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fe5ad588-ce6e-4aef-b699-296a7007d8b9"
        },
        "item": {
          "id": "a1c46e5b-74df-4b32-acbb-862f67bf26f3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d91adc14-5845-4586-8397-2273513b37b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb4770e-68d7-4f6b-a605-0f4eb80023e1",
        "cursor": {
          "ref": "3b002e7a-6aeb-4587-a5df-cd9d702a6ec3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8c8918a9-5978-42fa-b957-4d6640d9fa48"
        },
        "item": {
          "id": "bdb4770e-68d7-4f6b-a605-0f4eb80023e1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7414c695-a8f2-4f2a-bce2-c9caadb73bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce6fee-ee28-4dde-b9af-00a5c645b6d8",
        "cursor": {
          "ref": "1b3e316a-6186-4e79-9f46-9c368daeb1cd",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0d801ded-a46b-4539-9960-826cb8fa42b9"
        },
        "item": {
          "id": "b2ce6fee-ee28-4dde-b9af-00a5c645b6d8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ae2feaa6-3225-4ad4-87d3-cac47aa188fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa79a03-8066-487e-b273-f645e6bbf085",
        "cursor": {
          "ref": "fec4e350-8ac9-4e41-8c2c-9560511556da",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8d510dca-4f7f-4829-8671-d20e18d9d0bb"
        },
        "item": {
          "id": "daa79a03-8066-487e-b273-f645e6bbf085",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dd8e602b-60b1-4b00-ad0a-1c6f681cfbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8186a4-3e9c-4ada-9dc0-d0bfdc316f3e",
        "cursor": {
          "ref": "ca391ed1-2a82-4c9e-9c84-846e8352afb9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bf37774c-991d-4b08-bd10-e3dd3f7d56c0"
        },
        "item": {
          "id": "ab8186a4-3e9c-4ada-9dc0-d0bfdc316f3e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d5c25461-0732-4f9d-8a12-9ecc42d8b5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89b8266-b0e2-4db6-bc24-d44425d281e0",
        "cursor": {
          "ref": "3fe80f85-bec6-4057-b0da-024135cdd219",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dd51a9b8-67c8-4059-bb0f-448526340f6b"
        },
        "item": {
          "id": "b89b8266-b0e2-4db6-bc24-d44425d281e0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7c16a245-ac36-4fc4-aa5c-0bdb8f993eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1145c23b-048f-4ee3-b725-51da58f9bfba",
        "cursor": {
          "ref": "27233176-e794-4202-b688-2d8372f3fe61",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "34a8cd44-1f5f-46dd-ac6e-b2bc15304b68"
        },
        "item": {
          "id": "1145c23b-048f-4ee3-b725-51da58f9bfba",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "34b8fd2a-e906-4111-b516-96a08158147e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cf153e-c376-4e1f-9245-3c8dd3131465",
        "cursor": {
          "ref": "fe616332-44f1-4cc1-87bc-c4a791ebd872",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b1fb4bc1-5944-4a29-8d31-9e1c4f7efe3a"
        },
        "item": {
          "id": "48cf153e-c376-4e1f-9245-3c8dd3131465",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c97dcb3d-3b7a-43a9-b041-35106a0a91fc",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f173b6d6-a4ea-4f78-ac80-e8130e300cf8",
        "cursor": {
          "ref": "a3fc3cfb-2e50-4d12-961d-eaf12d5b49f2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "51026013-c6be-41ed-bc18-c00844aed0cf"
        },
        "item": {
          "id": "f173b6d6-a4ea-4f78-ac80-e8130e300cf8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6ab77a3b-b6f1-4f31-8959-e315c209cdd3",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4002065-3ba1-4ce8-bad0-4c7da97726b7",
        "cursor": {
          "ref": "56397643-0adc-4504-9029-d6db983109e7",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e682faf7-0591-474d-b783-35f5d4fadb63"
        },
        "item": {
          "id": "e4002065-3ba1-4ce8-bad0-4c7da97726b7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0a762cfe-9da5-4616-8803-da5f57068ffa",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f1037e-25b5-4746-97ba-d2472efbceae",
        "cursor": {
          "ref": "055637dc-8644-4aca-a924-ba9b485185d8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "dc99448b-3beb-4087-b7e5-12cf4425a2eb"
        },
        "item": {
          "id": "33f1037e-25b5-4746-97ba-d2472efbceae",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "edaddf8f-f44a-4468-a475-f99bf3fb9519",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8255a1-4e6f-473b-9b41-cb5a064e2c23",
        "cursor": {
          "ref": "1af249d1-511a-4d32-96a0-18ecc89433cb",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "126ffa35-e853-4c6a-add7-6a0d6df620cf"
        },
        "item": {
          "id": "ad8255a1-4e6f-473b-9b41-cb5a064e2c23",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e08a52ba-3b24-43a7-a939-d17a74078b15",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d63908e-fad3-41bc-ac3f-cdda67f25bbb",
        "cursor": {
          "ref": "ac5d4e38-7d28-4f5c-a4a8-2a39f1a48c74",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "86d36db1-a1e3-4c2e-b988-07c72cfc75ce"
        },
        "item": {
          "id": "0d63908e-fad3-41bc-ac3f-cdda67f25bbb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2f94446c-6bca-4faf-a987-5539d94d3b5b",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ce5c7d-76b6-40e4-88c7-9aa7ae945bbf",
        "cursor": {
          "ref": "a220e1be-715a-4065-a065-f40e500c73d4",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4fe7fa12-9751-411d-a931-c3627597c22d"
        },
        "item": {
          "id": "59ce5c7d-76b6-40e4-88c7-9aa7ae945bbf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d3976c9d-26ea-4b36-9058-b92c510de68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a84ecdd-ef17-496f-b076-3beb84349e7c",
        "cursor": {
          "ref": "d91696aa-d75e-4429-be26-df1ce39434f3",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3e410aed-5ba1-49ba-9eb4-a6a4859015db"
        },
        "item": {
          "id": "8a84ecdd-ef17-496f-b076-3beb84349e7c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "87739dc6-9409-45e2-9265-5bf2f8b711af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef78b83-2674-4ec9-adb2-2e8d3b1fe342",
        "cursor": {
          "ref": "24d52bb6-2596-4483-8bcb-4aa354d6d1fc",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "abe635a7-5511-4ff0-89be-828f8f700de3"
        },
        "item": {
          "id": "7ef78b83-2674-4ec9-adb2-2e8d3b1fe342",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ddea0856-b597-4a24-9655-db0e72a85b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0b33c3-5487-4db2-b763-09d1de11e31e",
        "cursor": {
          "ref": "1849e40d-023d-4b55-b316-947f99f9e4c6",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3d7a6cff-c421-4bc0-b98d-0a16803a939d"
        },
        "item": {
          "id": "5c0b33c3-5487-4db2-b763-09d1de11e31e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "67601e06-3cb9-465d-93a6-4a41bcaf0b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c70bc7-cd7e-476a-a4f0-6a451eb0167a",
        "cursor": {
          "ref": "1f1a03b5-e03f-4526-9a7d-e2c2d6efddd0",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d14fcbee-5184-426d-b56c-f958456fcb3f"
        },
        "item": {
          "id": "c3c70bc7-cd7e-476a-a4f0-6a451eb0167a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f2dfad74-08d5-4fdc-ae7b-0786dd2ab8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f614a5c-a506-4d75-b38e-6bc5c3f0f2d2",
        "cursor": {
          "ref": "eaff3196-f2b7-408c-87c2-9d76418c4d40",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "11b00a77-e4c8-450c-b5cb-38b7e99c90fe"
        },
        "item": {
          "id": "5f614a5c-a506-4d75-b38e-6bc5c3f0f2d2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4f1cabf0-246e-46bb-a8a3-8d37069398ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fef797-55d4-4882-97a5-c40efa3b7296",
        "cursor": {
          "ref": "06da86ed-9e30-4e86-a4df-7b3cc3925c3e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "aa068f21-6d1d-4fe7-bb85-156c1bf17fd1"
        },
        "item": {
          "id": "d7fef797-55d4-4882-97a5-c40efa3b7296",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "578ea437-cd4f-4fb3-ba5d-624bfce364f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d223e0-9f28-400c-a593-ec2a9a805c29",
        "cursor": {
          "ref": "845860e9-3c42-492b-b7b6-82b85a4cfe50",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "25c3d601-7aca-47fe-bb4b-867712325c0f"
        },
        "item": {
          "id": "92d223e0-9f28-400c-a593-ec2a9a805c29",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "91de39af-ec7f-44cf-8118-6325d09e40d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2303dc0b-b2cb-4440-8cff-3866c50bc486",
        "cursor": {
          "ref": "6cc9cf80-199b-451d-a9f5-cd20c7f7dfd8",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e9374cd7-7099-42e2-9892-ded6d1f594df"
        },
        "item": {
          "id": "2303dc0b-b2cb-4440-8cff-3866c50bc486",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2edc43dc-4a55-4a47-87cf-ab8b4d91510d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a20762-d68b-4f63-8347-213118f7db2d",
        "cursor": {
          "ref": "29bf9b76-da7d-4dda-a23f-fe4583c92c48",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "14e67849-de14-445b-b518-46b01559b665"
        },
        "item": {
          "id": "e9a20762-d68b-4f63-8347-213118f7db2d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fd73c654-8c77-4b5f-b39c-caea40e8169f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3479dbac-ff86-4378-a686-c9e13148490a",
        "cursor": {
          "ref": "e0436a58-4426-4819-909a-8a2617a49715",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "53028c39-475d-4f43-bbfa-6612d6b6ea61"
        },
        "item": {
          "id": "3479dbac-ff86-4378-a686-c9e13148490a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "60d1bd09-70eb-4607-a299-a0d7f8cebb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212cdac1-cbc0-499c-913e-4fa8fe847f53",
        "cursor": {
          "ref": "235359f8-b645-4e2f-ab4b-6f3105c4ca63",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5477d8dd-ff2e-4479-ac4b-8c6f9a7674e7"
        },
        "item": {
          "id": "212cdac1-cbc0-499c-913e-4fa8fe847f53",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e59a5c08-68eb-42c0-8ab6-7bfc613d15b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ee71f0-e407-4528-87bf-e72fadc98fa2",
        "cursor": {
          "ref": "d129d333-385b-42a4-97f2-0366c2c56e8f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48ec1295-c746-4a0a-9af7-697ce86f1aaf"
        },
        "item": {
          "id": "a3ee71f0-e407-4528-87bf-e72fadc98fa2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2e61cdb5-3ef3-49d9-ae5c-1f17f43a96a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "930df58c-62c0-47a0-a9ec-e6b5163be347",
        "cursor": {
          "ref": "43944d72-86ab-4904-ba16-4d7ac92add50",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "60b12eff-92ab-4ee5-bbd3-709fcdca7bdc"
        },
        "item": {
          "id": "930df58c-62c0-47a0-a9ec-e6b5163be347",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2c4c75fe-21ab-46cd-aa84-2bfe00a31f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa64ed21-31bc-465a-be55-094924082f93",
        "cursor": {
          "ref": "d77edaf0-9a22-4b7c-b068-68891d0ab154",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a198cfbe-90cf-4e2e-a634-e1aa77f5efb5"
        },
        "item": {
          "id": "fa64ed21-31bc-465a-be55-094924082f93",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6052b226-0420-4a07-89f0-c2c226280415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a108e692-89f9-467c-aa38-84b3381dbc52",
        "cursor": {
          "ref": "2ae4163b-6987-4e51-997b-db6fdd383971",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2643b485-719e-4eae-90f2-4e63c04389c4"
        },
        "item": {
          "id": "a108e692-89f9-467c-aa38-84b3381dbc52",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0ed01367-5800-4b68-b33d-7de02ba42918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74abb29a-857d-445d-9614-5d5b6b581e9c",
        "cursor": {
          "ref": "4f5b235b-2333-4eec-b232-c4eafbd67268",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e03e111e-bd8b-433b-b087-84136e87a868"
        },
        "item": {
          "id": "74abb29a-857d-445d-9614-5d5b6b581e9c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0993a18f-279f-459f-8979-24237e0dd15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe6da2c-b8b8-44a6-9852-3e6f7792e256",
        "cursor": {
          "ref": "cf769e37-8b30-415b-bc31-9efbddce5305",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "20a557d1-2d69-4af1-9a2a-4d7c0745a0f7"
        },
        "item": {
          "id": "cfe6da2c-b8b8-44a6-9852-3e6f7792e256",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ba7f7877-0845-4955-a54e-42dd3ab2b3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc4a915-fbe2-40bc-86e8-8b473ebe8b8c",
        "cursor": {
          "ref": "6279b3a3-da76-4e79-91e9-c95c73a0eef9",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8adc8869-bab8-4ded-9164-2fa9beabb5c6"
        },
        "item": {
          "id": "dbc4a915-fbe2-40bc-86e8-8b473ebe8b8c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6bcea483-1b1f-43de-a402-d70032a166b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b16f05-6466-4003-99dd-f344806437ee",
        "cursor": {
          "ref": "a77efbbf-d653-4b75-a3d1-cf2b4b574f49",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "90a1cea1-e08f-4ca3-acde-961a06cf21d2"
        },
        "item": {
          "id": "b4b16f05-6466-4003-99dd-f344806437ee",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1b4016e7-63ba-4950-8766-2ba354b2335f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778f8560-a4de-4ed4-9996-1ef43eb49c02",
        "cursor": {
          "ref": "af5cec33-0da9-4f68-8fba-44d3b1d9d7ce",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "45694905-1cff-4131-b071-16a87e389741"
        },
        "item": {
          "id": "778f8560-a4de-4ed4-9996-1ef43eb49c02",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "adf71a6b-c19d-497e-8a48-3937d271b6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e187d043-87bb-47d7-9730-cc8f15a53a26",
        "cursor": {
          "ref": "4b615c25-10eb-4e4d-8aee-8e527c27a916",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6b1ef8f6-c20f-4fbe-8273-cd6c7493d15e"
        },
        "item": {
          "id": "e187d043-87bb-47d7-9730-cc8f15a53a26",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "97433bf7-9d40-47cf-9b9e-ca70001c0359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a48152-ba75-46b3-8263-51a3e02a623e",
        "cursor": {
          "ref": "11851825-9694-463c-9f58-8dd40798c2e4",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f4a7d7de-6f77-42d6-be31-a4ee3cd9ae4c"
        },
        "item": {
          "id": "63a48152-ba75-46b3-8263-51a3e02a623e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "84b42a71-7ef6-4627-bb5e-384bdcf8ba81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa12a97-2c7c-4316-bb6d-36cc4245845c",
        "cursor": {
          "ref": "63d57e86-ab05-47de-af47-7690be417f7c",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "216c9519-d526-46e7-82d1-9f8371fdffb0"
        },
        "item": {
          "id": "3aa12a97-2c7c-4316-bb6d-36cc4245845c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "797bdab7-dbe0-4e31-a095-6e857ddc8ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d290391-91dd-4a11-be53-841f2b8de9af",
        "cursor": {
          "ref": "705b47bb-5234-4e25-b99e-993360982def",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bea5ad1c-3cc6-418f-acdb-2eae6403a17d"
        },
        "item": {
          "id": "6d290391-91dd-4a11-be53-841f2b8de9af",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "010a050e-0ee8-4a70-9ab1-4875b7d7a7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4235a12a-59f0-4259-a398-6883ca2d62af",
        "cursor": {
          "ref": "0fb1311c-5955-4016-9329-ebb193a9a054",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4326e0d1-6c05-4e7f-b395-0d31579e8907"
        },
        "item": {
          "id": "4235a12a-59f0-4259-a398-6883ca2d62af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cae4d84c-e50c-464b-a57d-21271973cf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757759d4-5728-49e0-8c7b-30b38dece02d",
        "cursor": {
          "ref": "70c54295-a968-42ab-83e0-8909b9763a9e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ef07ba28-0473-40d6-8649-4d8353b74381"
        },
        "item": {
          "id": "757759d4-5728-49e0-8c7b-30b38dece02d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "727b33ce-0f8b-4007-b164-67af210092cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de404f3-3b23-4de0-8e2b-99a824a45190",
        "cursor": {
          "ref": "0ceead0c-d0fe-4544-8ff6-f1b8f71a12cb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3b0ffcb0-32ca-469e-9877-9da6e54143bd"
        },
        "item": {
          "id": "2de404f3-3b23-4de0-8e2b-99a824a45190",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c837d572-40b5-49f2-aa85-1c590ca2e59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a43c207-5b13-4f2f-87dd-e3c65a730768",
        "cursor": {
          "ref": "1d5b2a59-5d85-4682-a0b9-596867ec428c",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8202de7b-4b52-4df0-8f69-9bde2ff22dff"
        },
        "item": {
          "id": "3a43c207-5b13-4f2f-87dd-e3c65a730768",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "910518e8-4a7b-4890-95da-425f833f1019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414a2ff7-3dcd-456b-b799-24b5c15662ed",
        "cursor": {
          "ref": "dd4e57a6-b4da-4d79-b169-87ddde9cd1df",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ae12bcbe-e4de-446f-b22a-d1d1e5bdef74"
        },
        "item": {
          "id": "414a2ff7-3dcd-456b-b799-24b5c15662ed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a605fd9-0f6d-4e4b-ab5b-a649f5319013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8feca65-d0ac-40fc-9688-cdc042bd4fae",
        "cursor": {
          "ref": "11962231-f00d-49b8-961c-4d826273cd7d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f0d8b8a-4cf0-4115-918c-1ada9f498512"
        },
        "item": {
          "id": "a8feca65-d0ac-40fc-9688-cdc042bd4fae",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f7c58a4c-229d-4879-a9ca-ae670c6be861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ead1b91-fc9c-4baf-95e5-2f082bb308ac",
        "cursor": {
          "ref": "54636be6-3755-4fd7-8868-cae0adbbbede",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f4744340-cfb8-436d-a0c8-bc65ea281509"
        },
        "item": {
          "id": "7ead1b91-fc9c-4baf-95e5-2f082bb308ac",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3c424662-d162-4a05-8ffc-ec2b302a6554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a368cb26-e658-449d-bb7b-af026f9b6e4b",
        "cursor": {
          "ref": "69513e50-7f91-47ba-80d6-f3d0a195f3f7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3361d99c-d56c-4703-83cb-b8c4b028fde6"
        },
        "item": {
          "id": "a368cb26-e658-449d-bb7b-af026f9b6e4b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "66e74145-52f7-41bb-b6e2-49e6b656407f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c72c23e-ee69-4091-90f8-62d681f074cb",
        "cursor": {
          "ref": "6e8bc900-f227-465e-a246-bc08ce5084cd",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ef61cf8d-752b-45be-9d2c-4a1029e6f349"
        },
        "item": {
          "id": "5c72c23e-ee69-4091-90f8-62d681f074cb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "15d64fa0-4640-4d48-8701-e0cbb91363de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3553c4-687f-48c0-9016-2cc6a03b188b",
        "cursor": {
          "ref": "58bfecd5-d250-4f45-afea-0000c5b7c78a",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "62772136-f32d-4336-a7bd-c73adc02e2bb"
        },
        "item": {
          "id": "be3553c4-687f-48c0-9016-2cc6a03b188b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0c46ebfd-3e61-4f99-b068-6e2802f1f556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1601e1-d972-4277-bf66-e42c4e95a2c2",
        "cursor": {
          "ref": "744f9c23-0bec-4776-83bd-1dccbfad7cef",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "39bd00c2-3716-41b9-a277-6ab2ddf77953"
        },
        "item": {
          "id": "5e1601e1-d972-4277-bf66-e42c4e95a2c2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "92477c4f-3ab0-4a96-b439-ab82f9457d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42b9748-2df3-47c0-b141-677f587dbfc2",
        "cursor": {
          "ref": "5b712571-eb72-4c36-bfab-a6c4301d08e5",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6bd9fbca-c22e-4d15-a5f0-1da1c25db616"
        },
        "item": {
          "id": "c42b9748-2df3-47c0-b141-677f587dbfc2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "083b00a3-70ad-48ef-a37d-50256cf08a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff5aaea-b962-45d9-adb0-bfd497012719",
        "cursor": {
          "ref": "b741f09b-b968-4dd5-b5e5-04fff46b1b99",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6991cfd4-49a1-4253-9095-5b986db23a6d"
        },
        "item": {
          "id": "dff5aaea-b962-45d9-adb0-bfd497012719",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c8bb99ca-c07e-4a60-9f15-46a3c27f8971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41e8cda-6f6f-4f6d-ba40-2916016103db",
        "cursor": {
          "ref": "889e5c23-f90e-4126-be7e-b3c68b1de638",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7323e4cf-bea0-49e7-816e-32477db4f145"
        },
        "item": {
          "id": "a41e8cda-6f6f-4f6d-ba40-2916016103db",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b70cc08b-d1c5-4f00-b59a-aafa8818792c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802a860e-7d57-4b68-8270-039fc8588941",
        "cursor": {
          "ref": "0371d417-2e54-4063-82fd-986e21ac41f1",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "849227ee-d568-401d-8263-0fd0659378e3"
        },
        "item": {
          "id": "802a860e-7d57-4b68-8270-039fc8588941",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "18146c45-d540-42b0-b9bd-799fd68166de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efc0500-9dad-4897-9298-f3579990e3f8",
        "cursor": {
          "ref": "761afd57-30f0-4662-a644-5b782764bc49",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a006c289-a4e0-45e7-afce-2cb30de28188"
        },
        "item": {
          "id": "0efc0500-9dad-4897-9298-f3579990e3f8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "60b32d16-ebe5-4e9e-bf39-70d1f8c10eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1652c550-1131-479a-a7ec-5ada2e32d2cc",
        "cursor": {
          "ref": "1e064c1d-2b42-4ea2-a3e2-31a08c59d65f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "bbf51e3f-bf6f-442d-b2bf-a7fd75dec95d"
        },
        "item": {
          "id": "1652c550-1131-479a-a7ec-5ada2e32d2cc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f1394883-0db2-41bb-9717-6a337213543c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e4af36-23c2-4f90-921d-49dca21a1907",
        "cursor": {
          "ref": "ae4ca20c-05fe-4810-b617-99ecefb19740",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e7d607dc-d562-4cac-9805-26cdaebf9c87"
        },
        "item": {
          "id": "24e4af36-23c2-4f90-921d-49dca21a1907",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9f8914ad-cd7c-4dd2-8260-25bdaf2b6a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7aa398-cebd-4391-b392-4f8c17fe862e",
        "cursor": {
          "ref": "5276bc27-5093-40aa-89a2-e0273d3ff1c4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6badd1ed-2234-4e87-8eb0-44b7e3ea41c0"
        },
        "item": {
          "id": "cf7aa398-cebd-4391-b392-4f8c17fe862e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "20bc0655-3aa6-4ad9-b6aa-0a805ca51b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358df1eb-5296-429b-8d37-b56bf4e4c27c",
        "cursor": {
          "ref": "a5127902-ef18-4a1f-a76f-2a06814cf407",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "59804ced-13cb-43e9-80bb-b8aae5e99d9a"
        },
        "item": {
          "id": "358df1eb-5296-429b-8d37-b56bf4e4c27c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "136f7bfe-2727-463b-8c8d-46184560a669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de0e752-a46e-44ba-9960-43507aa5ad50",
        "cursor": {
          "ref": "7812dd6c-a471-4101-a4a3-73422fe0bc4f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3d1e7513-cd0e-4adf-bc95-60482623af9d"
        },
        "item": {
          "id": "7de0e752-a46e-44ba-9960-43507aa5ad50",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b6bf0884-0057-4d25-a1e9-29a9765ec676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55c8866-3f5e-4fb5-a6ac-465fa40aaa17",
        "cursor": {
          "ref": "4515f186-624d-48d7-8b15-a5c750f9d860",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bf2bfb38-f063-4eb3-b7a8-002583e61f0a"
        },
        "item": {
          "id": "f55c8866-3f5e-4fb5-a6ac-465fa40aaa17",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b670452b-69b7-4e14-abf1-b9b0c2590876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26533856-2699-469b-82bd-e05b8c03524d",
        "cursor": {
          "ref": "50dc7495-4af8-4d8d-aee7-6b12315bc99c",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "27330795-cac9-4b8f-824c-3b6406e8bc4c"
        },
        "item": {
          "id": "26533856-2699-469b-82bd-e05b8c03524d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3df2dc36-0f0f-4b75-b9f6-1de1ef14e295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3a968a-914a-499a-9aca-d6caa28a0e98",
        "cursor": {
          "ref": "27f2fe74-2618-424c-95d0-9a111e1d4be7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2fae8207-52c8-4f10-be6e-0a4d19c6a160"
        },
        "item": {
          "id": "1e3a968a-914a-499a-9aca-d6caa28a0e98",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d8ff5271-9e0f-4c5d-aca0-f1742de443a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf87090e-145b-491b-b50e-341eeb16408b",
        "cursor": {
          "ref": "0a2766db-7870-41f2-b7f1-b27f4f99087a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "47240b4f-d0b1-4e6f-9131-9a86e8f401fc"
        },
        "item": {
          "id": "cf87090e-145b-491b-b50e-341eeb16408b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f3cb8faa-3df5-4e71-849e-93f4f0213b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a11b618-4c77-4089-9506-c3cf2411f2f7",
        "cursor": {
          "ref": "0e701927-1ea4-4dbd-b785-b032dda82829",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d193ec27-31da-4263-b98e-d38e844b1cc1"
        },
        "item": {
          "id": "6a11b618-4c77-4089-9506-c3cf2411f2f7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0afab545-a06b-44b0-99f2-4cee90865486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e10beaf-fca9-4aac-836d-b0f429354e06",
        "cursor": {
          "ref": "df308b68-cba8-4037-9b8b-b3c32a103c64",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b3b5f600-dd7c-4440-8608-3a5376120ab3"
        },
        "item": {
          "id": "8e10beaf-fca9-4aac-836d-b0f429354e06",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e1f149b7-cf5b-4914-b381-eb1fbe35b657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb998cf4-2641-42ed-a165-3d0b7ffca4c5",
        "cursor": {
          "ref": "d7f83e61-8c5f-4c94-8d0d-3bfa82b737dd",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4517f186-31b1-494f-b4af-244012a2f862"
        },
        "item": {
          "id": "eb998cf4-2641-42ed-a165-3d0b7ffca4c5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ec3696bc-da28-48b4-8239-4bba1109849b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd151f8-b055-40e4-963e-19209330819e",
        "cursor": {
          "ref": "fc946f32-c393-45a6-ae58-ae170b81ec1a",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4730c7e2-cd23-494e-857b-cd855fe5b92b"
        },
        "item": {
          "id": "7fd151f8-b055-40e4-963e-19209330819e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "40b55d90-fa8d-4464-b35d-28c399985297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c857cd79-24ad-40df-b079-ebcc68dc43cf",
        "cursor": {
          "ref": "838dd02b-393b-468d-a068-33a3503303c3",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b5b00458-19be-4ba3-bcc2-c3a8ff02eca0"
        },
        "item": {
          "id": "c857cd79-24ad-40df-b079-ebcc68dc43cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e39587c-1f3a-41b1-9f1d-a0bd55764882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3a4c39-1daa-4e05-9c56-0f2b87eceb30",
        "cursor": {
          "ref": "88c94760-5b30-415c-aacb-d092e2206d1d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0b3d5c2c-b3d9-46c9-96de-9bc8e9c7a4a4"
        },
        "item": {
          "id": "fa3a4c39-1daa-4e05-9c56-0f2b87eceb30",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "856e28a4-5c2a-4d21-9814-9fa1d2a65748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c313349-d5db-4784-a0ea-431f4b707e67",
        "cursor": {
          "ref": "78fc6d13-0aad-4e50-bd9a-368d800c5bfa",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "98a45c49-a5bb-44ac-9118-e23ff008c5de"
        },
        "item": {
          "id": "4c313349-d5db-4784-a0ea-431f4b707e67",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f0a80eb5-f419-48ad-92f2-34e4153a0ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d8dd70-d180-4510-b975-46ab5000983e",
        "cursor": {
          "ref": "517b4068-bde1-474c-9d78-80f462f3a0ba",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "44d6b2aa-0d8e-411e-8fdb-9e07c269605c"
        },
        "item": {
          "id": "d9d8dd70-d180-4510-b975-46ab5000983e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d0b6febc-e234-44fc-91bb-a64ba01ace39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e0932e-ba72-4265-818b-3625d0e2628a",
        "cursor": {
          "ref": "aa6e43e8-978b-427a-bfc6-bcf0cf5f9d68",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "772f872b-7040-4a70-ac25-0823c5edb248"
        },
        "item": {
          "id": "73e0932e-ba72-4265-818b-3625d0e2628a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "20055729-4a8e-4ae7-b25c-9cf0cd829851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dc85a8-6951-49ae-bbbd-700928e9c36e",
        "cursor": {
          "ref": "5c7e2589-300a-456f-913e-109802eb3f49",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "61e4e96b-c087-496e-8445-f901c59ba5d7"
        },
        "item": {
          "id": "77dc85a8-6951-49ae-bbbd-700928e9c36e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b829769e-b23b-428d-9550-f30d0d96aa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e94c40-d890-4b41-a491-eb27e43be1af",
        "cursor": {
          "ref": "34d7acb2-4206-4fe6-aea2-de24b4736979",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7346de96-ef64-4ad6-b96a-6c11f06383f2"
        },
        "item": {
          "id": "36e94c40-d890-4b41-a491-eb27e43be1af",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7c525264-f19f-46e0-b81b-d41ae55a08d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc829b3f-0059-4bd5-b025-6761dd2192a5",
        "cursor": {
          "ref": "bb96decb-812a-44bd-bcc4-50888e4939ef",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6cf614e6-8b45-4623-a0ff-8cff2596fdcd"
        },
        "item": {
          "id": "dc829b3f-0059-4bd5-b025-6761dd2192a5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "17eef824-4bcb-4061-8590-992c955d3864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374469b9-112a-4df5-9683-fd28732a819d",
        "cursor": {
          "ref": "f12e9114-0010-450a-b5a5-814d922ae2fb",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "170387fb-98a9-4ca1-bf98-ebb8cde8ebcc"
        },
        "item": {
          "id": "374469b9-112a-4df5-9683-fd28732a819d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f01864d2-de2d-43e7-92b7-943b5dca40b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707f5245-7459-44fd-a378-0ed4736d7322",
        "cursor": {
          "ref": "32c762ab-ef1c-4f97-871c-974d7b5c84db",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5dc8415b-e8b0-4765-8690-718f25945c67"
        },
        "item": {
          "id": "707f5245-7459-44fd-a378-0ed4736d7322",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c17fbd0a-63c8-4a46-b85a-22d3c05a562d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4629b72-a850-4939-acaf-a2d094786f09",
        "cursor": {
          "ref": "f67b2255-ba09-40bf-a7a9-e878e7064d5e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1c2a3753-1ae5-4aa4-9fa5-5165a5e8f064"
        },
        "item": {
          "id": "c4629b72-a850-4939-acaf-a2d094786f09",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d415810b-9077-4295-a826-13fe67550968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fe113d-9e2d-4779-841f-daf04192e087",
        "cursor": {
          "ref": "7c582d30-f376-4e92-9e23-88927aa31e6c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "af08237d-4285-4f5e-b048-9431aa16d8ff"
        },
        "item": {
          "id": "12fe113d-9e2d-4779-841f-daf04192e087",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f98f1754-b9b2-4c79-902c-0d122d99086b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a03c1c-b4d8-4a75-b451-3c16067525ca",
        "cursor": {
          "ref": "b7d0e36a-f917-4da6-9c71-f10d4878fe9d",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6cbc47f2-d992-4aa6-ab36-c5959f27010c"
        },
        "item": {
          "id": "76a03c1c-b4d8-4a75-b451-3c16067525ca",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c6270dfd-417d-4af5-b3d3-4a6a255ab1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e9760c-d9c2-4e1c-bd91-01d4604a64ee",
        "cursor": {
          "ref": "60ebbbfa-e75e-44a4-a212-fcdebbd9a3ef",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a2e5cf2e-0896-4fd6-9356-3ef6f9b832a8"
        },
        "item": {
          "id": "12e9760c-d9c2-4e1c-bd91-01d4604a64ee",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5944693b-b9f1-4100-9f4b-7e550448c36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6158c28e-b6d8-4f3b-a385-615de398b445",
        "cursor": {
          "ref": "9fd776ad-aaad-4912-82b2-65f7761cfb81",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0a6b14ed-1e5f-443c-a3e4-de6af4143dc5"
        },
        "item": {
          "id": "6158c28e-b6d8-4f3b-a385-615de398b445",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b1ec0f92-cbd4-444b-be67-86c8a3087cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e30758-0fd6-4daf-8edb-b7d5d7f8fdc1",
        "cursor": {
          "ref": "b84d2b93-ae4d-4c69-96d0-d43d607c214c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4ee21783-6119-4a2b-bb67-009f2b4444e1"
        },
        "item": {
          "id": "00e30758-0fd6-4daf-8edb-b7d5d7f8fdc1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3a7e0aeb-3792-4073-be89-e6c9ac504e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7051a04f-6b6f-4c52-a621-76d0daaa7124",
        "cursor": {
          "ref": "4fda586f-f1f2-4fe8-863d-053d63515c1b",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b283097d-3038-4bc6-a600-8ff22c22e36c"
        },
        "item": {
          "id": "7051a04f-6b6f-4c52-a621-76d0daaa7124",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "083d2b0e-8b56-4c44-82c0-d717812efb15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608d3c28-81b0-44b9-9b98-70b0ce1dbbc3",
        "cursor": {
          "ref": "d4ffc690-7495-4f57-ad9f-f559bc46164f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "17b4c22d-fda4-42d7-b272-7de05792251f"
        },
        "item": {
          "id": "608d3c28-81b0-44b9-9b98-70b0ce1dbbc3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "161d4c9c-1204-4e14-b001-953eb32b92bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d29bd66-26ef-4bb6-ad68-d949836f4a3b",
        "cursor": {
          "ref": "f5fd6054-0a90-461c-a3ea-2ded2e47caf8",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "40dfe15b-1cb7-4f13-87c4-6303c8eb43f0"
        },
        "item": {
          "id": "4d29bd66-26ef-4bb6-ad68-d949836f4a3b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bc244559-e320-4b52-b9f2-77583778ed64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8be1b9-7194-4aa8-a660-941e4ec0dfa3",
        "cursor": {
          "ref": "0d76a011-dc27-4f53-876c-ecd13d9b98ec",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0f93c947-8b55-4512-b2b4-0069999ccee7"
        },
        "item": {
          "id": "1f8be1b9-7194-4aa8-a660-941e4ec0dfa3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "14636df3-83b3-462d-87db-51531a01ce67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2db968-d001-418d-91bc-8797fdfd4f04",
        "cursor": {
          "ref": "b361c004-0e75-4d48-a07d-efa242ad3b5a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0d1d604c-d83e-4bf2-98e8-c63805bf9d37"
        },
        "item": {
          "id": "3c2db968-d001-418d-91bc-8797fdfd4f04",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8dd1d9b3-1162-458c-94b5-b4b7bf16eb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8e089e-014a-4f56-be3b-fc52be2178f7",
        "cursor": {
          "ref": "c5bb9837-5740-4f9b-a864-06549c4689a9",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "01ade515-9d59-40c0-9139-3c0f867b860f"
        },
        "item": {
          "id": "fb8e089e-014a-4f56-be3b-fc52be2178f7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1604fb50-376c-412a-ac57-e7f084a574c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07b2b3b-18b1-4953-b128-6f1d75949f75",
        "cursor": {
          "ref": "c47116bb-74b1-4763-a7c0-5a5d99a14025",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cfddab1f-72bd-4c77-805a-b8f1045bb8e1"
        },
        "item": {
          "id": "c07b2b3b-18b1-4953-b128-6f1d75949f75",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "50d95ac5-ce97-4c0c-9d14-3e8453b5e2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e61f3b-f285-4e8a-a05b-fc84503cdaf3",
        "cursor": {
          "ref": "8677aefc-7a2e-488f-85d2-f0d1d7bc9b5c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c88e23f1-b0d5-42cd-95e1-a85a99e0718b"
        },
        "item": {
          "id": "53e61f3b-f285-4e8a-a05b-fc84503cdaf3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e6895122-85b8-4531-87a8-2dc891f5c858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a724a1e-bf06-445a-a45e-1347e65b3f71",
        "cursor": {
          "ref": "45a6fd6a-bf9c-4fa8-88d0-50e32f7d1333",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5a04b131-4000-4c9b-8fb7-dc08c3a92494"
        },
        "item": {
          "id": "0a724a1e-bf06-445a-a45e-1347e65b3f71",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7cbda5a4-c598-4ba5-add7-5f729447a2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76588895-8304-4638-8455-40461cefd90d",
        "cursor": {
          "ref": "f4adbef6-9378-4162-b819-fa0e97e6d0de",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d9aedd91-53d6-48b8-922c-1de9e3aa0b6a"
        },
        "item": {
          "id": "76588895-8304-4638-8455-40461cefd90d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e739d121-17d3-4b9c-89fe-dcea547a40de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6945ca1-0d17-4ab4-8fa9-4a0b4257fa6d",
        "cursor": {
          "ref": "d891e015-bebd-4b34-b343-bf3fe1eb24c7",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2a5eabc7-83ab-43e0-a153-9892e6792ff4"
        },
        "item": {
          "id": "d6945ca1-0d17-4ab4-8fa9-4a0b4257fa6d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2a932224-b3a3-46e2-90ed-7f57c6bee2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f1d7f2-15c8-4657-b1ec-c998f6eb92f3",
        "cursor": {
          "ref": "6813094d-7f4e-4cca-9e6a-151b293a52d8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f9582c75-ff26-4b98-a762-64095ac0739b"
        },
        "item": {
          "id": "93f1d7f2-15c8-4657-b1ec-c998f6eb92f3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "13b157bd-aa06-4092-878f-af9748974f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b869da22-e132-4ec0-9ea7-caf5277c5786",
        "cursor": {
          "ref": "80336911-b3e0-448a-a10d-23d31fe65969",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "09e00fae-c922-440f-a66e-8d03e752dfb7"
        },
        "item": {
          "id": "b869da22-e132-4ec0-9ea7-caf5277c5786",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a958f386-48ca-447a-881e-dfcff1d6bc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b092832a-4d68-471f-9d1f-21b3ce3a2101",
        "cursor": {
          "ref": "4fc9d07d-0e63-45a3-9823-1ff504a6131f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c46d6c30-2414-47c2-baf1-b53bc4f4b201"
        },
        "item": {
          "id": "b092832a-4d68-471f-9d1f-21b3ce3a2101",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a3c33082-df59-4b35-84c6-71b49777f6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9058d40-0938-4d6f-8906-9cc0c56c2afd",
        "cursor": {
          "ref": "9e315c97-d01d-4c25-a2b8-79cd38e05975",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6a3b65bf-d21e-4412-9904-0163a1b251d3"
        },
        "item": {
          "id": "d9058d40-0938-4d6f-8906-9cc0c56c2afd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0bcf60fc-c281-4ab9-a9ff-5e71f8519ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abdc59d-1358-4c9b-aff0-ac01042a08e8",
        "cursor": {
          "ref": "0b70de1e-f712-451b-b058-2dd3c1a8fa36",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a70cd9db-dda7-4e8c-8233-be290e3a590b"
        },
        "item": {
          "id": "3abdc59d-1358-4c9b-aff0-ac01042a08e8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "132273bc-a179-42a4-a72d-3794e8bf1a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84762410-4e50-4a4e-a20c-5203a413fe04",
        "cursor": {
          "ref": "99840df7-a7fc-44d0-a636-41493d8b5a3f",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d8f7d54a-3a76-4f08-81be-e0259bd2c4cc"
        },
        "item": {
          "id": "84762410-4e50-4a4e-a20c-5203a413fe04",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dcca232d-0ad2-4610-93b0-e4a345bc215b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e5c6bb-18b5-436e-86fb-326f42249217",
        "cursor": {
          "ref": "51b2b957-f3fd-4284-9865-edbf4df32b23",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8a5481dc-17ff-438f-acbd-36662bb350fe"
        },
        "item": {
          "id": "54e5c6bb-18b5-436e-86fb-326f42249217",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c463e383-a46a-4749-8fc2-c60dce0e7e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b82ef8-11c9-46b6-8860-4613f087f0a9",
        "cursor": {
          "ref": "db7f9ef0-01eb-41dc-97b4-23d557e64e80",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3b0c76cc-9e4d-424d-b55f-f3acfc61802b"
        },
        "item": {
          "id": "91b82ef8-11c9-46b6-8860-4613f087f0a9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "28d65532-352b-409a-a364-0850c6599fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2340c64e-0ab1-4c54-aab0-50c97da212c6",
        "cursor": {
          "ref": "03ebd216-84ae-4862-984d-cf575d2e56c1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fa0adf7e-ca27-4e53-acb3-6da7011c8f02"
        },
        "item": {
          "id": "2340c64e-0ab1-4c54-aab0-50c97da212c6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "77af6ee3-a6a2-4cb9-a76f-c77f9223ceed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3d0f8d-dd03-4adc-a180-7932c389cf2e",
        "cursor": {
          "ref": "6ac92803-94db-409f-acb8-c5772d61ee7f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "79881711-6679-434d-aca4-8a36b7f2b50a"
        },
        "item": {
          "id": "8a3d0f8d-dd03-4adc-a180-7932c389cf2e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "999fa4ee-7559-4387-9daf-4b41f23dc6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339cbec9-457b-4708-9096-2d4ccf2c88f9",
        "cursor": {
          "ref": "c8473816-795a-48c9-8b96-18ee55bccb77",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8376dfda-af77-4576-adaa-4354f8c32f21"
        },
        "item": {
          "id": "339cbec9-457b-4708-9096-2d4ccf2c88f9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f2ec6246-48ba-42e2-a0ca-3a466298db5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68de4296-05b7-4d71-a2bc-75068bc0e003",
        "cursor": {
          "ref": "a1a8359c-a7ba-4b88-9f93-3b642493facd",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8747a0f2-f0ac-44b4-b946-8e9fc793afb6"
        },
        "item": {
          "id": "68de4296-05b7-4d71-a2bc-75068bc0e003",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "655119f3-a3d6-41b7-841c-2fb2726df2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085498c2-872b-480e-a9bc-fbc5808c4519",
        "cursor": {
          "ref": "cacf446f-f896-4d22-b494-5beb880e98bd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a56a075c-9876-4e22-aef0-7f4f00b7a00a"
        },
        "item": {
          "id": "085498c2-872b-480e-a9bc-fbc5808c4519",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6529f8f1-be4d-4c3a-84da-c2dcf13e06f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad28108b-c2ef-4943-8444-613446339f83",
        "cursor": {
          "ref": "30788346-98d3-4d26-ab41-3a1341479702",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "db2b6252-0626-4e76-aef2-cc47ecdd11a7"
        },
        "item": {
          "id": "ad28108b-c2ef-4943-8444-613446339f83",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "10e03308-6380-4ee5-8346-c6480ba190a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c757b4-05b3-4a47-a00b-4969460d181a",
        "cursor": {
          "ref": "1f4cff7a-8666-4300-9529-b20a34892bc8",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "510c025d-b145-4fa2-b739-43e460373d21"
        },
        "item": {
          "id": "74c757b4-05b3-4a47-a00b-4969460d181a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "135b8382-7e26-4825-9db2-8d3e79683d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679bef11-581a-46e3-aecb-6c1cc5e4a454",
        "cursor": {
          "ref": "fdadc479-f00e-43e9-9917-ee5be0cafa99",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0399ebde-4397-4928-9242-7ffa1ab7420f"
        },
        "item": {
          "id": "679bef11-581a-46e3-aecb-6c1cc5e4a454",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a42b9378-8114-4553-aae9-3858e6e7c2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8862dd-b3ad-497b-968c-2b15cf791b2c",
        "cursor": {
          "ref": "acd233fc-5f05-4f8b-a632-95b8aded8a8a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2d414943-4108-4f9c-8c74-f640e88edd1f"
        },
        "item": {
          "id": "7b8862dd-b3ad-497b-968c-2b15cf791b2c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d0a1f9f5-0dac-4038-adf3-bd1da66bad38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79a6142-1049-489f-8b37-07e80a40a44d",
        "cursor": {
          "ref": "3606d36f-81a6-4ef2-8755-f9efa7f13607",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d2e06e2e-139f-4d55-8338-a8c32ab36045"
        },
        "item": {
          "id": "e79a6142-1049-489f-8b37-07e80a40a44d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "33c5a028-80f2-4236-a511-ed3b1881d67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ffeb5d-092f-42d1-86c6-860ed7b45489",
        "cursor": {
          "ref": "684b183e-fab7-4811-ac97-e76d4fc402e2",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e746577c-f190-423b-951d-7e8d5db01550"
        },
        "item": {
          "id": "00ffeb5d-092f-42d1-86c6-860ed7b45489",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "571b7a93-bfac-4d26-8f9d-aeb5bcec8474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68415180-b284-41ba-98af-254196e3e75e",
        "cursor": {
          "ref": "b738a397-aa41-44a0-97c8-de45fc97aee0",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0e8c794a-0eee-48f5-8dd8-59ba0f3c1091"
        },
        "item": {
          "id": "68415180-b284-41ba-98af-254196e3e75e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "15eb8e6f-14cd-47a7-b7b9-05c592d7793d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c148c5bc-c801-434e-814e-eb2ada45fb69",
        "cursor": {
          "ref": "6f506dfc-2a8a-4519-9099-4c6a866923e7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a36225d2-bf95-49f4-b1be-acacf7d94e70"
        },
        "item": {
          "id": "c148c5bc-c801-434e-814e-eb2ada45fb69",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bc97ddc9-b963-4350-bad8-a0c200f9a731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3413ec-1cf5-428d-9b8d-2d326e4f4f31",
        "cursor": {
          "ref": "815b16b7-55de-4315-94a4-0cff9bdd05d6",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "955f8fae-8c12-4533-a0b2-ef5216ba48ce"
        },
        "item": {
          "id": "9b3413ec-1cf5-428d-9b8d-2d326e4f4f31",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "41889239-d04c-40c4-999f-85190bd4c247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2788f287-faf2-4efd-ae2f-48915fb9fa99",
        "cursor": {
          "ref": "e8cd68d0-9254-41d8-b543-6f72f493a24b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "18807c70-f2c7-4b88-aa0a-4282f92bbb86"
        },
        "item": {
          "id": "2788f287-faf2-4efd-ae2f-48915fb9fa99",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "73c49520-649c-43a4-b0eb-fe5eb026330d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da767063-3055-4d88-acd8-d66ba9500f1b",
        "cursor": {
          "ref": "4e1de6e0-3f30-41b0-b4f8-1a6a558cd147",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "13b7b947-5456-45bb-9e78-0b6d260a6248"
        },
        "item": {
          "id": "da767063-3055-4d88-acd8-d66ba9500f1b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0fe28145-95e4-4463-a5c4-a66ecba6774c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d172884-81cf-4739-8a96-da6d82e73d1e",
        "cursor": {
          "ref": "9df163af-f91b-4a26-ba34-6b1c52caf97c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "aceea7e9-081d-4aac-85fa-3d02afa63433"
        },
        "item": {
          "id": "7d172884-81cf-4739-8a96-da6d82e73d1e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "baa2aaa3-ec08-4169-ab15-3267d5794279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e8a944-b7ff-4ba9-88fb-7e31c8d5a2fe",
        "cursor": {
          "ref": "7336d4ab-dde5-45ac-a0b1-c2653478dc30",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6f798dd1-d247-477d-9fff-ff381e470083"
        },
        "item": {
          "id": "69e8a944-b7ff-4ba9-88fb-7e31c8d5a2fe",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "44f32d5b-61da-4799-a1e6-eb8a86bb1cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87589c0-9dae-4d35-b100-b770ac342171",
        "cursor": {
          "ref": "17f8b374-6d0d-4c35-8779-660f3c746afa",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aabfd364-3493-42a2-addf-a454b010b2da"
        },
        "item": {
          "id": "b87589c0-9dae-4d35-b100-b770ac342171",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d5ce761a-f837-494c-acc5-48546f60dd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fead4c2a-01da-466d-ab39-3d97a132e9d4",
        "cursor": {
          "ref": "d0283265-12fa-4f38-ba00-719bea4eb76c",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "10f118db-e17e-434f-a2e9-ba5f8c8f4e0f"
        },
        "item": {
          "id": "fead4c2a-01da-466d-ab39-3d97a132e9d4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9642029f-61d8-4427-ac73-a7c3d421fb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4464c4-8f0b-4697-9bbe-c7d3474d3ec9",
        "cursor": {
          "ref": "08093df2-5df3-4395-9858-999eff944223",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c7957ddf-6ad6-4ea7-928f-7d73f78ad101"
        },
        "item": {
          "id": "eb4464c4-8f0b-4697-9bbe-c7d3474d3ec9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b3bb83f0-ba88-4961-94b1-0f0a1e4ee628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fe0efb-edac-48d9-bc69-0b5438306b4e",
        "cursor": {
          "ref": "e7f1a9f2-1559-480e-8985-33fd6d340520",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6264398e-b850-437d-a500-e73ad7cd1300"
        },
        "item": {
          "id": "84fe0efb-edac-48d9-bc69-0b5438306b4e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "46009633-eff8-42c2-820b-5856ae4b1da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36639728-6734-4119-ba7b-5cdce65a4c60",
        "cursor": {
          "ref": "a9e7f02d-c09c-4f80-98ae-d92c71ae7807",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "22251743-c471-4029-90c5-bf57bce05237"
        },
        "item": {
          "id": "36639728-6734-4119-ba7b-5cdce65a4c60",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c401e34a-4677-41da-bd29-8f326150259b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9a8433-2f84-4adb-8e9b-60711edf2167",
        "cursor": {
          "ref": "642f53e6-1b94-4a25-b174-9e7f9d03b517",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9b8b9daa-61a3-4fcd-965b-b15312bd1c8d"
        },
        "item": {
          "id": "bd9a8433-2f84-4adb-8e9b-60711edf2167",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "96f7d3cc-6474-48ed-b80b-3f9ad7f3edfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b04dab-71a1-47be-b5a5-53065efb07b0",
        "cursor": {
          "ref": "042fa083-afa8-405c-91fc-e52fe5c4566d",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "07cd77b9-3284-446e-b204-a25e62cfe8a9"
        },
        "item": {
          "id": "00b04dab-71a1-47be-b5a5-53065efb07b0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f48295d4-a019-4af5-84cd-fefb75d3a7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a66c40-e118-44ec-8e21-048864c0065e",
        "cursor": {
          "ref": "1c338856-5f29-4922-b575-b306260569fd",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b996cc2d-b5cb-49dd-9efa-22e4aaa0cdc6"
        },
        "item": {
          "id": "18a66c40-e118-44ec-8e21-048864c0065e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "269e353b-1c87-4c9a-ae66-fb49ce57b275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517678d0-37af-4bdf-8b23-408836dd480a",
        "cursor": {
          "ref": "c619e017-1f5b-4ebf-80c3-3b763e3d7da0",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6d8a28ae-e614-4ca6-8f65-e5ec6301b33f"
        },
        "item": {
          "id": "517678d0-37af-4bdf-8b23-408836dd480a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "041d8a60-8e50-42c4-8f0f-60f7470f523c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8b25fb-f3d0-4fd2-acd3-8479f2e41195",
        "cursor": {
          "ref": "b4fd6594-0b40-413d-9c74-c9b5b79bab43",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2700a96c-2ee4-4631-b62d-c339254a4c51"
        },
        "item": {
          "id": "fc8b25fb-f3d0-4fd2-acd3-8479f2e41195",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "09081a5b-215e-4500-a4fb-72f50ec5eb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee547b6-1e67-4d5d-afc6-0456cba539f4",
        "cursor": {
          "ref": "d4eb55b0-82ae-4b15-84de-c8816e299753",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "10f070ef-cf9e-448c-9621-90caaa6d1c9a"
        },
        "item": {
          "id": "eee547b6-1e67-4d5d-afc6-0456cba539f4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4d16130a-025b-4acd-9300-d424bc3a055e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da69e2ec-8d78-43d6-8f79-ee4b21b01a46",
        "cursor": {
          "ref": "91b77050-347b-4068-a529-efdb43bbcc3b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d442066c-c654-4e59-b7f7-3544c86a3efc"
        },
        "item": {
          "id": "da69e2ec-8d78-43d6-8f79-ee4b21b01a46",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8d21088a-4daa-404c-8c68-6c81c83f1790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f7884d-3076-4f42-bae6-27dc62d69f81",
        "cursor": {
          "ref": "df78f826-953a-4c49-adfc-c3a239a93bcf",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9b8b9c01-684b-4c7f-9a7f-913eabd51ac1"
        },
        "item": {
          "id": "f6f7884d-3076-4f42-bae6-27dc62d69f81",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7c6ea05c-9ea5-49ea-8986-7571d41db13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c1f38a-1ad5-476b-8e2e-511a732146c9",
        "cursor": {
          "ref": "dba543da-61c1-4f99-b2a4-d7322ea2dbe8",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2e7cb03a-7edc-46ac-87f2-63ed33a6e292"
        },
        "item": {
          "id": "62c1f38a-1ad5-476b-8e2e-511a732146c9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "812443c7-76fd-4d33-8d30-ca44f4da5362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cbd73c-c7c2-4c01-8a49-b4a8644c5c2a",
        "cursor": {
          "ref": "8e3eb584-5bf4-4f28-ae84-2ffe7ff8d346",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7dd56145-4507-441e-8390-48e117df5da2"
        },
        "item": {
          "id": "96cbd73c-c7c2-4c01-8a49-b4a8644c5c2a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b11010a3-b7a9-40d3-91dd-50010bb2cc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa11ea61-62ab-4aa5-add7-870b95db149e",
        "cursor": {
          "ref": "b77c0c29-32ea-4fac-92b8-bf925ed44ae8",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "75067d6d-3f61-4d84-947c-6805eee51d1d"
        },
        "item": {
          "id": "aa11ea61-62ab-4aa5-add7-870b95db149e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9380ac73-1b43-48a8-a77c-05b40d4c5735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5bdeea-3f37-498c-8eff-7130e014aa34",
        "cursor": {
          "ref": "2a1d2e73-c1a8-47bd-9978-6a19a3f19d3d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d5e88c1e-959b-40a1-ad57-25cc70958cc2"
        },
        "item": {
          "id": "0f5bdeea-3f37-498c-8eff-7130e014aa34",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9f1f111f-0a75-48dc-b7a3-99b90116389f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31483c97-2c27-4ef1-9218-88e06618e2a3",
        "cursor": {
          "ref": "6b123de8-7dc0-4885-8457-57ae95ac1b60",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6db757b7-e49c-4069-8a03-22d41d6cef94"
        },
        "item": {
          "id": "31483c97-2c27-4ef1-9218-88e06618e2a3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c8abe171-8f98-412e-89d4-9b9af8d5c055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62c50a7-3b26-4c3c-a054-9f352983521c",
        "cursor": {
          "ref": "b3329cca-1105-4a4b-a755-53695b086be6",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8dca0324-3caf-4b6b-8cc1-acde5f797280"
        },
        "item": {
          "id": "b62c50a7-3b26-4c3c-a054-9f352983521c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9773961b-2f4c-42c6-a4c6-2194f35c9274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c02adf6-016a-403f-a1c3-2a4c574b28f2",
        "cursor": {
          "ref": "144478ae-282c-4e92-801a-555f5c662f81",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "81bb3a7c-2bff-40fd-921d-25bcb96cb8b3"
        },
        "item": {
          "id": "0c02adf6-016a-403f-a1c3-2a4c574b28f2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f2097454-24d8-4bfb-9a74-d04bc1150716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49ba74e-51c4-40c3-8904-9fbad6886b18",
        "cursor": {
          "ref": "2f93ff7b-d29b-45b9-b505-d498a54edd73",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd93664a-5f0c-45d9-b3ad-eb6277a5e7c5"
        },
        "item": {
          "id": "f49ba74e-51c4-40c3-8904-9fbad6886b18",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4338b102-b420-43a7-b007-832683e2d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31db4ce4-7402-4c59-9e10-c23e581d8f80",
        "cursor": {
          "ref": "43c5f4ef-a76a-4c19-995f-67f97a50da8b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9b3c9fb7-7b10-4921-a6f8-fccf9d958d0a"
        },
        "item": {
          "id": "31db4ce4-7402-4c59-9e10-c23e581d8f80",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7159760c-30e2-4211-b2a0-d78854e98ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ce5f8c-d6d8-4ab3-980a-ea8d1afcc0da",
        "cursor": {
          "ref": "01f0c7a3-a656-4908-af08-5f6afa3b6207",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "51a0b2c1-40ba-4cc9-be71-f78d33fb01c0"
        },
        "item": {
          "id": "b6ce5f8c-d6d8-4ab3-980a-ea8d1afcc0da",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "257cb7ba-d3f0-40c4-ad12-8f0bd3b01822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb56fa8a-db7a-4f38-9e23-ea68f2e6baa4",
        "cursor": {
          "ref": "3f2f5f41-8979-4c29-94d2-e369de01b68d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9b760659-0d80-4e62-aeca-2394259abfb6"
        },
        "item": {
          "id": "fb56fa8a-db7a-4f38-9e23-ea68f2e6baa4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "be0c1a4b-2c7e-4a99-a1ec-fdf3af82ba7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e7508-f3a7-4dd0-a9de-cf0c905cb8c1",
        "cursor": {
          "ref": "55726484-ed64-450f-a39d-02a7f3046738",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9d56e2a3-ea3c-434c-80db-412af98dd460"
        },
        "item": {
          "id": "c75e7508-f3a7-4dd0-a9de-cf0c905cb8c1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "631ceeac-7fea-42cd-b22f-df2e711bbd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a451d0f5-ccb6-4aaa-a967-7bf547102b37",
        "cursor": {
          "ref": "ca5c183f-10f4-444c-af3b-72d5ad128bdd",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1a4f3334-9dd2-4bbd-80cb-3923e3425547"
        },
        "item": {
          "id": "a451d0f5-ccb6-4aaa-a967-7bf547102b37",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ce19404c-ed66-4e26-b884-c3ddefdaf345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eba1d49-5b62-4e4a-ad34-8c7848f85c24",
        "cursor": {
          "ref": "a64e8564-6568-420d-bf69-130fc06850a9",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1748b98f-dbb9-4940-9c91-a3674c311363"
        },
        "item": {
          "id": "1eba1d49-5b62-4e4a-ad34-8c7848f85c24",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e7e8135a-ef98-4cc7-b0dc-bf6f1b566a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589b7bac-7fcd-43bc-9a6f-a6c254bfa4c0",
        "cursor": {
          "ref": "69d9e6b1-7835-4afb-9df3-d94c7637660f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "83103e61-56e5-474c-9ba2-26725a6013e4"
        },
        "item": {
          "id": "589b7bac-7fcd-43bc-9a6f-a6c254bfa4c0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cc41c49b-476d-4d76-aea9-4cb70a6b7324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59338c03-cd97-4f78-81bc-22189b959700",
        "cursor": {
          "ref": "58c3832b-b51d-4d97-9a4d-722d2ec19301",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1de46d63-d5d8-49eb-be28-0dbc2e73d33f"
        },
        "item": {
          "id": "59338c03-cd97-4f78-81bc-22189b959700",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "921841d6-0165-4aa4-8863-5ba5aa2df02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc910bc-f99c-41c7-a6f1-57468a028124",
        "cursor": {
          "ref": "2201905f-df34-466f-bc1c-e7470f4fcf2e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e615b1b6-c31b-403b-8ecd-f966bd9fc47d"
        },
        "item": {
          "id": "ccc910bc-f99c-41c7-a6f1-57468a028124",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a3791f53-656c-4ea7-a182-15d34e2e188b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4ffd6b-a56b-42b7-bb2d-b37c20c3c5a1",
        "cursor": {
          "ref": "89896c81-6097-460b-9be1-c218f9e653d3",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0d17f64c-af3b-4dd3-8f26-503b6519eb61"
        },
        "item": {
          "id": "8c4ffd6b-a56b-42b7-bb2d-b37c20c3c5a1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8549b478-6010-4422-a2fd-6c8c07f3aa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9240cd83-3aa9-4bac-8f79-e11a08cb5242",
        "cursor": {
          "ref": "4216dc0a-014f-4029-b27a-58c457ee9166",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d242def2-4eb9-4a17-9edd-17fe114d23cb"
        },
        "item": {
          "id": "9240cd83-3aa9-4bac-8f79-e11a08cb5242",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "98d01425-8419-4b04-b9f5-17231124bbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cb12cb-8a03-41d9-98a9-afe74bcebd2d",
        "cursor": {
          "ref": "1190fc86-cb79-4d02-80dd-1656b5295f98",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "149cfa4c-7115-491a-8fff-1b0909dbac2d"
        },
        "item": {
          "id": "80cb12cb-8a03-41d9-98a9-afe74bcebd2d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0cb4c33c-2b94-45f3-81c6-6acee6b03117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcddd86-bc86-4c89-9010-5c2778ec12dd",
        "cursor": {
          "ref": "5816d4f8-4f8c-4aaa-a948-c5827d8c36a6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cefe1079-77d0-4db2-bf19-0b658681a73d"
        },
        "item": {
          "id": "0bcddd86-bc86-4c89-9010-5c2778ec12dd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9b85f6ad-33f9-4e66-a63e-870457c78bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2580f1-9b3a-43d8-89e7-b439436a76c9",
        "cursor": {
          "ref": "b5a2e643-ef27-4552-be5e-6ca62b493841",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c5eeb409-1730-462f-ba64-bf703daeb8b0"
        },
        "item": {
          "id": "2e2580f1-9b3a-43d8-89e7-b439436a76c9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6dd27c51-6e0f-47e0-acd2-e1e2cc68e010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8126e9-e07f-44b0-8fda-e9ffbdbc1691",
        "cursor": {
          "ref": "37b61b4b-2cd0-4b6c-a779-eac44bc4150f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c1d48d2c-728d-43f4-93f6-6f050a766ce7"
        },
        "item": {
          "id": "9c8126e9-e07f-44b0-8fda-e9ffbdbc1691",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "31dcffdb-1693-4815-a07b-95c595abf9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edced8c-8f68-420a-9aa2-79388bdc11fb",
        "cursor": {
          "ref": "d7f9ade2-e9fd-4948-b170-4b0f34996f74",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a42e383a-6b02-48d7-818f-6ff7a4ba797c"
        },
        "item": {
          "id": "9edced8c-8f68-420a-9aa2-79388bdc11fb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ba39e605-219e-4854-a99a-339b838b3a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb08049-776b-4164-9ea8-c8d257f7d66c",
        "cursor": {
          "ref": "0a65ccfb-230d-4115-af74-0e57b636efbc",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "47a5a3a0-dcea-48af-91f1-81bb80883eaa"
        },
        "item": {
          "id": "ffb08049-776b-4164-9ea8-c8d257f7d66c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "72369b7e-5a5c-4462-86f7-9f5701f40a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a518fa13-5a7d-49d6-8438-b8868dcecc42",
        "cursor": {
          "ref": "b83b320a-4141-495f-9295-beb2f4607a55",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a3983f48-0234-40f4-9b58-f84b5cfe1c1c"
        },
        "item": {
          "id": "a518fa13-5a7d-49d6-8438-b8868dcecc42",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "01430f4e-9839-4b16-83cf-4f7798a63e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d8f81-6c3a-4eaa-b24c-3a8ed03a6353",
        "cursor": {
          "ref": "02a30325-fea1-4903-ad89-22c979b3c2ba",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "440cada9-8708-485b-a631-3d39351b2912"
        },
        "item": {
          "id": "358d8f81-6c3a-4eaa-b24c-3a8ed03a6353",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e82470e4-23f9-4c74-897e-58452ddee43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab94a11-025c-4ee1-844c-6951082c5c8b",
        "cursor": {
          "ref": "f97356ac-bca0-470d-86e3-b4b2e7b530cd",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "46fda114-f0f7-405f-9455-6a417943d10a"
        },
        "item": {
          "id": "4ab94a11-025c-4ee1-844c-6951082c5c8b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a1ea57ed-32c6-46c3-80b3-951e254b63ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c4527e-4f2b-429b-8ff0-38fd854022a8",
        "cursor": {
          "ref": "88e27524-0528-49af-9d7a-38ae6f639a9b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1484ff8d-f47e-4bb0-9e05-e9f2b7183f2d"
        },
        "item": {
          "id": "e0c4527e-4f2b-429b-8ff0-38fd854022a8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b8d5485f-11dc-4f28-bb38-5aa5ec279b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a603e18-76c7-42cf-9184-834cf9110258",
        "cursor": {
          "ref": "85e4a400-44a5-420e-9db2-1598732c69c7",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d327f1fe-bde2-4e69-a5e7-221fe1a613cd"
        },
        "item": {
          "id": "3a603e18-76c7-42cf-9184-834cf9110258",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9bfe9129-aa24-4ade-878d-ba0f736e8d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0db0ca3-6caf-4223-b233-af8e28354e15",
        "cursor": {
          "ref": "b2ba0efb-2620-4ba5-9d4f-5e45a63c9f07",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "799e308b-8dd0-4007-8009-7b82e080e526"
        },
        "item": {
          "id": "e0db0ca3-6caf-4223-b233-af8e28354e15",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3c5e3d43-6f3c-409a-80be-aed4373e7f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15702582-ba23-44cd-a721-383d3fc73450",
        "cursor": {
          "ref": "8a35c4e5-8abc-45b2-9990-81c1b2961d95",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "513ab2d9-20ed-4c81-a639-34a1e3dfd822"
        },
        "item": {
          "id": "15702582-ba23-44cd-a721-383d3fc73450",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3e6cf56a-e34c-48b6-9f1f-cbb759d93eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729a2ac5-0b53-4b0b-b133-79a983d4e09a",
        "cursor": {
          "ref": "d5838627-d709-4a15-a3c0-8ffbb1bda940",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "ecfa87f6-154c-46b0-b90c-9095ba5f637a"
        },
        "item": {
          "id": "729a2ac5-0b53-4b0b-b133-79a983d4e09a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e0f960e2-73f4-4f5d-aff3-5ec790629757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d660ec-98be-4fb7-9ee6-71cbf7463e90",
        "cursor": {
          "ref": "7dbf3928-a92f-4707-9b8a-13162b71d00c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "bc9074cf-1bba-4c07-81ef-4a3f2f0cdf8c"
        },
        "item": {
          "id": "b4d660ec-98be-4fb7-9ee6-71cbf7463e90",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "55d9abde-ebd5-4c99-9e5f-50540500c472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f64ca1-fa4d-4502-adc5-3255e3d068fb",
        "cursor": {
          "ref": "0986d518-c3b4-4bee-ae98-3e03be667d2e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0a6de02d-77c4-4c15-a3bb-cdaa87e06999"
        },
        "item": {
          "id": "13f64ca1-fa4d-4502-adc5-3255e3d068fb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1e6865eb-8a7c-4039-8840-6576762e4537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ab30ae-c6d1-4672-a417-56651416825f",
        "cursor": {
          "ref": "fe2b6e51-2688-4baf-bf6f-240a77058458",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4f7e9e46-e36f-47f1-bc62-926856635ec8"
        },
        "item": {
          "id": "52ab30ae-c6d1-4672-a417-56651416825f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a6dec32d-1b00-4d88-9fc3-35d3d916b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284fb6b4-c19b-443a-86bc-a7b0fb053ad3",
        "cursor": {
          "ref": "97bca09c-f3cb-4ad0-bb8b-0e46f2c1a7db",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fbdf981f-c634-4c0e-9bce-e171f3c6faf5"
        },
        "item": {
          "id": "284fb6b4-c19b-443a-86bc-a7b0fb053ad3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fd69d3d8-3ca8-4d76-9159-410842653793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbc11ca-e48f-4729-a298-441bf104b07a",
        "cursor": {
          "ref": "1c2bb812-8eb7-4183-aad0-ae1f3e469ac2",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "fcf4a351-aa99-4756-8677-ac6ad0776db1"
        },
        "item": {
          "id": "4dbc11ca-e48f-4729-a298-441bf104b07a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dcc7b4b0-cbdf-4fdd-93d6-c0362c890cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17666bf5-a11e-4853-96e9-9440624cb963",
        "cursor": {
          "ref": "62ac5839-50df-45b7-9693-e83d008697af",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c588dfc2-123c-4aee-9590-b5205ba7ec84"
        },
        "item": {
          "id": "17666bf5-a11e-4853-96e9-9440624cb963",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "779b48f2-f9f6-4df6-9526-f9c047dfe0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa44c7c-e224-4998-922b-c6b144202e3b",
        "cursor": {
          "ref": "cfe176e0-5d40-4f11-9201-3c009d2038d7",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "09cb4d84-c507-4b92-934d-c989ca4c57a0"
        },
        "item": {
          "id": "aaa44c7c-e224-4998-922b-c6b144202e3b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1dea692a-6127-4f2f-a4dc-d191b9e08cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa57650-0ab2-4286-8c0d-17f0ba0be14f",
        "cursor": {
          "ref": "1fa84d1c-0885-45b3-92ba-7a9f786b76e0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1e75da2d-cce6-4673-bca2-380486f0d8d9"
        },
        "item": {
          "id": "3fa57650-0ab2-4286-8c0d-17f0ba0be14f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9080ba3e-06b6-4a72-b13d-a1c6f6cd2664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2392b805-d691-4844-bde2-fc4695fa510a",
        "cursor": {
          "ref": "610edaf2-8452-4ffe-a428-7c263d5924be",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f3235ad7-7f31-4af6-8eba-a9fa9ba1cf84"
        },
        "item": {
          "id": "2392b805-d691-4844-bde2-fc4695fa510a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f900c9e0-2c72-4283-89ce-f5c23cfec43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae0cd58-ed19-4db3-8a2b-28b0a04edb2f",
        "cursor": {
          "ref": "9b11f23a-7a68-4ede-883b-096f5ed9a652",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "170dd1a6-041f-43d1-a3ab-13fc7f5c8c6c"
        },
        "item": {
          "id": "bae0cd58-ed19-4db3-8a2b-28b0a04edb2f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a1c1ca63-bf18-4571-8c13-09ec0ccec090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a78649-d355-41b7-b34e-26611e9035aa",
        "cursor": {
          "ref": "7c7435a2-0794-4ee8-97aa-262cf7d2fc49",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4c04cc84-9437-4b80-8c98-56cab0a03ca8"
        },
        "item": {
          "id": "a8a78649-d355-41b7-b34e-26611e9035aa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7b4651a2-8105-4310-9f89-71068fa85038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a1d75c-5893-444d-b677-bfdca15591f6",
        "cursor": {
          "ref": "f788bfdf-e064-4c05-a291-6cd826bc8cc3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "705981b5-af51-4096-8e2e-7e3e8f1c6a38"
        },
        "item": {
          "id": "25a1d75c-5893-444d-b677-bfdca15591f6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b917f5ac-70c0-4e31-ba2f-b88d57083c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75975214-4a12-40ce-a308-ebcb6e1a6591",
        "cursor": {
          "ref": "49adce1f-22b4-48ab-aee6-b7bec3d3fe37",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7e907eff-680c-4576-a335-ec7b43e08b9b"
        },
        "item": {
          "id": "75975214-4a12-40ce-a308-ebcb6e1a6591",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4326837a-424a-437a-9a95-18d41b88dca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0088051-5bbd-415f-8bc6-07f09694d010",
        "cursor": {
          "ref": "4139b759-5084-49cf-ac11-aaec4ac1326a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b0182cbd-8804-4956-aa91-c09e0ef7628f"
        },
        "item": {
          "id": "b0088051-5bbd-415f-8bc6-07f09694d010",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7c52a95c-48fb-4b0b-b9f4-77184bcdafa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5e2c54-0d95-4e6b-8e42-9791afa1cfb6",
        "cursor": {
          "ref": "75a69f9e-9279-418f-925f-be68301a175e",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1bc8cc65-dfe4-47ff-ad2a-46fee30d2cf4"
        },
        "item": {
          "id": "de5e2c54-0d95-4e6b-8e42-9791afa1cfb6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "da50ded3-de3c-4fc8-bf90-3cac956e2208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f8378b-3785-426f-bc92-42889f2a88d0",
        "cursor": {
          "ref": "46ebec16-0ec6-4433-a466-2107654914a4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ff919d08-d425-4614-b4d7-0b1a11776aaf"
        },
        "item": {
          "id": "37f8378b-3785-426f-bc92-42889f2a88d0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5fb8d91b-7abf-4c90-992a-2841d8fac9c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e73319-b0f6-4209-9211-f5d82784fca5",
        "cursor": {
          "ref": "5c3ebc2c-a10f-403d-b691-b5eb13230e2b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c077b9c8-b02c-4334-902c-5dc25de3be42"
        },
        "item": {
          "id": "09e73319-b0f6-4209-9211-f5d82784fca5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ad6d8592-b504-4c6b-b8f5-17d95a31164c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfcdb85-7e39-4b43-b314-e4aeb18649e9",
        "cursor": {
          "ref": "d95d3b73-50a9-4947-9d78-75e20e2f2858",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "86ab2663-c23a-48ed-a4b2-d2a11d71b856"
        },
        "item": {
          "id": "2dfcdb85-7e39-4b43-b314-e4aeb18649e9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "21ee5b3b-4efc-40b5-895f-389cef2f924d",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1613b0-0664-4957-a034-7dea0e20faed",
        "cursor": {
          "ref": "b6e31195-c5c2-4744-85df-4f78dff9015d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c34e9979-997d-45b5-a4d5-f943eb6c2152"
        },
        "item": {
          "id": "8c1613b0-0664-4957-a034-7dea0e20faed",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "77a6d3ee-42fb-40ea-9264-5881e5c4e3e1",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb689138-468c-466f-8b60-a48273ac8a8b",
        "cursor": {
          "ref": "bc8bd68f-13a5-4e87-9e00-bff612173121",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "200d6c8c-dc47-46a3-bad3-ab3a878081c4"
        },
        "item": {
          "id": "eb689138-468c-466f-8b60-a48273ac8a8b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f725d556-423b-452e-a7f8-fea536be3964",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb689138-468c-466f-8b60-a48273ac8a8b",
        "cursor": {
          "ref": "bc8bd68f-13a5-4e87-9e00-bff612173121",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "200d6c8c-dc47-46a3-bad3-ab3a878081c4"
        },
        "item": {
          "id": "eb689138-468c-466f-8b60-a48273ac8a8b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f725d556-423b-452e-a7f8-fea536be3964",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c105c23c-c3c3-4110-ab75-8e71d80b3d46",
        "cursor": {
          "ref": "307440e1-5b44-4d1b-96fc-a9f42d843a6e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d0065e48-0af7-4bee-95ae-48e1dedf8557"
        },
        "item": {
          "id": "c105c23c-c3c3-4110-ab75-8e71d80b3d46",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f5acad4-5244-4337-8dc3-1e8b81f6f077",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c11ac1c-f7f6-464a-9384-561b18d368e1",
        "cursor": {
          "ref": "b563869b-b973-4f25-b4fa-045164a30a77",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b8e2f6c7-7f29-43cb-a132-d0cd6279d370"
        },
        "item": {
          "id": "0c11ac1c-f7f6-464a-9384-561b18d368e1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f7f1226d-176f-45bc-958e-8509d2acdd31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}